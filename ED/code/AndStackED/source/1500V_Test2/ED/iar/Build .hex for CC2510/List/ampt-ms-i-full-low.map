################################################################################
#                                                                              #
#      IAR Universal Linker V4.60K/386                                         #
#                                                                              #
#           Link time     =  06/Apr/2017  13:54:39                             #
#           Target CPU    =  x51                                               #
#           List file     =  "E:\1500V_Test2\ED\iar\Build .hex for CC2510\List #
#                            \ampt-ms-i-full-low.map"                          #
#           Output file 1 =  E:\1500V_Test2\ED\hex\ampt-ms-i-full-low.hex      #
#                            Format: intel-extended, variant: -y(CODE)         #
#           Command line  =  -y(CODE) -IC:\IARSystems-CD-730B\8051\CONFIG\     #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            aes.r51"                                          #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            cmain.r51"                                        #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            cstartup_low_image.r51"                           #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            dma.r51"                                          #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            flash.r51"                                        #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            hal_power_clk_mgmt.r51"                           #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            hal_wait.r51"                                     #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            hop.r51"                                          #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_char.r51"                                     #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_compare.r51"                                  #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_float.r51"                                    #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_ieee_float.r51"                               #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_long.r51"                                     #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_move_long.r51"                                #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_short.r51"                                    #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_stack.r51"                                    #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_stack_enter_leave.r51"                        #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_stack_enter_leave_dptr.r51"                   #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_stack_parameter.r51"                          #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_switch.r51"                                   #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            main.r51"                                         #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            radio_2400.r51"                                   #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            utils.r51"                                        #
#                            -o E:\1500V_Test2\ED\hex\ampt-ms-i-full-low.hex   #
#                            -Fintel-extended -l                               #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\List #
#                            \ampt-ms-i-full-low.map"                          #
#                            -xmsnio -IC:\IARSystems-CD-730B\8051\LIB\ -f      #
#                            E:\1500V_Test2\ED\iar\lnk51ew_cc2510-assymetric-l #
#                            ow.xcl                                            #
#                            (-D_IDATA_START=0x20 -D_IDATA_END=0xAF            #
#                            -D_PDATA_START=0xF000 -D_PDATA_END=0xF0AF         #
#                            -D_IXDATA_START=0xF600 -D_IXDATA_END=0xFDA1       #
#                            -D_XDATA_START=_IXDATA_START                      #
#                            -D_XDATA_END=_IXDATA_END -D_CODE_START=0x800      #
#                            -D_CODE_END=0x5FFF -D_NEAR_CODE_END=_CODE_END     #
#                            -D_TINY_CODE_END=0x5FFF                           #
#                            -D_FIRST_BANK_ADDR=0x10000 -D_NR_OF_BANKS=0x00    #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_START=0       #
#                            -D?PBANK_NUMBER=F0 -D?PBANK=93                    #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END -f lnk_base.xcl)        #
#                            (-Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F        #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)BANK_RELAYS=_CODE_START                   #
#                            -Z(CODE)RCODE=_CODE_START-_CODE_END               #
#                            -Z(CODE)TINY_CODE=_CODE_START-_TINY_CODE_END      #
#                            -Z(CODE)NEAR_CODE=_CODE_START-_NEAR_CODE_END      #
#                            -Z(CODE)DIFUNCT=_CODE_START-_CODE_END             #
#                            -P(CODE)BANKED_CODE=[(_CODEBANK_START+_FIRST_BANK #
#                            _ADDR)-(_CODEBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_B #
#                            ANKS+10000                                        #
#                            -P(CODE)FAR_CODE=[_FAR_CODE_START-_FAR_CODE_END]/ #
#                            10000                                             #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START-_EXTENDED_STACK_END                  #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_N,PDATA_Z,PDATA_I=_PDATA_START-_PD #
#                            ATA_END                                           #
#                            -Z(XDATA)IXDATA_N,IXDATA_Z,IXDATA_I=_IXDATA_START #
#                            -_IXDATA_END                                      #
#                            -Z(XDATA)XDATA_N,XDATA_Z,XDATA_I=_XDATA_START-_XD #
#                            ATA_END                                           #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CODE)XDATA_ROM_C=_CODE_START-_CODE_END         #
#                            -Z(SPLIT-XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA #
#                            _START-_FAR_DATA_END]/10000                       #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*E+10000                                         #
#                            -Z(XDATA)HUGE_N,HUGE_Z,HUGE_I=_FAR_DATA_START-_FA #
#                            R_DATA_END                                        #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -Z(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -P(CODE)FAR_CODE_C=[_FAR_CODE_START-_FAR_CODE_END #
#                            ]/10000                                           #
#                            -Z(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CODE_N=_CODE_START-_CODE_END              #
#                            -P(CODE)FAR_CODE_N=[_FAR_CODE_START-_FAR_CODE_END #
#                            ]/10000                                           #
#                            -Z(CODE)CHECKSUM#_CODE_END -cx51)                 #
#                            -D_CODEBANK_START=0 -D_CODEBANK_END=0             #
#                            -D_NR_OF_VIRTUAL_REGISTERS=20 -D?DPL1=0x84        #
#                            -D?DPH1=0x85 -s __program_start                   #
#                            -D_IDATA_STACK_SIZE=0x6A                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_END=0x00                        #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0xA0                          #
#                            -D_XDATA_STACK_SIZE=0x200                         #
#                            -D_XDATA_HEAP_SIZE=0x00 -D_FAR_HEAP_SIZE=0x00     #
#                            -D_HUGE_HEAP_SIZE=0x00                            #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000083F  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = xdata_reentrant
  __code_model             = near
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HUGE_HEAP_SIZE         00000000 
           _FAR_HEAP_SIZE          00000000 
           _XDATA_HEAP_SIZE        00000000 
           _XDATA_STACK_SIZE       00000200 
           _PDATA_STACK_SIZE       000000A0 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_END     00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       0000006A 
           ?DPH1                   00000085 
           ?DPL1                   00000084 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000020 
           _CODEBANK_END           00000000 
           _CODEBANK_START         00000000 
           _FAR_CODE_END           00005FFF 
           _FAR_CODE_START         00000800 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
           _BREG_START             00000000 
           ?PBANK                  00000093 
           ?PBANK_NUMBER           000000F0 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _NR_OF_BANKS            00000000 
           _FIRST_BANK_ADDR        00010000 
           _TINY_CODE_END          00005FFF 
           _NEAR_CODE_END          00005FFF 
           _CODE_END               00005FFF 
           _CODE_START             00000800 
           _XDATA_END              0000FDA1 
           _XDATA_START            0000F600 
           _IXDATA_END             0000FDA1 
           _IXDATA_START           0000F600 
           _PDATA_END              0000F0AF 
           _PDATA_START            0000F000 
           _IDATA_END              000000AF 
           _IDATA_START            00000020 
    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\aes.r51
  PROGRAM MODULE, NAME : aes

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B1 - 000000B1 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   load
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCDI                   000000B1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B2 - 000000B2 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   code
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCDO                   000000B2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   load
                                                   wait_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001382 - 000013A3 (0x22 bytes), align: 0
  Segment part 9.             Intra module refs:   code
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load                    00001382        Segment part 225 (main)
               stack 1 = 00000009 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000013A4 - 000013AD (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   code
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wait_aes                000013A4        Segment part 225 (main)
               stack 1 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000013AE - 00001402 (0x55 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           code                    000013AE        parseCommands (main)
                                                   parseGWPackage (main)
                                                   prepareTxBuffer (main)
               calls direct
               stack 1 = 00000002 ( 00000009 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 8. NOT NEEDED.

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\cmain.r51
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000800, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  00000800        Segment part 11 (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   
    -------------------------------------------------------------------------
BDATA_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_Z          
    -------------------------------------------------------------------------
DATA_Z
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_Z           
    -------------------------------------------------------------------------
IDATA_Z
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_Z          
    -------------------------------------------------------------------------
PDATA_Z
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_Z          
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000800 - 0000080F (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          00000800        ModuleStatusCanTurnOn (main)
                                                   Segment part 133 (main)
                                                   Segment part 141 (main)
                                                   Segment part 142 (main)
                                                   Segment part 153 (main)
                                                   Segment part 165 (main)
                                                   Segment part 166 (main)
                                                   Segment part 167 (main)
                                                   Segment part 170 (main)
                                                   Segment part 171 (main)
                                                   Segment part 18 (flash)
                                                   Segment part 186 (main)
                                                   Segment part 190 (main)
                                                   Segment part 191 (main)
                                                   Segment part 192 (main)
                                                   Segment part 193 (main)
                                                   Segment part 194 (main)
                                                   Segment part 199 (main)
                                                   Segment part 200 (main)
                                                   Segment part 201 (main)
                                                   Segment part 202 (main)
                                                   Segment part 203 (main)
                                                   Segment part 204 (main)
                                                   _coeff (main)
                                                   adcBuf (main)
                                                   adcCount (main)
                                                   adcs (main)
                                                   adcs16 (main)
                                                   adcsTemp (main)
                                                   base_ptr (main)
                                                   buff (flash)
                                                   bufferCount (main)
                                                   bunchCount (main)
                                                   ch255 (main)
                                                   checkVoutOnT (main)
                                                   checkVref (main)
                                                   cmdCount (main)
                                                   coefficients_buffer (main)
                                                   curBunch (main)
                                                   curChannel (main)
                                                   cyclesFromStart (main)
                                                   cyclesToHop (main)
                                                   decodeDelay (main)
                                                   delta (utils)
                                                   dmaConfig (dma)
                                                   enable2SendData (main)
                                                   got_gw (main)
                                                   hopping_channels (hop)
                                                   iOutIin1Diff (main)
                                                   iOutIin2Diff (main)
                                                   invRef (main)
                                                   invVref0 (main)
                                                   isCalibrationPackage (main)
                                                   isOnTestStand (main)
                                                   isSteppedDown (main)
                                                   joinRequestWasSend (main)
                                                   last (main)
                                                   lastOff (main)
                                                   lastRssi (main)
                                                   msLast (main)
                                                   ndev (main)
                                                   nextIV (main)
                                                   nextKey (main)
                                                   packagePrepared (main)
                                                   page (main)
                                                   perRssiOffset (radio_2400)
                                                   prevRssi (main)
                                                   ptr2RunningTick (main)
                                                   radioPktBuffer (dma)
                                                   radioPktBufferRx (dma)
                                                   radioPktBufferTx (dma)
                                                   rcgen (main)
                                                   refreshing (flash)
                                                   reportFlashCheck (main)
                                                   reportScaling (main)
                                                   resetReason (main)
                                                   setOC (main)
                                                   t (main)
                                                   tempAdcsCount (main)
                                                   temperatureProtectionDelay (main)
                                                   theOC (main)
                                                   theRealOffset (main)
                                                   ticks2ProcessCmd (main)
                                                   turnOnFlag (main)
                                                   txDisabled (main)
                                                   utc (main)
                                                   utcLast (main)
                                                   vref (main)
                                                   was_listening (main)
                                                   was_repeater (main)
    -------------------------------------------------------------------------
IXDATA_Z
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_Z         
    -------------------------------------------------------------------------
BDATA_I
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
BDATA_ID
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_I          
    -------------------------------------------------------------------------
DATA_I
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_I           
    -------------------------------------------------------------------------
IDATA_I
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
IDATA_ID
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_I          
    -------------------------------------------------------------------------
PDATA_I
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
PDATA_ID
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_I          
    -------------------------------------------------------------------------
XDATA_I
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000810 - 00000838 (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          00000810        ModuleStatusOff (main)
                                                   ModuleStatusOffFetFailure (main)
                                                   Segment part 11 (radio_2400)
                                                   Segment part 13 (radio_2400)
                                                   Segment part 136 (main)
                                                   Segment part 17 (radio_2400)
                                                   Segment part 176 (main)
                                                   Segment part 182 (main)
                                                   Segment part 184 (main)
                                                   Segment part 195 (main)
                                                   Segment part 9 (radio_2400)
                                                   __Constant_0 (main)
                                                   __Constant_10000 (utils)
                                                   __Constant_3039 (hop)
                                                   __Constant_3f800000 (main)
                                                   __Constant_41c64e6d (hop)
                                                   __Constant_42c80000 (main)
                                                   __Constant_447a0000 (main)
                                                   __Constant_8000 (utils)
                                                   __Constant_c1c80000 (main)
                                                   __Constant_ffff8001 (utils)
                                                   _gw_delay (main)
                                                   _join_slot (main)
                                                   _loop_delay (main)
                                                   _slot (main)
                                                   adcChannels (main)
                                                   alignMPP (main)
                                                   calibrationRepeat (main)
                                                   checkForFETFailure (main)
                                                   cycles2HardKick (main)
                                                   cycles2SoftKick (main)
                                                   cycles2Step10Channel (main)
                                                   cyclesTo10 (main)
                                                   cyclesTo500 (main)
                                                   cyclesToStep500Channel (main)
                                                   foc_bs_agc_rate12 (radio_2400)
                                                   gnd_shift (main)
                                                   indices (main)
                                                   lastCycle (main)
                                                   mdm_rate1 (radio_2400)
                                                   ocShortCircuitLimit (main)
                                                   oscWhatToWaitFor (main)
                                                   search_stat (main)
                                                   si (main)
                                                   theKey (main)
                                                   the_frequency (main)
    -------------------------------------------------------------------------
IXDATA_I
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
IXDATA_ID
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000839 - 0000083E (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000839 

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000046, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000046 
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSTACK_START           
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 0000F600, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           0000F600 
    -------------------------------------------------------------------------
EXT_STACK
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EXT_STACK_START        
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000083F - 00000849 (0xb bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000083F        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               00000847 
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PSP              
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000084A - 0000084F (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              0000084A        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        
    -------------------------------------------------------------------------
CSTART
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PDATA_BANK       
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000850 - 00000852 (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000021, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000021        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   Segment part 237 (main)
                                                   Segment part 238 (main)
                                                   Segment part 252 (main)
                                                   Segment part 274 (main)
                                                   Segment part 280 (main)
                                                   Segment part 335 (main)
                                                   Segment part 344 (main)
                                                   Segment part 364 (main)
                                                   addDF (utils)
                                                   checkMore (main)
                                                   checkVin (main)
                                                   code (aes)
                                                   computeADCs (main)
                                                   computeAdjustment (main)
                                                   convS (utils)
                                                   convU (utils)
                                                   cube_coeff (main)
                                                   init (main)
                                                   initiateTransfer (flash)
                                                   lin (main)
                                                   lin_coeff (main)
                                                   lin_coeff_t (main)
                                                   main (main)
                                                   main_loop (main)
                                                   mymemcmp (utils)
                                                   oc2timer (main)
                                                   parseCommands (main)
                                                   parseGWPackage (main)
                                                   prepareCoeff (main)
                                                   prepareSpecial (main)
                                                   prepareTxBuffer (main)
                                                   readNextValue (main)
                                                   setByte (main)
                                                   setFloat (main)
                                                   setInt (main)
                                                   setup_hopper (hop)
                                                   substractGround (utils)
                                                   tickWait (main)
    -------------------------------------------------------------------------
PSP
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSP                    
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000041 - 00000042 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000041        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   addDF (utils)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : flashDmaTrigger

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000853 - 00000856 (0x4 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halFlashDmaTrigger      00000853        initiateTransfer (flash)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : waitForClearThePage

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000857 - 0000085C (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           waitForClearThePage     00000857        initiateTransfer (flash)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\dma.r51
  PROGRAM MODULE, NAME : dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   dmaRadioSetup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   dmaRadioSetup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   dmaRadioSetup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   dmaRadioSetup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F800 - 0000F824 (0x25 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           radioPktBuffer          0000F800        Segment part 314 (main)
                                                   parseCommands (main)
                                                   parseGWPackage (main)
                                                   prepareData (main)
                                                   prepareJoinRequest (main)
                                                   prepareSpecial (main)
                                                   prepareTxBuffer (main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F825 - 0000F849 (0x25 bytes), align: 0
  Segment part 11.            Intra module refs:   dmaRadioSetup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           radioPktBufferRx        0000F825        parseGWPackage (main)
                                                   receive (main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F84A - 0000F86E (0x25 bytes), align: 0
  Segment part 12.            Intra module refs:   dmaRadioSetup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           radioPktBufferTx        0000F84A        main_loop (main)
                                                   prepareJoinRequest (main)
                                                   prepareTxBuffer (main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F86F - 0000F886 (0x18 bytes), align: 0
  Segment part 13.            Intra module refs:   dmaRadioSetup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaConfig               0000F86F        initiateTransfer (flash)
                                                   sendData (main)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001403 - 000014BE (0xbc bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaRadioSetup           00001403        init (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 9. NOT NEEDED.

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\flash.r51
  PROGRAM MODULE, NAME : flash

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   flashCallback
                                                   init (main)
                                                   initiateTransfer
                                                   main (main)
                                                   setupRadioDR (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   addDF (utils)
                                                   flashCallback
                                                   init (main)
                                                   initiateTransfer
                                                   main (main)
                                                   setupRadioDR (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   initiateTransfer
                                                   savePB (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FWT                     000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   initiateTransfer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRL                  000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   initiateTransfer
                                                   savePB (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRH                  000000AD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   flashCallback
                                                   init (main)
                                                   initiateTransfer
                                                   main (main)
                                                   setupRadioDR (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   initiateTransfer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   initiateTransfer
                                                   receive (main)
                                                   sendData (main)
                                                   setupRepeater (main)
                                                   softKick (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F887 - 0000F887 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 24
                                                   flashCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           refreshing              0000F887 
    -------------------------------------------------------------------------
XDATA_I
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           firstTime               
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           transfer                
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F888 - 0000F889 (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 24
                                                   flashCallback
                                                   refreshTheFlash
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000014BF - 00001512 (0x54 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           initiateTransfer        000014BF        savePB (main)
               calls direct
               stack 1 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F88A - 0000F909 (0x80 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buff                    0000F88A 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001513 - 00001523 (0x11 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           refreshTheFlash         00001513        setByte (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001524 - 00001528 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   flashCallback
                                                   refreshTheFlash
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001529 - 0000155C (0x34 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flashCallback           00001529        main (main)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000155D - 0000157B (0x1f bytes), align: 0
  Segment part 24.            Intra module refs:   flashCallback
                                                   refreshTheFlash
    -------------------------------------------------------------------------
ISTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 16. NOT NEEDED.

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\hal_power_clk_mgmt.r51
  PROGRAM MODULE, NAME : hal_power_clk_mgmt

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   main (main)
                                                   quartz (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEP                   000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   parseCommands (main)
                                                   quartz (main)
                                                   savePB (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON                  000000C6 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halPowerClkMgmtSetMainClkSrc
                                   
               calls direct, is not allocated
    -------------------------------------------------------------------------
ISTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 7. NOT NEEDED.

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\hal_wait.r51
  PROGRAM MODULE, NAME : hal_wait

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 0000157C - 00001587 (0xc bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halWait                 0000157C        quartz (main)
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\hop.r51
  PROGRAM MODULE, NAME : hop

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   hop
                                                   receive (main)
                                                   sendData (main)
                                                   setByte (main)
                                                   setupRadioDR (main)
                                                   softKick (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F90A - 0000F922 (0x19 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 15
                                                   setup_hopper
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hopping_channels        0000F90A 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001588 - 00001621 (0x9a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setup_hopper            00001588        init (main)
                                                   parseCommands (main)
                                                   setByte (main)
               stack 1 = 00000000 ( 0000000F )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001622 - 0000165A (0x39 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hop                     00001622        Segment part 267 (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000165B - 0000165F (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   hop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001660 - 00001669 (0xa bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   setup_hopper
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBE6 - 0000FBE9 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   setup_hopper
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_41c64e6d     0000FBE6 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BE4 - 00004BE7 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   __Constant_41c64e6d
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBEA - 0000FBED (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   setup_hopper
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3039         0000FBEA 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BE8 - 00004BEB (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   __Constant_3039

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_char.r51
  LIBRARY MODULE, NAME : ?SC_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000085D - 0000087E (0x22 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SC_DIV_MOD             0000085D        parseGWPackage (main)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_compare.r51
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000087F - 00000893 (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 0000087F        computeADCs (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000894 - 000008A8 (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT                  00000894        convS (utils)
                                                   convU (utils)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008A9 - 000008B8 (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                000008A9        parseGWPackage (main)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_ieee_float.r51
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008B9 - 000008BB (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT               000008B9        computeADCs (main)
                                                   lin (main)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008BC - 000008D0 (0x15 bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_TO_FLT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT_REW           000008BC 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008D1 - 000008D3 (0x3 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT_REW          000008D1 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008D4 - 00000930 (0x5d bytes), align: 0
  Segment part 3.             Intra module refs:   ?L_TO_FLT_REW
                                                   ?UL_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              000008D4        checkVin (main)
                                                   oc2timer (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL_REW          
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL              
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L_REW           
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000931 - 00000964 (0x34 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               00000931        checkVin (main)
                                                   computeADCs (main)
                                                   convS (utils)
                                                   convU (utils)
                                                   oc2timer (main)
                                                   setFloat (main)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000965 - 00000970 (0xc bytes), align: 0
  Segment part 4.             Intra module refs:   ?FLT_TO_L
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000971 - 000009BF (0x4f bytes), align: 0
  Segment part 5.             Intra module refs:   ?FLT_TO_L

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO          
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009C0 - 000009C9 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      000009C0        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_LT (?FLT_LT)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1       
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009CA - 000009D3 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   000009CA        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_LT (?FLT_LT)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000009D4 - 000009D6 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       000009D4        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009D7 - 000009E8 (0x12 bytes), align: 0
  Segment part 1.             Intra module refs:   ?FLT_TEST_INF_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           000009D7        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000009E9 - 000009EB (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    000009E9        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009EC - 000009FD (0x12 bytes), align: 0
  Segment part 1.             Intra module refs:   ?FLT_TEST_INF_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        000009EC        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_REW       
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009FE - 00000A0C (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           000009FE        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_LT (?FLT_LT)
                                                   ?FLT_MUL (?FLT_MUL)
                                                   ?FLT_SUB (?FLT_ADD)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1_REW    
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A0D - 00000A1B (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        00000A0D        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_LT (?FLT_LT)
                                                   ?FLT_MUL (?FLT_MUL)
                                                   ?FLT_SUB (?FLT_ADD)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_LT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_LT_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A1C - 00000A67 (0x4c bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_LT                 00000A1C        oc2timer (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A68 - 00000BE7 (0x180 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL                00000A68        Segment part 238 (main)
                                                   checkVin (main)
                                                   computeADCs (main)
                                                   computeAdjustment (main)
                                                   cube_coeff (main)
                                                   lin (main)
                                                   lin_coeff (main)
                                                   oc2timer (main)
                                                   prepareCoeff (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_SUB_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000BE8 - 00000C0C (0x25 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_SUB                00000BE8        computeADCs (main)
                                                   lin_coeff_t (main)
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_ADD_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C0D - 00000E23 (0x217 bytes), align: 0
  Segment part 3.             Intra module refs:   ?FLT_SUB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_ADD                00000C0D        computeADCs (main)
                                                   computeAdjustment (main)
                                                   cube_coeff (main)
                                                   lin_coeff (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_DIV

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000E24 - 00001009 (0x1e6 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV                00000E24        checkVin (main)
                                                   computeADCs (main)
                                                   init (main)
                                                   oc2timer (main)
                                                   setFloat (main)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_long.r51
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000100A - 0000100C (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  0000100A        setup_hopper (hop)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000100D - 00001089 (0x7d bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              0000100D 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000108A - 0000108C (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_REW              0000108A        ?L_TO_FLT_REW (?L_TO_FLT)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000108D - 0000109D (0x11 bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_NEG_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG                  0000108D 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000109E - 000010A2 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 0000109E        setup_hopper (hop)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000010A3 - 000010B6 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?UL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000010B7 - 000010C9 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                000010B7        setup_hopper (hop)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000010CA - 000010DC (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             000010CA        addDF (utils)
                                                   computeADCs (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000010DD - 000010F4 (0x18 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X                000010DD        computeADCs (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X_REW       
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000010F5 - 00001108 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           000010F5        substractGround (utils)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001109 - 00001117 (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                00001109        checkVin (main)
                                                   computeADCs (main)
                                                   computeAdjustment (main)
                                                   convS (utils)
                                                   convU (utils)
                                                   cube_coeff (main)
                                                   init (main)
                                                   lin (main)
                                                   lin_coeff (main)
                                                   lin_coeff_t (main)
                                                   oc2timer (main)
                                                   parseGWPackage (main)
                                                   prepareCoeff (main)
                                                   setFloat (main)
                                                   setup_hopper (hop)
                                                   substractGround (utils)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REWX        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001118 - 00001126 (0xf bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             00001118        checkVin (main)
                                                   computeADCs (main)
                                                   init (main)
                                                   oc2timer (main)
                                                   setFloat (main)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_move_long.r51
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001127 - 00001133 (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00001127        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_short.r51
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001134 - 00001174 (0x41 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              0000116D        computeADCs (main)
                                                   hop (hop)
                                                   main_loop (main)
                                                   prepareScaling (main)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001175 - 000011CD (0x59 bytes), align: 0
  Segment part 1.             Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             00001175        setup_hopper (hop)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000011CE - 000011D0 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 000011CE        computeADCs (main)
                                                   readNextValue (main)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000011D1 - 000011DD (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000011DE - 000011E0 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 000011DE        initiateTransfer (flash)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000011E1 - 000011EC (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000011ED - 000011EF (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  000011ED        checkMore (main)
                                                   checkVin (main)
                                                   computeADCs (main)
                                                   cube_coeff (main)
                                                   init (main)
                                                   lin (main)
                                                   main (main)
                                                   parseGWPackage (main)
                                                   prepareCoeff (main)
                                                   setByte (main)
                                                   setFloat (main)
                                                   substractGround (utils)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000011F0 - 000011F2 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              000011F0 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000011F3 - 000011FF (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001200 - 0000120E (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00001200        addDF (utils)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000120F - 00001221 (0x13 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        0000120F        addDF (utils)
                                                   parseCommands (main)
                                                   parseGWPackage (main)
                                                   prepareTxBuffer (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001222 - 00001235 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     00001222        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001236 - 0000123F (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         00001236        addDF (utils)
                                                   code (aes)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001240 - 00001241 (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               00001240        setInt (main)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001242 - 000012A0 (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00001242        addDF (utils)
                                                   checkMore (main)
                                                   checkVin (main)
                                                   code (aes)
                                                   computeADCs (main)
                                                   computeAdjustment (main)
                                                   convS (utils)
                                                   convU (utils)
                                                   cube_coeff (main)
                                                   init (main)
                                                   initiateTransfer (flash)
                                                   lin (main)
                                                   lin_coeff (main)
                                                   lin_coeff_t (main)
                                                   main_loop (main)
                                                   mymemcmp (utils)
                                                   mymemcpy (utils)
                                                   oc2timer (main)
                                                   parseCommands (main)
                                                   parseGWPackage (main)
                                                   prepareCoeff (main)
                                                   prepareData (main)
                                                   prepareScaling (main)
                                                   prepareSpecial (main)
                                                   prepareTxBuffer (main)
                                                   quartz (main)
                                                   radioConfigure (radio_2400)
                                                   readNextValue (main)
                                                   setByte (main)
                                                   setFloat (main)
                                                   setInt (main)
                                                   setupRadioDR (main)
                                                   setup_hopper (hop)
                                                   substractGround (utils)
                                                   tickWait (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000012A1 - 000012DB (0x3b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       000012A1        Segment part 216 (main)
                                                   Segment part 238 (main)
                                                   Segment part 24 (utils)
                                                   Segment part 257 (main)
                                                   Segment part 262 (main)
                                                   Segment part 313 (main)
                                                   Segment part 367 (main)
                                                   addDF (utils)
                                                   checkVin (main)
                                                   code (aes)
                                                   computeADCs (main)
                                                   initiateTransfer (flash)
                                                   mymemcmp (utils)
                                                   mymemcpy (utils)
                                                   parseCommands (main)
                                                   radioConfigure (radio_2400)
                                                   setup_hopper (hop)
                                                   substractGround (utils)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave_dptr.r51
    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000012DC - 000012DF (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      000012DC        parseCommands (main)
                                                   parseGWPackage (main)
                                                   prepareTxBuffer (main)
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000012E0 - 000012EC (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          000012E0 

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000012ED - 00001322 (0x36 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        000012ED        main (main)
                                                   main_loop (main)
                                                   parseCommands (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001323 - 0000134C (0x2a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE       00001323        main_loop (main)
                                                   parseCommands (main)
                                                   setByte (main)
                                                   setFloat (main)
                                                   setInt (main)
           ?UC_SWITCH_SPARSE_LEAVE
                                   00001340        ?UC_JMP_IF_IN_RANGE (?UC_JMP_IF_IN_RANGE)
                                                   ?UC_JMP_IF_VALUE (?UC_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000134D - 0000136B (0x1f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_IN_RANGE     0000134D        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000136C - 00001381 (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_VALUE        0000136C        Segment part 0 (?UC_SWITCH_SPARSE)

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\main.r51
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000008F - 0000008F (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0INP                   0000008F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   checkMore
                                                   checkVin
                                                   kickOsc
                                                   main
                                                   main_loop
                                                   ov_startup
                                                   parseGWPackage
                                                   prepareData
                                                   setByte
                                                   tickWait
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   setupRadioDR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIM                    00000091 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   setupRadioDR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FWT                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRH                  
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   savePB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FCTL                    000000AE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   armAdcs
                                                   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 12. TENTATIVE. Used definition from flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   main
                                                   parseGWPackage
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 17. TENTATIVE. Used definition from hal_power_clk_mgmt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEP                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 18. TENTATIVE. Used definition from hal_power_clk_mgmt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON                  
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   main
                                                   main_loop
                                                   reset (utils)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CB - 000000CB (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CTL                   000000CB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CC - 000000CC (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL0                 000000CC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CD - 000000CD (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   kickOsc
                                                   main
                                                   main_loop
                                                   ov_startup
                                                   prepareCoeff
                                                   prepareData
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CC0                   000000CD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CE - 000000CE (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL1                 000000CE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CF - 000000CF (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   checkVin
                                                   main
                                                   main_loop
                                                   setByte
                                                   setFloat
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CC1                   000000CF 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 25. TENTATIVE. Used definition from flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DA - 000000DA (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0L                  000000DA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DB - 000000DB (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0H                  000000DB 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 28. TENTATIVE. Used definition from hop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E2 - 000000E2 (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTL                  000000E2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E3 - 000000E3 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTH                  000000E3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   setupRadioDR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIF                    000000E9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 34.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 37.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   000000F4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   000000F5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 40.            Intra module refs:   checkMore
                                                   init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBEE - 0000FBEF (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   main_loop
                                                   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _slot                   0000FBEE        radioConfigure (radio_2400)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBF0 - 0000FBF1 (0x2 bytes), align: 0
  Segment part 48.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _join_slot              0000FBF0        radioConfigure (radio_2400)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBF2 - 0000FBF3 (0x2 bytes), align: 0
  Segment part 50.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _gw_delay               0000FBF2        radioConfigure (radio_2400)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBF4 - 0000FBF5 (0x2 bytes), align: 0
  Segment part 52.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _loop_delay             0000FBF4        radioConfigure (radio_2400)
    -------------------------------------------------------------------------
XDATA_I
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _datarate               
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F923 - 0000FA14 (0xf2 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 225
                                                   Segment part 248
                                                   Segment part 264
                                                   Segment part 271
                                                   Segment part 285
                                                   Segment part 307
                                                   Segment part 325
                                                   Segment part 334
                                                   Segment part 341
                                                   Segment part 350
                                                   Segment part 369
                                                   Segment part 370
                                                   Segment part 372
                                                   Segment part 373
                                                   Segment part 376
                                                   Segment part 379
                                                   Segment part 384
                                                   checkVin
                                                   computeADCs
                                                   copyMac
                                                   init
                                                   kickOsc
                                                   lin
                                                   main
                                                   main_loop
                                                   oc2timer
                                                   ov_startup
                                                   parseCommands
                                                   parseGWPackage
                                                   prepareCoeff
                                                   prepareData
                                                   prepareScaling
                                                   prepareSpecial
                                                   prepareTxBuffer
                                                   read_page
                                                   savePB
                                                   setByte
                                                   setFloat
                                                   setInt
                                                   setupRadio
                                                   setupRadioDR
                                                   setupRepeater
                                                   softKick
                                                   switchTo255
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           page                    0000F923        radioConfigure (radio_2400)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FA15 - 0000FA16 (0x2 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 361
                                                   main_loop
                                                   prepareData
                                                   prepareScaling
                                                   setByte
                                                   setInt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           base_ptr                0000FA15 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBF6 - 0000FBF6 (0x1 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 384
                                                   parseCommands
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           search_stat             0000FBF6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FA17 - 0000FA1A (0x4 bytes), align: 0
  Segment part 60.            Intra module refs:   init
                                                   setFloat
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           invVref0                0000FA17 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FA1B - 0000FA1B (0x1 bytes), align: 0
  Segment part 61.            Intra module refs:   computeADCs
                                                   prepareData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           theRealOffset           0000FA1B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FA1C - 0000FAAB (0x90 bytes), align: 0
  Segment part 62.            Intra module refs:   computeADCs
                                                   main
                                                   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adcBuf                  0000FA1C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAAC - 0000FACF (0x24 bytes), align: 0
  Segment part 63.            Intra module refs:   computeADCs
                                                   lin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adcs                    0000FAAC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAD0 - 0000FAE1 (0x12 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 309
                                                   checkVin
                                                   computeADCs
                                                   main_loop
                                                   prepareData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adcs16                  0000FAD0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAE2 - 0000FAF3 (0x12 bytes), align: 0
  Segment part 65.            Intra module refs:   init
                                                   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adcsTemp                0000FAE2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAF4 - 0000FAF4 (0x1 bytes), align: 0
  Segment part 66.            Intra module refs:   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tempAdcsCount           0000FAF4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAF5 - 0000FAF6 (0x2 bytes), align: 0
  Segment part 67.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ticks2ProcessCmd        0000FAF5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAF7 - 0000FAF8 (0x2 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 385
                                                   Segment part 386
                                                   parseCommands
                                                   softKick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cmdCount                0000FAF7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBF7 - 0000FBF8 (0x2 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 282
                                                   Segment part 349
                                                   main
                                                   main_loop
                                                   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lastCycle               0000FBF7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBF9 - 0000FBFA (0x2 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 376
                                                   main_loop
                                                   parseGWPackage
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cyclesTo500             0000FBF9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBFB - 0000FBFC (0x2 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 370
                                                   main_loop
                                                   parseGWPackage
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cyclesTo10              0000FBFB 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBFD - 0000FBFE (0x2 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 341
                                                   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cyclesToStep500Channel
                                   0000FBFD 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBFF - 0000FC00 (0x2 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 334
                                                   main_loop
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cycles2Step10Channel    0000FBFF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC01 - 0000FC02 (0x2 bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 285
                                                   Segment part 325
                                                   main
                                                   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cycles2SoftKick         0000FC01 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC03 - 0000FC04 (0x2 bytes), align: 0
  Segment part 81.            Intra module refs:   main
                                                   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cycles2HardKick         0000FC03 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAF9 - 0000FAFA (0x2 bytes), align: 0
  Segment part 83.            Intra module refs:   Segment part 346
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cyclesFromStart         0000FAF9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAFB - 0000FAFC (0x2 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 347
                                                   Segment part 348
                                                   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temperatureProtectionDelay
                                   0000FAFB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAFD - 0000FAFE (0x2 bytes), align: 0
  Segment part 85.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decodeDelay             0000FAFD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAFF - 0000FAFF (0x1 bytes), align: 0
  Segment part 86.            Intra module refs:   Segment part 223
                                                   Segment part 227
                                                   Segment part 267
                                                   checkVin
                                                   main
                                                   main_loop
                                                   parseGWPackage
                                                   prepareData
                                                   setByte
                                                   softKick
                                                   switchTo255
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           curChannel              0000FAFF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB00 - 0000FB00 (0x1 bytes), align: 0
  Segment part 87.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           curBunch                0000FB00 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB01 - 0000FB01 (0x1 bytes), align: 0
  Segment part 88.            Intra module refs:   computeADCs
                                                   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bufferCount             0000FB01 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB02 - 0000FB02 (0x1 bytes), align: 0
  Segment part 89.            Intra module refs:   armAdcs
                                                   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adcCount                0000FB02 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB03 - 0000FB03 (0x1 bytes), align: 0
  Segment part 90.            Intra module refs:   main_loop
                                                   prepareData
                                                   prepareScaling
                                                   setByte
                                                   setInt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reportScaling           0000FB03 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB04 - 0000FB04 (0x1 bytes), align: 0
  Segment part 91.            Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           joinRequestWasSend      0000FB04 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB05 - 0000FB05 (0x1 bytes), align: 0
  Segment part 92.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           resetReason             0000FB05 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB06 - 0000FB06 (0x1 bytes), align: 0
  Segment part 93.            Intra module refs:   Segment part 246
                                                   Segment part 250
                                                   checkVin
                                                   main
                                                   main_loop
                                                   prepareCoeff
                                                   prepareData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           theOC                   0000FB06 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB07 - 0000FB07 (0x1 bytes), align: 0
  Segment part 94.            Intra module refs:   checkVin
                                                   main
                                                   main_loop
                                                   prepareData
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setOC                   0000FB07 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB08 - 0000FB08 (0x1 bytes), align: 0
  Segment part 95.            Intra module refs:   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reportFlashCheck        0000FB08 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC05 - 0000FC05 (0x1 bytes), align: 0
  Segment part 96.            Intra module refs:   prepareScaling
                                                   setByte
                                                   setInt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           calibrationRepeat       0000FC05 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB09 - 0000FB09 (0x1 bytes), align: 0
  Segment part 98.            Intra module refs:   main_loop
                                                   parseGWPackage
                                                   softKick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cyclesToHop             0000FB09 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB0A - 0000FB0A (0x1 bytes), align: 0
  Segment part 99.            Intra module refs:   main_loop
                                                   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bunchCount              0000FB0A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB0B - 0000FB0B (0x1 bytes), align: 0
  Segment part 100.           Intra module refs:   main_loop
                                                   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           got_gw                  0000FB0B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB0C - 0000FB0C (0x1 bytes), align: 0
  Segment part 101.           Intra module refs:   main_loop
                                                   parseCommands
                                                   parseGWPackage
                                                   prepareData
                                                   savePB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isOnTestStand           0000FB0C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC06 - 0000FC06 (0x1 bytes), align: 0
  Segment part 102.           Intra module refs:   checkVin
                                                   kickOsc
                                                   main
                                                   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           oscWhatToWaitFor        0000FC06 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC07 - 0000FC07 (0x1 bytes), align: 0
  Segment part 104.           Intra module refs:   checkVin
                                                   oc2timer
                                                   prepareData
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ocShortCircuitLimit     0000FC07 
    -------------------------------------------------------------------------
XDATA_I
  Segment part 106. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ModuleOffRememberedPtr
                                   
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC08 - 0000FC08 (0x1 bytes), align: 0
  Segment part 108.           Intra module refs:   main
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ModuleStatusOff         0000FC08 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC09 - 0000FC09 (0x1 bytes), align: 0
  Segment part 110.           Intra module refs:   checkVin
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ModuleStatusOffFetFailure
                                   0000FC09 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB0D - 0000FB0D (0x1 bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 281
                                                   main
                                                   ov_startup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ModuleStatusCanTurnOn   0000FB0D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB0E - 0000FB0E (0x1 bytes), align: 0
  Segment part 113.           Intra module refs:   prepareData
                                                   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enable2SendData         0000FB0E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB0F - 0000FB0F (0x1 bytes), align: 0
  Segment part 114.           Intra module refs:   checkVin
                                                   sendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           txDisabled              0000FB0F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC0A - 0000FC0A (0x1 bytes), align: 0
  Segment part 115.           Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           alignMPP                0000FC0A 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           from_flash              
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB10 - 0000FB10 (0x1 bytes), align: 0
  Segment part 118.           Intra module refs:   main_loop
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           turnOnFlag              0000FB10 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB11 - 0000FB11 (0x1 bytes), align: 0
  Segment part 119.           Intra module refs:   main_loop
                                                   prepareData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isCalibrationPackage    0000FB11 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB12 - 0000FB12 (0x1 bytes), align: 0
  Segment part 120.           Intra module refs:   main_loop
                                                   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           was_listening           0000FB12 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB13 - 0000FB13 (0x1 bytes), align: 0
  Segment part 121.           Intra module refs:   quartz
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rcgen                   0000FB13 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB14 - 0000FB14 (0x1 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 263
                                                   checkVin
                                                   read_page
                                                   switchTo255
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ch255                   0000FB14 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB15 - 0000FB15 (0x1 bytes), align: 0
  Segment part 123.           Intra module refs:   main_loop
                                                   parseGWPackage
                                                   prepareTxBuffer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           packagePrepared         0000FB15 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC0B - 0000FC0C (0x2 bytes), align: 0
  Segment part 124.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gnd_shift               0000FC0B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB16 - 0000FB19 (0x4 bytes), align: 0
  Segment part 126.           Intra module refs:   parseGWPackage
                                                   prepareData
                                                   prepareJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           utc                     0000FB16 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 127. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ms                      
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB1A - 0000FB1D (0x4 bytes), align: 0
  Segment part 128.           Intra module refs:   parseCommands
                                                   parseGWPackage
                                                   setByte
                                                   softKick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           utcLast                 0000FB1A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB1E - 0000FB1F (0x2 bytes), align: 0
  Segment part 129.           Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           msLast                  0000FB1E 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 130. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           processingTime          
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 131. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pt                      
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 132. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mdmcfg4_cycles          
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB20 - 0000FB20 (0x1 bytes), align: 0
  Segment part 133.           Intra module refs:   checkVin
                                                   main
                                                   main_loop
                                                   setByte
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC0D - 0000FC0D (0x1 bytes), align: 0
  Segment part 134.           Intra module refs:   checkVin
                                                   main
                                                   setByte
                                                   setInt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           checkForFETFailure      0000FC0D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC0E - 0000FC0F (0x2 bytes), align: 0
  Segment part 136.           Intra module refs:   Segment part 328
                                                   checkVin
                                                   prepareData
                                                   setByte
    -------------------------------------------------------------------------
XDATA_ROM_C
  Relative segment, address: CODE 00004C95 - 00004D86 (0xf2 bytes), align: 0
  Segment part 138.           Intra module refs:   read_page
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC10 - 0000FC11 (0x2 bytes), align: 0
  Segment part 139.           Intra module refs:   Segment part 226
                                                   Segment part 301
                                                   Segment part 321
                                                   Segment part 354
                                                   Segment part 363
                                                   main
                                                   sendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           si                      0000FC10 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB21 - 0000FB22 (0x2 bytes), align: 0
  Segment part 141.           Intra module refs:   Segment part 273
                                                   Segment part 293
                                                   Segment part 295
                                                   Segment part 345
                                                   Segment part 364
                                                   Segment part 365
                                                   checkVin
                                                   computeADCs
                                                   main
                                                   main_loop
                                                   parseGWPackage
                                                   readNextValue
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB23 - 0000FB24 (0x2 bytes), align: 0
  Segment part 142.           Intra module refs:   Segment part 227
                                                   Segment part 266
                                                   Segment part 287
                                                   Segment part 291
                                                   Segment part 294
                                                   Segment part 297
                                                   Segment part 327
                                                   Segment part 339
                                                   Segment part 374
                                                   checkVin
                                                   main
                                                   main_loop
                                                   ov_startup
                                                   parseGWPackage
                                                   setByte
                                                   tickWait
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC12 - 0000FC1A (0x9 bytes), align: 0
  Segment part 143.           Intra module refs:   armAdcs
                                                   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adcChannels             0000FC12 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC1B - 0000FC23 (0x9 bytes), align: 0
  Segment part 145.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           indices                 0000FC1B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB25 - 0000FB26 (0x2 bytes), align: 0
  Segment part 147.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lastOff                 0000FB25 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB27 - 0000FB28 (0x2 bytes), align: 0
  Segment part 148.           Intra module refs:   parseGWPackage
                                                   prepareData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lastRssi                0000FB27 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC24 - 0000FC43 (0x20 bytes), align: 0
  Segment part 149.           Intra module refs:   switchTo255
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           theKey                  0000FC24 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB29 - 0000FB38 (0x10 bytes), align: 0
  Segment part 151.           Intra module refs:   parseCommands
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nextKey                 0000FB29 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB39 - 0000FB48 (0x10 bytes), align: 0
  Segment part 152.           Intra module refs:   parseCommands
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nextIV                  0000FB39 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB49 - 0000FB4C (0x4 bytes), align: 0
  Segment part 153.           Intra module refs:   oc2timer
                                                   setFloat
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000166A - 000016F1 (0x88 bytes), align: 0
  Segment part 215.           Intra module refs:   Segment part 251
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           oc2timer                0000166A 
               stack 1 = 00000017 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000016F2 - 000016F6 (0x5 bytes), align: 0
  Segment part 216.           Intra module refs:   oc2timer
                                                   prepareCoeff
                                                   setFloat
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000016F7 - 00001710 (0x1a bytes), align: 0
  Segment part 217.           Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abs                     000016F7 
               stack 1 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001711 - 00001715 (0x5 bytes), align: 0
  Segment part 218.           Intra module refs:   abs
                                                   checkVin
                                                   parseGWPackage
    -------------------------------------------------------------------------
XDATA_I
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           defFreq                 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC44 - 0000FC46 (0x3 bytes), align: 0
  Segment part 156.           Intra module refs:   def_freq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           the_frequency           0000FC44 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001716 - 00001723 (0xe bytes), align: 0
  Segment part 219.           Intra module refs:   init
                                                   softKick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           def_freq                00001716 
               calls direct
               stack 1 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001724 - 0000178F (0x6c bytes), align: 0
  Segment part 220.           Intra module refs:   setupRadio
                                                   setupRepeater
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setupRadioDR            00001724 
               calls direct
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001790 - 000017A9 (0x1a bytes), align: 0
  Segment part 221.           Intra module refs:   Segment part 223
                                                   main_loop
                                                   setByte
                                                   softKick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setupRadio              00001790 
               calls direct
               stack 1 = 0000000F ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000017AA - 000017D5 (0x2c bytes), align: 0
  Segment part 222.           Intra module refs:   main_loop
                                                   parseGWPackage
                                                   sendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setupRepeater           000017AA 
               calls direct
               stack 1 = 0000000F ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000017D6 - 000017DE (0x9 bytes), align: 0
  Segment part 223.           Intra module refs:   init
                                                   parseCommands
                                                   setByte
                                                   setupRepeater
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000017DF - 00001838 (0x5a bytes), align: 0
  Segment part 224.           Intra module refs:   checkVin
                                                   main
                                                   main_loop
                                                   setByte
                                                   switchTo255
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           softKick                000017DF 
               calls direct, is recursive
               stack 1 = 00000017 ( 00000000 )
               stack 2 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001839 - 00001845 (0xd bytes), align: 0
  Segment part 225.           Intra module refs:   main
                                                   parseCommands
                                                   parseGWPackage
                                                   prepareTxBuffer
                                                   setByte
                                                   softKick
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001846 - 00001855 (0x10 bytes), align: 0
  Segment part 226.           Intra module refs:   setupRadioDR
                                                   softKick
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001856 - 00001867 (0x12 bytes), align: 0
  Segment part 227.           Intra module refs:   main_loop
                                                   receive
                                                   setByte
                                                   softKick
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 228. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           restoreRadio            
               is not allocated
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001868 - 000018FB (0x94 bytes), align: 0
  Segment part 229.           Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init                    00001868 
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000018FC - 00001931 (0x36 bytes), align: 0
  Segment part 230.           Intra module refs:   checkVin
                                                   main_loop
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ov_startup              000018FC 
               stack 1 = 00000017 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB4D - 0000FB4E (0x2 bytes), align: 0
  Segment part 158.           Intra module refs:   Segment part 234
                                                   checkVin
                                                   computeADCs
                                                   cube_coeff
                                                   lin_coeff
                                                   lin_coeff_t
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _coeff                  0000FB4D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB4F - 0000FB52 (0x4 bytes), align: 0
  Segment part 159.           Intra module refs:   computeADCs
                                                   lin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           invRef                  0000FB4F 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 231. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mult                    
               is not allocated
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001932 - 00001962 (0x31 bytes), align: 0
  Segment part 232.           Intra module refs:   checkVin
                                                   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lin_coeff               00001932 
               stack 1 = 0000001F ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001963 - 0000198C (0x2a bytes), align: 0
  Segment part 233.           Intra module refs:   checkVin
                                                   lin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lin_coeff_t             00001963 
               stack 1 = 00000017 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000198D - 00001993 (0x7 bytes), align: 0
  Segment part 234.           Intra module refs:   lin_coeff
                                                   lin_coeff_t
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001994 - 000019E5 (0x52 bytes), align: 0
  Segment part 235.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lin                     00001994 
               calls direct
               stack 1 = 0000001F ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000019E6 - 00001A35 (0x50 bytes), align: 0
  Segment part 236.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cube_coeff              000019E6 
               stack 1 = 0000001F ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001A36 - 00001A3F (0xa bytes), align: 0
  Segment part 237.           Intra module refs:   computeAdjustment
                                                   cube_coeff
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001A40 - 00001A53 (0x14 bytes), align: 0
  Segment part 238.           Intra module refs:   Segment part 237
                                                   init
                                                   lin
                                                   lin_coeff
                                                   lin_coeff_t
                                                   parseGWPackage
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB53 - 0000FB56 (0x4 bytes), align: 0
  Segment part 160.           Intra module refs:   checkVin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           checkVref               0000FB53 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 239. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           processCheck            
               calls direct, is not allocated
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 240. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB57 - 0000FB68 (0x12 bytes), align: 0
  Segment part 161.           Intra module refs:   checkVin
                                                   readNextValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           last                    0000FB57 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB69 - 0000FB6A (0x2 bytes), align: 0
  Segment part 162.           Intra module refs:   checkVin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           checkVoutOnT            0000FB69 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           checkPD                 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB6B - 0000FB6B (0x1 bytes), align: 0
  Segment part 164.           Intra module refs:   checkVin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isSteppedDown           0000FB6B 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001A54 - 00001AA6 (0x53 bytes), align: 0
  Segment part 241.           Intra module refs:   checkVin
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_page               00001A54 
               calls direct, is recursive
               stack 1 = 00000017 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001AA7 - 00001AFA (0x54 bytes), align: 0
  Segment part 242.           Intra module refs:   Segment part 263
                                                   checkVin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           switchTo255             00001AA7 
               calls direct, is recursive
               stack 1 = 00000017 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB6C - 0000FB6D (0x2 bytes), align: 0
  Segment part 165.           Intra module refs:   checkVin
                                                   readNextValue
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB6E - 0000FB6F (0x2 bytes), align: 0
  Segment part 166.           Intra module refs:   readNextValue
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB70 - 0000FB71 (0x2 bytes), align: 0
  Segment part 167.           Intra module refs:   readNextValue
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001AFB - 00001B14 (0x1a bytes), align: 0
  Segment part 243.           Intra module refs:   checkVin
                                                   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kickOsc                 00001AFB 
               stack 1 = 00000017 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001B15 - 00001B1A (0x6 bytes), align: 0
  Segment part 244.           Intra module refs:   armAdcs
                                                   dec
                                                   kickOsc
                                                   ov_startup
                                                   prepareJoinRequest
                                                   read_page
                                                   receive
                                                   savePB
                                                   sendData
                                                   setupRadio
                                                   setupRepeater
                                                   softKick
                                                   switchTo255
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB72 - 0000FB73 (0x2 bytes), align: 0
  Segment part 168.           Intra module refs:   checkVin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iOutIin1Diff            0000FB72 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB74 - 0000FB75 (0x2 bytes), align: 0
  Segment part 169.           Intra module refs:   checkVin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iOutIin2Diff            0000FB74 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001B1B - 00001EA3 (0x389 bytes), align: 0
  Segment part 245.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           checkVin                00001B1B 
               calls direct, is recursive
               stack 1 = 0000001F ( 00000017 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001EA4 - 00001EAB (0x8 bytes), align: 0
  Segment part 246.           Intra module refs:   checkVin
                                                   main_loop
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001EAC - 00001EB2 (0x7 bytes), align: 0
  Segment part 247.           Intra module refs:   checkVin
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001EB3 - 00001EBA (0x8 bytes), align: 0
  Segment part 248.           Intra module refs:   checkVin
                                                   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001EBB - 00001EC5 (0xb bytes), align: 0
  Segment part 249.           Intra module refs:   checkVin
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001EC6 - 00001ECE (0x9 bytes), align: 0
  Segment part 250.           Intra module refs:   checkVin
                                                   setByte
                                                   setFloat
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001ECF - 00001ED6 (0x8 bytes), align: 0
  Segment part 251.           Intra module refs:   Segment part 246
                                                   Segment part 250
                                                   checkVin
                                                   main
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001ED7 - 00001EE6 (0x10 bytes), align: 0
  Segment part 252.           Intra module refs:   checkVin
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB76 - 0000FB76 (0x1 bytes), align: 0
  Segment part 170.           Intra module refs:   checkVin
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB77 - 0000FB78 (0x2 bytes), align: 0
  Segment part 171.           Intra module refs:   checkVin
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 253. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           checkItOut              
               is not allocated
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB79 - 0000FB7A (0x2 bytes), align: 0
  Segment part 172.           Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ptr2RunningTick         0000FB79 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 254. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           computeTI               
               is not allocated
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001EE7 - 00001F2B (0x45 bytes), align: 0
  Segment part 255.           Intra module refs:   longTickWait
                                                   parseCommands
                                                   parseGWPackage
                                                   savePB
                                                   setInt
                                                   setupRadioDR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tickWait                00001EE7 
               stack 1 = 0000000F ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001F2C - 00001F76 (0x4b bytes), align: 0
  Segment part 256.           Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           checkMore               00001F2C 
               stack 1 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001F77 - 00001F7C (0x6 bytes), align: 0
  Segment part 257.           Intra module refs:   checkMore
                                                   prepareTxBuffer
                                                   tickWait
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001F7D - 00001F98 (0x1c bytes), align: 0
  Segment part 258.           Intra module refs:   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dec                     00001F7D 
               stack 1 = 0000000B ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001F99 - 00001F9C (0x4 bytes), align: 0
  Segment part 259.           Intra module refs:   checkVin
                                                   dec
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001F9D - 00001FA5 (0x9 bytes), align: 0
  Segment part 260.           Intra module refs:   Segment part 259
                                                   Segment part 385
    -------------------------------------------------------------------------
XDATA_I
  Segment part 173. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sleepCounter            
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 175. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           saved_channel           
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC47 - 0000FC47 (0x1 bytes), align: 0
  Segment part 176.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 178. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           milliSeconds            
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 179. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           seconds                 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 180. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minutes                 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB7B - 0000FB7B (0x1 bytes), align: 0
  Segment part 181.           Intra module refs:   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           was_repeater            0000FB7B 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001FA6 - 00002528 (0x583 bytes), align: 0
  Segment part 261.           Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_loop               00001FA6 
               calls direct
               stack 1 = 00000000 ( 0000000B )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002529 - 0000252D (0x5 bytes), align: 0
  Segment part 262.           Intra module refs:   main_loop
                                                   readNextValue
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000252E - 00002536 (0x9 bytes), align: 0
  Segment part 263.           Intra module refs:   main_loop
                                                   read_page
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002537 - 0000253C (0x6 bytes), align: 0
  Segment part 264.           Intra module refs:   main_loop
                                                   parseGWPackage
                                                   switchTo255
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000253D - 0000254E (0x12 bytes), align: 0
  Segment part 265.           Intra module refs:   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000254F - 00002558 (0xa bytes), align: 0
  Segment part 266.           Intra module refs:   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002559 - 00002569 (0x11 bytes), align: 0
  Segment part 267.           Intra module refs:   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000256A - 00002575 (0xc bytes), align: 0
  Segment part 268.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002576 - 00002579 (0x4 bytes), align: 0
  Segment part 269.           Intra module refs:   Segment part 218
                                                   Segment part 268
                                                   Segment part 272
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000257A - 0000257D (0x4 bytes), align: 0
  Segment part 270.           Intra module refs:   checkVin
                                                   main_loop
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000257E - 0000258F (0x12 bytes), align: 0
  Segment part 271.           Intra module refs:   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002590 - 0000259B (0xc bytes), align: 0
  Segment part 272.           Intra module refs:   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000259C - 000025A8 (0xd bytes), align: 0
  Segment part 273.           Intra module refs:   computeADCs
                                                   main
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000025A9 - 000025BB (0x13 bytes), align: 0
  Segment part 274.           Intra module refs:   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000025BC - 000025BE (0x3 bytes), align: 0
  Segment part 275.           Intra module refs:   checkVin
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000025BF - 000025C4 (0x6 bytes), align: 0
  Segment part 276.           Intra module refs:   Segment part 247
                                                   Segment part 269
                                                   Segment part 275
                                                   Segment part 330
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC48 - 0000FC48 (0x1 bytes), align: 0
  Segment part 182.           Intra module refs:   Segment part 271
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000025C5 - 000025D8 (0x14 bytes), align: 0
  Segment part 277.           Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           longTickWait            000025C5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000025D9 - 000028F0 (0x318 bytes), align: 0
  Segment part 278.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000025D9        ?call_main (?cmain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000028F1 - 000028FC (0xc bytes), align: 0
  Segment part 279.           Intra module refs:   checkMore
                                                   main
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000028FD - 0000290F (0x13 bytes), align: 0
  Segment part 280.           Intra module refs:   checkMore
                                                   main
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002910 - 00002918 (0x9 bytes), align: 0
  Segment part 281.           Intra module refs:   checkVin
                                                   main
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002919 - 00002921 (0x9 bytes), align: 0
  Segment part 282.           Intra module refs:   main
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002922 - 00002924 (0x3 bytes), align: 0
  Segment part 283.           Intra module refs:   main
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002925 - 00002929 (0x5 bytes), align: 0
  Segment part 284.           Intra module refs:   Segment part 283
                                                   Segment part 349
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000292A - 00002936 (0xd bytes), align: 0
  Segment part 285.           Intra module refs:   main
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002937 - 0000293C (0x6 bytes), align: 0
  Segment part 286.           Intra module refs:   main
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000293D - 00002942 (0x6 bytes), align: 0
  Segment part 287.           Intra module refs:   Segment part 234
                                                   Segment part 286
                                                   Segment part 371
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002943 - 00002947 (0x5 bytes), align: 0
  Segment part 288.           Intra module refs:   Segment part 287
                                                   Segment part 292
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002948 - 0000294D (0x6 bytes), align: 0
  Segment part 289.           Intra module refs:   main
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000294E - 00002951 (0x4 bytes), align: 0
  Segment part 290.           Intra module refs:   main
                                                   main_loop
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002952 - 00002958 (0x7 bytes), align: 0
  Segment part 291.           Intra module refs:   Segment part 290
                                                   Segment part 356
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002959 - 00002961 (0x9 bytes), align: 0
  Segment part 292.           Intra module refs:   Segment part 291
                                                   Segment part 375
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002962 - 0000296D (0xc bytes), align: 0
  Segment part 293.           Intra module refs:   checkVin
                                                   computeADCs
                                                   main
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000296E - 0000297E (0x11 bytes), align: 0
  Segment part 294.           Intra module refs:   main
                                                   main_loop
                                                   ov_startup
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000297F - 0000298C (0xe bytes), align: 0
  Segment part 295.           Intra module refs:   checkVin
                                                   computeADCs
                                                   main
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000298D - 000029BD (0x31 bytes), align: 0
  Segment part 296.           Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           armAdcs                 0000298D 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000029BE - 000029C5 (0x8 bytes), align: 0
  Segment part 297.           Intra module refs:   armAdcs
                                                   cube_coeff
                                                   lin_coeff
                                                   lin_coeff_t
                                                   parseGWPackage
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000029C6 - 000029C9 (0x4 bytes), align: 0
  Segment part 298.           Intra module refs:   Segment part 295
                                                   Segment part 297
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000029CA - 000029CD (0x4 bytes), align: 0
  Segment part 299.           Intra module refs:   Segment part 287
                                                   Segment part 298
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000029CE - 000029D6 (0x9 bytes), align: 0
  Segment part 300.           Intra module refs:   Segment part 292
                                                   Segment part 299
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000029D7 - 000029E1 (0xb bytes), align: 0
  Segment part 301.           Intra module refs:   armAdcs
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000029E2 - 00002B95 (0x1b4 bytes), align: 0
  Segment part 302.           Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           readNextValue           000029E2 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 0000000B )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC49 - 0000FC4A (0x2 bytes), align: 0
  Segment part 184.           Intra module refs:   readNextValue
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB7C - 0000FB7D (0x2 bytes), align: 0
  Segment part 186.           Intra module refs:   readNextValue
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002B96 - 00002BD4 (0x3f bytes), align: 0
  Segment part 303.           Intra module refs:   prepareData
                                                   prepareJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           prepareTxBuffer         00002B96 
               calls direct
               stack 1 = 00000008 ( 0000000B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002BD5 - 00002BDE (0xa bytes), align: 0
  Segment part 304.           Intra module refs:   Segment part 314
                                                   prepareJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           copyMac                 00002BD5 
               calls direct
               stack 1 = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB7E - 0000FB7E (0x1 bytes), align: 0
  Segment part 187.           Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ndev                    0000FB7E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB7F - 0000FB80 (0x2 bytes), align: 0
  Segment part 188.           Intra module refs:   prepareData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           prevRssi                0000FB7F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB81 - 0000FB98 (0x18 bytes), align: 0
  Segment part 189.           Intra module refs:   prepareCoeff
                                                   prepareData
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           coefficients_buffer     0000FB81 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002BDF - 00002D3F (0x161 bytes), align: 0
  Segment part 305.           Intra module refs:   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           prepareData             00002BDF 
               calls direct
               stack 1 = 0000000B ( 00000008 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002D40 - 00002D42 (0x3 bytes), align: 0
  Segment part 306.           Intra module refs:   main
                                                   prepareData
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002D43 - 00002D49 (0x7 bytes), align: 0
  Segment part 307.           Intra module refs:   Segment part 306
                                                   Segment part 368
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002D4A - 00002D52 (0x9 bytes), align: 0
  Segment part 308.           Intra module refs:   prepareData
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002D53 - 00002D59 (0x7 bytes), align: 0
  Segment part 309.           Intra module refs:   checkVin
                                                   computeADCs
                                                   main
                                                   main_loop
                                                   parseCommands
                                                   parseGWPackage
                                                   prepareData
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002D5A - 00002D5D (0x4 bytes), align: 0
  Segment part 310.           Intra module refs:   Segment part 248
                                                   Segment part 272
                                                   Segment part 285
                                                   Segment part 309
                                                   Segment part 343
                                                   Segment part 370
                                                   Segment part 376
                                                   Segment part 386
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002D5E - 00002D63 (0x6 bytes), align: 0
  Segment part 311.           Intra module refs:   Segment part 310
                                                   Segment part 332
                                                   Segment part 334
                                                   Segment part 341
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002D64 - 00002D9F (0x3c bytes), align: 0
  Segment part 312.           Intra module refs:   prepareCoeff
                                                   prepareScaling
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           prepareSpecial          00002D64 
               calls direct
               stack 1 = 00000013 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002DA0 - 00002DA4 (0x5 bytes), align: 0
  Segment part 313.           Intra module refs:   prepareData
                                                   prepareScaling
                                                   prepareSpecial
                                                   quartz
                                                   setupRadioDR
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002DA5 - 00002DB0 (0xc bytes), align: 0
  Segment part 314.           Intra module refs:   prepareData
                                                   prepareSpecial
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002DB1 - 00002EAC (0xfc bytes), align: 0
  Segment part 315.           Intra module refs:   prepareData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           prepareCoeff            00002DB1 
               calls direct
               stack 1 = 00000008 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002EAD - 00002EB6 (0xa bytes), align: 0
  Segment part 316.           Intra module refs:   Segment part 289
                                                   Segment part 348
                                                   Segment part 350
                                                   checkVin
                                                   computeADCs
                                                   main
                                                   prepareCoeff
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002EB7 - 00002EFB (0x45 bytes), align: 0
  Segment part 317.           Intra module refs:   prepareData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           prepareScaling          00002EB7 
               calls direct, is indirectly called
               stack 1 = 00000008 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002EFC - 00002F30 (0x35 bytes), align: 0
  Segment part 318.           Intra module refs:   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           prepareJoinRequest      00002EFC 
               calls direct
               stack 1 = 0000000B ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002F31 - 00002F64 (0x34 bytes), align: 0
  Segment part 319.           Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           quartz                  00002F31 
               calls direct
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB99 - 0000FB99 (0x1 bytes), align: 0
  Segment part 190.           Intra module refs:   quartz
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002F65 - 00002FB6 (0x52 bytes), align: 0
  Segment part 320.           Intra module refs:   main_loop
                                                   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendData                00002F65 
               calls direct
               stack 1 = 0000000F ( 00000000 )
               stack 2 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002FB7 - 00002FC0 (0xa bytes), align: 0
  Segment part 321.           Intra module refs:   checkVin
                                                   main
                                                   main_loop
                                                   receive
                                                   sendData
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002FC1 - 00002FC4 (0x4 bytes), align: 0
  Segment part 322.           Intra module refs:   Segment part 226
                                                   Segment part 227
                                                   Segment part 266
                                                   Segment part 273
                                                   Segment part 294
                                                   Segment part 321
                                                   Segment part 339
                                                   Segment part 350
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002FC5 - 00002FCF (0xb bytes), align: 0
  Segment part 323.           Intra module refs:   Segment part 322
                                                   Segment part 363
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB9A - 0000FB9D (0x4 bytes), align: 0
  Segment part 191.           Intra module refs:   parseGWPackage
                                                   setByte
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB9E - 0000FB9F (0x2 bytes), align: 0
  Segment part 192.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002FD0 - 000036C2 (0x6f3 bytes), align: 0
  Segment part 324.           Intra module refs:   main_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parseGWPackage          00002FD0 
               calls direct
               stack 1 = 0000000B ( 00000011 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036C3 - 000036CE (0xc bytes), align: 0
  Segment part 325.           Intra module refs:   main
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036CF - 000036CF (0x1 bytes), align: 0
  Segment part 326.           Intra module refs:   main
                                                   main_loop
                                                   parseGWPackage
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036D0 - 000036D4 (0x5 bytes), align: 0
  Segment part 327.           Intra module refs:   Segment part 326
                                                   Segment part 351
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036D5 - 000036DA (0x6 bytes), align: 0
  Segment part 328.           Intra module refs:   checkVin
                                                   main
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036DB - 000036DF (0x5 bytes), align: 0
  Segment part 329.           Intra module refs:   Segment part 328
                                                   Segment part 356
                                                   armAdcs
                                                   checkVin
                                                   computeADCs
                                                   main
                                                   parseGWPackage
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036E0 - 000036E6 (0x7 bytes), align: 0
  Segment part 330.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036E7 - 000036EA (0x4 bytes), align: 0
  Segment part 331.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036EB - 000036F1 (0x7 bytes), align: 0
  Segment part 332.           Intra module refs:   Segment part 331
                                                   Segment part 347
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036F2 - 000036F5 (0x4 bytes), align: 0
  Segment part 333.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000036F6 - 000036FF (0xa bytes), align: 0
  Segment part 334.           Intra module refs:   Segment part 333
                                                   Segment part 376
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003700 - 0000370A (0xb bytes), align: 0
  Segment part 335.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000370B - 00003711 (0x7 bytes), align: 0
  Segment part 336.           Intra module refs:   computeADCs
                                                   main
                                                   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003712 - 0000371D (0xc bytes), align: 0
  Segment part 337.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000371E - 00003725 (0x8 bytes), align: 0
  Segment part 338.           Intra module refs:   main
                                                   main_loop
                                                   parseCommands
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003726 - 0000372F (0xa bytes), align: 0
  Segment part 339.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003730 - 00003733 (0x4 bytes), align: 0
  Segment part 340.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003734 - 0000373C (0x9 bytes), align: 0
  Segment part 341.           Intra module refs:   Segment part 340
                                                   Segment part 373
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000373D - 00003742 (0x6 bytes), align: 0
  Segment part 342.           Intra module refs:   Segment part 285
                                                   Segment part 341
                                                   Segment part 343
                                                   Segment part 361
                                                   Segment part 370
                                                   Segment part 376
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003743 - 0000374D (0xb bytes), align: 0
  Segment part 343.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000374E - 00003755 (0x8 bytes), align: 0
  Segment part 344.           Intra module refs:   computeADCs
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003756 - 0000375E (0x9 bytes), align: 0
  Segment part 345.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000375F - 00003776 (0x18 bytes), align: 0
  Segment part 346.           Intra module refs:   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003777 - 0000378C (0x16 bytes), align: 0
  Segment part 347.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000378D - 0000379E (0x12 bytes), align: 0
  Segment part 348.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000379F - 000037A5 (0x7 bytes), align: 0
  Segment part 349.           Intra module refs:   Segment part 249
                                                   Segment part 274
                                                   Segment part 289
                                                   Segment part 338
                                                   Segment part 348
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000037A6 - 000037B3 (0xe bytes), align: 0
  Segment part 350.           Intra module refs:   checkVin
                                                   kickOsc
                                                   main
                                                   main_loop
                                                   parseGWPackage
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000037B4 - 000037BB (0x8 bytes), align: 0
  Segment part 351.           Intra module refs:   Segment part 282
                                                   Segment part 350
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBA0 - 0000FBA0 (0x1 bytes), align: 0
  Segment part 193.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBA1 - 0000FBA1 (0x1 bytes), align: 0
  Segment part 194.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC4B - 0000FC4B (0x1 bytes), align: 0
  Segment part 195.           Intra module refs:   parseGWPackage
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC4C - 0000FC4F (0x4 bytes), align: 0
  Segment part 205.           Intra module refs:   computeAdjustment
                                                   oc2timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3f800000     0000FC4C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC50 - 0000FC53 (0x4 bytes), align: 0
  Segment part 207.           Intra module refs:   prepareCoeff
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_447a0000     0000FC50 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC54 - 0000FC57 (0x4 bytes), align: 0
  Segment part 209.           Intra module refs:   computeADCs
                                                   convU (utils)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            0000FC54 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC58 - 0000FC5B (0x4 bytes), align: 0
  Segment part 211.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_42c80000     0000FC58 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC5C - 0000FC5F (0x4 bytes), align: 0
  Segment part 213.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c1c80000     0000FC5C 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 352. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nextSlot                
               is not allocated
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000037BC - 000037F7 (0x3c bytes), align: 0
  Segment part 353.           Intra module refs:   main_loop
                                                   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           receive                 000037BC 
               stack 1 = 0000000F ( 00000000 )
               stack 2 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000037F8 - 00003800 (0x9 bytes), align: 0
  Segment part 354.           Intra module refs:   main
                                                   receive
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003801 - 00003806 (0x6 bytes), align: 0
  Segment part 355.           Intra module refs:   main_loop
                                                   receive
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003807 - 0000380E (0x8 bytes), align: 0
  Segment part 356.           Intra module refs:   receive
                                                   savePB
                                                   softKick
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBA2 - 0000FBA5 (0x4 bytes), align: 0
  Segment part 197.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vref                    0000FBA2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBA6 - 0000FBA9 (0x4 bytes), align: 0
  Segment part 198.           Intra module refs:   computeADCs
                                                   computeAdjustment
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           t                       0000FBA6 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000380F - 0000383D (0x2f bytes), align: 0
  Segment part 357.           Intra module refs:   computeADCs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           computeAdjustment       0000380F 
               stack 1 = 0000001F ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 358. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           multSaver               
               is not allocated
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000383E - 00003D9B (0x55e bytes), align: 0
  Segment part 359.           Intra module refs:   main_loop
                                                   prepareData
                                                   softKick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           computeADCs             0000383E 
               calls direct, is recursive
               stack 1 = 0000000B ( 0000001F )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003D9C - 00003DA4 (0x9 bytes), align: 0
  Segment part 360.           Intra module refs:   computeADCs
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003DA5 - 00003DAC (0x8 bytes), align: 0
  Segment part 361.           Intra module refs:   computeADCs
                                                   main
                                                   main_loop
                                                   parseCommands
                                                   parseGWPackage
                                                   prepareData
                                                   setByte
                                                   setFloat
                                                   setInt
                                                   tickWait
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003DAD - 00003DB0 (0x4 bytes), align: 0
  Segment part 362.           Intra module refs:   computeADCs
                                                   main_loop
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003DB1 - 00003DBB (0xb bytes), align: 0
  Segment part 363.           Intra module refs:   Segment part 270
                                                   Segment part 283
                                                   Segment part 301
                                                   Segment part 355
                                                   Segment part 362
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003DBC - 00003DD1 (0x16 bytes), align: 0
  Segment part 364.           Intra module refs:   computeADCs
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003DD2 - 00003DE7 (0x16 bytes), align: 0
  Segment part 365.           Intra module refs:   computeADCs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBAA - 0000FBAD (0x4 bytes), align: 0
  Segment part 199.           Intra module refs:   computeADCs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBAE - 0000FBB1 (0x4 bytes), align: 0
  Segment part 200.           Intra module refs:   computeADCs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBB2 - 0000FBB5 (0x4 bytes), align: 0
  Segment part 201.           Intra module refs:   computeADCs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBB6 - 0000FBB9 (0x4 bytes), align: 0
  Segment part 202.           Intra module refs:   computeADCs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBBA - 0000FBDD (0x24 bytes), align: 0
  Segment part 203.           Intra module refs:   computeADCs
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003DE8 - 00004241 (0x45a bytes), align: 0
  Segment part 366.           Intra module refs:   parseCommands
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setByte                 00003DE8 
               calls direct
               stack 1 = 0000000D ( 0000000A )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004242 - 00004246 (0x5 bytes), align: 0
  Segment part 367.           Intra module refs:   setByte
                                                   setInt
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004247 - 0000424A (0x4 bytes), align: 0
  Segment part 368.           Intra module refs:   parseGWPackage
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000424B - 0000425A (0x10 bytes), align: 0
  Segment part 369.           Intra module refs:   setByte
                                                   switchTo255
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000425B - 00004267 (0xd bytes), align: 0
  Segment part 370.           Intra module refs:   main_loop
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004268 - 0000426D (0x6 bytes), align: 0
  Segment part 371.           Intra module refs:   main_loop
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000426E - 0000427A (0xd bytes), align: 0
  Segment part 372.           Intra module refs:   main
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000427B - 00004283 (0x9 bytes), align: 0
  Segment part 373.           Intra module refs:   main_loop
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004284 - 00004291 (0xe bytes), align: 0
  Segment part 374.           Intra module refs:   main_loop
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004292 - 00004296 (0x5 bytes), align: 0
  Segment part 375.           Intra module refs:   Segment part 345
                                                   Segment part 374
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004297 - 000042A9 (0x13 bytes), align: 0
  Segment part 376.           Intra module refs:   main_loop
                                                   setByte
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000042AA - 00004343 (0x9a bytes), align: 0
  Segment part 377.           Intra module refs:   parseCommands
                                                   setByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savePB                  000042AA 
               calls direct
               stack 1 = 0000000D ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004344 - 00004493 (0x150 bytes), align: 0
  Segment part 378.           Intra module refs:   parseCommands
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setInt                  00004344 
               calls direct
               stack 1 = 0000000D ( 0000000A )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004494 - 0000449C (0x9 bytes), align: 0
  Segment part 379.           Intra module refs:   setInt
                                                   setupRadioDR
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000449D - 000045AA (0x10e bytes), align: 0
  Segment part 380.           Intra module refs:   parseCommands
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setFloat                0000449D 
               calls direct
               stack 1 = 0000000D ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000045AB - 000048E7 (0x33d bytes), align: 0
  Segment part 381.           Intra module refs:   parseGWPackage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parseCommands           000045AB 
               calls direct
               stack 1 = 0000000F ( 0000000F )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000048E8 - 000048ED (0x6 bytes), align: 0
  Segment part 382.           Intra module refs:   Segment part 383
                                                   computeADCs
                                                   parseCommands
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000048EE - 000048F6 (0x9 bytes), align: 0
  Segment part 383.           Intra module refs:   parseCommands
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000048F7 - 00004904 (0xe bytes), align: 0
  Segment part 384.           Intra module refs:   main
                                                   parseCommands
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004905 - 00004912 (0xe bytes), align: 0
  Segment part 385.           Intra module refs:   parseCommands
                                                   savePB
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004913 - 00004922 (0x10 bytes), align: 0
  Segment part 386.           Intra module refs:   parseCommands
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004923 - 00004929 (0x7 bytes), align: 0
  Segment part 387.           Intra module refs:   Segment part 275
                                                   Segment part 386
                                                   checkVin
                                                   parseGWPackage
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBDE - 0000FBDF (0x2 bytes), align: 0
  Segment part 204.           Intra module refs:   Segment part 386
                                                   parseCommands
    -------------------------------------------------------------------------
ISTACK
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 42. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BEC - 00004BED (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   _slot
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BEE - 00004BEF (0x2 bytes), align: 0
  Segment part 49.            Intra module refs:   _join_slot
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BF0 - 00004BF1 (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   _gw_delay
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BF2 - 00004BF3 (0x2 bytes), align: 0
  Segment part 53.            Intra module refs:   _loop_delay
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 55. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BF4 - 00004BF4 (0x1 bytes), align: 0
  Segment part 59.            Intra module refs:   search_stat
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BF5 - 00004BF6 (0x2 bytes), align: 0
  Segment part 70.            Intra module refs:   lastCycle
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BF7 - 00004BF8 (0x2 bytes), align: 0
  Segment part 72.            Intra module refs:   cyclesTo500
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BF9 - 00004BFA (0x2 bytes), align: 0
  Segment part 74.            Intra module refs:   cyclesTo10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BFB - 00004BFC (0x2 bytes), align: 0
  Segment part 76.            Intra module refs:   cyclesToStep500Channel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BFD - 00004BFE (0x2 bytes), align: 0
  Segment part 78.            Intra module refs:   cycles2Step10Channel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004BFF - 00004C00 (0x2 bytes), align: 0
  Segment part 80.            Intra module refs:   cycles2SoftKick
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C01 - 00004C02 (0x2 bytes), align: 0
  Segment part 82.            Intra module refs:   cycles2HardKick
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C03 - 00004C03 (0x1 bytes), align: 0
  Segment part 97.            Intra module refs:   calibrationRepeat
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C04 - 00004C04 (0x1 bytes), align: 0
  Segment part 103.           Intra module refs:   oscWhatToWaitFor
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C05 - 00004C05 (0x1 bytes), align: 0
  Segment part 105.           Intra module refs:   ocShortCircuitLimit
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 107. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C06 - 00004C06 (0x1 bytes), align: 0
  Segment part 109.           Intra module refs:   ModuleStatusOff
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C07 - 00004C07 (0x1 bytes), align: 0
  Segment part 111.           Intra module refs:   ModuleStatusOffFetFailure
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C08 - 00004C08 (0x1 bytes), align: 0
  Segment part 116.           Intra module refs:   alignMPP
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C09 - 00004C0A (0x2 bytes), align: 0
  Segment part 125.           Intra module refs:   gnd_shift
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C0B - 00004C0B (0x1 bytes), align: 0
  Segment part 135.           Intra module refs:   checkForFETFailure
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C0C - 00004C0D (0x2 bytes), align: 0
  Segment part 137.           Intra module refs:   Segment part 136
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C0E - 00004C0F (0x2 bytes), align: 0
  Segment part 140.           Intra module refs:   si
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C10 - 00004C18 (0x9 bytes), align: 0
  Segment part 144.           Intra module refs:   adcChannels
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C19 - 00004C21 (0x9 bytes), align: 0
  Segment part 146.           Intra module refs:   indices
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C22 - 00004C41 (0x20 bytes), align: 0
  Segment part 150.           Intra module refs:   theKey
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 155. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C42 - 00004C44 (0x3 bytes), align: 0
  Segment part 157.           Intra module refs:   the_frequency
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 174. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C45 - 00004C45 (0x1 bytes), align: 0
  Segment part 177.           Intra module refs:   Segment part 176
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C46 - 00004C46 (0x1 bytes), align: 0
  Segment part 183.           Intra module refs:   Segment part 182
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C47 - 00004C48 (0x2 bytes), align: 0
  Segment part 185.           Intra module refs:   Segment part 184
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C49 - 00004C49 (0x1 bytes), align: 0
  Segment part 196.           Intra module refs:   Segment part 195
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C4A - 00004C4D (0x4 bytes), align: 0
  Segment part 206.           Intra module refs:   __Constant_3f800000
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C4E - 00004C51 (0x4 bytes), align: 0
  Segment part 208.           Intra module refs:   __Constant_447a0000
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C52 - 00004C55 (0x4 bytes), align: 0
  Segment part 210.           Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C56 - 00004C59 (0x4 bytes), align: 0
  Segment part 212.           Intra module refs:   __Constant_42c80000
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C5A - 00004C5D (0x4 bytes), align: 0
  Segment part 214.           Intra module refs:   __Constant_c1c80000

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\radio_2400.r51
  PROGRAM MODULE, NAME : radio_2400

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000FBE0 - 0000FBE1 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   radioConfigure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           perRssiOffset           0000FBE0        parseGWPackage (main)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC60 - 0000FC65 (0x6 bytes), align: 0
  Segment part 7.             Intra module refs:   radioConfigure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mdm_rate1               0000FC60        setByte (main)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC66 - 0000FC79 (0x14 bytes), align: 0
  Segment part 9.             Intra module refs:   radioConfigure
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC7A - 0000FC7C (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   radioConfigure
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC7D - 0000FC7F (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   radioConfigure
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC80 - 0000FC87 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   radioConfigure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           foc_bs_agc_rate12       0000FC80 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC88 - 0000FC8A (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   radioConfigure
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000492A - 000049E2 (0xb9 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           radioConfigure          0000492A        setupRadioDR (main)
               calls direct
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000049E3 - 000049E9 (0x7 bytes), align: 0
  Segment part 20.            Intra module refs:   radioConfigure
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C5E - 00004C63 (0x6 bytes), align: 0
  Segment part 8.             Intra module refs:   mdm_rate1
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C64 - 00004C77 (0x14 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C78 - 00004C7A (0x3 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C7B - 00004C7D (0x3 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C7E - 00004C85 (0x8 bytes), align: 0
  Segment part 16.            Intra module refs:   foc_bs_agc_rate12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C86 - 00004C88 (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17

    *************************************************************************

  FILE NAME : E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\utils.r51
  PROGRAM MODULE, NAME : utils

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000049EA - 000049F8 (0xf bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reset                   000049EA        main (main)
                                                   parseCommands (main)
                                                   savePB (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FBE2 - 0000FBE5 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   addDF
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delta                   0000FBE2        computeADCs (main)
                                                   softKick (main)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000049F9 - 00004A76 (0x7e bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           addDF                   000049F9        computeADCs (main)
                                                   parseGWPackage (main)
               stack 1 = 00000000 ( 0000000F )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004A77 - 00004ABC (0x46 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           substractGround         00004A77        computeADCs (main)
               stack 1 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004ABD - 00004ADF (0x23 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zerofill                00004ABD        init (main)
                                                   main (main)
                                                   radioConfigure (radio_2400)
                                                   readNextValue (main)
                                                   setByte (main)
                                                   setFloat (main)
                                                   softKick (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004AE0 - 00004B14 (0x35 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mymemcpy                00004AE0        Segment part 24 (flash)
                                                   Segment part 306 (main)
                                                   copyMac (main)
                                                   def_freq (main)
                                                   parseCommands (main)
                                                   parseGWPackage (main)
                                                   prepareData (main)
                                                   prepareJoinRequest (main)
                                                   prepareSpecial (main)
                                                   radioConfigure (radio_2400)
                                                   read_page (main)
                                                   setByte (main)
                                                   setFloat (main)
                                                   switchTo255 (main)
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004B15 - 00004B54 (0x40 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mymemcmp                00004B15        main (main)
                                                   parseCommands (main)
                                                   parseGWPackage (main)
               stack 1 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004B55 - 00004B98 (0x44 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           convS                   00004B55        computeADCs (main)
                                                   prepareCoeff (main)
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004B99 - 00004B9D (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   convS
                                                   convU
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004B9E - 00004BE3 (0x46 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           convU                   00004B9E        checkVin (main)
                                                   computeADCs (main)
                                                   prepareCoeff (main)
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
ISTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC8B - 0000FC8E (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   convS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_8000         0000FC8B 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C89 - 00004C8C (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   __Constant_8000
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC8F - 0000FC92 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   convS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff8001     0000FC8F 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C8D - 00004C90 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_ffff8001
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC93 - 0000FC96 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   convU
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_10000        0000FC93 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004C91 - 00004C94 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   __Constant_10000
    -------------------------------------------------------------------------
XDATA_I
  Segment part 15. TENTATIVE. Used definition from main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 16. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                     CODE      DATA      XDATA  IDATA    BIT
------                     ----      ----      -----  -----    ---
                          (Rel)  (Rel)  (Abs)  (Rel)  (Rel)  (Rel)
?ADD_XSTACK_DISP8            20
?ALLOC_XSTACK8               15
?CALL_IND                     2
?DEALLOC_XSTACK8             19
?FLT_ADD                    572
?FLT_DIV                    486
?FLT_LT                      76
?FLT_MUL                    384
?FLT_TEST_INF                21
?FLT_TEST_INF_R1             21
?FLT_TEST_NAN                15
?FLT_TEST_NAN_R1             15
?FLT_TEST_ZERO               10
?FLT_TEST_ZERO_R1            10
?FLT_TO_L                   143
?FUNC_ENTER_XDATA            95
?FUNC_LEAVE_XDATA            59
?L_ADD_TO_X                  19
?L_ADD_X                     19
?L_EQ_X                      21
?L_MOV_TO_X                  15
?L_MOV_X                     15
?L_MUL                      128
?L_NEG                       20
?L_SUB_FROM_X                20
?L_SUB_X                     24
?L_TO_FLT                   120
?MOVE_LONG8_XDATA_IDATA      13
?PUSH_XSTACK_I               17
?SC_DIV_MOD                  34
?SL_GT                       21
?SS_SHR                      16
?S_DIV_MOD                  154
?S_SHL                       19
?UC_JMP_IF_IN_RANGE          31
?UC_JMP_IF_VALUE             22
?UC_SWITCH_DENSE             54
?UC_SWITCH_SPARSE            42
?UL_GT_X                     16
?UL_SHR                      25
?US_SHR                      15
?XSTACK_DISP8                10
?cmain                       63
CSTARTUP                     20
  + common                    3
VIRTUAL_REGISTERS                    2                           8
aes                         129             3
dma                         188             4    135
flash                       189             2    131
  + shared                                  6
flashDmaTrigger               4
hal_power_clk_mgmt
  + shared                                  2
hal_wait                     12
hop                         234                   33
  + shared                                  1
main                     13 348            30    811
  + shared                                  1      4
radio_2400                  235                   45
utils                       518                   16
waitForClearThePage           6
N/A (command line)                  40           512    106
N/A (alignment)
----------               ------     --     --  -----    ---      -
Total:                   17 799     42     49  1 687    106      8
  + common                    3


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  02    mymemcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000008 00000001
  03      waitForClearThePage
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000000
  03      halFlashDmaTrigger
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000000
  02    initiateTransfer
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000014 00000000
  01  flashCallback
      | Stack used (prev) :  00000014 00000001
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014 00000005


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  01  armAdcs
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000 00000002


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  02    zerofill
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000003
  01  readNextValue
      | Stack used (prev) :  00000000 00000003
      | + function block  :  00000016 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000016 00000003


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  03      mymemcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000008 00000001
          |  Already listed
  04        mymemcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000008 00000001
            |  Already listed
  03      copyMac
          | Stack used (prev) :  00000008 00000001
          | + function block  :  00000008 00000000
  02    prepareSpecial
        | Stack used (prev) :  00000010 00000001
        | + function block  :  00000023 00000000
  01  prepareScaling
      | Stack used (prev) :  00000033 00000001
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000004B 00000001


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000004B 00000005
  01  __program_start
      | Stack used (prev) :  0000004B 00000005
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000004B 00000005


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000004B 00000005
  02    mymemcmp
        | Stack used (prev) :  0000004B 00000005
        | + function block  :  0000000A 00000000
  02    mymemcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000008 00000001
        |  Already listed
  02    zerofill
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000003
        |  Already listed
  02    reset
        | Stack used (prev) :  0000004B 00000005
        | + function block  :  00000000 00000002
  03      halWait
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  00000000 00000000
  02    quartz
        | Stack used (prev) :  0000004B 00000005
        | + function block  :  00000010 00000000
  03      tickWait
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  00000018 00000000
  02    longTickWait
        | Stack used (prev) :  00000063 00000005
        | + function block  :  00000000 00000002
  04        mymemcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000008 00000001
            |  Already listed
  04        mymemcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000008 00000001
            |  Already listed
  04        convU
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000F 00000000
  04        convS
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000F 00000000
  04        substractGround
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000D 00000000
  04        addDF
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000F 00000001
  04        computeAdjustment
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002E 00000000
  04        computeAdjustment
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002E 00000000
            |  Already listed
  04        computeAdjustment
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002E 00000000
            |  Already listed
  04        cube_coeff
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002E 00000000
  05          lin_coeff_t
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  00000026 00000000
  04        lin
            | Stack used (prev) :  00000071 00000005
            | + function block  :  0000003D 00000000
  04        lin_coeff
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002E 00000000
  04        convU
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000F 00000000
            |  Already listed
  04        kickOsc
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  00000017 00000002
  04        lin_coeff_t
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  00000026 00000000
            |  Already listed
  04        lin_coeff
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002E 00000000
            |  Already listed
  04        lin_coeff
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002E 00000000
            |  Already listed
  04        ov_startup
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  00000017 00000002
  04        oc2timer
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002A 00000000
  04        oc2timer
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002A 00000000
            |  Already listed
  04        oc2timer
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002A 00000000
            |  Already listed
  04        oc2timer
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002A 00000000
            |  Already listed
  04        oc2timer
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000002A 00000000
            |  Already listed
  04        zerofill
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000000 00000003
            |  Already listed
  07              mymemcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000008 00000001
                  |  Already listed
  07              zerofill
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000003
                  |  Already listed
  06            radioConfigure
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000008 00000000
  06            tickWait
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000018 00000000
                |  Already listed
  05          setupRadioDR
              | Stack used (prev) :  00000063 00000005
              | + function block  :  00000010 00000001
  04        setupRadio
            | Stack used (prev) :  00000073 00000006
            | + function block  :  0000000F 00000004
  05          mymemcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000008 00000001
              |  Already listed
  04        def_freq
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000F 00000000
  04        wait_aes
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  00000009 00000000
  04        load
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  00000009 00000002
  03      Recursive system consisting of
          | read_page
          | switchTo255
          | computeADCs
          | checkVin
          | softKick
          | Stack used (prev) :  000000AE 00000005
          | + function block  :  000000AD 0000000A
  03      receive
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000F 00000003
  03      receive
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000F 00000003
          |  Already listed
  03      receive
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000F 00000003
          |  Already listed
  04        mymemcmp
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000A 00000000
            |  Already listed
  04        mymemcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000008 00000001
            |  Already listed
  04        addDF
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000F 00000001
            |  Already listed
  05          mymemcmp
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  0000000A 00000000
              |  Already listed
  05          mymemcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000008 00000001
              |  Already listed
  05          reset
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  00000000 00000002
              |  Already listed
  06            mymemcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000008 00000001
                |  Already listed
  06            zerofill
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000000 00000003
                |  Already listed
  06            oc2timer
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  0000002A 00000000
                |  Already listed
  05          setFloat
              | Stack used (prev) :  00000075 00000005
              | + function block  :  00000033 00000000
  06            tickWait
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000018 00000000
                |  Already listed
  05          setInt
              | Stack used (prev) :  00000063 00000005
              | + function block  :  00000021 00000001
  06            reset
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000000 00000002
                |  Already listed
  06            tickWait
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000018 00000000
                |  Already listed
  06            tickWait
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000018 00000000
                |  Already listed
  06            initiateTransfer
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  05          savePB
              | Stack used (prev) :  00000063 00000007
              | + function block  :  0000000D 00000004
  06            mymemcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000008 00000001
                |  Already listed
  06            zerofill
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000000 00000003
                |  Already listed
  06            savePB
                | Stack used (prev) :  00000063 00000007
                | + function block  :  0000000D 00000004
                |  Already listed
  06            savePB
                | Stack used (prev) :  00000063 00000007
                | + function block  :  0000000D 00000004
                |  Already listed
  06            ov_startup
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000017 00000002
                |  Already listed
  06            ov_startup
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000017 00000002
                |  Already listed
  06            ov_startup
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000017 00000002
                |  Already listed
  06            Recursive system consisting of
                | read_page
                | switchTo255
                | computeADCs
                | checkVin
                | softKick
                | Stack used (prev) :  000000AE 00000005
                | + function block  :  000000AD 0000000A
                |  Already listed
  06            Recursive system consisting of
                | read_page
                | switchTo255
                | computeADCs
                | checkVin
                | softKick
                | Stack used (prev) :  000000AE 00000005
                | + function block  :  000000AD 0000000A
                |  Already listed
  06            setupRadio
                | Stack used (prev) :  00000073 00000006
                | + function block  :  0000000F 00000004
                |  Already listed
  06            setupRadio
                | Stack used (prev) :  00000073 00000006
                | + function block  :  0000000F 00000004
                |  Already listed
  06            setupRadio
                | Stack used (prev) :  00000073 00000006
                | + function block  :  0000000F 00000004
                |  Already listed
  06            oc2timer
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  0000002A 00000000
                |  Already listed
  06            oc2timer
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  0000002A 00000000
                |  Already listed
  06            oc2timer
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  0000002A 00000000
                |  Already listed
  06            setup_hopper
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  0000000F 00000001
  07              mymemcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000008 00000001
                  |  Already listed
  07              initiateTransfer
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000014 00000000
                  |  Already listed
  06            refreshTheFlash
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000000 00000002
  06            wait_aes
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000009 00000000
                |  Already listed
  06            load
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000009 00000002
                |  Already listed
  05          setByte
              | Stack used (prev) :  0000015B 0000000F
              | + function block  :  00000021 00000000
  05          tickWait
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  00000018 00000000
              |  Already listed
  05          setupRadio
              | Stack used (prev) :  00000073 00000006
              | + function block  :  0000000F 00000004
              |  Already listed
  05          setup_hopper
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  0000000F 00000001
              |  Already listed
  06            wait_aes
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000009 00000000
                |  Already listed
  06            load
                | Stack used (prev) :  0000004B 00000005
                | + function block  :  00000009 00000002
                |  Already listed
  05          code
              | Stack used (prev) :  00000054 00000007
              | + function block  :  00000014 00000000
  05          wait_aes
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  00000009 00000000
              |  Already listed
  05          load
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  00000009 00000002
              |  Already listed
  04        parseCommands
            | Stack used (prev) :  0000017C 0000000F
            | + function block  :  00000029 00000000
  04        receive
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000F 00000003
            |  Already listed
  06            setupRadio
                | Stack used (prev) :  00000073 00000006
                | + function block  :  0000000F 00000004
                |  Already listed
  06            setupRadioDR
                | Stack used (prev) :  00000063 00000005
                | + function block  :  00000010 00000001
                |  Already listed
  05          setupRepeater
              | Stack used (prev) :  00000082 0000000A
              | + function block  :  0000000F 00000004
  04        sendData
            | Stack used (prev) :  00000091 0000000E
            | + function block  :  0000000F 00000004
  04        sendData
            | Stack used (prev) :  00000091 0000000E
            | + function block  :  0000000F 00000004
            |  Already listed
  04        tickWait
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  00000018 00000000
            |  Already listed
  04        setupRepeater
            | Stack used (prev) :  00000082 0000000A
            | + function block  :  0000000F 00000004
            |  Already listed
  04        setupRepeater
            | Stack used (prev) :  00000082 0000000A
            | + function block  :  0000000F 00000004
            |  Already listed
  04        setupRepeater
            | Stack used (prev) :  00000082 0000000A
            | + function block  :  0000000F 00000004
            |  Already listed
  04        abs
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  0000000F 00000000
  04        code
            | Stack used (prev) :  00000054 00000007
            | + function block  :  00000014 00000000
            |  Already listed
  04        wait_aes
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  00000009 00000000
            |  Already listed
  04        load
            | Stack used (prev) :  0000004B 00000005
            | + function block  :  00000009 00000002
            |  Already listed
  03      parseGWPackage
          | Stack used (prev) :  000001A5 00000012
          | + function block  :  00000029 00000000
  03      sendData
          | Stack used (prev) :  00000091 0000000E
          | + function block  :  0000000F 00000004
          |  Already listed
  04        mymemcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000008 00000001
            |  Already listed
  04        copyMac
            | Stack used (prev) :  00000008 00000001
            | + function block  :  00000008 00000000
            |  Already listed
  05          code
              | Stack used (prev) :  00000054 00000007
              | + function block  :  00000014 00000000
              |  Already listed
  05          wait_aes
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  00000009 00000000
              |  Already listed
  05          load
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  00000009 00000002
              |  Already listed
  04        prepareTxBuffer
            | Stack used (prev) :  00000068 00000007
            | + function block  :  0000001E 00000000
  03      prepareJoinRequest
          | Stack used (prev) :  00000086 00000007
          | + function block  :  0000000B 00000004
  04        mymemcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000008 00000001
            |  Already listed
  04        Recursive system consisting of
            | read_page
            | switchTo255
            | computeADCs
            | checkVin
            | softKick
            | Stack used (prev) :  000000AE 00000005
            | + function block  :  000000AD 0000000A
            |  Already listed
  04        prepareScaling
            | Stack used (prev) :  00000033 00000001
            | + function block  :  00000018 00000000
            |  Already listed
  05          convU
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  0000000F 00000000
              |  Already listed
  05          convS
              | Stack used (prev) :  0000004B 00000005
              | + function block  :  0000000F 00000000
              |  Already listed
  05          prepareSpecial
              | Stack used (prev) :  00000010 00000001
              | + function block  :  00000023 00000000
              |  Already listed
  04        prepareCoeff
            | Stack used (prev) :  0000005A 00000005
            | + function block  :  0000002E 00000000
  04        copyMac
            | Stack used (prev) :  00000008 00000001
            | + function block  :  00000008 00000000
            |  Already listed
  04        prepareTxBuffer
            | Stack used (prev) :  00000068 00000007
            | + function block  :  0000001E 00000000
            |  Already listed
  03      prepareData
          | Stack used (prev) :  0000015B 0000000F
          | + function block  :  0000001B 00000000
  03      dec
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000B 00000002
  03      dec
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000B 00000002
          |  Already listed
  03      dec
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000B 00000002
          |  Already listed
  03      dec
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000B 00000002
          |  Already listed
  03      dec
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000B 00000002
          |  Already listed
  03      kickOsc
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  00000017 00000002
          |  Already listed
  03      Recursive system consisting of
          | read_page
          | switchTo255
          | computeADCs
          | checkVin
          | softKick
          | Stack used (prev) :  000000AE 00000005
          | + function block  :  000000AD 0000000A
          |  Already listed
  03      ov_startup
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  00000017 00000002
          |  Already listed
  03      Recursive system consisting of
          | read_page
          | switchTo255
          | computeADCs
          | checkVin
          | softKick
          | Stack used (prev) :  000000AE 00000005
          | + function block  :  000000AD 0000000A
          |  Already listed
  03      setupRepeater
          | Stack used (prev) :  00000082 0000000A
          | + function block  :  0000000F 00000004
          |  Already listed
  03      setupRepeater
          | Stack used (prev) :  00000082 0000000A
          | + function block  :  0000000F 00000004
          |  Already listed
  03      setupRepeater
          | Stack used (prev) :  00000082 0000000A
          | + function block  :  0000000F 00000004
          |  Already listed
  03      setupRadio
          | Stack used (prev) :  00000073 00000006
          | + function block  :  0000000F 00000004
          |  Already listed
  03      setupRadio
          | Stack used (prev) :  00000073 00000006
          | + function block  :  0000000F 00000004
          |  Already listed
  03      setupRadio
          | Stack used (prev) :  00000073 00000006
          | + function block  :  0000000F 00000004
          |  Already listed
  03      oc2timer
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000002A 00000000
          |  Already listed
  03      hop
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  00000000 00000002
  02    main_loop
        | Stack used (prev) :  000001CE 00000012
        | + function block  :  00000016 00000000
  02    checkMore
        | Stack used (prev) :  0000004B 00000005
        | + function block  :  00000009 00000000
  02    Recursive system consisting of
        | read_page
        | switchTo255
        | computeADCs
        | checkVin
        | softKick
        | Stack used (prev) :  000000AE 00000005
        | + function block  :  000000AD 0000000A
        |  Already listed
  03      zerofill
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000003
          |  Already listed
  03      setupRadio
          | Stack used (prev) :  00000073 00000006
          | + function block  :  0000000F 00000004
          |  Already listed
  03      def_freq
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000F 00000000
          |  Already listed
  03      setup_hopper
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  0000000F 00000001
          |  Already listed
  03      dmaRadioSetup
          | Stack used (prev) :  0000004B 00000005
          | + function block  :  00000000 00000002
  02    init
        | Stack used (prev) :  00000082 0000000A
        | + function block  :  0000001E 00000000
  02    Recursive system consisting of
        | read_page
        | switchTo255
        | computeADCs
        | checkVin
        | softKick
        | Stack used (prev) :  000000AE 00000005
        | + function block  :  000000AD 0000000A
        |  Already listed
  02    oc2timer
        | Stack used (prev) :  0000004B 00000005
        | + function block  :  0000002A 00000000
        |  Already listed
  02    wait_aes
        | Stack used (prev) :  0000004B 00000005
        | + function block  :  00000009 00000000
        |  Already listed
  02    load
        | Stack used (prev) :  0000004B 00000005
        | + function block  :  00000009 00000002
        |  Already listed
  01  main
      | Stack used (prev) :  000001E4 00000012
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000001E4 00000012




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000002           3   com    0
CSTART               CODE          00000800 - 0000085C          5D   rel    0
RCODE                CODE          0000085D - 00001381         B25   rel    0
NEAR_CODE            CODE          00001382 - 00004BE3        3862   rel    0
BDATA_ID             CODE               00004BE4                     dse    0
DATA_ID              CODE               00004BE4                     dse    0
IXDATA_ID            CODE               00004BE4                     dse    0
PDATA_ID             CODE               00004BE4                     dse    0
BIT_ID               CODE               00004BE4                     dse    0
IDATA_ID             CODE               00004BE4                     dse    0
XDATA_ID             CODE          00004BE4 - 00004C94          B1   rel    0
XDATA_ROM_C          CODE          00004C95 - 00004D86          F2   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
VREG                 DATA          00000021 - 00000040          20   rel    0
PSP                  DATA               00000041                     dse    0
XSP                  DATA          00000041 - 00000042           2   rel    0
SFR_AN               DATA          0000008F - 00000091           3   rel    0
                     DATA          0000009A - 0000009B           2 
                     DATA          000000A8 - 000000A8           1 
                     DATA          000000AB - 000000AE           4 
                     DATA          000000B1 - 000000B4           4 
                     DATA          000000B6 - 000000B6           1 
                     DATA          000000B8 - 000000B8           1 
                     DATA          000000BA - 000000BE           5 
                     DATA          000000C6 - 000000C6           1 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000CB - 000000CF           5 
                     DATA          000000D1 - 000000D6           6 
                     DATA          000000DA - 000000DB           2 
                     DATA          000000E1 - 000000E5           5 
                     DATA          000000E9 - 000000E9           1 
                     DATA          000000F1 - 000000F5           5 
                     DATA          000000FD - 000000FE           2 
XSTACK               XDATA         0000F600 - 0000F7FF         200   rel    0
XDATA_N              XDATA              0000F800                     dse    0
XDATA_Z              XDATA         0000F800 - 0000FBE5         3E6   rel    0
XDATA_I              XDATA         0000FBE6 - 0000FC96          B1   rel    0
ISTACK               IDATA         00000046 - 000000AF          6A   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 17 802 bytes of CODE  memory
     42 bytes of DATA  memory (+ 49 absolute )
  1 687 bytes of XDATA memory
    106 bytes of IDATA memory
      8 bits  of BIT   memory

Errors: none
Warnings: none

