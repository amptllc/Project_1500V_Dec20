###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

      1    000000          ;---------------------------------------------------
                           --------------------------
      2    000000          ;
      3    000000          ;       File:           iar_stack_enter_leave.s51
      4    000000          ;
      5    000000          ;       Version:        6.10
      6    000000          ;
      7    000000          ;       Created:        12/Mar/02 IANB
      8    000000          ;       Revised:
      9    000000          ;
     10    000000          ;
     11    000000          ;       Description:    Save registers on stack.
     12    000000          ;
     13    000000          ;       Calling convention:
     14    000000          ;       -------------------
     15    000000          ;
     16    000000          ;               Scratch registers:
     17    000000          ;                       A       Destroyed at enter &
                            leave
     18    000000          ;                       B       Contains bit
                            parameters (if any)
     19    000000          ;                       Carry   Destroyed at
                            enter
     20    000000          ;                       R0      Destroyed at enter &
                            leave
     21    000000          ;                       R1-R5   Can be register
                            parameters (if any)
     22    000000          ;
     23    000000          ;               Preserved registers:
     24    000000          ;                      *DPTR    Avoid re-load
     25    000000          ;                       R6-R7   Register variables
     26    000000          ;                       V0-Vx   Register variables
                            in IDATA
     27    000000          ;
     28    000000          ;               * DPTR is only preserved in XDATA
                            memory models.
     29    000000          ;
     30    000000          ;               ATTENTION!!! Carry bit MUST be
                            preserved in leave routines.
     31    000000          ;
     32    000000          ;
     33    000000          ;       REVISON INFORMATION
     34    000000          ;
     35    000000          ;       Log information is available at the end of
                            this file
     36    000000          ;---------------------------------------------------
                           --------------------------
     37    000000          
     38    000000          #include "iar_common.h"
     39    000000          
     40    000000          ;---------------------------------------------------
                           --------------------------
     41    000000          ;
     42    000000          ;       Function: ?FUNC_ENTER_OVERLAY
     43    000000          ;
     44    000000          ;       Description:
     45    000000          ;               Saves register R6 and R7 plus a
                            specified number of virtual
     46    000000          ;               registers on the machine stack.
     47    000000          ;
     48    000000          ;
     49    000000          ;               +------+
     50    000000          ;               |      | <-- FRAME
     51    000000          ;               + - - -+
     52    000000          ;               |  Vn  |
     53    000000          ;               |  :   |
     54    000000          ;               |  V0  |
     55    000000          ;               + - - -+
     56    000000          ;               |  VB  |
     57    000000          ;               + - - -+
     58    000000          ;               |  R6  |
     59    000000          ;               + - - -+
     60    000000          ;               |  R7  |
     61    000000          ;               +------+
     62    000000          ;
     63    000000          ;
     64    000000          ;       Register input:
     65    000000          ;               R0 Points to parameter (PRM) area,
                            where to save registers.
     66    000000          ;               A  The number of Virtual regs to
                            push.
     67    000000          ;
     68    000000          ;       Register output:
     69    000000          ;               A  = 0
     70    000000          ;               R6 = 0
     71    000000          ;               R0   Is undefined.
     72    000000          ;
     73    000000          ;       Multiple DPTR
     74    000000          ;               DPTR/DPS: unchanged
     75    000000          ;
     76    000000          ;       Stack usage: NA
     77    000000          ;
     78    000000          ;---------------------------------------------------
                           --------------------------
     79    000000          ;
     80    000000          ;                           FF
     81    000000          ;                           :
     82    000000          ;                           +------+
     83    000000          ; [Base(2), CFA_SP - A - 2] | RetH | (holds high
                            part of return address from start)
     84    000000          ;                           + - - -+
     85    000000          ; [Base(1), CFA_SP - A - 3] | RetL | (holds low part
                            of return address from start)
     86    000000          ;                           +------+
     87    000000          ; [Base(0)]                 |  xx  | <-- SP <--
                            CFA_SP
     88    000000          ;                           +------+
     89    000000          ;                           :
     90    000000          ;                           0
     91    000000          ;
     92    000000          
     93    000000                  MODULE  ?FUNC_ENTER_OVERLAY
     94    000000                  RSEG    RCODE:CODE:NOROOT
     95    000000                  PUBLIC  ?FUNC_ENTER_OVERLAY
     96    000000                  EXTERN  ?V0
     97    000000                  EXTERN  ?VB
     98    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
     98.1  000000          #ifdef __EXTENDED_DPTR__
     98.2  000000          #endif ; __EXTENDED_DPTR__
     98.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
     98.4  000000          #ifdef __DPTR_SEPARATE__
     98.5  000000          #ifdef __EXTENDED_DPTR__
     98.6  000000          #endif ; __EXTENDED_DPTR__
     98.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
     98.8  000000          #ifdef __EXTENDED_DPTR__
     98.9  000000          #endif ; __EXTENDED_DPTR__
     98.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
     98.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
     98.12 000000          #ifdef __EXTENDED_DPTR__
     98.13 000000          #endif ; __EXTENDED_DPTR__
     98.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
     98.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
     98.16 000000          #ifdef __EXTENDED_DPTR__
     98.17 000000          #endif ; __EXTENDED_DPTR__
     98.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
     98.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
     98.20 000000          #ifdef __EXTENDED_DPTR__
     98.21 000000          #endif ; __EXTENDED_DPTR__
     98.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
     98.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
     98.24 000000          #ifdef __EXTENDED_DPTR__
     98.25 000000          #endif ; __EXTENDED_DPTR__
     98.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
     98.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
     98.28 000000          #ifdef __EXTENDED_DPTR__
     98.29 000000          #endif ; __EXTENDED_DPTR__
     98.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
     98.31 000000          #endif ; __DPTR_SEPARATE__
     98.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
     98.33 000000                  ENDM
     99    000000          
    100    000000              cfi BLOCK ?FUNC_ENTER_OVERLAY Using cfi_common
    101    000000              cfi NOFUNCTION
    102    000000              cfi R0 Undefined
    103    000000              cfi R1 Undefined
    104    000000              cfi R2 Undefined
    105    000000              cfi R3 Undefined
    106    000000              cfi R4 Undefined
    107    000000              cfi R5 Undefined
    108    000000              cfi R6 Undefined
    109    000000              cfi R7 Undefined
    110    000000              cfi A  Undefined
    111    000000          
    112    000000          ?FUNC_ENTER_OVERLAY:
    113    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    115    000000          #endif ; __NUMBER_OF_DPTRS__
    116    000000          
    117    000000 CF               XCH     A,R7            ; save R6 and
                                                            R7
    118    000001 F6               MOV     @R0,A
    119    000002 08               INC     R0
    120    000003 EE               MOV     A,R6
    121    000004 F6               MOV     @R0,A
    122    000005 08               INC     R0
    123    000006          
    124    000006 A6..             MOV     @R0,?VB         ; save Bit
                                                            register
    125    000008 08               INC     R0
    126    000009          
    127    000009 E9               MOV     A,R1            ; save tmp
                                                            reg
    128    00000A C0E0             PUSH    A
    129    00000C              cfi CFA_MACHINE MACHINE_SP - 3
    130    00000C          
    131    00000C 79..             MOV     R1,#?V0
    132    00000E          Loop:   
    133    00000E E7               MOV     A,@R1
    134    00000F F6               MOV     @R0,A
    135    000010 08               INC     R0
    136    000011 09               INC     R1
    137    000012 DFFA             DJNZ    R7,Loop
    138    000014          
    139    000014 D0E0             POP     A
    140    000016              cfi CFA_MACHINE MACHINE_SP - 2
    141    000016 F9               MOV     R1,A
    142    000017          
    143    000017 22               RET
    144    000018          
    145    000018          #ifdef __BACKTRACE_TESTER__
    148    000018          #endif ; __BACKTRACE_TESTER__
    149    000018          
    150    000018              cfi ENDBLOCK ?FUNC_ENTER_OVERLAY
    151    000018                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?FUNC_ENTER_OVERLAY REL    CONST PUB UNTYP.       RCODE      0 
?RET                ABS    CONST UNTYP.           ASEG       Not solved 
?RET_EXT            ABS    CONST UNTYP.           ASEG       Not solved 
?RET_HIGH           ABS    CONST UNTYP.           ASEG       Not solved 
?RET_LOW            ABS    CONST UNTYP.           ASEG       Not solved 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?V_START            ABS    CONST UNTYP.           ASEG       Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BASEADDRESS         ABS    CONST UNTYP.           ASEG       Not solved 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
Base                ABS    CONST UNTYP.           ASEG       Not solved 
CFA_PSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CFA_SP              ABS    CONST UNTYP.           ASEG       Not solved 
CFA_XSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CODEALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
COMMON              ABS    CONST UNTYP.           ASEG       Not solved 
CONCAT              ABS    CONST UNTYP.           ASEG       Not solved 
DATAALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       Not solved 
DPTR0               ABS    CONST UNTYP.           ASEG       Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
ENDCOMMON           ABS    CONST UNTYP.           ASEG       Not solved 
ENDNAMES            ABS    CONST UNTYP.           ASEG       Not solved 
EXTENDS             ABS    CONST UNTYP.           ASEG       Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FRAMECELL           ABS    CONST UNTYP.           ASEG       Not solved 
Frame               ABS    CONST UNTYP.           ASEG       Not solved 
Loop                REL    CONST UNTYP.           RCODE      E 
NAMES               ABS    CONST UNTYP.           ASEG       Not solved 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               ABS    CONST UNTYP.           ASEG       Not solved 
PSPH                ABS    CONST UNTYP.           ASEG       Not solved 
PSPL                ABS    CONST UNTYP.           ASEG       Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RETH_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETL_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETURNADDRESS       ABS    CONST UNTYP.           ASEG       Not solved 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
Resource            ABS    CONST UNTYP.           ASEG       Not solved 
ResourceParts       ABS    CONST UNTYP.           ASEG       Not solved 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SameValue           ABS    CONST UNTYP.           ASEG       Not solved 
StackFrame          ABS    CONST UNTYP.           ASEG       Not solved 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               ABS    CONST UNTYP.           ASEG       Not solved 
Undefined           ABS    CONST UNTYP.           ASEG       Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
V0                  ABS    CONST UNTYP.           ASEG       Not solved 
V1                  ABS    CONST UNTYP.           ASEG       Not solved 
V10                 ABS    CONST UNTYP.           ASEG       Not solved 
V11                 ABS    CONST UNTYP.           ASEG       Not solved 
V12                 ABS    CONST UNTYP.           ASEG       Not solved 
V13                 ABS    CONST UNTYP.           ASEG       Not solved 
V14                 ABS    CONST UNTYP.           ASEG       Not solved 
V15                 ABS    CONST UNTYP.           ASEG       Not solved 
V16                 ABS    CONST UNTYP.           ASEG       Not solved 
V17                 ABS    CONST UNTYP.           ASEG       Not solved 
V18                 ABS    CONST UNTYP.           ASEG       Not solved 
V19                 ABS    CONST UNTYP.           ASEG       Not solved 
V2                  ABS    CONST UNTYP.           ASEG       Not solved 
V20                 ABS    CONST UNTYP.           ASEG       Not solved 
V21                 ABS    CONST UNTYP.           ASEG       Not solved 
V22                 ABS    CONST UNTYP.           ASEG       Not solved 
V23                 ABS    CONST UNTYP.           ASEG       Not solved 
V24                 ABS    CONST UNTYP.           ASEG       Not solved 
V25                 ABS    CONST UNTYP.           ASEG       Not solved 
V26                 ABS    CONST UNTYP.           ASEG       Not solved 
V27                 ABS    CONST UNTYP.           ASEG       Not solved 
V28                 ABS    CONST UNTYP.           ASEG       Not solved 
V29                 ABS    CONST UNTYP.           ASEG       Not solved 
V3                  ABS    CONST UNTYP.           ASEG       Not solved 
V30                 ABS    CONST UNTYP.           ASEG       Not solved 
V31                 ABS    CONST UNTYP.           ASEG       Not solved 
V4                  ABS    CONST UNTYP.           ASEG       Not solved 
V5                  ABS    CONST UNTYP.           ASEG       Not solved 
V6                  ABS    CONST UNTYP.           ASEG       Not solved 
V7                  ABS    CONST UNTYP.           ASEG       Not solved 
V8                  ABS    CONST UNTYP.           ASEG       Not solved 
V9                  ABS    CONST UNTYP.           ASEG       Not solved 
VB                  ABS    CONST UNTYP.           ASEG       Not solved 
VirtualResource     ABS    CONST UNTYP.           ASEG       Not solved 
XSP16               ABS    CONST UNTYP.           ASEG       Not solved 
XSPH                ABS    CONST UNTYP.           ASEG       Not solved 
XSPL                ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_common   ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_names    ABS    CONST UNTYP.           ASEG       Not solved 
cfi_common          ABS    CONST UNTYP.           ASEG       Not solved 
cfi_names           ABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_commonABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_namesABS    CONST UNTYP.           ASEG       Not solved 
samevalue           ABS    CONST UNTYP.           ASEG       Not solved 
sub                 ABS    CONST UNTYP.           ASEG       Not solved 
undefined           ABS    CONST UNTYP.           ASEG       Not solved 


##############################
#          CRC:ED84          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 24          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    152    000000          
    153    000000          ;---------------------------------------------------
                           --------------------------
    154    000000          ;
    155    000000          ;       Function: ?FUNC_LEAVE_OVERLAY
    156    000000          ;
    157    000000          ;       Description:
    158    000000          ;               Restore register R6, R7 and
                            ?BREG_SEG plus a specified
    159    000000          ;               number of virtual registers on the
                            machine stack.
    160    000000          ;
    161    000000          ;               +------+
    162    000000          ;               |      | <-- FRAME
    163    000000          ;               + - - -+
    164    000000          ;               |  Vn  |
    165    000000          ;               |  :   |
    166    000000          ;               |  V0  |
    167    000000          ;               + - - -+
    168    000000          ;               |  VB  |
    169    000000          ;               + - - -+
    170    000000          ;               |  R6  |
    171    000000          ;               + - - -+
    172    000000          ;               |  R7  |
    173    000000          ;               +------+
    174    000000          ;
    175    000000          ;
    176    000000          ;       Register input:
    177    000000          ;               R0  Points to parameter (PRM) area,
                            from where to restore registers.
    178    000000          ;               A  The number of Virtual regs to
                            push.
    179    000000          ;
    180    000000          ;       Register output:
    181    000000          ;               A  = undefined.
    182    000000          ;               R7 = restored value.
    183    000000          ;               R0   Is undefined.
    184    000000          ;
    185    000000          ;       Multiple DPTR
    186    000000          ;               DPTR/DPS: unchanged
    187    000000          ;
    188    000000          ;       Stack usage: NA
    189    000000          ;
    190    000000          ;---------------------------------------------------
                           --------------------------
    191    000000                  MODULE  ?FUNC_LEAVE_OVERLAY
    192    000000                  RSEG    RCODE:CODE:NOROOT
    193    000000                  PUBLIC  ?FUNC_LEAVE_OVERLAY
    194    000000                  EXTERN  ?V0
    195    000000                  EXTERN  ?VB
    196    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    196.1  000000          #ifdef __EXTENDED_DPTR__
    196.2  000000          #endif ; __EXTENDED_DPTR__
    196.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    196.4  000000          #ifdef __DPTR_SEPARATE__
    196.5  000000          #ifdef __EXTENDED_DPTR__
    196.6  000000          #endif ; __EXTENDED_DPTR__
    196.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    196.8  000000          #ifdef __EXTENDED_DPTR__
    196.9  000000          #endif ; __EXTENDED_DPTR__
    196.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    196.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    196.12 000000          #ifdef __EXTENDED_DPTR__
    196.13 000000          #endif ; __EXTENDED_DPTR__
    196.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    196.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    196.16 000000          #ifdef __EXTENDED_DPTR__
    196.17 000000          #endif ; __EXTENDED_DPTR__
    196.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    196.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    196.20 000000          #ifdef __EXTENDED_DPTR__
    196.21 000000          #endif ; __EXTENDED_DPTR__
    196.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    196.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    196.24 000000          #ifdef __EXTENDED_DPTR__
    196.25 000000          #endif ; __EXTENDED_DPTR__
    196.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    196.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    196.28 000000          #ifdef __EXTENDED_DPTR__
    196.29 000000          #endif ; __EXTENDED_DPTR__
    196.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    196.31 000000          #endif ; __DPTR_SEPARATE__
    196.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    196.33 000000                  ENDM
    197    000000          
    198    000000              cfi BLOCK ?FUNC_LEAVE_OVERLAY Using cfi_common
    199    000000              cfi NOFUNCTION
    200    000000              cfi A     Undefined
    201    000000          
    202    000000          ?FUNC_LEAVE_OVERLAY:
    203    000000 CA               XCH     A,R2
    204    000001 C0E0             PUSH    A
    205    000003              cfi CFA_MACHINE MACHINE_SP - 3
    206    000003 E9               MOV     A,R1            ; save tmp
                                                            reg
    207    000004 C0E0             PUSH    A
    208    000006              cfi CFA_MACHINE MACHINE_SP - 4
    209    000006          
    210    000006 E6               MOV     A,@R0
    211    000007 FF               MOV     R7,A
    212    000008 08               INC     R0
    213    000009 E6               MOV     A,@R0
    214    00000A FE               MOV     R6,A
    215    00000B 08               INC     R0
    216    00000C          
    217    00000C 86..             MOV     ?VB,@R0 ; restore Bit register
    218    00000E 08               INC     R0
    219    00000F          
    220    00000F 79..             MOV     R1,#?V0
    221    000011          Loop:   
    222    000011 E6               MOV     A,@R0
    223    000012 F7               MOV     @R1,A
    224    000013 09               INC     R1
    225    000014 08               INC     R0
    226    000015 DAFA             DJNZ    R2,Loop
    227    000017          
    228    000017 D0E0             POP     A
    229    000019              cfi CFA_MACHINE MACHINE_SP - 3
    230    000019 F9               MOV     R1,A
    231    00001A D0E0             POP     A
    232    00001C              cfi CFA_MACHINE MACHINE_SP - 2
    233    00001C FA               MOV     R2,A
    234    00001D          
    235    00001D          #if  (__NUMBER_OF_DPTRS__ > 1)
    237    00001D          #endif
    238    00001D 22               RET
    239    00001E          
    240    00001E          #ifdef __BACKTRACE_TESTER__
    243    00001E          #endif ; __BACKTRACE_TESTER__
    244    00001E          
    245    00001E              cfi ENDBLOCK ?FUNC_LEAVE_OVERLAY
    246    00001E                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?FUNC_LEAVE_OVERLAY REL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      11 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:6D34          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 30          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    247    000000          
    248    000000          
    249    000000          ;---------------------------------------------------
                           --------------------------
    250    000000          ;
    251    000000          ;       Function: ?FUNC_ENTER_SP
    252    000000          ;
    253    000000          ;       Description:
    254    000000          ;               Saves register R6 and R7 plus a
                            specified number of virtual
    255    000000          ;               registers on the machine stack.
    256    000000          ;
    257    000000          ;                  FF
    258    000000          ;                  :
    259    000000          ;               +------+
    260    000000          ;       CFA --> |  Vn  | <-- SP end, n = A
                            in
    261    000000          ;               + - - -+
    262    000000          ;                :  :  :
    263    000000          ;               + - - -+
    264    000000          ;               |  V1  |
    265    000000          ;               + - - -+
    266    000000          ;               |  V0  |
    267    000000          ;               + - - -+
    268    000000          ;               |  VB  |
    269    000000          ;               + - - -+
    270    000000          ;               |  R7  | <-- SP begin
    271    000000          ;               + - - -+
    272    000000          ;               |  R6  |
    273    000000          ;               + - - -+
    274    000000          ;               | xxxx |
    275    000000          ;               +------+
    276    000000          ;                  :
    277    000000          ;                  0
    278    000000          ;
    279    000000          ;       Register input:
    280    000000          ;               A  = Number of virtual registers to
                            save.
    281    000000          ;
    282    000000          ;       Register output:
    283    000000          ;               SP = SP+A
    284    000000          ;               A  = 0
    285    000000          ;               R6 = 0
    286    000000          ;               R0 = Undefined.
    287    000000          ;               DPTR0  = The return address from
                            this function.
    288    000000          ;
    289    000000          ;       Multiple DPTR
    290    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
    291    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    292    000000          ;
    293    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
    294    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    295    000000          ;
    296    000000          ;       Stack usage: NA
    297    000000          ;
    298    000000          ;---------------------------------------------------
                           --------------------------
    299    000000                  MODULE  ?FUNC_ENTER_SP
    300    000000                  RSEG    RCODE:CODE:NOROOT
    301    000000                  PUBLIC  ?FUNC_ENTER_SP
    302    000000                  EXTERN  ?VB
    303    000000                  EXTERN  ?V0
    304    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    304.1  000000          #ifdef __EXTENDED_DPTR__
    304.2  000000          #endif ; __EXTENDED_DPTR__
    304.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    304.4  000000          #ifdef __DPTR_SEPARATE__
    304.5  000000          #ifdef __EXTENDED_DPTR__
    304.6  000000          #endif ; __EXTENDED_DPTR__
    304.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    304.8  000000          #ifdef __EXTENDED_DPTR__
    304.9  000000          #endif ; __EXTENDED_DPTR__
    304.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    304.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    304.12 000000          #ifdef __EXTENDED_DPTR__
    304.13 000000          #endif ; __EXTENDED_DPTR__
    304.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    304.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    304.16 000000          #ifdef __EXTENDED_DPTR__
    304.17 000000          #endif ; __EXTENDED_DPTR__
    304.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    304.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    304.20 000000          #ifdef __EXTENDED_DPTR__
    304.21 000000          #endif ; __EXTENDED_DPTR__
    304.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    304.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    304.24 000000          #ifdef __EXTENDED_DPTR__
    304.25 000000          #endif ; __EXTENDED_DPTR__
    304.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    304.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    304.28 000000          #ifdef __EXTENDED_DPTR__
    304.29 000000          #endif ; __EXTENDED_DPTR__
    304.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    304.31 000000          #endif ; __DPTR_SEPARATE__
    304.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    304.33 000000                  ENDM
    305    000000          
    306    000000              cfi BLOCK ?FUNC_ENTER_SP Using cfi_common
    307    000000              cfi NOFUNCTION
    308    000000              cfi A     Undefined
    309    000000              cfi B     Undefined
    310    000000              cfi VB    Undefined
    311    000000              cfi R0    Undefined
    312    000000              cfi R1    Undefined
    313    000000              cfi R2    Undefined
    314    000000              cfi R3    Undefined
    315    000000              cfi R4    Undefined
    316    000000              cfi R5    Undefined
    317    000000              cfi R6    Undefined
    318    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    318.1  000000                  cfi DPTR0 Undefined
    318.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    318.3  000000          #endif
    318.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    318.5  000000          #endif
    318.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    318.7  000000          #endif
    318.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    318.9  000000          #endif
    318.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    318.11 000000          #endif
    318.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    318.13 000000          #endif
    318.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    318.15 000000          #endif
    318.16 000000                  cfi DPL0 Undefined
    318.17 000000                  cfi DPH0 Undefined
    318.18 000000          #ifdef __EXTENDED_DPTR__
    318.19 000000          #endif
    318.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    318.21 000000          #ifdef __EXTENDED_DPTR__
    318.22 000000          #endif
    318.23 000000          #endif
    318.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    318.25 000000          #ifdef __EXTENDED_DPTR__
    318.26 000000          #endif
    318.27 000000          #endif
    318.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    318.29 000000          #ifdef __EXTENDED_DPTR__
    318.30 000000          #endif
    318.31 000000          #endif
    318.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    318.33 000000          #ifdef __EXTENDED_DPTR__
    318.34 000000          #endif
    318.35 000000          #endif
    318.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    318.37 000000          #ifdef __EXTENDED_DPTR__
    318.38 000000          #endif
    318.39 000000          #endif
    318.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    318.41 000000          #ifdef __EXTENDED_DPTR__
    318.42 000000          #endif
    318.43 000000          #endif
    318.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    318.45 000000          #ifdef __EXTENDED_DPTR__
    318.46 000000          #endif
    318.47 000000          #endif
    318.48 000000                  ENDM
    319    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    321    000000            #if (defined(__EXTENDED_STACK__))
    325    000000            #else
    329    000000            #endif
    330    000000          #else
    331    000000            cfi CFA_MACHINE  add(MACHINE_SP,add(A,1))
    332    000000            #if (defined(__EXTENDED_STACK__))
    335    000000            #else
    336    000000              cfi ?RET_HIGH load(1, IDATA, sub(sub(CFA_MACHINE
                           , A), 1))
    337    000000              cfi ?RET_LOW  load(1, IDATA, sub(sub(CFA_MACHINE
                           , A), 2))
    338    000000            #endif
    339    000000          #endif
    340    000000          
    341    000000          ?FUNC_ENTER_SP:
    342    000000          
    343    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    345    000000          #endif ; __NUMBER_OF_DPTRS__
    346    000000          
    347    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    357    000000          #else
    358    000000          #if ( defined(__EXTENDED_DPTR__))
    360    000000          #endif
    361    000000 D083             POP     DPH
    362    000002              cfi CFA_MACHINE ADD(SUB(MACHINE_SP, 1), ADD(A,
                            3))
    363    000002              cfi ?RET_HIGH DPH0
    364    000002 D082             POP     DPL
    365    000004              cfi CFA_MACHINE ADD(SUB(MACHINE_SP, 0), ADD(A,
                            3))
    366    000004              cfi ?RET_LOW DPL0
    367    000004          #endif
    368    000004          
    369    000004 CE               XCH     A,R6
    370    000005              cfi CFA_MACHINE ADD(SUB(MACHINE_SP, 0), ADD(R6,
                            3))
    371    000005          
    372    000005 C0E0             PUSH    A
    373    000007              cfi CFA_MACHINE ADD(SUB(MACHINE_SP, 1), ADD(R6,
                            3))
    374    000007 EF               MOV     A,R7
    375    000008 C0E0             PUSH    A
    376    00000A              cfi CFA_MACHINE ADD(SUB(MACHINE_SP, 2), ADD(R6,
                            3))
    377    00000A          
    378    00000A C0..             PUSH    ?VB
    379    00000C              cfi CFA_MACHINE ADD(SUB(MACHINE_SP, 3), ADD(R6,
                            3))
    380    00000C 78..             MOV     R0,#?V0
    381    00000E          
    382    00000E E6       Loop:   MOV     A,@R0
    383    00000F 08               INC     R0
    384    000010 C0E0             PUSH    A
    385    000012              cfi CFA_MACHINE add(sub(MACHINE_SP, 4), add(R6,
                            3))
    386    000012 DEFA             DJNZ    R6,Loop
    387    000014              cfi CFA_MACHINE MACHINE_SP + 0
    388    000014 E4               CLR     A
    389    000015 73               JMP     @A+DPTR
    390    000016          
    391    000016          #ifdef __BACKTRACE_TESTER__
    394    000016          #endif ; __BACKTRACE_TESTER__
    395    000016          
    396    000016              cfi ENDBLOCK ?FUNC_ENTER_SP
    397    000016                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?FUNC_ENTER_SP      REL    CONST PUB UNTYP.       RCODE      0 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
ADD                 REL    CONST UNTYP.           RCODE      Not solved 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      E 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SUB                 REL    CONST UNTYP.           RCODE      Not solved 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
VB                  REL    CONST UNTYP.           RCODE      Not solved 
add                 REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:29B5          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 22          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    398    000000          
    399    000000          ;---------------------------------------------------
                           --------------------------
    400    000000          ;
    401    000000          ;       Function: ?FUNC_LEAVE_SP
    402    000000          ;
    403    000000          ;       Description:
    404    000000          ;               Restore register R6 and R7 plus a
                            specified number of virtual
    405    000000          ;               registers from the machine
                            stack.
    406    000000          ;
    407    000000          ;                   FF
    408    000000          ;                   :
    409    000000          ;               +------ +
    410    000000          ;               |  Vn   | <-- SP begin, n = R7
                            in
    411    000000          ;               + - - - +
    412    000000          ;                :  :  :
    413    000000          ;               + - - - +
    414    000000          ;               |  V1   |
    415    000000          ;               + - - - +
    416    000000          ;               |  V0   |
    417    000000          ;               + - - - +
    418    000000          ;               |  VB   |
    419    000000          ;               + - - - +
    420    000000          ;               |  R7   |
    421    000000          ;               + - - - +
    422    000000          ;               |  R6   |
    423    000000          ;               + - - - +
    424    000000          ;             ( |  retx | ) retx may or may not
                            exist.
    425    000000          ;             ( + - - - + )
    426    000000          ;               |  reth | <-- SP end (before
                            return)
    427    000000          ;               + - - - +
    428    000000          ;               |  retl |
    429    000000          ;               + - - - +
    430    000000          ;       CFA --> | xxxxx |
    431    000000          ;               +-------+
    432    000000          ;                   :
    433    000000          ;                   00
    434    000000          ;
    435    000000          ;       Register input:
    436    000000          ;               R7 = Number of virtual registers to
                            restore.
    437    000000          ;
    438    000000          ;       Register output:
    439    000000          ;               SP = SP-R7
    440    000000          ;               R0 = R0-R7
    441    000000          ;               R6 = Restored value
    442    000000          ;               R7 = Restored value
    443    000000          ;               A  = R6
    444    000000          ;
    445    000000          ;       Multiple DPTR
    446    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
    447    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
    448    000000          ;
    449    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
    450    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
    451    000000          ;
    452    000000          ;       Stack usage: NA
    453    000000          ;
    454    000000          ;---------------------------------------------------
                           --------------------------
    455    000000          
    580    000000          
    581    000000                  leave_SP BANKED
    581.1  000000                  MODULE  ?BANKED_LEAVE_SP
    581.2  000000                  EXTERN  ?VB
    581.3  000000                  EXTERN  ?V0
    581    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    581.1  000000          #ifdef __EXTENDED_DPTR__
    581.2  000000          #endif ; __EXTENDED_DPTR__
    581.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    581.4  000000          #ifdef __DPTR_SEPARATE__
    581.5  000000          #ifdef __EXTENDED_DPTR__
    581.6  000000          #endif ; __EXTENDED_DPTR__
    581.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    581.8  000000          #ifdef __EXTENDED_DPTR__
    581.9  000000          #endif ; __EXTENDED_DPTR__
    581.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    581.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    581.12 000000          #ifdef __EXTENDED_DPTR__
    581.13 000000          #endif ; __EXTENDED_DPTR__
    581.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    581.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    581.16 000000          #ifdef __EXTENDED_DPTR__
    581.17 000000          #endif ; __EXTENDED_DPTR__
    581.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    581.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    581.20 000000          #ifdef __EXTENDED_DPTR__
    581.21 000000          #endif ; __EXTENDED_DPTR__
    581.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    581.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    581.24 000000          #ifdef __EXTENDED_DPTR__
    581.25 000000          #endif ; __EXTENDED_DPTR__
    581.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    581.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    581.28 000000          #ifdef __EXTENDED_DPTR__
    581.29 000000          #endif ; __EXTENDED_DPTR__
    581.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    581.31 000000          #endif ; __DPTR_SEPARATE__
    581.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    581.33 000000                  ENDM
    581.34 000000                  IF      'BANKED'='BANKED'
    581.35 000000                  EXTERN  ?BRET
    581.36 000000                  ENDIF
    581.37 000000          
    581.38 000000                  RSEG    RCODE:CODE:NOROOT
    581.39 000000                  PUBLIC  ?BANKED_LEAVE_SP
    581.40 000000              cfi BLOCK ?BANKED_LEAVE_SP USING cfi_common
    581.41 000000              cfi NOFUNCTION
    581.42 000000              cfi A     Undefined
    581.43 000000              cfi B     Undefined
    581.44 000000              cfi VB    Undefined
    581.45 000000              cfi R0    Undefined
    581.46 000000              cfi R1    Undefined
    581.47 000000              cfi R2    Undefined
    581.48 000000              cfi R3    Undefined
    581.49 000000              cfi R4    Undefined
    581.50 000000              cfi R5    Undefined
    581.51 000000              cfi R6    Undefined
    581.52 000000              cfi R7    Undefined
    581    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    581.1  000000                  cfi DPTR0 Undefined
    581.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    581.3  000000          #endif
    581.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    581.5  000000          #endif
    581.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    581.7  000000          #endif
    581.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    581.9  000000          #endif
    581.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    581.11 000000          #endif
    581.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    581.13 000000          #endif
    581.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    581.15 000000          #endif
    581.16 000000                  cfi DPL0 Undefined
    581.17 000000                  cfi DPH0 Undefined
    581.18 000000          #ifdef __EXTENDED_DPTR__
    581.19 000000          #endif
    581.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    581.21 000000          #ifdef __EXTENDED_DPTR__
    581.22 000000          #endif
    581.23 000000          #endif
    581.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    581.25 000000          #ifdef __EXTENDED_DPTR__
    581.26 000000          #endif
    581.27 000000          #endif
    581.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    581.29 000000          #ifdef __EXTENDED_DPTR__
    581.30 000000          #endif
    581.31 000000          #endif
    581.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    581.33 000000          #ifdef __EXTENDED_DPTR__
    581.34 000000          #endif
    581.35 000000          #endif
    581.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    581.37 000000          #ifdef __EXTENDED_DPTR__
    581.38 000000          #endif
    581.39 000000          #endif
    581.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    581.41 000000          #ifdef __EXTENDED_DPTR__
    581.42 000000          #endif
    581.43 000000          #endif
    581.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    581.45 000000          #ifdef __EXTENDED_DPTR__
    581.46 000000          #endif
    581.47 000000          #endif
    581.48 000000                  ENDM
    581.49 000000          #if   (__CODE_MODEL__ == __CM_BANKED__)
    581.50 000000          #else
    581.51 000000              cfi CFA_MACHINE  sub(MACHINE_SP,add(add(3,__SIZE
                           _OF_RETADDR__),R7))
    581.52 000000          #endif
    581.53 000000          #if (__CORE__ == __CORE_EXTENDED1__)
    581.54 000000            #if (defined(__EXTENDED_STACK__))
    581.55 000000            #else
    581.56 000000            #endif
    581.57 000000          #else
    581.58 000000            #if (defined(__EXTENDED_STACK__))
    581.59 000000            #else
    581.60 000000              cfi ?RET_HIGH load(1, IDATA, add(CFA_MACHINE,
                            2))
    581.61 000000              cfi ?RET_LOW  load(1, IDATA, add(CFA_MACHINE,
                            1))
    581.62 000000            #endif
    581.63 000000          #endif
    581.64 000000          
    581.65 000000          ?BANKED_LEAVE_SP:
    581.66 000000          ;; Here we describe if Vx has been pushed yet.
    581.67 000000          ;; R6 goes from NrOfVRegs to 0
    581.68 000000          ;; R0 - VStart goes from 0 to NrOfVRegs
    581.69 000000          ;;
    581.70 000000 C0D0             PUSH    PSW     ; Preserves carry
    581.71 000002          #if   (__CODE_MODEL__ == __CM_BANKED__)
    581.72 000002          #else
    581.73 000002             cfi CFA_MACHINE  sub(MACHINE_SP,add(add(4,__SIZE_
                           OF_RETADDR__),R7))
    581.74 000002          #endif
    581.75 000002 74..             MOV     A,#?V0 - 1
    581.76 000004 2F               ADD     A,R7
    581.77 000005 D0D0             POP     PSW     ; Preserves carry
    581.78 000007          #if   (__CODE_MODEL__ == __CM_BANKED__)
    581.79 000007          #else
    581.80 000007             cfi CFA_MACHINE  sub(MACHINE_SP,add(add(3,__SIZE_
                           OF_RETADDR__),R7))
    581.81 000007          #endif
    581.82 000007 F8               MOV     R0,A    ; R0 now points at the last
                                                    virtual register to
                                                    restore.
    581.83 000008 D0E0     Loop:   POP     A
    581.84 00000A          #if   (__CODE_MODEL__ == __CM_BANKED__)
    581.85 00000A          #else
    581.86 00000A             cfi CFA_MACHINE  sub(MACHINE_SP,add(add(2,__SIZE_
                           OF_RETADDR__),R7))
    581.87 00000A          #endif
    581.88 00000A F6               MOV     @R0,A
    581.89 00000B 18               DEC     R0
    581.90 00000C DFFA             DJNZ    R7,Loop
    581.91 00000E          #if   (__CODE_MODEL__ == __CM_BANKED__)
    581.92 00000E          #else
    581.93 00000E             cfi CFA_MACHINE  sub(MACHINE_SP,add(3,__SIZE_OF_R
                           ETADDR__)) ; R7 is now 0
    581.94 00000E          #endif
    581.95 00000E D0..             POP     ?VB
    581.96 000010          #if   (__CODE_MODEL__ == __CM_BANKED__)
    581.97 000010          #else
    581.98 000010             cfi CFA_MACHINE  sub(MACHINE_SP,add(2,__SIZE_OF_R
                           ETADDR__))
    581.99 000010          #endif
    581.100 000010 D0E0             POP     A
    581.101 000012          #if   (__CODE_MODEL__ == __CM_BANKED__)
    581.102 000012          #else
    581.103 000012             cfi CFA_MACHINE  sub(MACHINE_SP,add(1,__SIZE_OF_
                           RETADDR__))
    581.104 000012          #endif
    581.105 000012 FF               MOV     R7,A
    581.106 000013 D0E0             POP     A
    581.107 000015          #if   (__CODE_MODEL__ == __CM_BANKED__)
    581.108 000015          #else
    581.109 000015             cfi CFA_MACHINE  sub(MACHINE_SP, __SIZE_OF_RETAD
                           DR__)
    581.110 000015          #endif
    581.111 000015 FE               MOV     R6,A
    581.112 000016          
    581.113 000016          #if  (__NUMBER_OF_DPTRS__ > 1)
    581.114 000016          #endif
    581.115 000016          
    581.116 000016                  IF      'BANKED'='BANKED'
    581.117 000016 02....           LJMP    ?BRET
    581.118 000019                  ELSE
    581.119 000019                  RET
    581.120 000019                  ENDIF
    581.121 000019          
    581.122 000019          #ifdef __BACKTRACE_TESTER__
    581.123 000019          #endif ; __BACKTRACE_TESTER__
    581.124 000019          
    581.125 000019              cfi ENDBLOCK ?BANKED_LEAVE_SP
    581.126 000019                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_SP             MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?BANKED_LEAVE_SP    REL    CONST PUB UNTYP.       RCODE      0 
?BRET               ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BANKED              ABS    CONST UNTYP.           ASEG       Not solved 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      8 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
VB                  REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
add                 REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:D03F          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 25          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    581.127 000000          
    581.128 000000                  ENDM
    582    000000                  leave_SP FUNC
    582.1  000000                  MODULE  ?FUNC_LEAVE_SP
    582.2  000000                  EXTERN  ?VB
    582.3  000000                  EXTERN  ?V0
    582    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    582.1  000000          #ifdef __EXTENDED_DPTR__
    582.2  000000          #endif ; __EXTENDED_DPTR__
    582.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    582.4  000000          #ifdef __DPTR_SEPARATE__
    582.5  000000          #ifdef __EXTENDED_DPTR__
    582.6  000000          #endif ; __EXTENDED_DPTR__
    582.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    582.8  000000          #ifdef __EXTENDED_DPTR__
    582.9  000000          #endif ; __EXTENDED_DPTR__
    582.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    582.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    582.12 000000          #ifdef __EXTENDED_DPTR__
    582.13 000000          #endif ; __EXTENDED_DPTR__
    582.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    582.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    582.16 000000          #ifdef __EXTENDED_DPTR__
    582.17 000000          #endif ; __EXTENDED_DPTR__
    582.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    582.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    582.20 000000          #ifdef __EXTENDED_DPTR__
    582.21 000000          #endif ; __EXTENDED_DPTR__
    582.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    582.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    582.24 000000          #ifdef __EXTENDED_DPTR__
    582.25 000000          #endif ; __EXTENDED_DPTR__
    582.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    582.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    582.28 000000          #ifdef __EXTENDED_DPTR__
    582.29 000000          #endif ; __EXTENDED_DPTR__
    582.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    582.31 000000          #endif ; __DPTR_SEPARATE__
    582.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    582.33 000000                  ENDM
    582.34 000000                  IF      'FUNC'='BANKED'
    582.35 000000                  EXTERN  ?BRET
    582.36 000000                  ENDIF
    582.37 000000          
    582.38 000000                  RSEG    RCODE:CODE:NOROOT
    582.39 000000                  PUBLIC  ?FUNC_LEAVE_SP
    582.40 000000              cfi BLOCK ?FUNC_LEAVE_SP USING cfi_common
    582.41 000000              cfi NOFUNCTION
    582.42 000000              cfi A     Undefined
    582.43 000000              cfi B     Undefined
    582.44 000000              cfi VB    Undefined
    582.45 000000              cfi R0    Undefined
    582.46 000000              cfi R1    Undefined
    582.47 000000              cfi R2    Undefined
    582.48 000000              cfi R3    Undefined
    582.49 000000              cfi R4    Undefined
    582.50 000000              cfi R5    Undefined
    582.51 000000              cfi R6    Undefined
    582.52 000000              cfi R7    Undefined
    582    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    582.1  000000                  cfi DPTR0 Undefined
    582.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    582.3  000000          #endif
    582.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    582.5  000000          #endif
    582.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    582.7  000000          #endif
    582.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    582.9  000000          #endif
    582.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    582.11 000000          #endif
    582.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    582.13 000000          #endif
    582.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    582.15 000000          #endif
    582.16 000000                  cfi DPL0 Undefined
    582.17 000000                  cfi DPH0 Undefined
    582.18 000000          #ifdef __EXTENDED_DPTR__
    582.19 000000          #endif
    582.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    582.21 000000          #ifdef __EXTENDED_DPTR__
    582.22 000000          #endif
    582.23 000000          #endif
    582.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    582.25 000000          #ifdef __EXTENDED_DPTR__
    582.26 000000          #endif
    582.27 000000          #endif
    582.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    582.29 000000          #ifdef __EXTENDED_DPTR__
    582.30 000000          #endif
    582.31 000000          #endif
    582.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    582.33 000000          #ifdef __EXTENDED_DPTR__
    582.34 000000          #endif
    582.35 000000          #endif
    582.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    582.37 000000          #ifdef __EXTENDED_DPTR__
    582.38 000000          #endif
    582.39 000000          #endif
    582.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    582.41 000000          #ifdef __EXTENDED_DPTR__
    582.42 000000          #endif
    582.43 000000          #endif
    582.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    582.45 000000          #ifdef __EXTENDED_DPTR__
    582.46 000000          #endif
    582.47 000000          #endif
    582.48 000000                  ENDM
    582.49 000000          #if   (__CODE_MODEL__ == __CM_BANKED__)
    582.50 000000          #else
    582.51 000000              cfi CFA_MACHINE  sub(MACHINE_SP,add(add(3,__SIZE
                           _OF_RETADDR__),R7))
    582.52 000000          #endif
    582.53 000000          #if (__CORE__ == __CORE_EXTENDED1__)
    582.54 000000            #if (defined(__EXTENDED_STACK__))
    582.55 000000            #else
    582.56 000000            #endif
    582.57 000000          #else
    582.58 000000            #if (defined(__EXTENDED_STACK__))
    582.59 000000            #else
    582.60 000000              cfi ?RET_HIGH load(1, IDATA, add(CFA_MACHINE,
                            2))
    582.61 000000              cfi ?RET_LOW  load(1, IDATA, add(CFA_MACHINE,
                            1))
    582.62 000000            #endif
    582.63 000000          #endif
    582.64 000000          
    582.65 000000          ?FUNC_LEAVE_SP:
    582.66 000000          ;; Here we describe if Vx has been pushed yet.
    582.67 000000          ;; R6 goes from NrOfVRegs to 0
    582.68 000000          ;; R0 - VStart goes from 0 to NrOfVRegs
    582.69 000000          ;;
    582.70 000000 C0D0             PUSH    PSW     ; Preserves carry
    582.71 000002          #if   (__CODE_MODEL__ == __CM_BANKED__)
    582.72 000002          #else
    582.73 000002             cfi CFA_MACHINE  sub(MACHINE_SP,add(add(4,__SIZE_
                           OF_RETADDR__),R7))
    582.74 000002          #endif
    582.75 000002 74..             MOV     A,#?V0 - 1
    582.76 000004 2F               ADD     A,R7
    582.77 000005 D0D0             POP     PSW     ; Preserves carry
    582.78 000007          #if   (__CODE_MODEL__ == __CM_BANKED__)
    582.79 000007          #else
    582.80 000007             cfi CFA_MACHINE  sub(MACHINE_SP,add(add(3,__SIZE_
                           OF_RETADDR__),R7))
    582.81 000007          #endif
    582.82 000007 F8               MOV     R0,A    ; R0 now points at the last
                                                    virtual register to
                                                    restore.
    582.83 000008 D0E0     Loop:   POP     A
    582.84 00000A          #if   (__CODE_MODEL__ == __CM_BANKED__)
    582.85 00000A          #else
    582.86 00000A             cfi CFA_MACHINE  sub(MACHINE_SP,add(add(2,__SIZE_
                           OF_RETADDR__),R7))
    582.87 00000A          #endif
    582.88 00000A F6               MOV     @R0,A
    582.89 00000B 18               DEC     R0
    582.90 00000C DFFA             DJNZ    R7,Loop
    582.91 00000E          #if   (__CODE_MODEL__ == __CM_BANKED__)
    582.92 00000E          #else
    582.93 00000E             cfi CFA_MACHINE  sub(MACHINE_SP,add(3,__SIZE_OF_R
                           ETADDR__)) ; R7 is now 0
    582.94 00000E          #endif
    582.95 00000E D0..             POP     ?VB
    582.96 000010          #if   (__CODE_MODEL__ == __CM_BANKED__)
    582.97 000010          #else
    582.98 000010             cfi CFA_MACHINE  sub(MACHINE_SP,add(2,__SIZE_OF_R
                           ETADDR__))
    582.99 000010          #endif
    582.100 000010 D0E0             POP     A
    582.101 000012          #if   (__CODE_MODEL__ == __CM_BANKED__)
    582.102 000012          #else
    582.103 000012             cfi CFA_MACHINE  sub(MACHINE_SP,add(1,__SIZE_OF_
                           RETADDR__))
    582.104 000012          #endif
    582.105 000012 FF               MOV     R7,A
    582.106 000013 D0E0             POP     A
    582.107 000015          #if   (__CODE_MODEL__ == __CM_BANKED__)
    582.108 000015          #else
    582.109 000015             cfi CFA_MACHINE  sub(MACHINE_SP, __SIZE_OF_RETAD
                           DR__)
    582.110 000015          #endif
    582.111 000015 FE               MOV     R6,A
    582.112 000016          
    582.113 000016          #if  (__NUMBER_OF_DPTRS__ > 1)
    582.114 000016          #endif
    582.115 000016          
    582.116 000016                  IF      'FUNC'='BANKED'
    582.117 000016                  LJMP    ?BRET
    582.118 000016                  ELSE
    582.119 000016 22               RET
    582.120 000017                  ENDIF
    582.121 000017          
    582.122 000017          #ifdef __BACKTRACE_TESTER__
    582.123 000017          #endif ; __BACKTRACE_TESTER__
    582.124 000017          
    582.125 000017              cfi ENDBLOCK ?FUNC_LEAVE_SP
    582.126 000017                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_SP             MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?FUNC_LEAVE_SP      REL    CONST PUB UNTYP.       RCODE      0 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FUNC                ABS    CONST UNTYP.           ASEG       Not solved 
Loop                REL    CONST UNTYP.           RCODE      8 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
VB                  REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
add                 REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:D48F          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 23          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    582.127 000000          
    582.128 000000                  ENDM
    583    000000          
    584    000000          
    585    000000          ;---------------------------------------------------
                           --------------------------
    586    000000          ;
    587    000000          ;       Function: ?FUNC_ENTER_PDATA
    588    000000          ;
    589    000000          ;       Description:
    590    000000          ;               Saves register R6 and R7 plus a
                            specified number of virtual
    591    000000          ;               registers on the PDATA stack.
    592    000000          ;
    593    000000          ;               FF
    594    000000          ;               :
    595    000000          ;          +----------+
    596    000000          ;          | xxxxxxxx |  <-- ?PSP begin
    597    000000          ;          + - - - - -+
    598    000000          ;        ( | Ret_cc_E | )
    599    000000          ;        ( + - - - - -+ )
    600    000000          ;          | Ret_cc_H |
    601    000000          ;          + - - - - -+
    602    000000          ;          | Ret_cc_L |
    603    000000          ;          + - - - - -+
    604    000000          ;          |    R7    |
    605    000000          ;          + - - - - -+
    606    000000          ;          |    Vn    |
    607    000000          ;          + - - - - -+
    608    000000          ;           :    :   :
    609    000000          ;          + - - - - -+
    610    000000          ;          |    V1    |
    611    000000          ;          + - - - - -+
    612    000000          ;          |    V0    |
    613    000000          ;          + - - - - -+
    614    000000          ;          |    VB    |
    615    000000          ;          + - - - - -+
    616    000000          ;   CFA--> |    R6    | <-- ?PSP end
    617    000000          ;          +----------+
    618    000000          ;               :
    619    000000          ;               00
    620    000000          ;
    621    000000          ;       Register input:
    622    000000          ;               A      = -(Number of bytes to
                            save)
    623    000000          ;
    624    000000          ;       Register output:
    625    000000          ;               ?PSP   = ?PSP - (-A)
    626    000000          ;               DPTR0  = PC
    627    000000          ;               R0     = Undefined
    628    000000          ;               A      = 0
    629    000000          ;               R6     = 0
    630    000000          ;               CY     = 0
    631    000000          ;
    632    000000          ;       Multiple DPTR
    633    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
    634    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    635    000000          ;
    636    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
    637    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    638    000000          ;
    639    000000          ;       Stack usage: 2
    640    000000          ;
    641    000000          ;---------------------------------------------------
                           --------------------------
    767    000000          
    768    000000                  enter_PSP BANKED
    768.1  000000                  MODULE  ?BANKED_ENTER_PDATA
    768.2  000000                  RSEG    RCODE:CODE:NOROOT       
    768.3  000000                  PUBLIC  ?BANKED_ENTER_PDATA
    768.4  000000                  EXTERN  ?VB
    768.5  000000                  EXTERN  ?V0
    768.6  000000                  EXTERN  ?PSP
    768    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    768.1  000000          #ifdef __EXTENDED_DPTR__
    768.2  000000          #endif ; __EXTENDED_DPTR__
    768.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    768.4  000000          #ifdef __DPTR_SEPARATE__
    768.5  000000          #ifdef __EXTENDED_DPTR__
    768.6  000000          #endif ; __EXTENDED_DPTR__
    768.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    768.8  000000          #ifdef __EXTENDED_DPTR__
    768.9  000000          #endif ; __EXTENDED_DPTR__
    768.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    768.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    768.12 000000          #ifdef __EXTENDED_DPTR__
    768.13 000000          #endif ; __EXTENDED_DPTR__
    768.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    768.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    768.16 000000          #ifdef __EXTENDED_DPTR__
    768.17 000000          #endif ; __EXTENDED_DPTR__
    768.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    768.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    768.20 000000          #ifdef __EXTENDED_DPTR__
    768.21 000000          #endif ; __EXTENDED_DPTR__
    768.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    768.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    768.24 000000          #ifdef __EXTENDED_DPTR__
    768.25 000000          #endif ; __EXTENDED_DPTR__
    768.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    768.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    768.28 000000          #ifdef __EXTENDED_DPTR__
    768.29 000000          #endif ; __EXTENDED_DPTR__
    768.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    768.31 000000          #endif ; __DPTR_SEPARATE__
    768.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    768.33 000000                  ENDM
    768.34 000000          
    768.35 000000              cfi BLOCK ?BANKED_ENTER_PDATA Using cfi_pdata_en
                                                    ter_common
    768.36 000000              cfi NOFUNCTION
    768.37 000000              cfi A     Undefined
    768.38 000000              cfi CFA_SPP sub(SPP,sub(256,A))
    768.39 000000          
    768.40 000000          ?BANKED_ENTER_PDATA:
    768.41 000000          ?BANKED_ENTER_PDATA_CFI_INVALID_BEGINS:
    768.42 000000              cfi invalid
    768.43 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    768.44 000000          #endif ; __NUMBER_OF_DPTRS__
    768.45 000000          
    768.46 000000          #if (__CORE__ == __CORE_EXTENDED1__)
    768.47 000000          #elif defined(__EXTENDED_DPTR__)
    768.48 000000          #endif
    768.49 000000 D083             POP     DPH             ; Remove the library
                                                            function return
                                                            address
    768.50 000002              cfi CFA_MACHINE MACHINE_SP - 3
    768.51 000002              cfi ?RET_HIGH DPH0
    768.52 000002 D082             POP     DPL
    768.53 000004              cfi CFA_MACHINE MACHINE_SP - 2
    768.54 000004              cfi ?RET_LOW DPL0
    768.55 000004          
    768.56 000004 25..             ADD     A,?PSP          ; Allocate space on
                                                            the stack
    768.57 000006              cfi CFA_SPP A
    768.58 000006 F8               MOV     R0,A            ; R0 = Start of the
                                                            save area
    768.59 000007 C5..             XCH     A,?PSP          ; Save the new value
                                                            of SP and get the
                                                            old one
    768.60 000009              cfi CFA_SPP SPP
    768.61 000009              cfi Base    add(R0,sub(256,A))
    768.62 000009          
    768.63 000009 C3               CLR     C               ; Counter = end -
                                                            start - 5
    768.64 00000A 98               SUBB    A,R0
    768.65 00000B          
    768.66 00000B                  IF      'BANKED'='BANKED'
    768.67 00000B 24FA             ADD     A,#-6
    768.68 00000D                  ELSE
    768.69 00000D          #if (__CODE_MODEL__ == __CM_FAR__)
    768.70 00000D                  ADD     A,#-6
    768.71 00000D          #else
    768.72 00000D                  ADD     A,#-5
    768.73 00000D          #endif
    768.74 00000D                  ENDIF
    768.75 00000D          
    768.76 00000D CE               XCH     A,R6            ; R6 = counter
    768.77 00000E F2               MOVX    @R0,A           ; R6 ==> PStack.
    768.78 00000F 08               INC     R0
    768.79 000010          
    768.80 000010 E5..             MOV     A,?VB
    768.81 000012 F2               MOVX    @R0,A           ; VB ==> PStack.
    768.82 000013 08               INC     R0
    768.83 000014          
    768.84 000014 E9               MOV     A,R1
    768.85 000015 C0E0             PUSH    A
    768.86 000017              cfi CFA_MACHINE MACHINE_SP - 3
    768.87 000017          
    768.88 000017 79..             MOV     R1,#?V0
    768.89 000019 E7       Loop:   MOV     A,@R1           ; Vn ==> PStack.
    768.90 00001A 09               INC     R1
    768.91 00001B F2               MOVX    @R0,A
    768.92 00001C 08               INC     R0
    768.93 00001D DEFA             DJNZ    R6,Loop
    768.94 00001F          
    768.95 00001F D0E0             POP     A
    768.96 000021              cfi CFA_MACHINE MACHINE_SP - 2
    768.97 000021 F9               MOV     R1,A
    768.98 000022          
    768.99 000022 EF               MOV     A,R7
    768.100 000023 F2               MOVX    @R0,A           ; R7 == >
                                                            PStack.
    768.101 000024 08               INC     R0
    768.102 000025                  
    768.103 000025          ;=======================================;
    768.104 000025          ; Move the function return address from ;
    768.105 000025          ; the IDATA stack to the PDATA stack.   ;
    768.106 000025          ;=======================================;
    768.107 000025                  IF      'BANKED'='BANKED'
    768.108 000025 D0E0             POP     A
    768.109 000027              cfi CFA_MACHINE MACHINE_SP - 2
    768.110 000027 FF               MOV     R7,A
    768.111 000028                  ELSE
    768.112 000028          #if (__CODE_MODEL__ == __CM_FAR__)
    768.113 000028                  POP     A
    768.114 000028              cfi CFA_MACHINE MACHINE_SP -2
    768.115 000028                  MOV     R7,A
    768.116 000028          #endif
    768.117 000028                  ENDIF
    768.118 000028 D0E0             POP     A
    768.119 00002A              cfi CFA_MACHINE MACHINE_SP - 1
    768.120 00002A FE               MOV     R6,A
    768.121 00002B D0E0             POP     A
    768.122 00002D              cfi CFA_MACHINE MACHINE_SP
    768.123 00002D                  
    768.124 00002D F2               MOVX    @R0,A           ; RetL_cc ==>
                                                            PStack.
    768.125 00002E 08               INC     R0
    768.126 00002F EE               MOV     A,R6
    768.127 000030 F2               MOVX    @R0,A           ; RetH_cc ==>
                                                            PStack.
    768.128 000031 08               INC     R0
    768.129 000032          
    768.130 000032                  IF      'BANKED'='BANKED'
    768.131 000032 EF               MOV     A,R7
    768.132 000033 F2               MOVX    @R0,A           ; RetE_cc ==>
                                                            PStack.
    768.133 000034 08               INC     R0
    768.134 000035                  ELSE
    768.135 000035          #if (__CODE_MODEL__ == __CM_FAR__)
    768.136 000035                  MOV     A,R7
    768.137 000035                  MOVX    @R0,A           ; RetE_cc ==>
                            PStack.
    768.138 000035                  INC     R0
    768.139 000035          #endif
    768.140 000035                  ENDIF
    768.141 000035 E4               CLR     A
    768.142 000036 73               JMP     @A+DPTR
    768.143 000037              cfi valid
    768.144 000037          ?BANKED_ENTER_PDATA_CFI_INVALID_ENDS:
    768.145 000037              cfi ENDBLOCK ?BANKED_ENTER_PDATA
    768.146 000037                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_SP             MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?BANKED_ENTER_PDATA REL    CONST PUB UNTYP.       RCODE      0 
?BANKED_ENTER_PDATA_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?BANKED_ENTER_PDATA_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      37 
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BANKED              ABS    CONST UNTYP.           ASEG       Not solved 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
Base                REL    CONST UNTYP.           RCODE      Not solved 
CFA_PSP16           REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      19 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               REL    CONST UNTYP.           RCODE      Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
add                 REL    CONST UNTYP.           RCODE      Not solved 
cfi_pdata_enter_commonREL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:7EC5          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 55          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    768.147 000000                  ENDM
    769    000000                  enter_PSP FUNC
    769.1  000000                  MODULE  ?FUNC_ENTER_PDATA
    769.2  000000                  RSEG    RCODE:CODE:NOROOT       
    769.3  000000                  PUBLIC  ?FUNC_ENTER_PDATA
    769.4  000000                  EXTERN  ?VB
    769.5  000000                  EXTERN  ?V0
    769.6  000000                  EXTERN  ?PSP
    769    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    769.1  000000          #ifdef __EXTENDED_DPTR__
    769.2  000000          #endif ; __EXTENDED_DPTR__
    769.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    769.4  000000          #ifdef __DPTR_SEPARATE__
    769.5  000000          #ifdef __EXTENDED_DPTR__
    769.6  000000          #endif ; __EXTENDED_DPTR__
    769.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    769.8  000000          #ifdef __EXTENDED_DPTR__
    769.9  000000          #endif ; __EXTENDED_DPTR__
    769.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    769.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    769.12 000000          #ifdef __EXTENDED_DPTR__
    769.13 000000          #endif ; __EXTENDED_DPTR__
    769.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    769.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    769.16 000000          #ifdef __EXTENDED_DPTR__
    769.17 000000          #endif ; __EXTENDED_DPTR__
    769.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    769.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    769.20 000000          #ifdef __EXTENDED_DPTR__
    769.21 000000          #endif ; __EXTENDED_DPTR__
    769.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    769.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    769.24 000000          #ifdef __EXTENDED_DPTR__
    769.25 000000          #endif ; __EXTENDED_DPTR__
    769.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    769.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    769.28 000000          #ifdef __EXTENDED_DPTR__
    769.29 000000          #endif ; __EXTENDED_DPTR__
    769.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    769.31 000000          #endif ; __DPTR_SEPARATE__
    769.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    769.33 000000                  ENDM
    769.34 000000          
    769.35 000000              cfi BLOCK ?FUNC_ENTER_PDATA Using cfi_pdata_ente
                                                  r_common
    769.36 000000              cfi NOFUNCTION
    769.37 000000              cfi A     Undefined
    769.38 000000              cfi CFA_SPP sub(SPP,sub(256,A))
    769.39 000000          
    769.40 000000          ?FUNC_ENTER_PDATA:
    769.41 000000          ?FUNC_ENTER_PDATA_CFI_INVALID_BEGINS:
    769.42 000000              cfi invalid
    769.43 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    769.44 000000          #endif ; __NUMBER_OF_DPTRS__
    769.45 000000          
    769.46 000000          #if (__CORE__ == __CORE_EXTENDED1__)
    769.47 000000          #elif defined(__EXTENDED_DPTR__)
    769.48 000000          #endif
    769.49 000000 D083             POP     DPH             ; Remove the library
                                                            function return
                                                            address
    769.50 000002              cfi CFA_MACHINE MACHINE_SP - 3
    769.51 000002              cfi ?RET_HIGH DPH0
    769.52 000002 D082             POP     DPL
    769.53 000004              cfi CFA_MACHINE MACHINE_SP - 2
    769.54 000004              cfi ?RET_LOW DPL0
    769.55 000004          
    769.56 000004 25..             ADD     A,?PSP          ; Allocate space on
                                                            the stack
    769.57 000006              cfi CFA_SPP A
    769.58 000006 F8               MOV     R0,A            ; R0 = Start of the
                                                            save area
    769.59 000007 C5..             XCH     A,?PSP          ; Save the new value
                                                            of SP and get the
                                                            old one
    769.60 000009              cfi CFA_SPP SPP
    769.61 000009              cfi Base    add(R0,sub(256,A))
    769.62 000009          
    769.63 000009 C3               CLR     C               ; Counter = end -
                                                            start - 5
    769.64 00000A 98               SUBB    A,R0
    769.65 00000B          
    769.66 00000B                  IF      'FUNC'='BANKED'
    769.67 00000B                  ADD     A,#-6
    769.68 00000B                  ELSE
    769.69 00000B          #if (__CODE_MODEL__ == __CM_FAR__)
    769.70 00000B          #else
    769.71 00000B 24FB             ADD     A,#-5
    769.72 00000D          #endif
    769.73 00000D                  ENDIF
    769.74 00000D          
    769.75 00000D CE               XCH     A,R6            ; R6 = counter
    769.76 00000E F2               MOVX    @R0,A           ; R6 ==> PStack.
    769.77 00000F 08               INC     R0
    769.78 000010          
    769.79 000010 E5..             MOV     A,?VB
    769.80 000012 F2               MOVX    @R0,A           ; VB ==> PStack.
    769.81 000013 08               INC     R0
    769.82 000014          
    769.83 000014 E9               MOV     A,R1
    769.84 000015 C0E0             PUSH    A
    769.85 000017              cfi CFA_MACHINE MACHINE_SP - 3
    769.86 000017          
    769.87 000017 79..             MOV     R1,#?V0
    769.88 000019 E7       Loop:   MOV     A,@R1           ; Vn ==> PStack.
    769.89 00001A 09               INC     R1
    769.90 00001B F2               MOVX    @R0,A
    769.91 00001C 08               INC     R0
    769.92 00001D DEFA             DJNZ    R6,Loop
    769.93 00001F          
    769.94 00001F D0E0             POP     A
    769.95 000021              cfi CFA_MACHINE MACHINE_SP - 2
    769.96 000021 F9               MOV     R1,A
    769.97 000022          
    769.98 000022 EF               MOV     A,R7
    769.99 000023 F2               MOVX    @R0,A           ; R7 == > PStack.
    769.100 000024 08               INC     R0
    769.101 000025                  
    769.102 000025          ;=======================================;
    769.103 000025          ; Move the function return address from ;
    769.104 000025          ; the IDATA stack to the PDATA stack.   ;
    769.105 000025          ;=======================================;
    769.106 000025                  IF      'FUNC'='BANKED'
    769.107 000025                  POP     A
    769.108 000025              cfi CFA_MACHINE MACHINE_SP - 2
    769.109 000025                  MOV     R7,A
    769.110 000025                  ELSE
    769.111 000025          #if (__CODE_MODEL__ == __CM_FAR__)
    769.112 000025          #endif
    769.113 000025                  ENDIF
    769.114 000025 D0E0             POP     A
    769.115 000027              cfi CFA_MACHINE MACHINE_SP - 1
    769.116 000027 FE               MOV     R6,A
    769.117 000028 D0E0             POP     A
    769.118 00002A              cfi CFA_MACHINE MACHINE_SP
    769.119 00002A                  
    769.120 00002A F2               MOVX    @R0,A           ; RetL_cc ==>
                                                            PStack.
    769.121 00002B 08               INC     R0
    769.122 00002C EE               MOV     A,R6
    769.123 00002D F2               MOVX    @R0,A           ; RetH_cc ==>
                                                            PStack.
    769.124 00002E 08               INC     R0
    769.125 00002F          
    769.126 00002F                  IF      'FUNC'='BANKED'
    769.127 00002F                  MOV     A,R7
    769.128 00002F                  MOVX    @R0,A           ; RetE_cc ==>
                            PStack.
    769.129 00002F                  INC     R0
    769.130 00002F                  ELSE
    769.131 00002F          #if (__CODE_MODEL__ == __CM_FAR__)
    769.132 00002F          #endif
    769.133 00002F                  ENDIF
    769.134 00002F E4               CLR     A
    769.135 000030 73               JMP     @A+DPTR
    769.136 000031              cfi valid
    769.137 000031          ?FUNC_ENTER_PDATA_CFI_INVALID_ENDS:
    769.138 000031              cfi ENDBLOCK ?FUNC_ENTER_PDATA
    769.139 000031                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_SP             MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?FUNC_ENTER_PDATA   REL    CONST PUB UNTYP.       RCODE      0 
?FUNC_ENTER_PDATA_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?FUNC_ENTER_PDATA_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      31 
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
Base                REL    CONST UNTYP.           RCODE      Not solved 
CFA_PSP16           REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FUNC                ABS    CONST UNTYP.           ASEG       Not solved 
Loop                REL    CONST UNTYP.           RCODE      19 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               REL    CONST UNTYP.           RCODE      Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
add                 REL    CONST UNTYP.           RCODE      Not solved 
cfi_pdata_enter_commonREL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:6941          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 49          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    769.140 000000                  ENDM
    770    000000          
    771    000000          ;---------------------------------------------------
                           --------------------------
    772    000000          ;
    773    000000          ;       Function: ?FUNC_LEAVE_PDATA
    774    000000          ;
    775    000000          ;       Description:
    776    000000          ;               Restore register R6 and R7 plus a
                            specified number of virtual
    777    000000          ;               registers from the PDATA stack.
    778    000000          ;
    779    000000          ;               +----------+
    780    000000          ;               | Ret_cc_E |
    781    000000          ;               + - - - - -+
    782    000000          ;               | Ret_cc_H |
    783    000000          ;               + - - - - -+
    784    000000          ;               | Ret_cc_L |
    785    000000          ;               + - - - - -+
    786    000000          ;               |    R7    |
    787    000000          ;               + - - - - -+
    788    000000          ;               |    VR    |
    789    000000          ;               + - - - - -+
    790    000000          ;               |    VB    |
    791    000000          ;               + - - - - -+
    792    000000          ;               |    R6    |
    793    000000          ;               + - - - - -+
    794    000000          ;               |          | <-- ?PSP
    795    000000          ;               +----------+
    796    000000          ;
    797    000000          ;       Register input:
    798    000000          ;               R7     = Number of virtual registers
                            to restore.
    799    000000          ;
    800    000000          ;       Register output:
    801    000000          ;               R0     = ?PSP
    802    000000          ;               R6     = Restored value
    803    000000          ;               R7     = Restored value
    804    000000          ;               A      = RETH
    805    000000          ;
    806    000000          ;
    807    000000          ;       Multiple DPTR
    808    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
    809    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
    810    000000          ;
    811    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
    812    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
    813    000000          ;       Stack usage: NA
    814    000000          ;
    815    000000          ;---------------------------------------------------
                           --------------------------
    927    000000          
    928    000000          
    929    000000                  leave_PSP BANKED
    929.1  000000          
    929.2  000000                  MODULE  ?BANKED_LEAVE_PDATA
    929.3  000000                  RSEG    RCODE:CODE:NOROOT       
    929.4  000000                  PUBLIC  ?BANKED_LEAVE_PDATA
    929.5  000000                  EXTERN  ?VB     
    929.6  000000                  EXTERN  ?V0
    929.7  000000                  EXTERN  ?PSP
    929    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    929.1  000000          #ifdef __EXTENDED_DPTR__
    929.2  000000          #endif ; __EXTENDED_DPTR__
    929.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    929.4  000000          #ifdef __DPTR_SEPARATE__
    929.5  000000          #ifdef __EXTENDED_DPTR__
    929.6  000000          #endif ; __EXTENDED_DPTR__
    929.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    929.8  000000          #ifdef __EXTENDED_DPTR__
    929.9  000000          #endif ; __EXTENDED_DPTR__
    929.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    929.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    929.12 000000          #ifdef __EXTENDED_DPTR__
    929.13 000000          #endif ; __EXTENDED_DPTR__
    929.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    929.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    929.16 000000          #ifdef __EXTENDED_DPTR__
    929.17 000000          #endif ; __EXTENDED_DPTR__
    929.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    929.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    929.20 000000          #ifdef __EXTENDED_DPTR__
    929.21 000000          #endif ; __EXTENDED_DPTR__
    929.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    929.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    929.24 000000          #ifdef __EXTENDED_DPTR__
    929.25 000000          #endif ; __EXTENDED_DPTR__
    929.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    929.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    929.28 000000          #ifdef __EXTENDED_DPTR__
    929.29 000000          #endif ; __EXTENDED_DPTR__
    929.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    929.31 000000          #endif ; __DPTR_SEPARATE__
    929.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    929.33 000000                  ENDM
    929.34 000000                  IF      'BANKED'='BANKED'
    929.35 000000                  EXTERN  ?BRET
    929.36 000000                  ENDIF
    929.37 000000          
    929.38 000000              cfi BLOCK ?BANKED_LEAVE_PDATA USING cfi_common
    929.39 000000              cfi NOFUNCTION
    929.40 000000              cfi A     Undefined
    929.41 000000          ?BANKED_LEAVE_PDATA:
    929.42 000000          ?BANKED_LEAVE_PDATA_CFI_INVALID_BEGINS:
    929.43 000000              cfi invalid
    929.44 000000 A8..             MOV     R0,?PSP
    929.45 000002          
    929.46 000002          ;=======================================;
    929.47 000002          ;       Restore the R6 register.        ;
    929.48 000002          ;=======================================;
    929.49 000002 E2               MOVX    A,@R0
    929.50 000003 FE               MOV     R6,A
    929.51 000004 08               INC     R0
    929.52 000005          
    929.53 000005          ;=======================================;
    929.54 000005          ;   Restore VB register.                ;
    929.55 000005          ;=======================================;
    929.56 000005 E2               MOVX    A,@R0
    929.57 000006 08               INC     R0
    929.58 000007 F5..             MOV     ?VB,A
    929.59 000009          
    929.60 000009          ;=======================================;
    929.61 000009          ;       Preserve the R1 register.       ;
    929.62 000009          ;=======================================;
    929.63 000009 E9               MOV     A,R1            ; Save R1, used as
                                                            tmp
    929.64 00000A C0E0             PUSH    A
    929.65 00000C              cfi CFA_MACHINE MACHINE_SP - 3
    929.66 00000C                  
    929.67 00000C          
    929.68 00000C          ;=======================================;
    929.69 00000C          ;   Restore all the virtual registers.  ;
    929.70 00000C          ;=======================================;
    929.71 00000C 79..             MOV     R1,#?V0    ; R0 now points at the
                                                       first virtual register
                                                       to restore.
    929.72 00000E E2       Loop:   MOVX    A,@R0
    929.73 00000F 08               INC     R0
    929.74 000010 F7               MOV     @R1,A
    929.75 000011 09               INC     R1
    929.76 000012 DFFA             DJNZ    R7,Loop
    929.77 000014          
    929.78 000014          ;=======================================;
    929.79 000014          ;       Restore the R7 register.        ;
    929.80 000014          ;=======================================;
    929.81 000014 E2               MOVX    A,@R0
    929.82 000015 08               INC     R0
    929.83 000016 FF               MOV     R7,A
    929.84 000017          
    929.85 000017          ;=======================================;
    929.86 000017          ;       Restore the R1 register.        ;
    929.87 000017          ;=======================================;
    929.88 000017 D0E0             POP     A
    929.89 000019              cfi CFA_MACHINE MACHINE_SP - 0
    929.90 000019 F9               MOV     R1,A
    929.91 00001A          
    929.92 00001A          ;=======================================;
    929.93 00001A          ; Restore the function return address.  ;
    929.94 00001A          ;=======================================;
    929.95 00001A E2               MOVX    A,@R0
    929.96 00001B 08               INC     R0
    929.97 00001C C0E0             PUSH    A               ; RET_L ==> Machine
                                                            stack.
    929.98 00001E              cfi CFA_MACHINE MACHINE_SP - 1
    929.99 00001E E2               MOVX    A,@R0
    929.100 00001F 08               INC     R0
    929.101 000020 C0E0             PUSH    A               ; RET_H ==> Machine
                                                            stack.
    929.102 000022              cfi CFA_MACHINE MACHINE_SP - 2
    929.103 000022          
    929.104 000022                  IF      'BANKED'='BANKED'
    929.105 000022 E2               MOVX    A,@R0
    929.106 000023 08               INC     R0
    929.107 000024 C0E0             PUSH    A               ; RET_E ==> Machine
                                                            stack.
    929.108 000026              cfi CFA_MACHINE MACHINE_SP - 2
    929.109 000026                  ELSE
    929.110 000026          #if ( (__CODE_MODEL__ == __CM_FAR__))
    929.111 000026                  MOVX    A,@R0
    929.112 000026                  INC     R0
    929.113 000026                  PUSH    A               ; RET_E ==> Machine
                            stack.
    929.114 000026              cfi CFA_MACHINE MACHINE_SP - 2
    929.115 000026          #endif
    929.116 000026                  ENDIF
    929.117 000026 88..             MOV     ?PSP,R0
    929.118 000028          
    929.119 000028          #if  (__NUMBER_OF_DPTRS__ > 1)
    929.120 000028          #endif
    929.121 000028          
    929.122 000028                  IF      'BANKED'='BANKED'
    929.123 000028 02....           LJMP    ?BRET
    929.124 00002B                  ELSE
    929.125 00002B                  RET
    929.126 00002B                  ENDIF
    929.127 00002B          
    929.128 00002B          ?BANKED_LEAVE_PDATA_CFI_INVALID_ENDS:
    929.129 00002B              cfi invalid
    929.130 00002B          
    929.131 00002B              cfi ENDBLOCK ?BANKED_LEAVE_PDATA
    929.132 00002B                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?BANKED_LEAVE_PDATA REL    CONST PUB UNTYP.       RCODE      0 
?BANKED_LEAVE_PDATA_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?BANKED_LEAVE_PDATA_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      2B 
?BRET               ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BANKED              ABS    CONST UNTYP.           ASEG       Not solved 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      E 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3A30          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 43          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    929.133 000000          
    929.134 000000                  ENDM
    930    000000                  leave_PSP FUNC
    930.1  000000          
    930.2  000000                  MODULE  ?FUNC_LEAVE_PDATA
    930.3  000000                  RSEG    RCODE:CODE:NOROOT       
    930.4  000000                  PUBLIC  ?FUNC_LEAVE_PDATA
    930.5  000000                  EXTERN  ?VB     
    930.6  000000                  EXTERN  ?V0
    930.7  000000                  EXTERN  ?PSP
    930    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    930.1  000000          #ifdef __EXTENDED_DPTR__
    930.2  000000          #endif ; __EXTENDED_DPTR__
    930.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    930.4  000000          #ifdef __DPTR_SEPARATE__
    930.5  000000          #ifdef __EXTENDED_DPTR__
    930.6  000000          #endif ; __EXTENDED_DPTR__
    930.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    930.8  000000          #ifdef __EXTENDED_DPTR__
    930.9  000000          #endif ; __EXTENDED_DPTR__
    930.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    930.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    930.12 000000          #ifdef __EXTENDED_DPTR__
    930.13 000000          #endif ; __EXTENDED_DPTR__
    930.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    930.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    930.16 000000          #ifdef __EXTENDED_DPTR__
    930.17 000000          #endif ; __EXTENDED_DPTR__
    930.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    930.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    930.20 000000          #ifdef __EXTENDED_DPTR__
    930.21 000000          #endif ; __EXTENDED_DPTR__
    930.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    930.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    930.24 000000          #ifdef __EXTENDED_DPTR__
    930.25 000000          #endif ; __EXTENDED_DPTR__
    930.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    930.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    930.28 000000          #ifdef __EXTENDED_DPTR__
    930.29 000000          #endif ; __EXTENDED_DPTR__
    930.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    930.31 000000          #endif ; __DPTR_SEPARATE__
    930.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    930.33 000000                  ENDM
    930.34 000000                  IF      'FUNC'='BANKED'
    930.35 000000                  EXTERN  ?BRET
    930.36 000000                  ENDIF
    930.37 000000          
    930.38 000000              cfi BLOCK ?FUNC_LEAVE_PDATA USING cfi_common
    930.39 000000              cfi NOFUNCTION
    930.40 000000              cfi A     Undefined
    930.41 000000          ?FUNC_LEAVE_PDATA:
    930.42 000000          ?FUNC_LEAVE_PDATA_CFI_INVALID_BEGINS:
    930.43 000000              cfi invalid
    930.44 000000 A8..             MOV     R0,?PSP
    930.45 000002          
    930.46 000002          ;=======================================;
    930.47 000002          ;       Restore the R6 register.        ;
    930.48 000002          ;=======================================;
    930.49 000002 E2               MOVX    A,@R0
    930.50 000003 FE               MOV     R6,A
    930.51 000004 08               INC     R0
    930.52 000005          
    930.53 000005          ;=======================================;
    930.54 000005          ;   Restore VB register.                ;
    930.55 000005          ;=======================================;
    930.56 000005 E2               MOVX    A,@R0
    930.57 000006 08               INC     R0
    930.58 000007 F5..             MOV     ?VB,A
    930.59 000009          
    930.60 000009          ;=======================================;
    930.61 000009          ;       Preserve the R1 register.       ;
    930.62 000009          ;=======================================;
    930.63 000009 E9               MOV     A,R1            ; Save R1, used as
                                                            tmp
    930.64 00000A C0E0             PUSH    A
    930.65 00000C              cfi CFA_MACHINE MACHINE_SP - 3
    930.66 00000C                  
    930.67 00000C          
    930.68 00000C          ;=======================================;
    930.69 00000C          ;   Restore all the virtual registers.  ;
    930.70 00000C          ;=======================================;
    930.71 00000C 79..             MOV     R1,#?V0    ; R0 now points at the
                                                       first virtual register
                                                       to restore.
    930.72 00000E E2       Loop:   MOVX    A,@R0
    930.73 00000F 08               INC     R0
    930.74 000010 F7               MOV     @R1,A
    930.75 000011 09               INC     R1
    930.76 000012 DFFA             DJNZ    R7,Loop
    930.77 000014          
    930.78 000014          ;=======================================;
    930.79 000014          ;       Restore the R7 register.        ;
    930.80 000014          ;=======================================;
    930.81 000014 E2               MOVX    A,@R0
    930.82 000015 08               INC     R0
    930.83 000016 FF               MOV     R7,A
    930.84 000017          
    930.85 000017          ;=======================================;
    930.86 000017          ;       Restore the R1 register.        ;
    930.87 000017          ;=======================================;
    930.88 000017 D0E0             POP     A
    930.89 000019              cfi CFA_MACHINE MACHINE_SP - 0
    930.90 000019 F9               MOV     R1,A
    930.91 00001A          
    930.92 00001A          ;=======================================;
    930.93 00001A          ; Restore the function return address.  ;
    930.94 00001A          ;=======================================;
    930.95 00001A E2               MOVX    A,@R0
    930.96 00001B 08               INC     R0
    930.97 00001C C0E0             PUSH    A               ; RET_L ==> Machine
                                                            stack.
    930.98 00001E              cfi CFA_MACHINE MACHINE_SP - 1
    930.99 00001E E2               MOVX    A,@R0
    930.100 00001F 08               INC     R0
    930.101 000020 C0E0             PUSH    A               ; RET_H ==> Machine
                                                            stack.
    930.102 000022              cfi CFA_MACHINE MACHINE_SP - 2
    930.103 000022          
    930.104 000022                  IF      'FUNC'='BANKED'
    930.105 000022                  MOVX    A,@R0
    930.106 000022                  INC     R0
    930.107 000022                  PUSH    A               ; RET_E ==> Machine
                            stack.
    930.108 000022              cfi CFA_MACHINE MACHINE_SP - 2
    930.109 000022                  ELSE
    930.110 000022          #if ( (__CODE_MODEL__ == __CM_FAR__))
    930.111 000022          #endif
    930.112 000022                  ENDIF
    930.113 000022 88..             MOV     ?PSP,R0
    930.114 000024          
    930.115 000024          #if  (__NUMBER_OF_DPTRS__ > 1)
    930.116 000024          #endif
    930.117 000024          
    930.118 000024                  IF      'FUNC'='BANKED'
    930.119 000024                  LJMP    ?BRET
    930.120 000024                  ELSE
    930.121 000024 22               RET
    930.122 000025                  ENDIF
    930.123 000025          
    930.124 000025          ?FUNC_LEAVE_PDATA_CFI_INVALID_ENDS:
    930.125 000025              cfi invalid
    930.126 000025          
    930.127 000025              cfi ENDBLOCK ?FUNC_LEAVE_PDATA
    930.128 000025                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?FUNC_LEAVE_PDATA   REL    CONST PUB UNTYP.       RCODE      0 
?FUNC_LEAVE_PDATA_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?FUNC_LEAVE_PDATA_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      25 
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FUNC                ABS    CONST UNTYP.           ASEG       Not solved 
Loop                REL    CONST UNTYP.           RCODE      E 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:5B3           #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 37          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    930.129 000000          
    930.130 000000                  ENDM
    931    000000          
    932    000000          ;---------------------------------------------------
                           --------------------------
    933    000000          ;
    934    000000          ;       Function: ?FUNC_ENTER_XDATA
    935    000000          ;
    936    000000          ;       Description:
    937    000000          ;               Saves register R6,R7,(DPX),DPH,DPL,V
                           B,(RETX)RETH,RETL
    938    000000          ;               plus a specified number of
                            virtual
    939    000000          ;               registers on the XDATA stack.
    940    000000          ;
    941    000000          ;               +----------+
    942    000000          ;               |  ?DPX (if extended dptr)  
                            |
    943    000000          ;               + - - - - -+
    944    000000          ;               |   DPH    |
    945    000000          ;               + - - - - -+
    946    000000          ;               |   DPL    |
    947    000000          ;               + - - - - -+
    948    000000          ;               | Ret_cc_E (if banked of far)|
    949    000000          ;               + - - - - -+
    950    000000          ;               | Ret_cc_H |
    951    000000          ;               + - - - - -+
    952    000000          ;               | Ret_cc_L |
    953    000000          ;               + - - - - -+
    954    000000          ;               |    R7    |
    955    000000          ;               + - - - - -+
    956    000000          ;               |    VR    |
    957    000000          ;               + - - - - -+
    958    000000          ;               |    VB    |
    959    000000          ;               + - - - - -+
    960    000000          ;               |    R6    | <-- XSP
    961    000000          ;               +----------+
    962    000000          ;
    963    000000          ;
    964    000000          ;       Register input:
    965    000000          ;               A  -(The number of bytes to push +
                            7/8).
    966    000000          ;
    967    000000          ;       Register output:
    968    000000          ;               DPTR0  = XSTACK - 1
    969    000000          ;               XSTACK = XSTACK - (-A)
    970    000000          ;               R0     = R0 + (-A) - 2
    971    000000          ;               A      = R7
    972    000000          ;               R6     = Is undefined
    973    000000          ;               CY     = Undefined
    974    000000          ;
    975    000000          ;
    976    000000          ;       Multiple DPTR
    977    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
    978    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    979    000000          ;
    980    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
    981    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    982    000000          ;
    983    000000          ;       Stack usage peak        :  5
    984    000000          ;       Stack usage after return: -2
    985    000000          ;
    986    000000          ;---------------------------------------------------
                           --------------------------
   1221    000000          
   1222    000000                  enter_XSP BANKED
   1222.1  000000                  MODULE  ?BANKED_ENTER_XDATA
   1222.2  000000                  RSEG    XSTACK:NOROOT:XDATA
   1222.3  000000                  RSEG    RCODE:CODE:NOROOT
   1222.4  000000                  PUBLIC  ?BANKED_ENTER_XDATA
   1222.5  000000                  EXTERN  ?V0
   1222.6  000000                  EXTERN  ?VB
   1222.7  000000                  EXTERN  ?XSP
   1222    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1222.1  000000          #ifdef __EXTENDED_DPTR__
   1222.2  000000          #endif ; __EXTENDED_DPTR__
   1222.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1222.4  000000          #ifdef __DPTR_SEPARATE__
   1222.5  000000          #ifdef __EXTENDED_DPTR__
   1222.6  000000          #endif ; __EXTENDED_DPTR__
   1222.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1222.8  000000          #ifdef __EXTENDED_DPTR__
   1222.9  000000          #endif ; __EXTENDED_DPTR__
   1222.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1222.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1222.12 000000          #ifdef __EXTENDED_DPTR__
   1222.13 000000          #endif ; __EXTENDED_DPTR__
   1222.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1222.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1222.16 000000          #ifdef __EXTENDED_DPTR__
   1222.17 000000          #endif ; __EXTENDED_DPTR__
   1222.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1222.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1222.20 000000          #ifdef __EXTENDED_DPTR__
   1222.21 000000          #endif ; __EXTENDED_DPTR__
   1222.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1222.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1222.24 000000          #ifdef __EXTENDED_DPTR__
   1222.25 000000          #endif ; __EXTENDED_DPTR__
   1222.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1222.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1222.28 000000          #ifdef __EXTENDED_DPTR__
   1222.29 000000          #endif ; __EXTENDED_DPTR__
   1222.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1222.31 000000          #endif ; __DPTR_SEPARATE__
   1222.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1222.33 000000                  ENDM
   1222.34 000000          
   1222.35 000000              cfi BLOCK ?BANKED_ENTER_XDATA Using cfi_common
   1222.36 000000              cfi NOFUNCTION
   1222.37 000000              cfi A     Undefined
   1222.38 000000          ?BANKED_ENTER_XDATA:
   1222.39 000000          ?BANKED_ENTER_XDATA_CFI_INVALID_BEGINS:
   1222.40 000000              cfi invalid
   1222.41 000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1222.42 000000          #endif ; __NUMBER_OF_DPTRS__
   1222.43 000000          
   1222.44 000000 25..             ADD     A,XSP_L
   1222.45 000002 C582             XCH     A,DPL
   1222.46 000004 C0E0             PUSH    A
   1222.47 000006              cfi CFA_MACHINE MACHINE_SP - 5
   1222.48 000006 E5..             MOV     A,XSP_H
   1222.49 000008 34FF             ADDC    A,#255
   1222.50 00000A C583             XCH     A,DPH
   1222.51 00000C C0E0             PUSH    A
   1222.52 00000E          #ifdef __EXTENDED_DPTR__
   1222.53 00000E          #endif
   1222.54 00000E              cfi CFA_MACHINE MACHINE_SP - 6
   1222.55 00000E E5..             MOV     A,XSP_L
   1222.56 000010 C3               CLR     C
   1222.57 000011 9582             SUBB    A,DPL
   1222.58 000013          
   1222.59 000013                  IF      'BANKED'='BANKED'
   1222.60 000013          #if (defined (__EXTENDED_DPTR__))
   1222.61 000013          #else
   1222.62 000013 24F8             ADD     A,#-8
   1222.63 000015          #endif
   1222.64 000015                  ELSE
   1222.65 000015          #if ((__CODE_MODEL__ == __CM_FAR__) && (defined
                            (__EXTENDED_DPTR__)))
   1222.66 000015                  ADD     A,#-9
   1222.67 000015          #elif (defined (__EXTENDED_DPTR__))
   1222.68 000015                  ADD     A,#-8
   1222.69 000015          #else
   1222.70 000015                  ADD     A,#-7
   1222.71 000015          #endif
   1222.72 000015                  ENDIF
   1222.73 000015          
   1222.74 000015 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   1222.75 000017              cfi CFA_MACHINE MACHINE_SP - 7
   1222.76 000017 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   1222.77 000019 8583..           MOV     XSP_H,DPH
   1222.78 00001C 8582..           MOV     XSP_L,DPL
   1222.79 00001F D0A8             POP     0xA8 /* IE */
   1222.80 000021              cfi CFA_MACHINE MACHINE_SP - 6
   1222.81 000021          
   1222.82 000021          ;=======================================;
   1222.83 000021          ;  Preserve the R6 register.            ;
   1222.84 000021          ;=======================================;
   1222.85 000021 CE               XCH     A,R6            ; R6 = Number of
                                                            virtual registers
                                                            to push
   1222.86 000022 F0               MOVX    @DPTR,A
   1222.87 000023 A3               INC     DPTR
   1222.88 000024          
   1222.89 000024          ;=======================================;
   1222.90 000024          ;    Move all the virtual registers     ;
   1222.91 000024          ;    in IDATA to the XDATA stack.       ;
   1222.92 000024          ;=======================================;
   1222.93 000024 E5..             MOV     A,?VB
   1222.94 000026 F0               MOVX    @DPTR,A
   1222.95 000027 A3               INC     DPTR
   1222.96 000028          
   1222.97 000028 78..             MOV     R0,#?V0
   1222.98 00002A E6       Loop:   MOV     A,@R0
   1222.99 00002B 08               INC     R0
   1222.100 00002C F0               MOVX    @DPTR,A
   1222.101 00002D A3               INC     DPTR
   1222.102 00002E DEFA             DJNZ    R6,Loop
   1222.103 000030          
   1222.104 000030          ;=======================================;
   1222.105 000030          ;       Preserve the R7 register.       ;
   1222.106 000030          ;=======================================;
   1222.107 000030 EF               MOV     A,R7
   1222.108 000031 F0               MOVX    @DPTR,A
   1222.109 000032 A3               INC     DPTR
   1222.110 000033          
   1222.111 000033          ;=======================================;
   1222.112 000033          ; Move the function return address from ;
   1222.113 000033          ; the IDATA stack to the XDATA stack.   ;
   1222.114 000033          ;
   1222.115 000033          ;   IDATA stack
   1222.116 000033          ;
   1222.117 000033          ;  +----------+
   1222.118 000033          ;  |  ?DPX (if extended dptr)    | <-- SP
   1222.119 000033          ;  |   DPH    |
   1222.120 000033          ;  |   DPL    |
   1222.121 000033          ;  + - - - - -+
   1222.122 000033          ;  | Ret_lib_E (if far)|
   1222.123 000033          ;  | Ret_lib_H|
   1222.124 000033          ;  | Ret_lib_L|
   1222.125 000033          ;  + - - - - -+
   1222.126 000033          ;  | Ret_cc_E (if banked or far)|
   1222.127 000033          ;  | Ret_cc_H |
   1222.128 000033          ;  | Ret_cc_L | <-- R0
   1222.129 000033          ;  +----------+
   1222.130 000033          ;
   1222.131 000033          ; offset = 5
   1222.132 000033          ; if (CM = far) offest += 2
   1222.133 000033          ; else if (CM = banked) offset +=1
   1222.134 000033          ; if (extended_dptr) offset += 1
   1222.135 000033          ;
   1222.136 000033          ;
   1222.137 000033          ;=======================================;
   1222.138 000033          
   1222.139 000033          
   1222.140 000033 E581             MOV     A,SP
   1222.141 000035          
   1222.142 000035                  IF      'BANKED'='BANKED'
   1222.143 000035          #if (defined (__EXTENDED_DPTR__))
   1222.144 000035          #else
   1222.145 000035 24FA             ADD     A,#-6
   1222.146 000037          #endif
   1222.147 000037                  ELSE
   1222.148 000037          #if (__CODE_MODEL__ == __CM_FAR__)
   1222.149 000037            #if (defined (__EXTENDED_DPTR__))
   1222.150 000037                  ADD     A,#-8
   1222.151 000037            #else
   1222.152 000037                  ADD     A,#-7
   1222.153 000037            #endif
   1222.154 000037          #else
   1222.155 000037            #if (defined (__EXTENDED_DPTR__))
   1222.156 000037                  ADD     A,#-6
   1222.157 000037            #else
   1222.158 000037                  ADD     A,#-5
   1222.159 000037            #endif
   1222.160 000037          #endif
   1222.161 000037                  ENDIF
   1222.162 000037          
   1222.163 000037 F8               MOV     R0,A
   1222.164 000038          
   1222.165 000038 E6               MOV     A,@R0
   1222.166 000039 08               INC     R0
   1222.167 00003A F0               MOVX    @DPTR,A    ; Ret_cc_L ==>
                                                       XStack
   1222.168 00003B A3               INC     DPTR
   1222.169 00003C          
   1222.170 00003C E6               MOV     A,@R0
   1222.171 00003D 08               INC     R0
   1222.172 00003E F0               MOVX    @DPTR,A    ; Ret_cc_H ==>
                                                       XStack
   1222.173 00003F A3               INC     DPTR
   1222.174 000040          
   1222.175 000040                  IF      'BANKED'='BANKED'
   1222.176 000040 E6               MOV     A,@R0
   1222.177 000041 08               INC     R0
   1222.178 000042 F0               MOVX    @DPTR,A    ; Ret_cc_E ==>
                                                       XStack
   1222.179 000043 A3               INC     DPTR
   1222.180 000044                  ELSE
   1222.181 000044          #if ((__CODE_MODEL__ == __CM_FAR__))
   1222.182 000044                  MOV     A,@R0
   1222.183 000044                  INC     R0
   1222.184 000044                  MOVX    @DPTR,A    ; Ret_cc_E ==>
                            XStack
   1222.185 000044                  INC     DPTR
   1222.186 000044          #endif
   1222.187 000044                  ENDIF
   1222.188 000044          
   1222.189 000044 08               INC     R0
   1222.190 000045 08               INC     R0
   1222.191 000046          #if (__CODE_MODEL__ == __CM_FAR__)
   1222.192 000046          #endif
   1222.193 000046          
   1222.194 000046 E6               MOV     A,@R0
   1222.195 000047 08               INC     R0
   1222.196 000048 F0               MOVX    @DPTR,A    ; DPL ==> XStack
   1222.197 000049 A3               INC     DPTR
   1222.198 00004A          
   1222.199 00004A E6               MOV     A,@R0
   1222.200 00004B 08               INC     R0
   1222.201 00004C F0               MOVX    @DPTR,A    ; DPH ==> XStack
   1222.202 00004D A3               INC     DPTR
   1222.203 00004E          
   1222.204 00004E          #if (defined(__EXTENDED_DPTR__))
   1222.205 00004E          #endif
   1222.206 00004E          
   1222.207 00004E          #if (defined(__EXTENDED_DPTR__))
   1222.208 00004E          #endif
   1222.209 00004E 1581             DEC     SP
   1222.210 000050 1581             DEC     SP
   1222.211 000052          
   1222.212 000052          #if ( __CODE_MODEL__ == __CM_FAR__ )
   1222.213 000052          #endif
   1222.214 000052 D0E0             POP     A
   1222.215 000054 FE               MOV     R6,A
   1222.216 000055 D0E0             POP     A
   1222.217 000057 F8               MOV     R0,A
   1222.218 000058          
   1222.219 000058                  IF      'BANKED'='BANKED'
   1222.220 000058 1581             DEC     SP
   1222.221 00005A                  ELSE
   1222.222 00005A          #if ((__CODE_MODEL__ == __CM_FAR__))
   1222.223 00005A                  DEC     SP
   1222.224 00005A          #endif
   1222.225 00005A                  ENDIF
   1222.226 00005A          
   1222.227 00005A 1581             DEC     SP
   1222.228 00005C 1581             DEC     SP
   1222.229 00005E          
   1222.230 00005E E8               MOV     A,R0
   1222.231 00005F C0E0             PUSH    A
   1222.232 000061 EE               MOV     A,R6
   1222.233 000062 C0E0             PUSH    A
   1222.234 000064          #if ( __CODE_MODEL__ == __CM_FAR__ )
   1222.235 000064          #endif
   1222.236 000064 22               RET
   1222.237 000065          
   1222.238 000065          ?BANKED_ENTER_XDATA_CFI_INVALID_ENDS:
   1222.239 000065              cfi valid
   1222.240 000065              cfi ENDBLOCK ?BANKED_ENTER_XDATA
   1222.241 000065                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?BANKED_ENTER_XDATA REL    CONST PUB UNTYP.       RCODE      0 
?BANKED_ENTER_XDATA_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?BANKED_ENTER_XDATA_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      65 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?XSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BANKED              ABS    CONST UNTYP.           ASEG       Not solved 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      2A 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:7D46          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 101         #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1222.242 000000          
   1222.243 000000                  ENDM
   1223    000000                  enter_XSP FUNC
   1223.1  000000                  MODULE  ?FUNC_ENTER_XDATA
   1223.2  000000                  RSEG    XSTACK:NOROOT:XDATA
   1223.3  000000                  RSEG    RCODE:CODE:NOROOT
   1223.4  000000                  PUBLIC  ?FUNC_ENTER_XDATA
   1223.5  000000                  EXTERN  ?V0
   1223.6  000000                  EXTERN  ?VB
   1223.7  000000                  EXTERN  ?XSP
   1223    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1223.1  000000          #ifdef __EXTENDED_DPTR__
   1223.2  000000          #endif ; __EXTENDED_DPTR__
   1223.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1223.4  000000          #ifdef __DPTR_SEPARATE__
   1223.5  000000          #ifdef __EXTENDED_DPTR__
   1223.6  000000          #endif ; __EXTENDED_DPTR__
   1223.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1223.8  000000          #ifdef __EXTENDED_DPTR__
   1223.9  000000          #endif ; __EXTENDED_DPTR__
   1223.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1223.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1223.12 000000          #ifdef __EXTENDED_DPTR__
   1223.13 000000          #endif ; __EXTENDED_DPTR__
   1223.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1223.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1223.16 000000          #ifdef __EXTENDED_DPTR__
   1223.17 000000          #endif ; __EXTENDED_DPTR__
   1223.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1223.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1223.20 000000          #ifdef __EXTENDED_DPTR__
   1223.21 000000          #endif ; __EXTENDED_DPTR__
   1223.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1223.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1223.24 000000          #ifdef __EXTENDED_DPTR__
   1223.25 000000          #endif ; __EXTENDED_DPTR__
   1223.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1223.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1223.28 000000          #ifdef __EXTENDED_DPTR__
   1223.29 000000          #endif ; __EXTENDED_DPTR__
   1223.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1223.31 000000          #endif ; __DPTR_SEPARATE__
   1223.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1223.33 000000                  ENDM
   1223.34 000000          
   1223.35 000000              cfi BLOCK ?FUNC_ENTER_XDATA Using cfi_common
   1223.36 000000              cfi NOFUNCTION
   1223.37 000000              cfi A     Undefined
   1223.38 000000          ?FUNC_ENTER_XDATA:
   1223.39 000000          ?FUNC_ENTER_XDATA_CFI_INVALID_BEGINS:
   1223.40 000000              cfi invalid
   1223.41 000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1223.42 000000          #endif ; __NUMBER_OF_DPTRS__
   1223.43 000000          
   1223.44 000000 25..             ADD     A,XSP_L
   1223.45 000002 C582             XCH     A,DPL
   1223.46 000004 C0E0             PUSH    A
   1223.47 000006              cfi CFA_MACHINE MACHINE_SP - 5
   1223.48 000006 E5..             MOV     A,XSP_H
   1223.49 000008 34FF             ADDC    A,#255
   1223.50 00000A C583             XCH     A,DPH
   1223.51 00000C C0E0             PUSH    A
   1223.52 00000E          #ifdef __EXTENDED_DPTR__
   1223.53 00000E          #endif
   1223.54 00000E              cfi CFA_MACHINE MACHINE_SP - 6
   1223.55 00000E E5..             MOV     A,XSP_L
   1223.56 000010 C3               CLR     C
   1223.57 000011 9582             SUBB    A,DPL
   1223.58 000013          
   1223.59 000013                  IF      'FUNC'='BANKED'
   1223.60 000013          #if (defined (__EXTENDED_DPTR__))
   1223.61 000013                  ADD     A,#-9
   1223.62 000013          #else
   1223.63 000013                  ADD     A,#-8
   1223.64 000013          #endif
   1223.65 000013                  ELSE
   1223.66 000013          #if ((__CODE_MODEL__ == __CM_FAR__) && (defined
                            (__EXTENDED_DPTR__)))
   1223.67 000013          #elif (defined (__EXTENDED_DPTR__))
   1223.68 000013          #else
   1223.69 000013 24F9             ADD     A,#-7
   1223.70 000015          #endif
   1223.71 000015                  ENDIF
   1223.72 000015          
   1223.73 000015 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   1223.74 000017              cfi CFA_MACHINE MACHINE_SP - 7
   1223.75 000017 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   1223.76 000019 8583..           MOV     XSP_H,DPH
   1223.77 00001C 8582..           MOV     XSP_L,DPL
   1223.78 00001F D0A8             POP     0xA8 /* IE */
   1223.79 000021              cfi CFA_MACHINE MACHINE_SP - 6
   1223.80 000021          
   1223.81 000021          ;=======================================;
   1223.82 000021          ;  Preserve the R6 register.            ;
   1223.83 000021          ;=======================================;
   1223.84 000021 CE               XCH     A,R6            ; R6 = Number of
                                                            virtual registers
                                                            to push
   1223.85 000022 F0               MOVX    @DPTR,A
   1223.86 000023 A3               INC     DPTR
   1223.87 000024          
   1223.88 000024          ;=======================================;
   1223.89 000024          ;    Move all the virtual registers     ;
   1223.90 000024          ;    in IDATA to the XDATA stack.       ;
   1223.91 000024          ;=======================================;
   1223.92 000024 E5..             MOV     A,?VB
   1223.93 000026 F0               MOVX    @DPTR,A
   1223.94 000027 A3               INC     DPTR
   1223.95 000028          
   1223.96 000028 78..             MOV     R0,#?V0
   1223.97 00002A E6       Loop:   MOV     A,@R0
   1223.98 00002B 08               INC     R0
   1223.99 00002C F0               MOVX    @DPTR,A
   1223.100 00002D A3               INC     DPTR
   1223.101 00002E DEFA             DJNZ    R6,Loop
   1223.102 000030          
   1223.103 000030          ;=======================================;
   1223.104 000030          ;       Preserve the R7 register.       ;
   1223.105 000030          ;=======================================;
   1223.106 000030 EF               MOV     A,R7
   1223.107 000031 F0               MOVX    @DPTR,A
   1223.108 000032 A3               INC     DPTR
   1223.109 000033          
   1223.110 000033          ;=======================================;
   1223.111 000033          ; Move the function return address from ;
   1223.112 000033          ; the IDATA stack to the XDATA stack.   ;
   1223.113 000033          ;
   1223.114 000033          ;   IDATA stack
   1223.115 000033          ;
   1223.116 000033          ;  +----------+
   1223.117 000033          ;  |  ?DPX (if extended dptr)    | <-- SP
   1223.118 000033          ;  |   DPH    |
   1223.119 000033          ;  |   DPL    |
   1223.120 000033          ;  + - - - - -+
   1223.121 000033          ;  | Ret_lib_E (if far)|
   1223.122 000033          ;  | Ret_lib_H|
   1223.123 000033          ;  | Ret_lib_L|
   1223.124 000033          ;  + - - - - -+
   1223.125 000033          ;  | Ret_cc_E (if banked or far)|
   1223.126 000033          ;  | Ret_cc_H |
   1223.127 000033          ;  | Ret_cc_L | <-- R0
   1223.128 000033          ;  +----------+
   1223.129 000033          ;
   1223.130 000033          ; offset = 5
   1223.131 000033          ; if (CM = far) offest += 2
   1223.132 000033          ; else if (CM = banked) offset +=1
   1223.133 000033          ; if (extended_dptr) offset += 1
   1223.134 000033          ;
   1223.135 000033          ;
   1223.136 000033          ;=======================================;
   1223.137 000033          
   1223.138 000033          
   1223.139 000033 E581             MOV     A,SP
   1223.140 000035          
   1223.141 000035                  IF      'FUNC'='BANKED'
   1223.142 000035          #if (defined (__EXTENDED_DPTR__))
   1223.143 000035                  ADD     A,#-7
   1223.144 000035          #else
   1223.145 000035                  ADD     A,#-6
   1223.146 000035          #endif
   1223.147 000035                  ELSE
   1223.148 000035          #if (__CODE_MODEL__ == __CM_FAR__)
   1223.149 000035            #if (defined (__EXTENDED_DPTR__))
   1223.150 000035            #else
   1223.151 000035            #endif
   1223.152 000035          #else
   1223.153 000035            #if (defined (__EXTENDED_DPTR__))
   1223.154 000035            #else
   1223.155 000035 24FB             ADD     A,#-5
   1223.156 000037            #endif
   1223.157 000037          #endif
   1223.158 000037                  ENDIF
   1223.159 000037          
   1223.160 000037 F8               MOV     R0,A
   1223.161 000038          
   1223.162 000038 E6               MOV     A,@R0
   1223.163 000039 08               INC     R0
   1223.164 00003A F0               MOVX    @DPTR,A    ; Ret_cc_L ==>
                                                       XStack
   1223.165 00003B A3               INC     DPTR
   1223.166 00003C          
   1223.167 00003C E6               MOV     A,@R0
   1223.168 00003D 08               INC     R0
   1223.169 00003E F0               MOVX    @DPTR,A    ; Ret_cc_H ==>
                                                       XStack
   1223.170 00003F A3               INC     DPTR
   1223.171 000040          
   1223.172 000040                  IF      'FUNC'='BANKED'
   1223.173 000040                  MOV     A,@R0
   1223.174 000040                  INC     R0
   1223.175 000040                  MOVX    @DPTR,A    ; Ret_cc_E ==>
                            XStack
   1223.176 000040                  INC     DPTR
   1223.177 000040                  ELSE
   1223.178 000040          #if ((__CODE_MODEL__ == __CM_FAR__))
   1223.179 000040          #endif
   1223.180 000040                  ENDIF
   1223.181 000040          
   1223.182 000040 08               INC     R0
   1223.183 000041 08               INC     R0
   1223.184 000042          #if (__CODE_MODEL__ == __CM_FAR__)
   1223.185 000042          #endif
   1223.186 000042          
   1223.187 000042 E6               MOV     A,@R0
   1223.188 000043 08               INC     R0
   1223.189 000044 F0               MOVX    @DPTR,A    ; DPL ==> XStack
   1223.190 000045 A3               INC     DPTR
   1223.191 000046          
   1223.192 000046 E6               MOV     A,@R0
   1223.193 000047 08               INC     R0
   1223.194 000048 F0               MOVX    @DPTR,A    ; DPH ==> XStack
   1223.195 000049 A3               INC     DPTR
   1223.196 00004A          
   1223.197 00004A          #if (defined(__EXTENDED_DPTR__))
   1223.198 00004A          #endif
   1223.199 00004A          
   1223.200 00004A          #if (defined(__EXTENDED_DPTR__))
   1223.201 00004A          #endif
   1223.202 00004A 1581             DEC     SP
   1223.203 00004C 1581             DEC     SP
   1223.204 00004E          
   1223.205 00004E          #if ( __CODE_MODEL__ == __CM_FAR__ )
   1223.206 00004E          #endif
   1223.207 00004E D0E0             POP     A
   1223.208 000050 FE               MOV     R6,A
   1223.209 000051 D0E0             POP     A
   1223.210 000053 F8               MOV     R0,A
   1223.211 000054          
   1223.212 000054                  IF      'FUNC'='BANKED'
   1223.213 000054                  DEC     SP
   1223.214 000054                  ELSE
   1223.215 000054          #if ((__CODE_MODEL__ == __CM_FAR__))
   1223.216 000054          #endif
   1223.217 000054                  ENDIF
   1223.218 000054          
   1223.219 000054 1581             DEC     SP
   1223.220 000056 1581             DEC     SP
   1223.221 000058          
   1223.222 000058 E8               MOV     A,R0
   1223.223 000059 C0E0             PUSH    A
   1223.224 00005B EE               MOV     A,R6
   1223.225 00005C C0E0             PUSH    A
   1223.226 00005E          #if ( __CODE_MODEL__ == __CM_FAR__ )
   1223.227 00005E          #endif
   1223.228 00005E 22               RET
   1223.229 00005F          
   1223.230 00005F          ?FUNC_ENTER_XDATA_CFI_INVALID_ENDS:
   1223.231 00005F              cfi valid
   1223.232 00005F              cfi ENDBLOCK ?FUNC_ENTER_XDATA
   1223.233 00005F                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_DPTR__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?FUNC_ENTER_XDATA   REL    CONST PUB UNTYP.       RCODE      0 
?FUNC_ENTER_XDATA_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?FUNC_ENTER_XDATA_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      5F 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?XSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FUNC                ABS    CONST UNTYP.           ASEG       Not solved 
Loop                REL    CONST UNTYP.           RCODE      2A 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:5FD9          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 95          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1223.234 000000          
   1223.235 000000                  ENDM
   1224    000000          
   1225    000000          ;---------------------------------------------------
                           --------------------------
   1226    000000          ;
   1227    000000          ;       Function: ?FUNC_LEAVE_XDATA
   1228    000000          ;
   1229    000000          ;       Description:
   1230    000000          ;               Restore register R6 and R7 plus a
                            specified number of virtual
   1231    000000          ;               registers from the machine
                            stack.
   1232    000000          ;
   1233    000000          ;               +----------+
   1234    000000          ;               |  ?DPX (if extended dptr)  
                            |
   1235    000000          ;               + - - - - -+
   1236    000000          ;               |   DPH    |
   1237    000000          ;               + - - - - -+
   1238    000000          ;               |   DPL    |
   1239    000000          ;               + - - - - -+
   1240    000000          ;               | Ret_cc_E (if banked or far)
                            |
   1241    000000          ;               + - - - - -+
   1242    000000          ;               | Ret_cc_H |
   1243    000000          ;               + - - - - -+
   1244    000000          ;               | Ret_cc_L |
   1245    000000          ;               + - - - - -+
   1246    000000          ;               |    R7    |
   1247    000000          ;               + - - - - -+
   1248    000000          ;               |    VR    |
   1249    000000          ;               + - - - - -+
   1250    000000          ;               |    VB    |
   1251    000000          ;               + - - - - -+
   1252    000000          ;               |    R6    |
   1253    000000          ;               + - - - - -+
   1254    000000          ;               |          | <-- XSP
   1255    000000          ;               +----------+
   1256    000000          ;
   1257    000000          ;
   1258    000000          ;       Register input:
   1259    000000          ;               R7 Number of vitrual registers to
                            restore
   1260    000000          ;
   1261    000000          ;       Register output:
   1262    000000          ;               R0     = Undefined
   1263    000000          ;               DPTR   = Restored value
   1264    000000          ;               R6     = Restored value
   1265    000000          ;               R7     = Restored value
   1266    000000          ;               A      = Undefined
   1267    000000          ;               B      = Undefined
   1268    000000          ;
   1269    000000          ;       Multiple DPTR
   1270    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   1271    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   1272    000000          ;
   1273    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   1274    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   1275    000000          ;
   1276    000000          ;       Stack usage: 2
   1277    000000          ;
   1278    000000          ;---------------------------------------------------
                           --------------------------
   1279    000000          
   1419    000000          
   1420    000000                  leave_XSP BANKED
   1420.1  000000          
   1420.2  000000                  MODULE  ?BANKED_LEAVE_XDATA
   1420.3  000000                  RSEG    XSTACK:NOROOT:XDATA
   1420.4  000000                  RSEG    RCODE:CODE:NOROOT
   1420.5  000000                  PUBLIC  ?BANKED_LEAVE_XDATA
   1420.6  000000                  EXTERN  ?VB
   1420.7  000000                  EXTERN  ?V0
   1420.8  000000                  EXTERN  ?XSP
   1420.9  000000          ;#if ((__CODE_MODEL__ == __CM_BANKED_EXT2__))
   1420.10 000000                  EXTERN  ?RET_EXT2
   1420.11 000000          ;#endif
   1420.12 000000                  IF      'BANKED'='BANKED'
   1420.13 000000                  EXTERN  ?BRET
   1420.14 000000                  ENDIF
   1420.15 000000          
   1420    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1420.1  000000          #ifdef __EXTENDED_DPTR__
   1420.2  000000          #endif ; __EXTENDED_DPTR__
   1420.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1420.4  000000          #ifdef __DPTR_SEPARATE__
   1420.5  000000          #ifdef __EXTENDED_DPTR__
   1420.6  000000          #endif ; __EXTENDED_DPTR__
   1420.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1420.8  000000          #ifdef __EXTENDED_DPTR__
   1420.9  000000          #endif ; __EXTENDED_DPTR__
   1420.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1420.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1420.12 000000          #ifdef __EXTENDED_DPTR__
   1420.13 000000          #endif ; __EXTENDED_DPTR__
   1420.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1420.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1420.16 000000          #ifdef __EXTENDED_DPTR__
   1420.17 000000          #endif ; __EXTENDED_DPTR__
   1420.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1420.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1420.20 000000          #ifdef __EXTENDED_DPTR__
   1420.21 000000          #endif ; __EXTENDED_DPTR__
   1420.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1420.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1420.24 000000          #ifdef __EXTENDED_DPTR__
   1420.25 000000          #endif ; __EXTENDED_DPTR__
   1420.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1420.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1420.28 000000          #ifdef __EXTENDED_DPTR__
   1420.29 000000          #endif ; __EXTENDED_DPTR__
   1420.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1420.31 000000          #endif ; __DPTR_SEPARATE__
   1420.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1420.33 000000                  ENDM
   1420.34 000000          
   1420.35 000000              cfi BLOCK ?BANKED_LEAVE_XDATA USING cfi_common
   1420.36 000000              cfi NOFUNCTION
   1420.37 000000              cfi A     Undefined
   1420.38 000000          ?BANKED_LEAVE_XDATA:
   1420.39 000000          ?BANKED_LEAVE_XDATA_CFI_INVALID_BEGINS:
   1420.40 000000              cfi invalid
   1420.41 000000          
   1420.42 000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1420.43 000000          #endif ; __NUMBER_OF_DPTRS__
   1420.44 000000          
   1420.45 000000 85..83           MOV     DPH,XSP_H
   1420.46 000003 85..82           MOV     DPL,XSP_L
   1420.47 000006          #ifdef __EXTENDED_DPTR__
   1420.48 000006          #endif
   1420.49 000006          
   1420.50 000006          ;=======================================;
   1420.51 000006          ;       Restore the R6 register.        ;
   1420.52 000006          ;=======================================;
   1420.53 000006 E0               MOVX    A,@DPTR
   1420.54 000007 A3               INC     DPTR
   1420.55 000008 FE               MOV     R6,A
   1420.56 000009          
   1420.57 000009          ;=======================================;
   1420.58 000009          ;   Restore VB register.                ;
   1420.59 000009          ;=======================================;
   1420.60 000009 E0               MOVX    A,@DPTR
   1420.61 00000A A3               INC     DPTR
   1420.62 00000B F5..             MOV     ?VB,A
   1420.63 00000D          
   1420.64 00000D          ;=======================================;
   1420.65 00000D          ;   Restore all the virtual registers.  ;
   1420.66 00000D          ;=======================================;
   1420.67 00000D 78..             MOV     R0,#?V0
   1420.68 00000F E0       Loop:   MOVX    A,@DPTR
   1420.69 000010 A3               INC     DPTR
   1420.70 000011 F6               MOV     @R0,A
   1420.71 000012 08               INC     R0
   1420.72 000013 DFFA             DJNZ    R7,Loop
   1420.73 000015          
   1420.74 000015          ;=======================================;
   1420.75 000015          ;       Restore the R7 register.        ;
   1420.76 000015          ;=======================================;
   1420.77 000015 E0               MOVX    A,@DPTR
   1420.78 000016 A3               INC     DPTR
   1420.79 000017 FF               MOV     R7,A
   1420.80 000018                  
   1420.81 000018          ;===========================================;
   1420.82 000018          ;       Prepare IStack with Return address.
                            ;
   1420.83 000018          ;===========================================;
   1420.84 000018 E0               MOVX    A,@DPTR
   1420.85 000019 A3               INC     DPTR
   1420.86 00001A C0E0             PUSH    A          ; Ret_cc_L ==> IStack
   1420.87 00001C E0               MOVX    A,@DPTR
   1420.88 00001D A3               INC     DPTR
   1420.89 00001E C0E0             PUSH    A          ; Ret_cc_H ==> IStack
   1420.90 000020          
   1420.91 000020                  IF      'BANKED'='BANKED'
   1420.92 000020 E0               MOVX    A,@DPTR
   1420.93 000021 A3               INC     DPTR
   1420.94 000022 C0E0             PUSH    A          ; Ret_cc_E ==> IStack
   1420.95 000024                  ELSE
   1420.96 000024          #if ( (__CODE_MODEL__ == __CM_FAR__))
   1420.97 000024                  MOVX    A,@DPTR
   1420.98 000024                  INC     DPTR
   1420.99 000024                  PUSH    A          ; Ret_cc_E ==> IStack
   1420.100 000024          #endif
   1420.101 000024                  ENDIF
   1420.102 000024          
   1420.103 000024          ;=======================================;
   1420.104 000024          ;       Prepare IStack with old DPTR.   ;
   1420.105 000024          ;=======================================;
   1420.106 000024 E0               MOVX    A,@DPTR
   1420.107 000025 A3               INC     DPTR
   1420.108 000026 C0E0             PUSH    A          ; old_DPL  ==>
                                                       IStack
   1420.109 000028 E0               MOVX    A,@DPTR
   1420.110 000029 A3               INC     DPTR
   1420.111 00002A C0E0             PUSH    A          ; old_DPH  ==>
                                                       IStack
   1420.112 00002C          #if (defined (__EXTENDED_DPTR__) )
   1420.113 00002C          #endif
   1420.114 00002C          
   1420.115 00002C          ;=======================================;
   1420.116 00002C          ;       Dealloc XSP.                    ;
   1420.117 00002C          ;=======================================;
   1420.118 00002C 85A8F0           MOV     B,0xA8 /* IE */     ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   1420.119 00002F C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   1420.120 000031 8582..           MOV     XSP_L,DPL
   1420.121 000034 8583..           MOV     XSP_H,DPH
   1420.122 000037 85F0A8           MOV     0xA8 /* IE */,B
   1420.123 00003A          
   1420.124 00003A          ;=======================================;
   1420.125 00003A          ;       Restore DPTR register.          ;
   1420.126 00003A          ;=======================================;
   1420.127 00003A          #if (defined (__EXTENDED_DPTR__) )
   1420.128 00003A          #endif
   1420.129 00003A D083             POP     DPH
   1420.130 00003C              cfi CFA_MACHINE MACHINE_SP - 0
   1420.131 00003C D082             POP     DPL
   1420.132 00003E              cfi CFA_MACHINE MACHINE_SP - 0
   1420.133 00003E          
   1420.134 00003E          #if  (__NUMBER_OF_DPTRS__ > 1)
   1420.135 00003E          #endif
   1420.136 00003E          
   1420.137 00003E                  IF      'BANKED'='BANKED'
   1420.138 00003E 02....           LJMP    ?BRET
   1420.139 000041                  ELSE
   1420.140 000041                  RET
   1420.141 000041                  ENDIF
   1420.142 000041          
   1420.143 000041          ?BANKED_LEAVE_XDATA_CFI_INVALID_ENDS:
   1420.144 000041              cfi valid
   1420.145 000041              cfi ENDBLOCK ?BANKED_LEAVE_XDATA
   1420.146 000041                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?BANKED_LEAVE_XDATA REL    CONST PUB UNTYP.       RCODE      0 
?BANKED_LEAVE_XDATA_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?BANKED_LEAVE_XDATA_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      41 
?BRET               ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
?RET_EXT2           ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?XSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BANKED              ABS    CONST UNTYP.           ASEG       Not solved 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      F 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:86F4          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 65          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1420.147 000000          
   1420.148 000000                  ENDM
   1421    000000                  leave_XSP FUNC
   1421.1  000000          
   1421.2  000000                  MODULE  ?FUNC_LEAVE_XDATA
   1421.3  000000                  RSEG    XSTACK:NOROOT:XDATA
   1421.4  000000                  RSEG    RCODE:CODE:NOROOT
   1421.5  000000                  PUBLIC  ?FUNC_LEAVE_XDATA
   1421.6  000000                  EXTERN  ?VB
   1421.7  000000                  EXTERN  ?V0
   1421.8  000000                  EXTERN  ?XSP
   1421.9  000000          ;#if ((__CODE_MODEL__ == __CM_BANKED_EXT2__))
   1421.10 000000                  EXTERN  ?RET_EXT2
   1421.11 000000          ;#endif
   1421.12 000000                  IF      'FUNC'='BANKED'
   1421.13 000000                  EXTERN  ?BRET
   1421.14 000000                  ENDIF
   1421.15 000000          
   1421    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1421.1  000000          #ifdef __EXTENDED_DPTR__
   1421.2  000000          #endif ; __EXTENDED_DPTR__
   1421.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1421.4  000000          #ifdef __DPTR_SEPARATE__
   1421.5  000000          #ifdef __EXTENDED_DPTR__
   1421.6  000000          #endif ; __EXTENDED_DPTR__
   1421.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1421.8  000000          #ifdef __EXTENDED_DPTR__
   1421.9  000000          #endif ; __EXTENDED_DPTR__
   1421.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1421.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1421.12 000000          #ifdef __EXTENDED_DPTR__
   1421.13 000000          #endif ; __EXTENDED_DPTR__
   1421.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1421.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1421.16 000000          #ifdef __EXTENDED_DPTR__
   1421.17 000000          #endif ; __EXTENDED_DPTR__
   1421.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1421.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1421.20 000000          #ifdef __EXTENDED_DPTR__
   1421.21 000000          #endif ; __EXTENDED_DPTR__
   1421.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1421.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1421.24 000000          #ifdef __EXTENDED_DPTR__
   1421.25 000000          #endif ; __EXTENDED_DPTR__
   1421.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1421.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1421.28 000000          #ifdef __EXTENDED_DPTR__
   1421.29 000000          #endif ; __EXTENDED_DPTR__
   1421.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1421.31 000000          #endif ; __DPTR_SEPARATE__
   1421.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1421.33 000000                  ENDM
   1421.34 000000          
   1421.35 000000              cfi BLOCK ?FUNC_LEAVE_XDATA USING cfi_common
   1421.36 000000              cfi NOFUNCTION
   1421.37 000000              cfi A     Undefined
   1421.38 000000          ?FUNC_LEAVE_XDATA:
   1421.39 000000          ?FUNC_LEAVE_XDATA_CFI_INVALID_BEGINS:
   1421.40 000000              cfi invalid
   1421.41 000000          
   1421.42 000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1421.43 000000          #endif ; __NUMBER_OF_DPTRS__
   1421.44 000000          
   1421.45 000000 85..83           MOV     DPH,XSP_H
   1421.46 000003 85..82           MOV     DPL,XSP_L
   1421.47 000006          #ifdef __EXTENDED_DPTR__
   1421.48 000006          #endif
   1421.49 000006          
   1421.50 000006          ;=======================================;
   1421.51 000006          ;       Restore the R6 register.        ;
   1421.52 000006          ;=======================================;
   1421.53 000006 E0               MOVX    A,@DPTR
   1421.54 000007 A3               INC     DPTR
   1421.55 000008 FE               MOV     R6,A
   1421.56 000009          
   1421.57 000009          ;=======================================;
   1421.58 000009          ;   Restore VB register.                ;
   1421.59 000009          ;=======================================;
   1421.60 000009 E0               MOVX    A,@DPTR
   1421.61 00000A A3               INC     DPTR
   1421.62 00000B F5..             MOV     ?VB,A
   1421.63 00000D          
   1421.64 00000D          ;=======================================;
   1421.65 00000D          ;   Restore all the virtual registers.  ;
   1421.66 00000D          ;=======================================;
   1421.67 00000D 78..             MOV     R0,#?V0
   1421.68 00000F E0       Loop:   MOVX    A,@DPTR
   1421.69 000010 A3               INC     DPTR
   1421.70 000011 F6               MOV     @R0,A
   1421.71 000012 08               INC     R0
   1421.72 000013 DFFA             DJNZ    R7,Loop
   1421.73 000015          
   1421.74 000015          ;=======================================;
   1421.75 000015          ;       Restore the R7 register.        ;
   1421.76 000015          ;=======================================;
   1421.77 000015 E0               MOVX    A,@DPTR
   1421.78 000016 A3               INC     DPTR
   1421.79 000017 FF               MOV     R7,A
   1421.80 000018                  
   1421.81 000018          ;===========================================;
   1421.82 000018          ;       Prepare IStack with Return address.
                            ;
   1421.83 000018          ;===========================================;
   1421.84 000018 E0               MOVX    A,@DPTR
   1421.85 000019 A3               INC     DPTR
   1421.86 00001A C0E0             PUSH    A          ; Ret_cc_L ==> IStack
   1421.87 00001C E0               MOVX    A,@DPTR
   1421.88 00001D A3               INC     DPTR
   1421.89 00001E C0E0             PUSH    A          ; Ret_cc_H ==> IStack
   1421.90 000020          
   1421.91 000020                  IF      'FUNC'='BANKED'
   1421.92 000020                  MOVX    A,@DPTR
   1421.93 000020                  INC     DPTR
   1421.94 000020                  PUSH    A          ; Ret_cc_E ==> IStack
   1421.95 000020                  ELSE
   1421.96 000020          #if ( (__CODE_MODEL__ == __CM_FAR__))
   1421.97 000020          #endif
   1421.98 000020                  ENDIF
   1421.99 000020          
   1421.100 000020          ;=======================================;
   1421.101 000020          ;       Prepare IStack with old DPTR.   ;
   1421.102 000020          ;=======================================;
   1421.103 000020 E0               MOVX    A,@DPTR
   1421.104 000021 A3               INC     DPTR
   1421.105 000022 C0E0             PUSH    A          ; old_DPL  ==>
                                                       IStack
   1421.106 000024 E0               MOVX    A,@DPTR
   1421.107 000025 A3               INC     DPTR
   1421.108 000026 C0E0             PUSH    A          ; old_DPH  ==>
                                                       IStack
   1421.109 000028          #if (defined (__EXTENDED_DPTR__) )
   1421.110 000028          #endif
   1421.111 000028          
   1421.112 000028          ;=======================================;
   1421.113 000028          ;       Dealloc XSP.                    ;
   1421.114 000028          ;=======================================;
   1421.115 000028 85A8F0           MOV     B,0xA8 /* IE */     ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   1421.116 00002B C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   1421.117 00002D 8582..           MOV     XSP_L,DPL
   1421.118 000030 8583..           MOV     XSP_H,DPH
   1421.119 000033 85F0A8           MOV     0xA8 /* IE */,B
   1421.120 000036          
   1421.121 000036          ;=======================================;
   1421.122 000036          ;       Restore DPTR register.          ;
   1421.123 000036          ;=======================================;
   1421.124 000036          #if (defined (__EXTENDED_DPTR__) )
   1421.125 000036          #endif
   1421.126 000036 D083             POP     DPH
   1421.127 000038              cfi CFA_MACHINE MACHINE_SP - 0
   1421.128 000038 D082             POP     DPL
   1421.129 00003A              cfi CFA_MACHINE MACHINE_SP - 0
   1421.130 00003A          
   1421.131 00003A          #if  (__NUMBER_OF_DPTRS__ > 1)
   1421.132 00003A          #endif
   1421.133 00003A          
   1421.134 00003A                  IF      'FUNC'='BANKED'
   1421.135 00003A                  LJMP    ?BRET
   1421.136 00003A                  ELSE
   1421.137 00003A 22               RET
   1421.138 00003B                  ENDIF
   1421.139 00003B          
   1421.140 00003B          ?FUNC_LEAVE_XDATA_CFI_INVALID_ENDS:
   1421.141 00003B              cfi valid
   1421.142 00003B              cfi ENDBLOCK ?FUNC_LEAVE_XDATA
   1421.143 00003B                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?FUNC_LEAVE_XDATA   REL    CONST PUB UNTYP.       RCODE      0 
?FUNC_LEAVE_XDATA_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?FUNC_LEAVE_XDATA_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      3B 
?RET_EXT2           ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?XSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FUNC                ABS    CONST UNTYP.           ASEG       Not solved 
Loop                REL    CONST UNTYP.           RCODE      F 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
_args               ABS    CONST LOCAL UNTYP.     ASEG       1 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:B984          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 59          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1421.144 000000          
   1421.145 000000                  ENDM
   1422    000000          
   1423    000000          
   1424    000000          ;---------------------------------------------------
                           --------------------------
   1425    000000          ;
   1426    000000          ;       Function: ?INTERRUPT_ENTER_OVERLAY
   1427    000000          ;
   1428    000000          ;       Description:
   1429    000000          ;               Saves register R1-R7,PSW,DPL,DPH,(DP
                           X),B,VB,(DPSEL)
   1430    000000          ;               plus a specified number of
                            virtual
   1431    000000          ;               registers on the machine stack.
   1432    000000          ;
   1433    000000          ;       Register input:
   1434    000000          ;               R0 Points to parameter (PRM) area,
                            where to save registers.
   1435    000000          ;               A  The number of Virtual regs to
                            push.
   1436    000000          ;
   1437    000000          ;       Register output:
   1438    000000          ;               A  = restored value
   1439    000000          ;               R0 = restored value
   1440    000000          ;
   1441    000000          ;       Multiple DPTR
   1442    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   1443    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   1444    000000          ;
   1445    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   1446    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: none
   1447    000000          ;
   1448    000000          ;       Stack usage: NA
   1449    000000          ;
   1450    000000          ;---------------------------------------------------
                           --------------------------
   1451    000000          
   1452    000000                  MODULE  ?INTERRUPT_ENTER_OVERLAY
   1453    000000                  RSEG    RCODE:CODE:NOROOT
   1454    000000                  PUBLIC  ?INTERRUPT_ENTER_OVERLAY
   1455    000000                  EXTERN  ?V0
   1456    000000                  EXTERN  ?VB
   1457    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1457.1  000000          #ifdef __EXTENDED_DPTR__
   1457.2  000000          #endif ; __EXTENDED_DPTR__
   1457.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1457.4  000000          #ifdef __DPTR_SEPARATE__
   1457.5  000000          #ifdef __EXTENDED_DPTR__
   1457.6  000000          #endif ; __EXTENDED_DPTR__
   1457.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1457.8  000000          #ifdef __EXTENDED_DPTR__
   1457.9  000000          #endif ; __EXTENDED_DPTR__
   1457.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1457.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1457.12 000000          #ifdef __EXTENDED_DPTR__
   1457.13 000000          #endif ; __EXTENDED_DPTR__
   1457.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1457.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1457.16 000000          #ifdef __EXTENDED_DPTR__
   1457.17 000000          #endif ; __EXTENDED_DPTR__
   1457.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1457.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1457.20 000000          #ifdef __EXTENDED_DPTR__
   1457.21 000000          #endif ; __EXTENDED_DPTR__
   1457.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1457.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1457.24 000000          #ifdef __EXTENDED_DPTR__
   1457.25 000000          #endif ; __EXTENDED_DPTR__
   1457.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1457.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1457.28 000000          #ifdef __EXTENDED_DPTR__
   1457.29 000000          #endif ; __EXTENDED_DPTR__
   1457.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1457.31 000000          #endif ; __DPTR_SEPARATE__
   1457.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1457.33 000000                  ENDM
   1458    000000          
   1459    000000              cfi BLOCK ?INTERRUPT_ENTER_OVERLAY Using
  cfi_common
   1460    000000              cfi NOFUNCTION
   1461    000000              cfi A     Undefined
   1462    000000          
   1463    000000          ?INTERRUPT_ENTER_OVERLAY:
   1464    000000                  ; save R1-R7
   1465    000000 CF               XCH     A,R7            ; -> R7 = number of
                                                            Vregs to save
   1466    000001 F6               MOV     @R0,A
   1467    000002 08               INC     R0
   1468    000003 EE               MOV     A,R6
   1469    000004 F6               MOV     @R0,A
   1470    000005 08               INC     R0
   1471    000006 ED               MOV     A,R5
   1472    000007 F6               MOV     @R0,A
   1473    000008 08               INC     R0
   1474    000009 EC               MOV     A,R4
   1475    00000A F6               MOV     @R0,A
   1476    00000B 08               INC     R0
   1477    00000C EB               MOV     A,R3
   1478    00000D F6               MOV     @R0,A
   1479    00000E 08               INC     R0
   1480    00000F EA               MOV     A,R2
   1481    000010 F6               MOV     @R0,A
   1482    000011 08               INC     R0
   1483    000012 E9               MOV     A,R1
   1484    000013 F6               MOV     @R0,A
   1485    000014 08               INC     R0
   1486    000015          
   1487    000015                  ; save reg PSW
   1488    000015 A6D0             MOV     @R0,PSW
   1489    000017 08               INC     R0
   1490    000018          
   1491    000018                  ;save reg DPL,DPH,B,VB,(DPSEL)
   1492    000018          #if (__NUMBER_OF_DPTRS__ > 1)
   1495    000018          #ifdef __DPTR_SHADOWED__
   1497    000018          #endif
   1498    000018          #endif
   1499    000018 A682             MOV     @R0,DPL
   1500    00001A 08               INC     R0
   1501    00001B A683             MOV     @R0,DPH
   1502    00001D 08               INC     R0
   1503    00001E          #if (defined (__EXTENDED_DPTR__) )
   1506    00001E          #endif
   1507    00001E A6F0             MOV     @R0,B
   1508    000020 08               INC     R0
   1509    000021 A6..             MOV     @R0,?VB
   1510    000023 08               INC     R0
   1511    000024          
   1512    000024                  ; save virtual registers
   1513    000024 79..             MOV     R1,#?V0
   1514    000026          Loop:   
   1515    000026 E7               MOV     A,@R1
   1516    000027 F6               MOV     @R0,A
   1517    000028 08               INC     R0
   1518    000029 09               INC     R1
   1519    00002A DFFA             DJNZ    R7,Loop
   1520    00002C          
   1521    00002C 22               RET
   1522    00002D          
   1523    00002D              cfi ENDBLOCK ?INTERRUPT_ENTER_OVERLAY
   1524    00002D                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_ENTER_OVERLAYREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      26 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:47B3          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 45          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1525    000000          
   1526    000000          
   1527    000000          ;---------------------------------------------------
                           --------------------------
   1528    000000          ;
   1529    000000          ;       Function: ?SMALL_INTERRUPT_ENTER_OVERLAY
   1530    000000          ;
   1531    000000          ;       Description:
   1532    000000          ;               Saves register DPL,DPH,(DPX),B,VB,(D
                           PSEL)
   1533    000000          ;               plus a specified number of
                            virtual
   1534    000000          ;               registers on the machine stack.
   1535    000000          ;
   1536    000000          ;       Register input:
   1537    000000          ;               R0 Points to parameter (PRM) area,
                            where to save registers.
   1538    000000          ;               R7  The number of Virtual regs to
                            push.
   1539    000000          ;
   1540    000000          ;       Register output:
   1541    000000          ;               A  = restored value
   1542    000000          ;               R7 = restored value
   1543    000000          ;
   1544    000000          ;       Multiple DPTR
   1545    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   1546    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   1547    000000          ;
   1548    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   1549    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: none
   1550    000000          ;
   1551    000000          ;       Stack usage: NA
   1552    000000          ;
   1553    000000          ;---------------------------------------------------
                           --------------------------
   1554    000000          
   1555    000000                  MODULE  ?SMALL_INTERRUPT_ENTER_OVERLAY
   1556    000000                  RSEG    RCODE:CODE:NOROOT
   1557    000000                  PUBLIC  ?SMALL_INTERRUPT_ENTER_OVERLAY
   1558    000000                  EXTERN  ?V0
   1559    000000                  EXTERN  ?VB
   1560    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1560.1  000000          #ifdef __EXTENDED_DPTR__
   1560.2  000000          #endif ; __EXTENDED_DPTR__
   1560.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1560.4  000000          #ifdef __DPTR_SEPARATE__
   1560.5  000000          #ifdef __EXTENDED_DPTR__
   1560.6  000000          #endif ; __EXTENDED_DPTR__
   1560.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1560.8  000000          #ifdef __EXTENDED_DPTR__
   1560.9  000000          #endif ; __EXTENDED_DPTR__
   1560.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1560.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1560.12 000000          #ifdef __EXTENDED_DPTR__
   1560.13 000000          #endif ; __EXTENDED_DPTR__
   1560.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1560.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1560.16 000000          #ifdef __EXTENDED_DPTR__
   1560.17 000000          #endif ; __EXTENDED_DPTR__
   1560.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1560.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1560.20 000000          #ifdef __EXTENDED_DPTR__
   1560.21 000000          #endif ; __EXTENDED_DPTR__
   1560.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1560.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1560.24 000000          #ifdef __EXTENDED_DPTR__
   1560.25 000000          #endif ; __EXTENDED_DPTR__
   1560.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1560.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1560.28 000000          #ifdef __EXTENDED_DPTR__
   1560.29 000000          #endif ; __EXTENDED_DPTR__
   1560.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1560.31 000000          #endif ; __DPTR_SEPARATE__
   1560.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1560.33 000000                  ENDM
   1561    000000          
   1562    000000              cfi BLOCK ?SMALL_INTERRUPT_ENTER_OVERLAY Using
  cfi_common
   1563    000000              cfi NOFUNCTION
   1564    000000              cfi A     Undefined
   1565    000000          
   1566    000000          ?SMALL_INTERRUPT_ENTER_OVERLAY:
   1567    000000                  ;save reg DPL, DPH, B,VB,(DPSEL)
   1568    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1571    000000          #ifdef __DPTR_SHADOWED__
   1573    000000          #endif
   1574    000000          #endif
   1575    000000 A682             MOV     @R0,DPL
   1576    000002 08               INC     R0      
   1577    000003 A683             MOV     @R0,DPH
   1578    000005 08               INC     R0      
   1579    000006          #if (defined (__EXTENDED_DPTR__) )
   1582    000006          #endif
   1583    000006 A6F0             MOV     @R0,B
   1584    000008 08               INC     R0
   1585    000009 A6..             MOV     @R0,?VB
   1586    00000B 08               INC     R0
   1587    00000C          
   1588    00000C                  ; save virtual registers
   1589    00000C 79..             MOV     R1,#?V0
   1590    00000E          Loop:   
   1591    00000E E7               MOV     A,@R1
   1592    00000F F6               MOV     @R0,A
   1593    000010 08               INC     R0
   1594    000011 09               INC     R1
   1595    000012 DFFA             DJNZ    R7,Loop
   1596    000014          
   1597    000014 22               RET
   1598    000015          
   1599    000015              cfi ENDBLOCK ?SMALL_INTERRUPT_ENTER_OVERLAY
   1600    000015                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?SMALL_INTERRUPT_ENTER_OVERLAYREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      E 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:66D           #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 21          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1601    000000          
   1602    000000          
   1603    000000          ;---------------------------------------------------
                           --------------------------
   1604    000000          ;
   1605    000000          ;       Function: ?INTERRUPT_LEAVE_OVERLAY
   1606    000000          ;
   1607    000000          ;       Description:
   1608    000000          ;               Restore register R1-R7,PSW,DPL,DPH,(
                           DPX),B,VB,(DPSEL)
   1609    000000          ;                plus a specified
   1610    000000          ;               number of virtual registers on the
                            machine stack.
   1611    000000          ;
   1612    000000          ;       Register input:
   1613    000000          ;               R0  Points to parameter (PRM) area,
                            from where to restore registers.
   1614    000000          ;               R7  The number of Virtual regs to
                            push.
   1615    000000          ;
   1616    000000          ;       Register output:
   1617    000000          ;               A  = undefined.
   1618    000000          ;               R7 = restored value.
   1619    000000          ;               R0   Is undefined.
   1620    000000          ;
   1621    000000          ;       Multiple DPTR
   1622    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   1623    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   1624    000000          ;
   1625    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   1626    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   1627    000000          ;
   1628    000000          ;       Stack usage: NA
   1629    000000          ;
   1630    000000          ;---------------------------------------------------
                           --------------------------
   1631    000000                  MODULE  ?INTERRUPT_LEAVE_OVERLAY
   1632    000000                  RSEG    RCODE:CODE:NOROOT
   1633    000000                  PUBLIC  ?INTERRUPT_LEAVE_OVERLAY
   1634    000000                  EXTERN  ?V0
   1635    000000                  EXTERN  ?VB
   1636    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1636.1  000000          #ifdef __EXTENDED_DPTR__
   1636.2  000000          #endif ; __EXTENDED_DPTR__
   1636.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1636.4  000000          #ifdef __DPTR_SEPARATE__
   1636.5  000000          #ifdef __EXTENDED_DPTR__
   1636.6  000000          #endif ; __EXTENDED_DPTR__
   1636.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1636.8  000000          #ifdef __EXTENDED_DPTR__
   1636.9  000000          #endif ; __EXTENDED_DPTR__
   1636.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1636.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1636.12 000000          #ifdef __EXTENDED_DPTR__
   1636.13 000000          #endif ; __EXTENDED_DPTR__
   1636.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1636.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1636.16 000000          #ifdef __EXTENDED_DPTR__
   1636.17 000000          #endif ; __EXTENDED_DPTR__
   1636.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1636.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1636.20 000000          #ifdef __EXTENDED_DPTR__
   1636.21 000000          #endif ; __EXTENDED_DPTR__
   1636.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1636.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1636.24 000000          #ifdef __EXTENDED_DPTR__
   1636.25 000000          #endif ; __EXTENDED_DPTR__
   1636.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1636.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1636.28 000000          #ifdef __EXTENDED_DPTR__
   1636.29 000000          #endif ; __EXTENDED_DPTR__
   1636.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1636.31 000000          #endif ; __DPTR_SEPARATE__
   1636.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1636.33 000000                  ENDM
   1637    000000          
   1638    000000              cfi BLOCK ?INTERRUPT_LEAVE_OVERLAY Using
  cfi_common
   1639    000000              cfi NOFUNCTION
   1640    000000              cfi A     Undefined
   1641    000000          
   1642    000000          ?INTERRUPT_LEAVE_OVERLAY:
   1643    000000                  ; restore R1-r7
   1644    000000 E6               MOV     A,@R0
   1645    000001 C0E0             PUSH    A               ; R7 (restored)->
                                                            idata stack
   1646    000003 08               INC     R0
   1647    000004 E6               MOV     A,@R0
   1648    000005 FE               MOV     R6,A
   1649    000006 08               INC     R0
   1650    000007 E6               MOV     A,@R0
   1651    000008 FD               MOV     R5,A
   1652    000009 08               INC     R0
   1653    00000A E6               MOV     A,@R0
   1654    00000B FC               MOV     R4,A
   1655    00000C 08               INC     R0
   1656    00000D E6               MOV     A,@R0
   1657    00000E FB               MOV     R3,A
   1658    00000F 08               INC     R0
   1659    000010 E6               MOV     A,@R0
   1660    000011 FA               MOV     R2,A
   1661    000012 08               INC     R0
   1662    000013 E6               MOV     A,@R0
   1663    000014 C0E0             PUSH    A               ; R1 (restored) ->
                                                            idata stack
   1664    000016 08               INC     R0
   1665    000017          
   1666    000017                  ; restore PSW
   1667    000017 86D0             MOV     PSW,@R0
   1668    000019 08               INC     R0
   1669    00001A          
   1670    00001A                  ; restore B,VB,(DPSEL)
   1671    00001A          #if (__NUMBER_OF_DPTRS__ > 1)
   1674    00001A          #ifdef __DPTR_SHADOWED__
   1676    00001A          #endif
   1677    00001A          #endif
   1678    00001A 8682             MOV     DPL,@R0
   1679    00001C 08               INC     R0      
   1680    00001D 8683             MOV     DPH,@R0
   1681    00001F 08               INC     R0      
   1682    000020          #if (defined (__EXTENDED_DPTR__) )
   1685    000020          #endif
   1686    000020 86F0             MOV     B,@R0
   1687    000022 08               INC     R0
   1688    000023          #if (__NUMBER_OF_DPTRS__ > 1)
   1690    000023          #endif
   1691    000023 86..             MOV     ?VB,@R0
   1692    000025 08               INC     R0
   1693    000026          
   1694    000026                  ; restore virtual register
   1695    000026 79..             MOV     R1,#?V0
   1696    000028          Loop:   
   1697    000028 E6               MOV     A,@R0
   1698    000029 F7               MOV     @R1,A
   1699    00002A 09               INC     R1
   1700    00002B 08               INC     R0
   1701    00002C DFFA             DJNZ    R7,Loop
   1702    00002E          
   1703    00002E                  ; restore R1 and R7
   1704    00002E D0E0             POP     A
   1705    000030 F9               MOV     R1,A
   1706    000031 D0E0             POP     A
   1707    000033 FF               MOV     R7,A
   1708    000034          
   1709    000034                  ; restore R0, A
   1710    000034 D0E0             POP     A
   1711    000036 F8               MOV     R0,A
   1712    000037 D0E0             POP     A
   1713    000039          
   1714    000039 32               RETI
   1715    00003A          
   1716    00003A              cfi ENDBLOCK ?INTERRUPT_LEAVE_OVERLAY
   1717    00003A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_LEAVE_OVERLAYREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      28 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:7E0B          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 58          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1718    000000          
   1719    000000          
   1720    000000          
   1721    000000          ;---------------------------------------------------
                           --------------------------
   1722    000000          ;
   1723    000000          ;       Function: ?SMALL_INTERRUPT_LEAVE_OVERLAY
   1724    000000          ;
   1725    000000          ;       Description:
   1726    000000          ;               Restore register DPL,DPH,(DPX),B,VB,
                           (DPS) plus a specified
   1727    000000          ;               number of virtual registers on the
                            machine stack.
   1728    000000          ;
   1729    000000          ;       Register input:
   1730    000000          ;               R0  Points to parameter (PRM) area,
                            from where to restore registers.
   1731    000000          ;               R7  The number of Virtual regs to
                            push.
   1732    000000          ;
   1733    000000          ;       Register output:
   1734    000000          ;               A  = undefined.
   1735    000000          ;               R7 = restored value.
   1736    000000          ;               R0   Is undefined.
   1737    000000          ;
   1738    000000          ;       Multiple DPTR
   1739    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   1740    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   1741    000000          ;
   1742    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   1743    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   1744    000000          ;
   1745    000000          ;       Stack usage: NA
   1746    000000          ;
   1747    000000          ;---------------------------------------------------
                           --------------------------
   1748    000000                  MODULE  ?SMALL_INTERRUPT_LEAVE_OVERLAY
   1749    000000                  RSEG    RCODE:CODE:NOROOT
   1750    000000                  PUBLIC  ?SMALL_INTERRUPT_LEAVE_OVERLAY
   1751    000000                  EXTERN  ?V0
   1752    000000                  EXTERN  ?VB
   1753    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1753.1  000000          #ifdef __EXTENDED_DPTR__
   1753.2  000000          #endif ; __EXTENDED_DPTR__
   1753.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1753.4  000000          #ifdef __DPTR_SEPARATE__
   1753.5  000000          #ifdef __EXTENDED_DPTR__
   1753.6  000000          #endif ; __EXTENDED_DPTR__
   1753.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1753.8  000000          #ifdef __EXTENDED_DPTR__
   1753.9  000000          #endif ; __EXTENDED_DPTR__
   1753.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1753.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1753.12 000000          #ifdef __EXTENDED_DPTR__
   1753.13 000000          #endif ; __EXTENDED_DPTR__
   1753.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1753.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1753.16 000000          #ifdef __EXTENDED_DPTR__
   1753.17 000000          #endif ; __EXTENDED_DPTR__
   1753.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1753.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1753.20 000000          #ifdef __EXTENDED_DPTR__
   1753.21 000000          #endif ; __EXTENDED_DPTR__
   1753.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1753.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1753.24 000000          #ifdef __EXTENDED_DPTR__
   1753.25 000000          #endif ; __EXTENDED_DPTR__
   1753.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1753.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1753.28 000000          #ifdef __EXTENDED_DPTR__
   1753.29 000000          #endif ; __EXTENDED_DPTR__
   1753.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1753.31 000000          #endif ; __DPTR_SEPARATE__
   1753.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1753.33 000000                  ENDM
   1754    000000          
   1755    000000              cfi BLOCK ?SMALL_INTERRUPT_LEAVE_OVERLAY Using
  cfi_common
   1756    000000              cfi NOFUNCTION
   1757    000000              cfi A     Undefined
   1758    000000          
   1759    000000          ?SMALL_INTERRUPT_LEAVE_OVERLAY:
   1760    000000                  ; restore DPL, DPH,B,VB,(DPS)
   1761    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1764    000000          #ifdef __DPTR_SHADOWED__
   1766    000000          #endif
   1767    000000          #endif
   1768    000000 8682             MOV     DPL,@R0
   1769    000002 08               INC     R0
   1770    000003 8683             MOV     DPH,@R0
   1771    000005 08               INC     R0
   1772    000006          #if (defined (__EXTENDED_DPTR__) )
   1775    000006          #endif
   1776    000006 86F0             MOV     B,@R0
   1777    000008 08               INC     R0
   1778    000009          #if (__NUMBER_OF_DPTRS__ > 1)
   1780    000009          #endif
   1781    000009 86..             MOV     ?VB,@R0
   1782    00000B 08               INC     R0
   1783    00000C          
   1784    00000C                  ; restore virtual register
   1785    00000C 79..             MOV     R1,#?V0
   1786    00000E          Loop:   
   1787    00000E E6               MOV     A,@R0
   1788    00000F F7               MOV     @R1,A
   1789    000010 09               INC     R1
   1790    000011 08               INC     R0
   1791    000012 DFFA             DJNZ    R7,Loop
   1792    000014          
   1793    000014                  ; restore A, PSW
   1794    000014 D0E0             POP     A
   1795    000016 D0D0             POP     PSW
   1796    000018          
   1797    000018 32               RETI
   1798    000019          
   1799    000019              cfi ENDBLOCK ?SMALL_INTERRUPT_LEAVE_OVERLAY
   1800    000019                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?SMALL_INTERRUPT_LEAVE_OVERLAYREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      E 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:1EFE          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 25          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1801    000000          
   1802    000000          
   1803    000000          ;---------------------------------------------------
                           --------------------------
   1804    000000          ;
   1805    000000          ;       Function: ?INTERRUPT_ENTER_SP
   1806    000000          ;
   1807    000000          ;       Description:
   1808    000000          ;               Saves register PSW, B, VB, DPL, DPH,
                            (DPX), DPS, R0-R7 plus
   1809    000000          ;               a specified number of virtual
                            registers on
   1810    000000          ;               the machine stack.
   1811    000000          ;
   1812    000000          ;               +----------+
   1813    000000          ;               |    Vn    | <-- SP
   1814    000000          ;               |    :     |
   1815    000000          ;               |    V0    |
   1816    000000          ;               + - - - - -+
   1817    000000          ;               |    ?VB   |
   1818    000000          ;               + - - - - -+
   1819    000000          ;               |    B     |
   1820    000000          ;               + - - - - -+
   1821    000000          ;               |    PSW   |
   1822    000000          ;               + - - - - -+
   1823    000000          ;               |    R7    |
   1824    000000          ;               + - - - - -+
   1825    000000          ;               |    R6    |
   1826    000000          ;               + - - - - -+
   1827    000000          ;               |    R5    |
   1828    000000          ;               + - - - - -+
   1829    000000          ;               |    R4    |
   1830    000000          ;               + - - - - -+
   1831    000000          ;               |    R3    |
   1832    000000          ;               + - - - - -+
   1833    000000          ;               |    R2    |
   1834    000000          ;               + - - - - -+
   1835    000000          ;               |    R1    |
   1836    000000          ;               + - - - - -+
   1837    000000          ;               |    R0    |
   1838    000000          ;               + - - - - -+
   1839    000000          ;               |   ?DPX   | (if extended dptr and
                            NOT far code model)
   1840    000000          ;               + - - - - -+
   1841    000000          ;               |   ?DPS   | (if nr of DPTRs >
                            1)
   1842    000000          ;               + - - - - -+
   1843    000000          ;               |   ?DPX   | (if far code model)
   1844    000000          ;               + - - - - -+
   1845    000000          ;               |   DPH    |
   1846    000000          ;               + - - - - -+
   1847    000000          ;               |   DPL    |
   1848    000000          ;               +----------+
   1849    000000          ;
   1850    000000          ;       Register input:
   1851    000000          ;               A  = Number of virtual registers to
                            save.
   1852    000000          ;
   1853    000000          ;       Register output:
   1854    000000          ;               SP = SP+(A+12)
   1855    000000          ;               A  = Undefined
   1856    000000          ;               R1 = Undefined
   1857    000000          ;               R0 = Undefined.
   1858    000000          ;               DPTR0 Is the return address from
                            this function.
   1859    000000          ;
   1860    000000          ;       Multiple DPTR
   1861    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   1862    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   1863    000000          ;
   1864    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   1865    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   1866    000000          ;
   1867    000000          ;       Stack usage: NA
   1868    000000          ;
   1869    000000          ;---------------------------------------------------
                           --------------------------
   1870    000000                  MODULE  ?INTERRUPT_ENTER_SP
   1871    000000                  RSEG    RCODE:CODE:NOROOT
   1872    000000                  PUBLIC  ?INTERRUPT_ENTER_SP
   1873    000000                  EXTERN  ?VB
   1874    000000                  EXTERN  ?V0
   1875    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1875.1  000000          #ifdef __EXTENDED_DPTR__
   1875.2  000000          #endif ; __EXTENDED_DPTR__
   1875.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1875.4  000000          #ifdef __DPTR_SEPARATE__
   1875.5  000000          #ifdef __EXTENDED_DPTR__
   1875.6  000000          #endif ; __EXTENDED_DPTR__
   1875.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1875.8  000000          #ifdef __EXTENDED_DPTR__
   1875.9  000000          #endif ; __EXTENDED_DPTR__
   1875.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1875.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1875.12 000000          #ifdef __EXTENDED_DPTR__
   1875.13 000000          #endif ; __EXTENDED_DPTR__
   1875.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1875.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1875.16 000000          #ifdef __EXTENDED_DPTR__
   1875.17 000000          #endif ; __EXTENDED_DPTR__
   1875.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1875.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1875.20 000000          #ifdef __EXTENDED_DPTR__
   1875.21 000000          #endif ; __EXTENDED_DPTR__
   1875.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1875.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1875.24 000000          #ifdef __EXTENDED_DPTR__
   1875.25 000000          #endif ; __EXTENDED_DPTR__
   1875.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1875.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1875.28 000000          #ifdef __EXTENDED_DPTR__
   1875.29 000000          #endif ; __EXTENDED_DPTR__
   1875.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1875.31 000000          #endif ; __DPTR_SEPARATE__
   1875.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1875.33 000000                  ENDM
   1876    000000          
   1877    000000              cfi BLOCK ?INTERRUPT_ENTER_SP Using cfi_common
   1878    000000              cfi NOFUNCTION
   1879    000000              cfi A     Undefined
   1880    000000          
   1881    000000          ?INTERRUPT_ENTER_SP:
   1882    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1886    000000          #endif
   1887    000000          
   1888    000000          #if defined(__EXTENDED_DPTR__)
   1889    000000          #if (__CODE_MODEL__ != __CM_FAR__)
   1892    000000          #endif
   1893    000000          #endif
   1894    000000          
   1895    000000                  ; save R0-R1
   1896    000000 C8               XCH     A,R0    ; loop count in R0
   1897    000001 C0E0             PUSH    A
   1898    000003 E9               MOV     A,R1
   1899    000004 C0E0             PUSH    A
   1900    000006          
   1901    000006                  ; exchange DPTR and return address located
                            on stack
   1902    000006 A981             MOV     R1,SP
   1903    000008 19               DEC     R1
   1904    000009 19               DEC     R1
   1905    00000A          #if defined(__EXTENDED_DPTR__)
   1906    00000A          #if (__CODE_MODEL__ != __CM_FAR__)
   1908    00000A          #endif
   1909    00000A          #endif
   1910    00000A          
   1911    00000A          #if (__NUMBER_OF_DPTRS__ > 1)
   1913    00000A          #endif
   1914    00000A          
   1915    00000A          #if (__CODE_MODEL__ == __CM_FAR__)
   1920    00000A          #endif
   1921    00000A          
   1922    00000A E583             MOV     A,DPH
   1923    00000C C7               XCH     A,@R1
   1924    00000D F583             MOV     DPH,A
   1925    00000F 19               DEC     R1
   1926    000010 E582             MOV     A,DPL
   1927    000012 C7               XCH     A,@R1
   1928    000013 F582             MOV     DPL,A
   1929    000015          
   1930    000015                  ; save R1-R7
   1931    000015 EA               MOV     A,R2
   1932    000016 C0E0             PUSH    A
   1933    000018 EB               MOV     A,R3
   1934    000019 C0E0             PUSH    A
   1935    00001B EC               MOV     A,R4
   1936    00001C C0E0             PUSH    A
   1937    00001E ED               MOV     A,R5
   1938    00001F C0E0             PUSH    A
   1939    000021 EE               MOV     A,R6
   1940    000022 C0E0             PUSH    A
   1941    000024 EF               MOV     A,R7
   1942    000025 C0E0             PUSH    A
   1943    000027                  
   1944    000027                  ; save ,PSW, B, VB, DPS
   1945    000027 C0D0             PUSH    PSW
   1946    000029 C0F0             PUSH    B
   1947    00002B C0..             PUSH    ?VB
   1948    00002D          
   1949    00002D                  ; save virtual registers
   1950    00002D 79..             MOV     R1,#?V0
   1951    00002F E7       Loop:   MOV     A,@R1
   1952    000030 09               INC     R1      
   1953    000031 C0E0             PUSH    A
   1954    000033 D8FA             DJNZ    R0,Loop
   1955    000035          
   1956    000035 E4               CLR     A
   1957    000036 73               JMP     @A+DPTR
   1958    000037          
   1959    000037              cfi ENDBLOCK ?INTERRUPT_ENTER_SP
   1960    000037                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_ENTER_SP REL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      2F 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:F248          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 55          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1961    000000          
   1962    000000          ;---------------------------------------------------
                           --------------------------
   1963    000000          ;
   1964    000000          ;       Function: ?INTERRUPT_LEAVE_SP
   1965    000000          ;
   1966    000000          ;       Description:
   1967    000000          ;               Restore register R0-R1,A,B,PSW,?VB,?
                           DPS,DPL,DPH,(DPX) plus a specified
   1968    000000          ;               number of virtual registers from the
                            machine stack.
   1969    000000          ;
   1970    000000          ;       Register input:
   1971    000000          ;               R7 = Number of virtual registers to
                            restore.
   1972    000000          ;
   1973    000000          ;       Register output:
   1974    000000          ;               SP = SP-R7
   1975    000000          ;               R0 = R0-R7
   1976    000000          ;               R6 = Restored value
   1977    000000          ;               R7 = Restored value
   1978    000000          ;               A  = R6
   1979    000000          ;
   1980    000000          ;       Multiple DPTR
   1981    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   1982    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   1983    000000          ;
   1984    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   1985    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   1986    000000          ;
   1987    000000          ;       Stack usage: NA
   1988    000000          ;
   1989    000000          ;---------------------------------------------------
                           --------------------------
   1990    000000                  MODULE  ?INTERRUPT_LEAVE_SP
   1991    000000                  EXTERN  ?VB
   1992    000000                  EXTERN  ?V0
   1993    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1993.1  000000          #ifdef __EXTENDED_DPTR__
   1993.2  000000          #endif ; __EXTENDED_DPTR__
   1993.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1993.4  000000          #ifdef __DPTR_SEPARATE__
   1993.5  000000          #ifdef __EXTENDED_DPTR__
   1993.6  000000          #endif ; __EXTENDED_DPTR__
   1993.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1993.8  000000          #ifdef __EXTENDED_DPTR__
   1993.9  000000          #endif ; __EXTENDED_DPTR__
   1993.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1993.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1993.12 000000          #ifdef __EXTENDED_DPTR__
   1993.13 000000          #endif ; __EXTENDED_DPTR__
   1993.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1993.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1993.16 000000          #ifdef __EXTENDED_DPTR__
   1993.17 000000          #endif ; __EXTENDED_DPTR__
   1993.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1993.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1993.20 000000          #ifdef __EXTENDED_DPTR__
   1993.21 000000          #endif ; __EXTENDED_DPTR__
   1993.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1993.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1993.24 000000          #ifdef __EXTENDED_DPTR__
   1993.25 000000          #endif ; __EXTENDED_DPTR__
   1993.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1993.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1993.28 000000          #ifdef __EXTENDED_DPTR__
   1993.29 000000          #endif ; __EXTENDED_DPTR__
   1993.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1993.31 000000          #endif ; __DPTR_SEPARATE__
   1993.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1993.33 000000                  ENDM
   1994    000000          
   1995    000000                  RSEG    RCODE:CODE:NOROOT
   1996    000000                  PUBLIC  ?INTERRUPT_LEAVE_SP
   1997    000000          
   1998    000000              cfi BLOCK ?INTERRUPT_LEAVE_SP USING cfi_common
   1999    000000              cfi NOFUNCTION
   2000    000000              cfi A     Undefined
   2001    000000          
   2002    000000          ?INTERRUPT_LEAVE_SP:
   2003    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2004    000000          #ifdef __DPTR_SHADOWED__
   2006    000000          #endif
   2007    000000          #endif
   2008    000000                  ; restore virtual registers
   2009    000000 74..             MOV     A,#?V0-1
   2010    000002 2F               ADD     A,R7
   2011    000003 F8               MOV     R0,A
   2012    000004          Loop:   
   2013    000004 D0E0             POP     A
   2014    000006 F6               MOV     @R0,A
   2015    000007 18               DEC     R0
   2016    000008 DFFA             DJNZ    R7,Loop
   2017    00000A          
   2018    00000A D0..             POP     ?VB
   2019    00000C                  ; restore PSW, B, ?VB, ?DPS
   2020    00000C D0F0             POP     B
   2021    00000E D0D0             POP     PSW
   2022    000010          
   2023    000010                  ; restore R0-R7
   2024    000010 D0E0             POP     A
   2025    000012 FF               MOV     R7,A
   2026    000013 D0E0             POP     A
   2027    000015 FE               MOV     R6,A
   2028    000016 D0E0             POP     A
   2029    000018 FD               MOV     R5,A
   2030    000019 D0E0             POP     A
   2031    00001B FC               MOV     R4,A
   2032    00001C D0E0             POP     A
   2033    00001E FB               MOV     R3,A
   2034    00001F D0E0             POP     A
   2035    000021 FA               MOV     R2,A
   2036    000022 D0E0             POP     A
   2037    000024 F9               MOV     R1,A
   2038    000025 D0E0             POP     A
   2039    000027 F8               MOV     R0,A
   2040    000028          
   2041    000028                  ; restore DPTR (and DPS)
   2042    000028          
   2043    000028          #if (defined(__EXTENDED_DPTR__) && (__CODE_MODEL__
                            != __CM_FAR__))
   2045    000028          #endif
   2046    000028          
   2047    000028          #if (__NUMBER_OF_DPTRS__ > 1)
   2049    000028          #endif
   2050    000028          
   2051    000028          #if (__CODE_MODEL__ == __CM_FAR__)
   2053    000028          #endif
   2054    000028 D083             POP     DPH
   2055    00002A D082             POP     DPL
   2056    00002C          
   2057    00002C          #if (__NUMBER_OF_DPTRS__ > 1)
   2060    00002C          #endif
   2061    00002C          
   2062    00002C                  ; restore A
   2063    00002C D0E0             POP     A
   2064    00002E          
   2065    00002E 32               RETI
   2066    00002F          
   2067    00002F              cfi ENDBLOCK ?INTERRUPT_LEAVE_SP
   2068    00002F                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_LEAVE_SP REL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      4 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:AF53          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 47          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2069    000000          
   2070    000000          ;---------------------------------------------------
                           --------------------------
   2071    000000          ;
   2072    000000          ;       Function: ?SMALL_INTERRUPT_ENTER_SP
   2073    000000          ;
   2074    000000          ;       Description:
   2075    000000          ;               This interrupt enter shuld be used
                            when the register bank
   2076    000000          ;               have been changed. Saves register
                            DPL, DPH, (DPX), B, VB, DPS, plus
   2077    000000          ;               a specified number of virtual
                            registers on
   2078    000000          ;               the machine stack.
   2079    000000          ;
   2080    000000          ;               The below picture shows the most
                            trivial case (i.e. no DPS and no extended
                            core)
   2081    000000          ;
   2082    000000          ;                         FF
   2083    000000          ;                         :
   2084    000000          ;                      +-------+
   2085    000000          ;              CFA --> |   Vn  | <-- SP End, n = (R7
                            begin) - 1
   2086    000000          ;                      + - - - +
   2087    000000          ;                       :  :  :
   2088    000000          ;                      + - - - +
   2089    000000          ;                      |   V1  |
   2090    000000          ;                      + - - - +
   2091    000000          ;                      |   V0  |
   2092    000000          ;                      + - - - +
   2093    000000          ;                      |   VB  |
   2094    000000          ;                      + - - - +
   2095    000000          ;                      |   B   |
   2096    000000          ;          + - - - +   + - - - +
   2097    000000          ;          | retH  |   |  DPH0 | <-- SP begin
   2098    000000          ;          + - - - +   + - - - +
   2099    000000          ;          | retL  |   |  DPL0 |
   2100    000000          ;          +-------+   +-------+
   2101    000000          ;                       :
   2102    000000          ;                       00
   2103    000000          ;
   2104    000000          ;       Register input:
   2105    000000          ;               R7  = Number of virtual registers to
                            save.
   2106    000000          ;
   2107    000000          ;       Register output:
   2108    000000          ;               SP = SP+(A+12)
   2109    000000          ;               A  = Undefined
   2110    000000          ;               R1 = Undefined
   2111    000000          ;               R7 = Undefined.
   2112    000000          ;               DPTR0 Is the return address from
                            this function.
   2113    000000          ;
   2114    000000          ;       Multiple DPTR
   2115    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   2116    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   2117    000000          ;
   2118    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   2119    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   2120    000000          ;
   2121    000000          ;       Stack usage: NA
   2122    000000          ;
   2123    000000          ;---------------------------------------------------
                           --------------------------
   2124    000000                  MODULE  ?SMALL_INTERRUPT_ENTER_SP
   2125    000000                  RSEG    RCODE:CODE:NOROOT
   2126    000000                  PUBLIC  ?SMALL_INTERRUPT_ENTER_SP
   2127    000000                  EXTERN  ?VB
   2128    000000                  EXTERN  ?V0
   2129    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2129.1  000000          #ifdef __EXTENDED_DPTR__
   2129.2  000000          #endif ; __EXTENDED_DPTR__
   2129.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2129.4  000000          #ifdef __DPTR_SEPARATE__
   2129.5  000000          #ifdef __EXTENDED_DPTR__
   2129.6  000000          #endif ; __EXTENDED_DPTR__
   2129.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2129.8  000000          #ifdef __EXTENDED_DPTR__
   2129.9  000000          #endif ; __EXTENDED_DPTR__
   2129.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2129.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2129.12 000000          #ifdef __EXTENDED_DPTR__
   2129.13 000000          #endif ; __EXTENDED_DPTR__
   2129.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2129.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2129.16 000000          #ifdef __EXTENDED_DPTR__
   2129.17 000000          #endif ; __EXTENDED_DPTR__
   2129.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2129.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2129.20 000000          #ifdef __EXTENDED_DPTR__
   2129.21 000000          #endif ; __EXTENDED_DPTR__
   2129.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2129.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2129.24 000000          #ifdef __EXTENDED_DPTR__
   2129.25 000000          #endif ; __EXTENDED_DPTR__
   2129.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2129.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2129.28 000000          #ifdef __EXTENDED_DPTR__
   2129.29 000000          #endif ; __EXTENDED_DPTR__
   2129.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2129.31 000000          #endif ; __DPTR_SEPARATE__
   2129.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2129.33 000000                  ENDM
   2130    000000          
   2131    000000              cfi BLOCK ?SMALL_INTERRUPT_ENTER_SP Using
  cfi_common
   2132    000000              cfi NOFUNCTION
   2133    000000              cfi A     Undefined
   2134    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   2139    000000          #else
   2140    000000              cfi CFA_MACHINE  add(add(MACHINE_SP, R7),2)
   2141    000000              cfi ?RET_HIGH load(1, IDATA, sub(sub(CFA_MACHINE
                           , R7), 2))
   2142    000000              cfi ?RET_LOW  load(1, IDATA, sub(sub(CFA_MACHINE
                           , R7), 3))
   2143    000000          #endif
   2144    000000          
   2145    000000          ?SMALL_INTERRUPT_ENTER_SP:
   2146    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2150    000000          #endif
   2151    000000                  ; exchange DPTR and return address located
                            on stack
   2152    000000 A981             MOV     R1,SP
   2153    000002          #if (__NUMBER_OF_DPTRS__ > 1)
   2155    000002          #endif
   2156    000002          
   2157    000002          #if (__CODE_MODEL__ == __CM_FAR__)
   2164    000002          #elif (defined(__EXTENDED_DPTR__))
   2167    000002          #endif
   2168    000002 E583             MOV     A,DPH
   2169    000004 C7               XCH     A,@R1
   2170    000005              cfi ?RET_HIGH A
   2171    000005 F583             MOV     DPH,A
   2172    000007              cfi ?RET_HIGH DPH0
   2173    000007 19               DEC     R1
   2174    000008 E582             MOV     A,DPL
   2175    00000A C7               XCH     A,@R1
   2176    00000B              cfi ?RET_LOW A
   2177    00000B F582             MOV     DPL,A
   2178    00000D              cfi ?RET_LOW DPL0
   2179    00000D          
   2180    00000D                  ; save B, VB
   2181    00000D C0F0             PUSH    B
   2182    00000F              cfi CFA_MACHINE  add(add(MACHINE_SP, R7),1)
   2183    00000F C0..             PUSH    ?VB
   2184    000011              cfi CFA_MACHINE  add(MACHINE_SP, R7)
   2185    000011                  ; save virtual registers
   2186    000011 79..             MOV     R1,#?V0
   2187    000013 E7       Loop:   MOV     A,@R1
   2188    000014 09               INC     R1
   2189    000015 C0E0             PUSH    A
   2190    000017              cfi CFA_MACHINE sub(add(MACHINE_SP, R7),
                            1)
   2191    000017 DFFA             DJNZ    R7,Loop
   2192    000019          
   2193    000019              cfi CFA_MACHINE MACHINE_SP + 0
   2194    000019 E4               CLR     A
   2195    00001A 73               JMP     @A+DPTR
   2196    00001B          
   2197    00001B              cfi ENDBLOCK ?SMALL_INTERRUPT_ENTER_SP
   2198    00001B                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?SMALL_INTERRUPT_ENTER_SPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      13 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
add                 REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:55D3          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 27          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2199    000000          
   2200    000000          ;---------------------------------------------------
                           --------------------------
   2201    000000          ;
   2202    000000          ;       Function: ?SMALL_INTERRUPT_LEAVE_SP
   2203    000000          ;
   2204    000000          ;       Description:
   2205    000000          ;               This interrupt enter routine shoul
                            dbe used when the
   2206    000000          ;               register bank is switched.
   2207    000000          ;               Restore registers A,B,PSW,?VB,?DPS,D
                           PL,DPH,(DPX) plus a specified
   2208    000000          ;               number of virtual registers from the
                            machine stack.
   2209    000000          ;
   2210    000000          ;               The below picture shows the most
                            trivial case (i.e. no DPS and no extended
                            core)
   2211    000000          ;
   2212    000000          ;              FF
   2213    000000          ;              :
   2214    000000          ;          +-------+
   2215    000000          ;          |   Vn  | <-- SP begin, n = (R7 begin) -
                            1
   2216    000000          ;          + - - - +
   2217    000000          ;           :  :  :
   2218    000000          ;          + - - - +
   2219    000000          ;          |   V1  |
   2220    000000          ;          + - - - +
   2221    000000          ;          |   V0  |
   2222    000000          ;          + - - - +
   2223    000000          ;          |   VB  |
   2224    000000          ;          + - - - +
   2225    000000          ;          |   B   |
   2226    000000          ;          + - - - +
   2227    000000          ;        ( |  DPX0 | ) DPX0 exists only if
                            __EXTENDED_DPTR__
   2228    000000          ;        ( + - - - + )
   2229    000000          ;          |  DPH0 |
   2230    000000          ;          + - - - +
   2231    000000          ;          |  DPL0 |
   2232    000000          ;          + - - - +
   2233    000000          ;        ( |  DPS  | ) DPS exists only if __NUMBER_O
                           F_DPTRS__ > 1
   2234    000000          ;        ( + - - - + )
   2235    000000          ;          |  PSW  |
   2236    000000          ;          + - - - +
   2237    000000          ;          |   A   |
   2238    000000          ;          + - - - +
   2239    000000          ;        ( |  retx | ) retx exists only if
                            __CODE_MODEL__ == __CM_FAR__
   2240    000000          ;        ( + - - - + )
   2241    000000          ;          |  reth | <-- SP End      (note, SP
                            points on retx, if retx exists).
   2242    000000          ;          + - - - +
   2243    000000          ;          |  retl |   This return address is to the
                            jumpers caller.
   2244    000000          ;          + - - - +
   2245    000000          ;  CFA --> | xxxxx |
   2246    000000          ;          +-------+
   2247    000000          ;              :
   2248    000000          ;              00
   2249    000000          ;
   2250    000000          ;       Register input:
   2251    000000          ;               R7 = Number of virtual registers to
                            restore.
   2252    000000          ;
   2253    000000          ;       Register output:
   2254    000000          ;               SP = SP-R7
   2255    000000          ;               R0 = R0-R7
   2256    000000          ;               R6 = Restored value
   2257    000000          ;               R7 = Restored value
   2258    000000          ;               A  = R6
   2259    000000          ;
   2260    000000          ;       Multiple DPTR
   2261    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   2262    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   2263    000000          ;
   2264    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   2265    000000          ;                               Modifies DPTR: 0
                            (restoerd)     Returns  DPS: restored
   2266    000000          ;
   2267    000000          ;       Stack usage: NA
   2268    000000          ;
   2269    000000          ;---------------------------------------------------
                           --------------------------
   2270    000000                  MODULE  ?SMALL_INTERRUPT_LEAVE_SP
   2271    000000                  EXTERN  ?VB
   2272    000000                  EXTERN  ?V0
   2273    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2273.1  000000          #ifdef __EXTENDED_DPTR__
   2273.2  000000          #endif ; __EXTENDED_DPTR__
   2273.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2273.4  000000          #ifdef __DPTR_SEPARATE__
   2273.5  000000          #ifdef __EXTENDED_DPTR__
   2273.6  000000          #endif ; __EXTENDED_DPTR__
   2273.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2273.8  000000          #ifdef __EXTENDED_DPTR__
   2273.9  000000          #endif ; __EXTENDED_DPTR__
   2273.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2273.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2273.12 000000          #ifdef __EXTENDED_DPTR__
   2273.13 000000          #endif ; __EXTENDED_DPTR__
   2273.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2273.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2273.16 000000          #ifdef __EXTENDED_DPTR__
   2273.17 000000          #endif ; __EXTENDED_DPTR__
   2273.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2273.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2273.20 000000          #ifdef __EXTENDED_DPTR__
   2273.21 000000          #endif ; __EXTENDED_DPTR__
   2273.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2273.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2273.24 000000          #ifdef __EXTENDED_DPTR__
   2273.25 000000          #endif ; __EXTENDED_DPTR__
   2273.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2273.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2273.28 000000          #ifdef __EXTENDED_DPTR__
   2273.29 000000          #endif ; __EXTENDED_DPTR__
   2273.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2273.31 000000          #endif ; __DPTR_SEPARATE__
   2273.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2273.33 000000                  ENDM
   2274    000000          
   2275    000000                  RSEG    RCODE:CODE:NOROOT
   2276    000000                  PUBLIC  ?SMALL_INTERRUPT_LEAVE_SP
   2277    000000          
   2278    000000              cfi BLOCK ?SMALL_INTERRUPT_LEAVE_SP USING
  cfi_common
   2279    000000              cfi NOFUNCTION
   2280    000000              cfi A     samevalue
   2281    000000              cfi CFA_MACHINE  sub(MACHINE_SP,add(add(6,__SIZE
                           _OF_RETADDR__),R7))
   2282    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   2286    000000          #else
   2287    000000              cfi ?RET_HIGH load(1, IDATA, add(CFA_MACHINE,
                            2))
   2288    000000              cfi ?RET_LOW  load(1, IDATA, add(CFA_MACHINE,
                            1))
   2289    000000          #endif
   2290    000000          
   2291    000000          ?SMALL_INTERRUPT_LEAVE_SP:
   2292    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2293    000000          #ifdef __DPTR_SHADOWED__
   2295    000000          #endif
   2296    000000          #endif
   2297    000000                  ; restore virtual registers
   2298    000000 74..             MOV     A,#?V0-1
   2299    000002 2F               ADD     A,R7
   2300    000003 F8               MOV     R0,A
   2301    000004          Loop:   
   2302    000004 D0E0             POP     A
   2303    000006              cfi CFA_MACHINE  sub(MACHINE_SP,add(add(5,__SIZE
                           _OF_RETADDR__),R7))
   2304    000006 F6               MOV     @R0,A
   2305    000007 18               DEC     R0
   2306    000008 DFFA             DJNZ    R7,Loop
   2307    00000A              cfi CFA_MACHINE  sub(MACHINE_SP,add(6,__SIZE_OF_
                           RETADDR__))
   2308    00000A D0..             POP     ?VB
   2309    00000C              cfi CFA_MACHINE  sub(MACHINE_SP,add(5,__SIZE_OF_
                           RETADDR__))
   2310    00000C                  ; restore B, ?VB, ?DPS
   2311    00000C D0F0             POP     B
   2312    00000E              cfi CFA_MACHINE  sub(MACHINE_SP,add(4,__SIZE_OF_
                           RETADDR__))
   2313    00000E          
   2314    00000E                  ; restore DPTR (and DPS)
   2315    00000E          
   2316    00000E          #if (defined(__EXTENDED_DPTR__) && (__CODE_MODEL__
                            != __CM_FAR__))
   2318    00000E          #endif
   2319    00000E          
   2320    00000E          #if (__NUMBER_OF_DPTRS__ > 1)
   2322    00000E          #endif
   2323    00000E          
   2324    00000E          #if (__CODE_MODEL__ == __CM_FAR__)
   2326    00000E          #endif
   2327    00000E D083             POP     DPH
   2328    000010             cfi CFA_MACHINE  sub(MACHINE_SP,add(3,__SIZE_OF_R
                           ETADDR__))
   2329    000010 D082             POP     DPL
   2330    000012             cfi CFA_MACHINE  sub(MACHINE_SP,add(2,__SIZE_OF_R
                           ETADDR__))
   2331    000012          #if (__NUMBER_OF_DPTRS__ > 1)
   2334    000012          #endif
   2335    000012                  ; restore PSW and A
   2336    000012 D0D0             POP     PSW
   2337    000014             cfi CFA_MACHINE  sub(MACHINE_SP,add(1,__SIZE_OF_R
                           ETADDR__))
   2338    000014 D0E0             POP     A
   2339    000016             cfi CFA_MACHINE  sub(MACHINE_SP, __SIZE_OF_RETADD
                           R__)
   2340    000016 32               RETI
   2341    000017          
   2342    000017              cfi ENDBLOCK ?SMALL_INTERRUPT_LEAVE_SP
   2343    000017                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?SMALL_INTERRUPT_LEAVE_SPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      4 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
add                 REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:36ED          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 23          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2344    000000          
   2345    000000          ;---------------------------------------------------
                           --------------------------
   2346    000000          ;
   2347    000000          ;       Function: ?SMALL_INTERRUPT_ENTER_PSP
   2348    000000          ;
   2349    000000          ;       Description:
   2350    000000          ;               Saves register DPL,DPH,(DPX),B,V0,(D
                           PS) plus a specified
   2351    000000          ;               number of virtual registers on the
                            PDATA stack.
   2352    000000          ;
   2353    000000          ;       Register input:
   2354    000000          ;               A  = -(#Vregs  + 4/5/6)
   2355    000000          ;
   2356    000000          ;       Register output:
   2357    000000          ;               ?PSP   = ?PSP - (-A)
   2358    000000          ;
   2359    000000          ;       Multiple DPTR
   2360    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   2361    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   2362    000000          ;
   2363    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   2364    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: none
   2365    000000          ;
   2366    000000          ;       Stack usage:
   2367    000000          ;
   2368    000000          ;---------------------------------------------------
                           --------------------------
   2369    000000                  MODULE  ?SMALL_INTERRUPT_ENTER_PSP
   2370    000000                  RSEG    RCODE:CODE:NOROOT       
   2371    000000                  PUBLIC  ?SMALL_INTERRUPT_ENTER_PSP
   2372    000000                  EXTERN  ?VB
   2373    000000                  EXTERN  ?V0
   2374    000000                  EXTERN  ?PSP
   2375    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2375.1  000000          #ifdef __EXTENDED_DPTR__
   2375.2  000000          #endif ; __EXTENDED_DPTR__
   2375.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2375.4  000000          #ifdef __DPTR_SEPARATE__
   2375.5  000000          #ifdef __EXTENDED_DPTR__
   2375.6  000000          #endif ; __EXTENDED_DPTR__
   2375.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2375.8  000000          #ifdef __EXTENDED_DPTR__
   2375.9  000000          #endif ; __EXTENDED_DPTR__
   2375.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2375.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2375.12 000000          #ifdef __EXTENDED_DPTR__
   2375.13 000000          #endif ; __EXTENDED_DPTR__
   2375.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2375.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2375.16 000000          #ifdef __EXTENDED_DPTR__
   2375.17 000000          #endif ; __EXTENDED_DPTR__
   2375.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2375.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2375.20 000000          #ifdef __EXTENDED_DPTR__
   2375.21 000000          #endif ; __EXTENDED_DPTR__
   2375.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2375.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2375.24 000000          #ifdef __EXTENDED_DPTR__
   2375.25 000000          #endif ; __EXTENDED_DPTR__
   2375.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2375.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2375.28 000000          #ifdef __EXTENDED_DPTR__
   2375.29 000000          #endif ; __EXTENDED_DPTR__
   2375.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2375.31 000000          #endif ; __DPTR_SEPARATE__
   2375.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2375.33 000000                  ENDM
   2376    000000          
   2377    000000              cfi BLOCK ?SMALL_INTERRUPT_ENTER_PSP Using
  cfi_common
   2378    000000              cfi NOFUNCTION
   2379    000000              cfi A     Undefined
   2380    000000          
   2381    000000          
   2382    000000          ?SMALL_INTERRUPT_ENTER_PSP:
   2383    000000 25..             ADD     A,?PSP          ; Allocate space on
                                                            the stack
   2384    000002 F8               MOV     R0,A            ; R0 = PSPold -
                                                            nrVreg - 4/5/6
   2385    000003 C5..             XCH     A,?PSP          ; A = PSPold
   2386    000005          
   2387    000005 C3               CLR     C               ; Counter = end -
                                                            start - 4/5/6
   2388    000006 98               SUBB    A,R0            ; -> A = nrVreg +
                                                            4/5/6
   2389    000007          #if ((__NUMBER_OF_DPTRS__ > 1) && (defined(__EXTENDE
                           D_DPTR__)))
   2391    000007          #elif ((__NUMBER_OF_DPTRS__ > 1) || (defined(__EXTEN
                           DED_DPTR__)))
   2393    000007          #else
   2394    000007 24FC             ADD     A,#-4           ; -> A = nrVreg
                                                            
   2395    000009          
   2396    000009          #endif
   2397    000009 FF               MOV     R7,A            ; R7 = Vreg
                                                            counter
   2398    00000A          
   2399    00000A                  ; Save all the virtual registers
   2400    00000A 79..             MOV     R1,#?V0
   2401    00000C E7       Loop:   MOV     A,@R1
   2402    00000D 09               INC     R1
   2403    00000E F2               MOVX    @R0,A
   2404    00000F 08               INC     R0
   2405    000010 DFFA             DJNZ    R7,Loop
   2406    000012          
   2407    000012                  ; save DPS
   2408    000012          #if (__NUMBER_OF_DPTRS__ > 1)   
   2413    000012          #ifdef __DPTR_SHADOWED__
   2415    000012          #endif
   2416    000012          #endif
   2417    000012          
   2418    000012 E582             MOV     A,DPL
   2419    000014 F2               MOVX    @R0,A
   2420    000015 08               INC     R0
   2421    000016 E583             MOV     A,DPH
   2422    000018 F2               MOVX    @R0,A
   2423    000019 08               INC     R0
   2424    00001A          #if (defined(__EXTENDED_DPTR__))
   2428    00001A          #endif
   2429    00001A E5F0             MOV     A,B
   2430    00001C F2               MOVX    @R0,A
   2431    00001D 08               INC     R0
   2432    00001E          
   2433    00001E E5..             MOV     A,?VB
   2434    000020 F2               MOVX    @R0,A
   2435    000021                  
   2436    000021 22               RET
   2437    000022          
   2438    000022              cfi ENDBLOCK ?SMALL_INTERRUPT_ENTER_PSP
   2439    000022                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?SMALL_INTERRUPT_ENTER_PSPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      C 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:A544          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 34          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2440    000000          
   2441    000000          ;---------------------------------------------------
                           --------------------------
   2442    000000          ;
   2443    000000          ;       Function: ?INTERRUPT_ENTER_PSP
   2444    000000          ;
   2445    000000          ;       Description:
   2446    000000          ;               Saves register R0-R7,DPL,DPH,(DPX),B
                           ,PSW,V0,(DPS) plus a specified
   2447    000000          ;               number of virtual registers on the
                            PDATA stack.
   2448    000000          ;
   2449    000000          ;               +----------+
   2450    000000          ;               |    R0    |
   2451    000000          ;               + - - - - -+
   2452    000000          ;               |    R1    |
   2453    000000          ;               + - - - - -+
   2454    000000          ;               |    R2    |
   2455    000000          ;               + - - - - -+
   2456    000000          ;               |    R3    |
   2457    000000          ;               + - - - - -+
   2458    000000          ;               |    V0    |
   2459    000000          ;               |    :     |
   2460    000000          ;               |    Vn    |
   2461    000000          ;               + - - - - -+
   2462    000000          ;               |   ?DPS   | (if nr of DPTRs >
                            1)
   2463    000000          ;               + - - - - -+
   2464    000000          ;               |   DPL0   |
   2465    000000          ;               + - - - - -+
   2466    000000          ;               |   DPH0   |
   2467    000000          ;               + - - - - -+
   2468    000000          ;               |   DPX0   | (if extended DPTR)
   2469    000000          ;               + - - - - -+
   2470    000000          ;               |    B     |
   2471    000000          ;               + - - - - -+
   2472    000000          ;               |    PSW   |
   2473    000000          ;               + - - - - -+
   2474    000000          ;               |    ?VB   |
   2475    000000          ;               + - - - - -+
   2476    000000          ;               |    R4    |
   2477    000000          ;               + - - - - -+
   2478    000000          ;               |    R5    |
   2479    000000          ;               + - - - - -+
   2480    000000          ;               |    R6    |
   2481    000000          ;               + - - - - -+
   2482    000000          ;               |    R7    | <-- PSP
   2483    000000          ;               +----------+
   2484    000000          ;
   2485    000000          ;       Register input:
   2486    000000          ;               A  = -(#Vregs + 13/14/15)
   2487    000000          ;
   2488    000000          ;       Register output:
   2489    000000          ;               ?PSP   = ?PSP - (-A)
   2490    000000          ;               DPTR   = PC
   2491    000000          ;               R0     = Undefined
   2492    000000          ;               A      = 0
   2493    000000          ;               R6     = 0
   2494    000000          ;               CY     = 0
   2495    000000          ;
   2496    000000          ;       Multiple DPTR
   2497    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   2498    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   2499    000000          ;
   2500    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   2501    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: none
   2502    000000          ;
   2503    000000          ;       Stack usage: 2
   2504    000000          ;
   2505    000000          ;---------------------------------------------------
                           --------------------------
   2506    000000                  MODULE  ?INTERRUPT_ENTER_PSP
   2507    000000                  RSEG    RCODE:CODE:NOROOT       
   2508    000000                  PUBLIC  ?INTERRUPT_ENTER_PSP
   2509    000000                  EXTERN  ?VB
   2510    000000                  EXTERN  ?V0
   2511    000000                  EXTERN  ?PSP
   2512    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2512.1  000000          #ifdef __EXTENDED_DPTR__
   2512.2  000000          #endif ; __EXTENDED_DPTR__
   2512.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2512.4  000000          #ifdef __DPTR_SEPARATE__
   2512.5  000000          #ifdef __EXTENDED_DPTR__
   2512.6  000000          #endif ; __EXTENDED_DPTR__
   2512.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2512.8  000000          #ifdef __EXTENDED_DPTR__
   2512.9  000000          #endif ; __EXTENDED_DPTR__
   2512.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2512.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2512.12 000000          #ifdef __EXTENDED_DPTR__
   2512.13 000000          #endif ; __EXTENDED_DPTR__
   2512.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2512.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2512.16 000000          #ifdef __EXTENDED_DPTR__
   2512.17 000000          #endif ; __EXTENDED_DPTR__
   2512.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2512.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2512.20 000000          #ifdef __EXTENDED_DPTR__
   2512.21 000000          #endif ; __EXTENDED_DPTR__
   2512.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2512.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2512.24 000000          #ifdef __EXTENDED_DPTR__
   2512.25 000000          #endif ; __EXTENDED_DPTR__
   2512.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2512.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2512.28 000000          #ifdef __EXTENDED_DPTR__
   2512.29 000000          #endif ; __EXTENDED_DPTR__
   2512.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2512.31 000000          #endif ; __DPTR_SEPARATE__
   2512.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2512.33 000000                  ENDM
   2513    000000          
   2514    000000              cfi BLOCK ?INTERRUPT_ENTER_PSP Using cfi_common
   2515    000000              cfi NOFUNCTION
   2516    000000              cfi A     Undefined
   2517    000000          
   2518    000000          ?INTERRUPT_ENTER_PSP:
   2519    000000 C0D0             PUSH    PSW
   2520    000002 C0F0             PUSH    B
   2521    000004 88F0             MOV     B,R0    
   2522    000006          
   2523    000006 25..             ADD     A,?PSP          ; Allocate space on
                                                            the stack
   2524    000008 F8               MOV     R0,A            ; R0 = PSPold -
                                                            nrVreg - 11/12
   2525    000009 C5..             XCH     A,?PSP          ; A = PSPold
   2526    00000B          
   2527    00000B C3               CLR     C               ; Counter = end -
                                                            start - 11/12
   2528    00000C 98               SUBB    A,R0            ; -> A = nrVreg +
                                                            11/12
   2529    00000D          
   2530    00000D          #if ((__NUMBER_OF_DPTRS__ > 1) && (defined(__EXTENDE
                           D_DPTR__)))
   2532    00000D          #elif ((__NUMBER_OF_DPTRS__ > 1) || (defined(__EXTEN
                           DED_DPTR__)))
   2534    00000D          #else
   2535    00000D 24F3             ADD     A,#-13          ; -> A = nrVreg
                                                            
   2536    00000F          
   2537    00000F          #endif
   2538    00000F          
   2539    00000F C0E0             PUSH    A
   2540    000011          
   2541    000011                  ; Save R0-R3
   2542    000011 E5F0             MOV     A,B             ; B = R0
   2543    000013 F2               MOVX    @R0,A
   2544    000014 08               INC     R0
   2545    000015 E9               MOV     A,R1
   2546    000016 F2               MOVX    @R0,A
   2547    000017 08               INC     R0
   2548    000018 EA               MOV     A,R2
   2549    000019 F2               MOVX    @R0,A
   2550    00001A 08               INC     R0
   2551    00001B EB               MOV     A,R3
   2552    00001C F2               MOVX    @R0,A
   2553    00001D 08               INC     R0
   2554    00001E          
   2555    00001E                  ; Save all the virtual registers
   2556    00001E D0E0             POP     A
   2557    000020 FB               MOV     R3,A
   2558    000021 79..             MOV     R1,#?V0
   2559    000023 E7       Loop:   MOV     A,@R1
   2560    000024 09               INC     R1
   2561    000025 F2               MOVX    @R0,A
   2562    000026 08               INC     R0
   2563    000027 DBFA             DJNZ    R3,Loop
   2564    000029          
   2565    000029                  ; save ?DPS
   2566    000029          #if (__NUMBER_OF_DPTRS__ > 1)   
   2571    000029          #ifdef __DPTR_SHADOWED__
   2573    000029          #endif
   2574    000029          #endif
   2575    000029          
   2576    000029                  ; save DPL,DPH,(DPX),B and PSW
   2577    000029 E582             MOV     A,DPL
   2578    00002B F2               MOVX    @R0,A
   2579    00002C 08               INC     R0
   2580    00002D E583             MOV     A,DPH
   2581    00002F F2               MOVX    @R0,A
   2582    000030 08               INC     R0
   2583    000031          #if (defined(__EXTENDED_DPTR__))
   2587    000031          #endif
   2588    000031          
   2589    000031 D0E0             POP     A               ; -> A = B
   2590    000033 F2               MOVX    @R0,A
   2591    000034 08               INC     R0
   2592    000035 D0E0             POP     A               ; -> A = PSW
   2593    000037 F2               MOVX    @R0,A
   2594    000038 08               INC     R0
   2595    000039          
   2596    000039                  ; save ?VB
   2597    000039 E5..             MOV     A,?VB
   2598    00003B F2               MOVX    @R0,A
   2599    00003C 08               INC     R0
   2600    00003D          
   2601    00003D                  ; Save R4-R7
   2602    00003D EC               MOV     A,R4
   2603    00003E F2               MOVX    @R0,A
   2604    00003F 08               INC     R0
   2605    000040 ED               MOV     A,R5
   2606    000041 F2               MOVX    @R0,A
   2607    000042 08               INC     R0
   2608    000043 EE               MOV     A,R6
   2609    000044 F2               MOVX    @R0,A
   2610    000045 08               INC     R0
   2611    000046 EF               MOV     A,R7
   2612    000047 F2               MOVX    @R0,A
   2613    000048          
   2614    000048 22               RET
   2615    000049          
   2616    000049              cfi ENDBLOCK ?INTERRUPT_ENTER_PSP
   2617    000049                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_ENTER_PSPREL    CONST PUB UNTYP.       RCODE      0 
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      23 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:6312          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 73          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2618    000000          
   2619    000000          ;---------------------------------------------------
                           --------------------------
   2620    000000          ;
   2621    000000          ;       Function: ?INTERRUPT_LEAVE_PSP
   2622    000000          ;
   2623    000000          ;       Description:
   2624    000000          ;               Restore register R0-R7,?VB,B,(?DPS),
                           DPL,DPH,(?DPX)
   2625    000000          ;               plus a specified number of
                            virtual
   2626    000000          ;               registers from the PDATA stack.
   2627    000000          ;
   2628    000000          ;       Register input:
   2629    000000          ;               R7     = Number of virtual registers
                            to restore.
   2630    000000          ;
   2631    000000          ;       Register output:
   2632    000000          ;               R0     = ?PSP
   2633    000000          ;               R6     = Restored value
   2634    000000          ;               R7     = Restored value
   2635    000000          ;               A      = RETH
   2636    000000          ;
   2637    000000          ;       Multiple DPTR
   2638    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   2639    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   2640    000000          ;
   2641    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   2642    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   2643    000000          ;
   2644    000000          ;       Stack usage: NA
   2645    000000          ;
   2646    000000          ;---------------------------------------------------
                           --------------------------
   2647    000000                  MODULE  ?INTERRUPT_LEAVE_PSP
   2648    000000                  RSEG    RCODE:CODE:NOROOT       
   2649    000000                  PUBLIC  ?INTERRUPT_LEAVE_PSP
   2650    000000                  EXTERN  ?VB     
   2651    000000                  EXTERN  ?V0
   2652    000000                  EXTERN  ?PSP
   2653    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2653.1  000000          #ifdef __EXTENDED_DPTR__
   2653.2  000000          #endif ; __EXTENDED_DPTR__
   2653.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2653.4  000000          #ifdef __DPTR_SEPARATE__
   2653.5  000000          #ifdef __EXTENDED_DPTR__
   2653.6  000000          #endif ; __EXTENDED_DPTR__
   2653.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2653.8  000000          #ifdef __EXTENDED_DPTR__
   2653.9  000000          #endif ; __EXTENDED_DPTR__
   2653.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2653.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2653.12 000000          #ifdef __EXTENDED_DPTR__
   2653.13 000000          #endif ; __EXTENDED_DPTR__
   2653.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2653.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2653.16 000000          #ifdef __EXTENDED_DPTR__
   2653.17 000000          #endif ; __EXTENDED_DPTR__
   2653.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2653.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2653.20 000000          #ifdef __EXTENDED_DPTR__
   2653.21 000000          #endif ; __EXTENDED_DPTR__
   2653.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2653.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2653.24 000000          #ifdef __EXTENDED_DPTR__
   2653.25 000000          #endif ; __EXTENDED_DPTR__
   2653.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2653.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2653.28 000000          #ifdef __EXTENDED_DPTR__
   2653.29 000000          #endif ; __EXTENDED_DPTR__
   2653.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2653.31 000000          #endif ; __DPTR_SEPARATE__
   2653.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2653.33 000000                  ENDM
   2654    000000          
   2655    000000              cfi BLOCK ?INTERRUPT_LEAVE_PSP USING cfi_common
   2656    000000              cfi NOFUNCTION
   2657    000000              cfi A     Undefined
   2658    000000          
   2659    000000          ?INTERRUPT_LEAVE_PSP:
   2660    000000 A8..             MOV     R0,?PSP
   2661    000002          
   2662    000002                  ; restore r0-r3
   2663    000002 E2               MOVX    A,@R0
   2664    000003 08               INC     R0
   2665    000004 C0E0             PUSH    A               ; -> R0 original to
                                                            idata stack
   2666    000006 E2               MOVX    A,@R0
   2667    000007 08               INC     R0
   2668    000008 C0E0             PUSH    A               ; -> R1 original to
                                                            idata stack
   2669    00000A E2               MOVX    A,@R0
   2670    00000B 08               INC     R0
   2671    00000C FA               MOV     R2,A    
   2672    00000D E2               MOVX    A,@R0
   2673    00000E 08               INC     R0
   2674    00000F FB               MOV     R3,A    
   2675    000010          
   2676    000010                  ; restore Vregs
   2677    000010 79..             MOV     R1,#?V0
   2678    000012 E2       Loop:   MOVX    A,@R0
   2679    000013 08               INC     R0
   2680    000014 F7               MOV     @R1,A
   2681    000015 09               INC     R1
   2682    000016 DFFA             DJNZ    R7,Loop
   2683    000018          
   2684    000018                  ; save ?DPS
   2685    000018          #if (__NUMBER_OF_DPTRS__ > 1)   
   2690    000018          #ifdef __DPTR_SHADOWED__
   2692    000018          #endif
   2693    000018          #endif
   2694    000018          
   2695    000018                  ; restore B and PSW
   2696    000018 E2               MOVX    A,@R0
   2697    000019 08               INC     R0
   2698    00001A F582             MOV     DPL,A   
   2699    00001C E2               MOVX    A,@R0
   2700    00001D 08               INC     R0
   2701    00001E F583             MOV     DPH,A
   2702    000020          #if (defined(__EXTENDED_DPTR__))
   2706    000020          #endif
   2707    000020          #if (__NUMBER_OF_DPTRS__ > 1)
   2709    000020          #endif
   2710    000020 E2               MOVX    A,@R0
   2711    000021 08               INC     R0
   2712    000022 F5F0             MOV     B,A     
   2713    000024 E2               MOVX    A,@R0
   2714    000025 08               INC     R0
   2715    000026 F5D0             MOV     PSW,A
   2716    000028          
   2717    000028                  ; restore ?VB och ?DPS
   2718    000028 E2               MOVX    A,@R0
   2719    000029 08               INC     R0
   2720    00002A F5..             MOV     ?VB,A
   2721    00002C          
   2722    00002C                  ; restore r4-r7
   2723    00002C E2               MOVX    A,@R0
   2724    00002D 08               INC     R0
   2725    00002E FC               MOV     R4,A    
   2726    00002F E2               MOVX    A,@R0
   2727    000030 08               INC     R0
   2728    000031 FD               MOV     R5,A    
   2729    000032 E2               MOVX    A,@R0
   2730    000033 08               INC     R0
   2731    000034 FE               MOV     R6,A    
   2732    000035 E2               MOVX    A,@R0
   2733    000036 08               INC     R0
   2734    000037 FF               MOV     R7,A
   2735    000038                  
   2736    000038 88..             MOV     ?PSP,R0
   2737    00003A          
   2738    00003A D0E0             POP     A
   2739    00003C F9               MOV     R1,A
   2740    00003D D0E0             POP     A
   2741    00003F F8               MOV     R0,A
   2742    000040          
   2743    000040                  ; restore register A
   2744    000040 D0E0             POP     A
   2745    000042          
   2746    000042 32               RETI
   2747    000043          
   2748    000043              cfi ENDBLOCK ?INTERRUPT_LEAVE_PSP
   2749    000043                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_LEAVE_PSPREL    CONST PUB UNTYP.       RCODE      0 
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      12 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:C589          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 67          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2750    000000          
   2751    000000          
   2752    000000          ;---------------------------------------------------
                           --------------------------
   2753    000000          ;
   2754    000000          ;       Function: ?SMALL_INTERRUPT_LEAVE_PSP
   2755    000000          ;
   2756    000000          ;       Description:
   2757    000000          ;               Restore register ?VB,B,(?DPS),DPL,DP
                           H,(?DPX)
   2758    000000          ;               plus a specified number of
                            virtual
   2759    000000          ;               registers from the PDATA stack.
   2760    000000          ;
   2761    000000          ;       Register input:
   2762    000000          ;               R7     = Number of virtual registers
                            to restore.
   2763    000000          ;
   2764    000000          ;       Register output:
   2765    000000          ;
   2766    000000          ;       Multiple DPTR
   2767    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   2768    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   2769    000000          ;
   2770    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   2771    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   2772    000000          ;
   2773    000000          ;       Stack usage: NA
   2774    000000          ;
   2775    000000          ;---------------------------------------------------
                           --------------------------
   2776    000000                  MODULE  ?SMALL_INTERRUPT_LEAVE_PSP
   2777    000000                  RSEG    RCODE:CODE:NOROOT       
   2778    000000                  PUBLIC  ?SMALL_INTERRUPT_LEAVE_PSP
   2779    000000                  EXTERN  ?VB     
   2780    000000                  EXTERN  ?V0
   2781    000000                  EXTERN  ?PSP
   2782    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2782.1  000000          #ifdef __EXTENDED_DPTR__
   2782.2  000000          #endif ; __EXTENDED_DPTR__
   2782.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2782.4  000000          #ifdef __DPTR_SEPARATE__
   2782.5  000000          #ifdef __EXTENDED_DPTR__
   2782.6  000000          #endif ; __EXTENDED_DPTR__
   2782.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2782.8  000000          #ifdef __EXTENDED_DPTR__
   2782.9  000000          #endif ; __EXTENDED_DPTR__
   2782.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2782.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2782.12 000000          #ifdef __EXTENDED_DPTR__
   2782.13 000000          #endif ; __EXTENDED_DPTR__
   2782.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2782.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2782.16 000000          #ifdef __EXTENDED_DPTR__
   2782.17 000000          #endif ; __EXTENDED_DPTR__
   2782.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2782.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2782.20 000000          #ifdef __EXTENDED_DPTR__
   2782.21 000000          #endif ; __EXTENDED_DPTR__
   2782.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2782.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2782.24 000000          #ifdef __EXTENDED_DPTR__
   2782.25 000000          #endif ; __EXTENDED_DPTR__
   2782.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2782.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2782.28 000000          #ifdef __EXTENDED_DPTR__
   2782.29 000000          #endif ; __EXTENDED_DPTR__
   2782.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2782.31 000000          #endif ; __DPTR_SEPARATE__
   2782.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2782.33 000000                  ENDM
   2783    000000          
   2784    000000              cfi BLOCK ?SMALL_INTERRUPT_LEAVE_PSP USING
  cfi_common
   2785    000000              cfi NOFUNCTION
   2786    000000              cfi A     Undefined
   2787    000000          
   2788    000000          ?SMALL_INTERRUPT_LEAVE_PSP:
   2789    000000 A8..             MOV     R0,?PSP
   2790    000002          
   2791    000002                  ; restore Vregs
   2792    000002 79..             MOV     R1,#?V0
   2793    000004 E2       Loop:   MOVX    A,@R0
   2794    000005 08               INC     R0
   2795    000006 F7               MOV     @R1,A
   2796    000007 09               INC     R1
   2797    000008 DFFA             DJNZ    R7,Loop
   2798    00000A          
   2799    00000A                  ; restore ?DPS
   2800    00000A          #if (__NUMBER_OF_DPTRS__ > 1)   
   2805    00000A          #ifdef __DPTR_SHADOWED__
   2807    00000A          #endif
   2808    00000A          #endif
   2809    00000A                  ; restore DPL,DPH,(DPX),B
   2810    00000A E2               MOVX    A,@R0
   2811    00000B 08               INC     R0
   2812    00000C F582             MOV     DPL,A
   2813    00000E E2               MOVX    A,@R0
   2814    00000F 08               INC     R0
   2815    000010 F583             MOV     DPH,A
   2816    000012          #if (defined(__EXTENDED_DPTR__))
   2820    000012          #endif
   2821    000012          
   2822    000012          #if (__NUMBER_OF_DPTRS__ > 1)
   2824    000012          #endif
   2825    000012          
   2826    000012 E2               MOVX    A,@R0
   2827    000013 08               INC     R0
   2828    000014 F5F0             MOV     B,A
   2829    000016          
   2830    000016                  ; restore ?VB och ?DPS
   2831    000016 E2               MOVX    A,@R0
   2832    000017 08               INC     R0
   2833    000018 F5..             MOV     ?VB,A
   2834    00001A          
   2835    00001A 88..             MOV     ?PSP,R0
   2836    00001C          
   2837    00001C                  ; restore PSW and reg A
   2838    00001C D0D0             POP     PSW
   2839    00001E D0E0             POP     A
   2840    000020          
   2841    000020 32               RETI
   2842    000021          
   2843    000021              cfi ENDBLOCK ?SMALL_INTERRUPT_LEAVE_PSP
   2844    000021                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?SMALL_INTERRUPT_LEAVE_PSPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      4 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:B15C          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 33          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2845    000000          
   2846    000000          
   2847    000000          ;---------------------------------------------------
                           --------------------------
   2848    000000          ;
   2849    000000          ;       Function: ?INTERRUPT_ENTER_XSP
   2850    000000          ;
   2851    000000          ;       Description:
   2852    000000          ;               Saves register R0-R7,(DPX),DPH,DPL,P
                           SW,VB,B,(DPS)
   2853    000000          ;               plus a specified number of
                            virtual
   2854    000000          ;               registers on the XDATA stack.
   2855    000000          ;
   2856    000000          ;               +----------+
   2857    000000          ;               |    R0    |
   2858    000000          ;               + - - - - -+
   2859    000000          ;               |    R1    |
   2860    000000          ;               + - - - - -+
   2861    000000          ;               |    R2    |
   2862    000000          ;               + - - - - -+
   2863    000000          ;               |    R3    |
   2864    000000          ;               + - - - - -+
   2865    000000          ;               |    V0    |
   2866    000000          ;               |    :     |
   2867    000000          ;               |    Vn    |
   2868    000000          ;               + - - - - -+
   2869    000000          ;               |    R4    |
   2870    000000          ;               + - - - - -+
   2871    000000          ;               |    R5    |
   2872    000000          ;               + - - - - -+
   2873    000000          ;               |    R6    |
   2874    000000          ;               + - - - - -+
   2875    000000          ;               |    R7    |
   2876    000000          ;               + - - - - -+
   2877    000000          ;               |   DPX0   | (if extended DPTR)
   2878    000000          ;               + - - - - -+
   2879    000000          ;               |   DPH0   |
   2880    000000          ;               + - - - - -+
   2881    000000          ;               |   DPL0   |
   2882    000000          ;               + - - - - -+
   2883    000000          ;               |    PSW   |
   2884    000000          ;               + - - - - -+
   2885    000000          ;               |    ?VB   |
   2886    000000          ;               + - - - - -+
   2887    000000          ;               |    B     |
   2888    000000          ;               + - - - - -+
   2889    000000          ;               |   ?DPS   | <-- XSP (if nr of DPTRs
                            > 1)
   2890    000000          ;               +----------+
   2891    000000          ;
   2892    000000          ;       Register input:
   2893    000000          ;               A  -(The number of bytes to push +
                            13/14/15).
   2894    000000          ;
   2895    000000          ;       Register output:
   2896    000000          ;
   2897    000000          ;       Multiple DPTR
   2898    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   2899    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   2900    000000          ;
   2901    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   2902    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   2903    000000          ;
   2904    000000          ;       Stack usage peak        :  5
   2905    000000          ;       Stack usage after return: -2
   2906    000000          ;
   2907    000000          ;---------------------------------------------------
                           --------------------------
   2908    000000                  MODULE  ?INTERRUPT_ENTER_XSP
   2909    000000                  RSEG    XSTACK:NOROOT:XDATA
   2910    000000                  RSEG    RCODE:CODE:NOROOT
   2911    000000                  PUBLIC  ?INTERRUPT_ENTER_XSP
   2912    000000                  EXTERN  ?V0
   2913    000000                  EXTERN  ?VB
   2914    000000                  EXTERN  ?XSP
   2915    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2915.1  000000          #ifdef __EXTENDED_DPTR__
   2915.2  000000          #endif ; __EXTENDED_DPTR__
   2915.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2915.4  000000          #ifdef __DPTR_SEPARATE__
   2915.5  000000          #ifdef __EXTENDED_DPTR__
   2915.6  000000          #endif ; __EXTENDED_DPTR__
   2915.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2915.8  000000          #ifdef __EXTENDED_DPTR__
   2915.9  000000          #endif ; __EXTENDED_DPTR__
   2915.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2915.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2915.12 000000          #ifdef __EXTENDED_DPTR__
   2915.13 000000          #endif ; __EXTENDED_DPTR__
   2915.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2915.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2915.16 000000          #ifdef __EXTENDED_DPTR__
   2915.17 000000          #endif ; __EXTENDED_DPTR__
   2915.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2915.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2915.20 000000          #ifdef __EXTENDED_DPTR__
   2915.21 000000          #endif ; __EXTENDED_DPTR__
   2915.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2915.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2915.24 000000          #ifdef __EXTENDED_DPTR__
   2915.25 000000          #endif ; __EXTENDED_DPTR__
   2915.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2915.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2915.28 000000          #ifdef __EXTENDED_DPTR__
   2915.29 000000          #endif ; __EXTENDED_DPTR__
   2915.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2915.31 000000          #endif ; __DPTR_SEPARATE__
   2915.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2915.33 000000                  ENDM
   2916    000000          
   2917    000000              cfi BLOCK ?INTERRUPT_ENTER_XSP Using cfi_common
   2918    000000              cfi NOFUNCTION
   2919    000000              cfi A     Undefined
   2920    000000          
   2921    000000          ?INTERRUPT_ENTER_XSP:
   2922    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2926    000000          #endif
   2927    000000 C0D0             PUSH    PSW
   2928    000002          
   2929    000002 25..             ADD     A,XSP_L
   2930    000004 C582             XCH     A,DPL
   2931    000006 C0E0             PUSH    A
   2932    000008          
   2933    000008 E5..             MOV     A,XSP_H
   2934    00000A 34FF             ADDC    A,#255
   2935    00000C C583             XCH     A,DPH
   2936    00000E C0E0             PUSH    A
   2937    000010          
   2938    000010          #if ( defined(__EXTENDED_DPTR__))
   2941    000010          #endif
   2942    000010 E5..             MOV     A,XSP_L
   2943    000012 C3               CLR     C
   2944    000013 9582             SUBB    A,DPL
   2945    000015          
   2946    000015          #if ((defined(__EXTENDED_DPTR__)) && (__NUMBER_OF_DP
                           TRS__ == 1))
   2948    000015          #elif (defined(__EXTENDED_DPTR__))
   2950    000015          #elif (__NUMBER_OF_DPTRS__ == 1)
   2951    000015 24F3             ADD     A,#-13  ; plain, one dptr
   2952    000017          #else
   2954    000017          #endif
   2955    000017          
   2956    000017 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   2957    000019 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   2958    00001B 8583..           MOV     XSP_H,DPH
   2959    00001E 8582..           MOV     XSP_L,DPL
   2960    000021 D0A8             POP     0xA8 /* IE */
   2961    000023          
   2962    000023          
   2963    000023          ;=======================================;
   2964    000023          ;  Preserve R0-R3                       ;
   2965    000023          ;=======================================;
   2966    000023 C8               XCH     A,R0    ; R0 = Number of virtual
                                                    registers to push
   2967    000024 F0               MOVX    @DPTR,A
   2968    000025 A3               INC     DPTR
   2969    000026 E9               MOV     A,R1
   2970    000027 F0               MOVX    @DPTR,A
   2971    000028 A3               INC     DPTR
   2972    000029 EA               MOV     A,R2
   2973    00002A F0               MOVX    @DPTR,A
   2974    00002B A3               INC     DPTR
   2975    00002C EB               MOV     A,R3
   2976    00002D F0               MOVX    @DPTR,A
   2977    00002E A3               INC     DPTR
   2978    00002F          
   2979    00002F          ;=======================================;
   2980    00002F          ;    Move all the virtual registers     ;
   2981    00002F          ;=======================================;
   2982    00002F 79..             MOV     R1,#?V0
   2983    000031 E7       Loop:   MOV     A,@R1
   2984    000032 09               INC     R1
   2985    000033 F0               MOVX    @DPTR,A
   2986    000034 A3               INC     DPTR
   2987    000035 D8FA             DJNZ    R0,Loop
   2988    000037          
   2989    000037          ;=======================================;
   2990    000037          ;  Preserve R4-R7                       ;
   2991    000037          ;=======================================;
   2992    000037 EC               MOV     A,R4
   2993    000038 F0               MOVX    @DPTR,A
   2994    000039 A3               INC     DPTR
   2995    00003A ED               MOV     A,R5
   2996    00003B F0               MOVX    @DPTR,A
   2997    00003C A3               INC     DPTR
   2998    00003D EE               MOV     A,R6
   2999    00003E F0               MOVX    @DPTR,A
   3000    00003F A3               INC     DPTR
   3001    000040 EF               MOV     A,R7
   3002    000041 F0               MOVX    @DPTR,A
   3003    000042 A3               INC     DPTR
   3004    000043          
   3005    000043          ;=======================================;
   3006    000043          ;  Preserve (DPX),DPH,DPL,PSW,VB,B,(DPS)
   3007    000043          ;=======================================;
   3008    000043          #if ( defined(__EXTENDED_DPTR__))
   3012    000043          #endif
   3013    000043 D0E0             POP     A
   3014    000045 F0               MOVX    @DPTR,A         ; Save DPH on the
                                                            XDATA-stack
   3015    000046 A3               INC     DPTR
   3016    000047 D0E0             POP     A
   3017    000049 F0               MOVX    @DPTR,A         ; Save DPL on the
                                                            XDATA-stack
   3018    00004A A3               INC     DPTR
   3019    00004B D0E0             POP     A
   3020    00004D F0               MOVX    @DPTR,A         ; Save PSW
   3021    00004E A3               INC     DPTR
   3022    00004F E5..             MOV     A,?VB
   3023    000051 F0               MOVX    @DPTR,A         ; Save the
                                                            VB
   3024    000052 A3               INC     DPTR
   3025    000053 E5F0             MOV     A,B
   3026    000055 F0               MOVX    @DPTR,A         ; Save the
                                                            B
   3027    000056 A3               INC     DPTR
   3028    000057          #if (__NUMBER_OF_DPTRS__ > 1)
   3031    000057          #endif
   3032    000057          
   3033    000057 22               RET
   3034    000058          
   3035    000058              cfi ENDBLOCK ?INTERRUPT_ENTER_XSP
   3036    000058                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_ENTER_XSPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?XSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      31 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:5AFB          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 88          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3037    000000          
   3038    000000          
   3039    000000          ;---------------------------------------------------
                           --------------------------
   3040    000000          ;
   3041    000000          ;       Function: ?SMALL_INTERRUPT_ENTER_XSP
   3042    000000          ;
   3043    000000          ;       Description:
   3044    000000          ;               Saves register (DPX),DPH,DPL,VB,B,(D
                           PS)
   3045    000000          ;               plus a specified number of
                            virtual
   3046    000000          ;               registers on the XDATA stack.
   3047    000000          ;
   3048    000000          ;               +----------+
   3049    000000          ;               |    V0    |
   3050    000000          ;               |    :     |
   3051    000000          ;               |    Vn    |
   3052    000000          ;               + - - - - -+
   3053    000000          ;               |   DPX0   | (if extended DPTR)
   3054    000000          ;               + - - - - -+
   3055    000000          ;               |   DPH0   |
   3056    000000          ;               + - - - - -+
   3057    000000          ;               |   DPL0   |
   3058    000000          ;               + - - - - -+
   3059    000000          ;               |    ?VB   |
   3060    000000          ;               + - - - - -+
   3061    000000          ;               |    B     |
   3062    000000          ;               + - - - - -+
   3063    000000          ;               |   ?DPS   | <-- XSP (if nr of DPTRs
                            > 1)
   3064    000000          ;               +----------+
   3065    000000          ;
   3066    000000          ;       Register input:
   3067    000000          ;               A  -(The number of bytes to push +
                            4/5/6).
   3068    000000          ;
   3069    000000          ;       Register output:
   3070    000000          ;
   3071    000000          ;       Multiple DPTR
   3072    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   3073    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   3074    000000          ;
   3075    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   3076    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   3077    000000          ;
   3078    000000          ;       Stack usage peak        :
   3079    000000          ;       Stack usage after return:
   3080    000000          ;
   3081    000000          ;---------------------------------------------------
                           --------------------------
   3082    000000                  MODULE  ?SMALL_INTERRUPT_ENTER_XSP
   3083    000000              RSEG        XSTACK:NOROOT:XDATA
   3084    000000                  RSEG    RCODE:CODE:NOROOT
   3085    000000                  PUBLIC  ?SMALL_INTERRUPT_ENTER_XSP
   3086    000000                  EXTERN  ?V0
   3087    000000                  EXTERN  ?VB
   3088    000000                  EXTERN  ?XSP
   3089    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   3089.1  000000          #ifdef __EXTENDED_DPTR__
   3089.2  000000          #endif ; __EXTENDED_DPTR__
   3089.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3089.4  000000          #ifdef __DPTR_SEPARATE__
   3089.5  000000          #ifdef __EXTENDED_DPTR__
   3089.6  000000          #endif ; __EXTENDED_DPTR__
   3089.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3089.8  000000          #ifdef __EXTENDED_DPTR__
   3089.9  000000          #endif ; __EXTENDED_DPTR__
   3089.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   3089.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3089.12 000000          #ifdef __EXTENDED_DPTR__
   3089.13 000000          #endif ; __EXTENDED_DPTR__
   3089.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   3089.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3089.16 000000          #ifdef __EXTENDED_DPTR__
   3089.17 000000          #endif ; __EXTENDED_DPTR__
   3089.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   3089.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   3089.20 000000          #ifdef __EXTENDED_DPTR__
   3089.21 000000          #endif ; __EXTENDED_DPTR__
   3089.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   3089.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   3089.24 000000          #ifdef __EXTENDED_DPTR__
   3089.25 000000          #endif ; __EXTENDED_DPTR__
   3089.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   3089.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   3089.28 000000          #ifdef __EXTENDED_DPTR__
   3089.29 000000          #endif ; __EXTENDED_DPTR__
   3089.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   3089.31 000000          #endif ; __DPTR_SEPARATE__
   3089.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   3089.33 000000                  ENDM
   3090    000000          
   3091    000000          
   3092    000000              cfi BLOCK ?SMALL_INTERRUPT_ENTER_XSP Using
  cfi_common
   3093    000000              cfi NOFUNCTION
   3094    000000              cfi A     Undefined
   3095    000000          
   3096    000000          ?SMALL_INTERRUPT_ENTER_XSP:
   3097    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3101    000000          #endif
   3102    000000 25..             ADD     A,XSP_L
   3103    000002 C582             XCH     A,DPL
   3104    000004 C0E0             PUSH    A
   3105    000006 E5..             MOV     A,XSP_H
   3106    000008 34FF             ADDC    A,#255
   3107    00000A C583             XCH     A,DPH
   3108    00000C C0E0             PUSH    A
   3109    00000E          #if (defined(__EXTENDED_DPTR__))
   3112    00000E          #endif
   3113    00000E E5..             MOV     A,XSP_L
   3114    000010 C3               CLR     C
   3115    000011 9582             SUBB    A,DPL
   3116    000013          
   3117    000013          #if ((defined(__EXTENDED_DPTR__)) && (__NUMBER_OF_DP
                           TRS__ == 1))
   3119    000013          #elif (defined(__EXTENDED_DPTR__))
   3121    000013          #elif (__NUMBER_OF_DPTRS__ == 1)
   3122    000013 24FC             ADD     A,#-4   ; plain, one dptr
   3123    000015          #else
   3125    000015          #endif
   3126    000015 F8               MOV     R0,A    ; -> R0 = Number of virtual
                                                    registers to push
   3127    000016          
   3128    000016 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   3129    000018 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   3130    00001A 8583..           MOV     XSP_H,DPH
   3131    00001D 8582..           MOV     XSP_L,DPL
   3132    000020 D0A8             POP     0xA8 /* IE */
   3133    000022          
   3134    000022          ;=======================================;
   3135    000022          ;    Move all the virtual registers     ;
   3136    000022          ;=======================================;
   3137    000022 79..             MOV     R1,#?V0
   3138    000024 E7       Loop:   MOV     A,@R1
   3139    000025 09               INC     R1
   3140    000026 F0               MOVX    @DPTR,A
   3141    000027 A3               INC     DPTR
   3142    000028 D8FA             DJNZ    R0,Loop
   3143    00002A          
   3144    00002A          ;=======================================;
   3145    00002A          ;  Preserve (DPX),DPH,DPL,PSW,VB,B,(DPS)
   3146    00002A          ;=======================================;
   3147    00002A          #if (defined(__EXTENDED_DPTR__))
   3151    00002A          #endif
   3152    00002A D0E0             POP     A
   3153    00002C F0               MOVX    @DPTR,A         ; Save DPH on the
                                                            XDATA-stack
   3154    00002D A3               INC     DPTR
   3155    00002E D0E0             POP     A
   3156    000030 F0               MOVX    @DPTR,A         ; Save DPL on the
                                                            XDATA-stack
   3157    000031 A3               INC     DPTR
   3158    000032 E5..             MOV     A,?VB
   3159    000034 F0               MOVX    @DPTR,A         ; Save the
                                                            VB
   3160    000035 A3               INC     DPTR
   3161    000036 E5F0             MOV     A,B
   3162    000038 F0               MOVX    @DPTR,A         ; Save the
                                                            B
   3163    000039          
   3164    000039          #if (__NUMBER_OF_DPTRS__ > 1)
   3169    000039          #endif
   3170    000039          
   3171    000039 22               RET
   3172    00003A          
   3173    00003A              cfi ENDBLOCK ?SMALL_INTERRUPT_ENTER_XSP
   3174    00003A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958     3105     3130
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959     3102     3113     3131
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028     3089     3097
                                                                     3117     3121     3164
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?SMALL_INTERRUPT_ENTER_XSPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?XSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      24 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:31CD          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 58          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3175    000000          
   3176    000000          ;---------------------------------------------------
                           --------------------------
   3177    000000          ;
   3178    000000          ;       Function: ?INTERRUPT_LEAVE_XSP
   3179    000000          ;
   3180    000000          ;       Description:
   3181    000000          ;               Restore register R6 and R7 plus a
                            specified number of virtual
   3182    000000          ;               registers from the machine
                            stack.
   3183    000000          ;
   3184    000000          ;       Register input:
   3185    000000          ;               R7 The number of bytes to pop.
   3186    000000          ;
   3187    000000          ;       Register output:
   3188    000000          ;               R0     = Undefined
   3189    000000          ;               DPTR   = Restored value
   3190    000000          ;               R6     = Restored value
   3191    000000          ;               R7     = Restored value
   3192    000000          ;               A      = Undefined
   3193    000000          ;               B      = Undefined
   3194    000000          ;
   3195    000000          ;       Multiple DPTR
   3196    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   3197    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   3198    000000          ;
   3199    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   3200    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   3201    000000          ;
   3202    000000          ;       Stack usage:
   3203    000000          ;
   3204    000000          ;---------------------------------------------------
                           --------------------------
   3205    000000                  MODULE  ?INTERRUPT_LEAVE_XSP
   3206    000000              RSEG        XSTACK:NOROOT:XDATA
   3207    000000                  RSEG    RCODE:CODE:NOROOT
   3208    000000                  PUBLIC  ?INTERRUPT_LEAVE_XSP
   3209    000000                  EXTERN  ?VB
   3210    000000                  EXTERN  ?V0
   3211    000000                  EXTERN  ?XSP
   3212    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   3212.1  000000          #ifdef __EXTENDED_DPTR__
   3212.2  000000          #endif ; __EXTENDED_DPTR__
   3212.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3212.4  000000          #ifdef __DPTR_SEPARATE__
   3212.5  000000          #ifdef __EXTENDED_DPTR__
   3212.6  000000          #endif ; __EXTENDED_DPTR__
   3212.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3212.8  000000          #ifdef __EXTENDED_DPTR__
   3212.9  000000          #endif ; __EXTENDED_DPTR__
   3212.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   3212.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3212.12 000000          #ifdef __EXTENDED_DPTR__
   3212.13 000000          #endif ; __EXTENDED_DPTR__
   3212.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   3212.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3212.16 000000          #ifdef __EXTENDED_DPTR__
   3212.17 000000          #endif ; __EXTENDED_DPTR__
   3212.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   3212.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   3212.20 000000          #ifdef __EXTENDED_DPTR__
   3212.21 000000          #endif ; __EXTENDED_DPTR__
   3212.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   3212.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   3212.24 000000          #ifdef __EXTENDED_DPTR__
   3212.25 000000          #endif ; __EXTENDED_DPTR__
   3212.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   3212.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   3212.28 000000          #ifdef __EXTENDED_DPTR__
   3212.29 000000          #endif ; __EXTENDED_DPTR__
   3212.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   3212.31 000000          #endif ; __DPTR_SEPARATE__
   3212.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   3212.33 000000                  ENDM
   3213    000000          
   3214    000000              cfi BLOCK ?INTERRUPT_LEAVE_XSP USING cfi_common
   3215    000000              cfi NOFUNCTION
   3216    000000              cfi A     Undefined
   3217    000000          
   3218    000000          ?INTERRUPT_LEAVE_XSP:
   3219    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3221    000000          #endif
   3222    000000          #if (defined(__EXTENDED_DPTR__))
   3224    000000          #endif
   3225    000000 85..83           MOV     DPH,XSP_H
   3226    000003 85..82           MOV     DPL,XSP_L
   3227    000006          
   3228    000006          
   3229    000006          ;=======================================;
   3230    000006          ;       Restore the R0-R3.      ;
   3231    000006          ;=======================================;
   3232    000006 E0               MOVX    A,@DPTR
   3233    000007 C0E0             PUSH    A               ; R0 -> idata
                                                            stack
   3234    000009 A3               INC     DPTR
   3235    00000A E0               MOVX    A,@DPTR
   3236    00000B F9               MOV     R1,A
   3237    00000C A3               INC     DPTR
   3238    00000D E0               MOVX    A,@DPTR
   3239    00000E FA               MOV     R2,A
   3240    00000F A3               INC     DPTR
   3241    000010 E0               MOVX    A,@DPTR
   3242    000011 FB               MOV     R3,A
   3243    000012 A3               INC     DPTR
   3244    000013          
   3245    000013          ;=======================================;
   3246    000013          ;   Restore all the virtual registers.  ;
   3247    000013          ;=======================================;
   3248    000013 78..             MOV     R0,#?V0
   3249    000015 E0       Loop:   MOVX    A,@DPTR
   3250    000016 F6               MOV     @R0,A
   3251    000017 08               INC     R0
   3252    000018 A3               INC     DPTR
   3253    000019 DFFA             DJNZ    R7,Loop
   3254    00001B          
   3255    00001B          ;=======================================;
   3256    00001B          ;       Restore the R4-R7.      ;
   3257    00001B          ;=======================================;
   3258    00001B E0               MOVX    A,@DPTR
   3259    00001C FC               MOV     R4,A
   3260    00001D A3               INC     DPTR
   3261    00001E E0               MOVX    A,@DPTR
   3262    00001F FD               MOV     R5,A
   3263    000020 A3               INC     DPTR
   3264    000021 E0               MOVX    A,@DPTR
   3265    000022 FE               MOV     R6,A
   3266    000023 A3               INC     DPTR
   3267    000024 E0               MOVX    A,@DPTR
   3268    000025 FF               MOV     R7,A
   3269    000026 A3               INC     DPTR
   3270    000027          
   3271    000027          ;=======================================;
   3272    000027          ;       Restore (DPS),B,VB,PSW,DPL,DPH,(DPX)
   3273    000027          ;=======================================;
   3274    000027          #if (defined(__EXTENDED_DPTR__))
   3278    000027          #endif
   3279    000027 E0               MOVX    A,@DPTR
   3280    000028 C0E0             PUSH    A               ; restore DPH ->
                                                            idata stack
   3281    00002A A3               INC     DPTR
   3282    00002B E0               MOVX    A,@DPTR
   3283    00002C C0E0             PUSH    A               ; restore DPL ->
                                                            idata stack
   3284    00002E A3               INC     DPTR
   3285    00002F E0               MOVX    A,@DPTR
   3286    000030 F5D0             MOV     PSW,A           ; restore PSW
   3287    000032 A3               INC     DPTR
   3288    000033 E0               MOVX    A,@DPTR
   3289    000034 F5..             MOV     ?VB,A           ; restore VB
   3290    000036 A3               INC     DPTR
   3291    000037 E0               MOVX    A,@DPTR
   3292    000038 A3               INC     DPTR
   3293    000039 F5F0             MOV     B,A             ; restore B
   3294    00003B          #if (__NUMBER_OF_DPTRS__ > 1)
   3299    00003B          #endif
   3300    00003B          
   3301    00003B E5A8             MOV     A,0xA8 /* IE */     ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   3302    00003D C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   3303    00003F 8582..           MOV     XSP_L,DPL
   3304    000042 8583..           MOV     XSP_H,DPH
   3305    000045 F5A8             MOV     0xA8 /* IE */,A
   3306    000047          
   3307    000047          #if (__NUMBER_OF_DPTRS__ > 1)
   3309    000047          #endif
   3310    000047          
   3311    000047 D082             POP     DPL
   3312    000049 D083             POP     DPH
   3313    00004B          #if (defined(__EXTENDED_DPTR__))
   3315    00004B          #endif
   3316    00004B          
   3317    00004B          #if (__NUMBER_OF_DPTRS__ > 1)
   3319    00004B          #endif
   3320    00004B          
   3321    00004B D0E0             POP     A
   3322    00004D F8               MOV     R0,A
   3323    00004E          
   3324    00004E                  ; restore reg A
   3325    00004E D0E0             POP     A
   3326    000050          
   3327    000050 32               RETI
   3328    000051          
   3329    000051              cfi ENDBLOCK ?INTERRUPT_LEAVE_XSP
   3330    000051                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958     3105     3130
                                                                     3225     3304
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959     3102     3113     3131
                                                                     3226     3303
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028     3089     3097
                                                                     3117     3121     3164     3212
                                                                     3219     3294     3307     3317
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_LEAVE_XSPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?XSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      15 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:B16C          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 81          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3331    000000          
   3332    000000          
   3333    000000          ;---------------------------------------------------
                           --------------------------
   3334    000000          ;
   3335    000000          ;       Function: ?SMALL_INTERRUPT_LEAVE_XSP
   3336    000000          ;
   3337    000000          ;       Description:
   3338    000000          ;               Restore register R6 and R7 plus a
                            specified number of virtual
   3339    000000          ;               registers from the machine
                            stack.
   3340    000000          ;
   3341    000000          ;       Register input:
   3342    000000          ;               R7 The number of bytes to pop.
   3343    000000          ;
   3344    000000          ;       Register output:
   3345    000000          ;               R0     = Undefined
   3346    000000          ;               DPTR   = Restored value
   3347    000000          ;               R6     = Restored value
   3348    000000          ;               R7     = Restored value
   3349    000000          ;               A      = Undefined
   3350    000000          ;               B      = Undefined
   3351    000000          ;
   3352    000000          ;       Multiple DPTR
   3353    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   3354    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   3355    000000          ;
   3356    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   3357    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   3358    000000          ;
   3359    000000          ;       Stack usage:
   3360    000000          ;
   3361    000000          ;---------------------------------------------------
                           --------------------------
   3362    000000                  MODULE  ?SMALL_INTERRUPT_LEAVE_XSP
   3363    000000              RSEG        XSTACK:NOROOT:XDATA
   3364    000000                  RSEG    RCODE:CODE:NOROOT
   3365    000000                  PUBLIC  ?SMALL_INTERRUPT_LEAVE_XSP
   3366    000000                  EXTERN  ?VB
   3367    000000                  EXTERN  ?V0
   3368    000000                  EXTERN  ?XSP
   3369    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   3369.1  000000          #ifdef __EXTENDED_DPTR__
   3369.2  000000          #endif ; __EXTENDED_DPTR__
   3369.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3369.4  000000          #ifdef __DPTR_SEPARATE__
   3369.5  000000          #ifdef __EXTENDED_DPTR__
   3369.6  000000          #endif ; __EXTENDED_DPTR__
   3369.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3369.8  000000          #ifdef __EXTENDED_DPTR__
   3369.9  000000          #endif ; __EXTENDED_DPTR__
   3369.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   3369.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3369.12 000000          #ifdef __EXTENDED_DPTR__
   3369.13 000000          #endif ; __EXTENDED_DPTR__
   3369.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   3369.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3369.16 000000          #ifdef __EXTENDED_DPTR__
   3369.17 000000          #endif ; __EXTENDED_DPTR__
   3369.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   3369.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   3369.20 000000          #ifdef __EXTENDED_DPTR__
   3369.21 000000          #endif ; __EXTENDED_DPTR__
   3369.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   3369.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   3369.24 000000          #ifdef __EXTENDED_DPTR__
   3369.25 000000          #endif ; __EXTENDED_DPTR__
   3369.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   3369.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   3369.28 000000          #ifdef __EXTENDED_DPTR__
   3369.29 000000          #endif ; __EXTENDED_DPTR__
   3369.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   3369.31 000000          #endif ; __DPTR_SEPARATE__
   3369.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   3369.33 000000                  ENDM
   3370    000000          
   3371    000000              cfi BLOCK ?SMALL_INTERRUPT_LEAVE_XSP USING
  cfi_common
   3372    000000              cfi NOFUNCTION
   3373    000000              cfi A     Undefined
   3374    000000          
   3375    000000          ?SMALL_INTERRUPT_LEAVE_XSP:
   3376    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3378    000000          #endif
   3379    000000          #if (defined(__EXTENDED_DPTR__))
   3381    000000          #endif
   3382    000000 85..83           MOV     DPH,XSP_H
   3383    000003 85..82           MOV     DPL,XSP_L
   3384    000006          
   3385    000006          ;=======================================;
   3386    000006          ;   Restore all the virtual registers.  ;
   3387    000006          ;=======================================;
   3388    000006 78..             MOV     R0,#?V0
   3389    000008 E0       Loop:   MOVX    A,@DPTR
   3390    000009 F6               MOV     @R0,A
   3391    00000A 08               INC     R0
   3392    00000B A3               INC     DPTR
   3393    00000C DFFA             DJNZ    R7,Loop
   3394    00000E          
   3395    00000E          ;=======================================;
   3396    00000E          ;       Restore (DPS),B,VB,PSW,DPL,DPH,(DPX)
   3397    00000E          ;=======================================;
   3398    00000E          #if (defined(__EXTENDED_DPTR__))
   3402    00000E          #endif
   3403    00000E E0               MOVX    A,@DPTR
   3404    00000F C0E0             PUSH    A               ; restore DPH ->
                                                            idata stack
   3405    000011 A3               INC     DPTR
   3406    000012 E0               MOVX    A,@DPTR
   3407    000013 C0E0             PUSH    A               ; restore DPL ->
                                                            idata stack
   3408    000015 A3               INC     DPTR
   3409    000016 E0               MOVX    A,@DPTR
   3410    000017 F5..             MOV     ?VB,A           ; restore VB
   3411    000019 A3               INC     DPTR
   3412    00001A E0               MOVX    A,@DPTR
   3413    00001B F5F0             MOV     B,A             ; restore B
   3414    00001D A3               INC     DPTR
   3415    00001E          #if (__NUMBER_OF_DPTRS__ > 1)
   3420    00001E          #endif
   3421    00001E          
   3422    00001E E5A8             MOV     A,0xA8 /* IE */     ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   3423    000020 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   3424    000022 8582..           MOV     XSP_L,DPL
   3425    000025 8583..           MOV     XSP_H,DPH
   3426    000028 F5A8             MOV     0xA8 /* IE */,A
   3427    00002A          
   3428    00002A          #if (__NUMBER_OF_DPTRS__ > 1)
   3430    00002A          #endif
   3431    00002A          
   3432    00002A D082             POP     DPL
   3433    00002C D083             POP     DPH
   3434    00002E          #if (defined(__EXTENDED_DPTR__))
   3436    00002E          #endif
   3437    00002E          
   3438    00002E          #if (__NUMBER_OF_DPTRS__ > 1)
   3440    00002E          #endif
   3441    00002E          
   3442    00002E                  ; restore reg PSW and A
   3443    00002E D0D0             POP     PSW
   3444    000030 D0E0             POP     A
   3445    000032          
   3446    000032 32               RETI
   3447    000033          
   3448    000033              cfi ENDBLOCK ?SMALL_INTERRUPT_LEAVE_XSP
   3449    000033                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958     3105     3130
                                                                     3225     3304     3382     3425
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959     3102     3113     3131
                                                                     3226     3303     3383     3424
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028     3089     3097
                                                                     3117     3121     3164     3212
                                                                     3219     3294     3307     3317
                                                                     3369     3376     3415     3428
                                                                     3438
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?SMALL_INTERRUPT_LEAVE_XSPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?XSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      8 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:D37D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 51          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3450    000000          
   3451    000000          
   3452    000000          
   3453    000000          ;---------------------------------------------------
                           --------------------------
   3454    000000          ;
   3455    000000          ;       Function: ?INTERRUPT_ENTER_ESP
   3456    000000          ;
   3457    000000          ;       Description:
   3458    000000          ;               Saves registers: R0-R7, PSW, B, VB,
                            DPL, DPH,
   3459    000000          ;                                DPX - if extended
                            dptr used
   3460    000000          ;                                DPS - if more than
                            one dptr used
   3461    000000          ;                                V0-V(#Reg
                            A)
   3462    000000          ;               on the machine stack.
   3463    000000          ;
   3464    000000          ;       Register input:
   3465    000000          ;               A  = Number of virtual registers to
                            save.
   3466    000000          ;
   3467    000000          ;       Register output:
   3468    000000          ;               SP = SP+(A+11)+ 1 [if #dptrs > 1] +
                            1 [if extended dptr] - 1 [if core=extended1]
   3469    000000          ;               A  = Undefined
   3470    000000          ;               R1 = Undefined
   3471    000000          ;               R0 = Undefined.
   3472    000000          ;               DPTR Is the return address from this
                            function.
   3473    000000          ;
   3474    000000          ;       Multiple DPTR
   3475    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   3476    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   3477    000000          ;
   3478    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   3479    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   3480    000000          ;
   3481    000000          ;       Stack usage: NA
   3482    000000          ;
   3483    000000          ;---------------------------------------------------
                           --------------------------
   3484    000000                  MODULE  ?INTERRUPT_ENTER_ESP
   3485    000000                  RSEG    EXT_STACK:NOROOT:XDATA
   3486    000000                  RSEG    RCODE:CODE:NOROOT
   3487    000000                  PUBLIC  ?INTERRUPT_ENTER_ESP
   3488    000000                  EXTERN  ?VB
   3489    000000                  EXTERN  ?V0
   3490    000000                  EXTERN  ?ESP
   3491    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   3491.1  000000          #ifdef __EXTENDED_DPTR__
   3491.2  000000          #endif ; __EXTENDED_DPTR__
   3491.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3491.4  000000          #ifdef __DPTR_SEPARATE__
   3491.5  000000          #ifdef __EXTENDED_DPTR__
   3491.6  000000          #endif ; __EXTENDED_DPTR__
   3491.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3491.8  000000          #ifdef __EXTENDED_DPTR__
   3491.9  000000          #endif ; __EXTENDED_DPTR__
   3491.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   3491.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3491.12 000000          #ifdef __EXTENDED_DPTR__
   3491.13 000000          #endif ; __EXTENDED_DPTR__
   3491.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   3491.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3491.16 000000          #ifdef __EXTENDED_DPTR__
   3491.17 000000          #endif ; __EXTENDED_DPTR__
   3491.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   3491.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   3491.20 000000          #ifdef __EXTENDED_DPTR__
   3491.21 000000          #endif ; __EXTENDED_DPTR__
   3491.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   3491.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   3491.24 000000          #ifdef __EXTENDED_DPTR__
   3491.25 000000          #endif ; __EXTENDED_DPTR__
   3491.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   3491.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   3491.28 000000          #ifdef __EXTENDED_DPTR__
   3491.29 000000          #endif ; __EXTENDED_DPTR__
   3491.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   3491.31 000000          #endif ; __DPTR_SEPARATE__
   3491.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   3491.33 000000                  ENDM
   3492    000000          
   3493    000000              cfi BLOCK ?INTERRUPT_ENTER_ESP Using cfi_common
   3494    000000              cfi NOFUNCTION
   3495    000000              cfi A     Undefined
   3496    000000          
   3497    000000          ?INTERRUPT_ENTER_ESP:
   3498    000000                  ; save ?DPS
   3499    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3503    000000          #endif
   3504    000000                  ; save DPTR
   3505    000000          #if defined(__EXTENDED_DPTR__)
   3507    000000          #endif
   3508    000000 C083             PUSH    DPH
   3509    000002 C082             PUSH    DPL
   3510    000004          
   3511    000004                  ; save PSW
   3512    000004 C0D0             PUSH    PSW
   3513    000006          
   3514    000006                  ; save A and move #virtua; regs to save to
                            R0
   3515    000006 C8               XCH     A,R0    ; loop count in R0
   3516    000007 C0E0             PUSH    A
   3517    000009          
   3518    000009                  ; exchange return address and (R4):R3:R2
   3519    000009 C3               CLR     C
   3520    00000A E581             MOV     A,SP
   3521    00000C          #if defined(__EXTENDED_DPTR__)
   3522    00000C            #if (__CORE__ == __CORE_EXTENDED1__)
   3523    00000C              #if (__NUMBER_OF_DPTRS__ > 1)
   3525    00000C              #else
   3527    00000C              #endif
   3528    00000C            #else
   3529    00000C              #if (__NUMBER_OF_DPTRS__ > 1)
   3531    00000C              #else
   3533    00000C              #endif
   3534    00000C            #endif
   3542    00000C          #else
   3543    00000C            #if (__CORE__ == __CORE_EXTENDED1__)
   3544    00000C              #if (__NUMBER_OF_DPTRS__ > 1)
   3546    00000C              #else
   3548    00000C              #endif
   3549    00000C            #else
   3550    00000C              #if (__NUMBER_OF_DPTRS__ > 1)
   3552    00000C              #else
   3553    00000C 9405             SUBB    A,#5
   3554    00000E              #endif
   3555    00000E            #endif
   3556    00000E F582             MOV     DPL,A
   3557    000010 E5..             MOV     A,?ESP
   3558    000012 9400             SUBB    A,#0
   3559    000014 5403             ANL     A,#0x03         ; Maks out relevant
                                                            ESP bits.
   3560    000016 44..             ORL     A,#(HIGH(sfb(EXT_STACK)) &
                                              0xFC)
   3561    000018 F583             MOV     DPH,A
   3562    00001A          #endif
   3563    00001A          
   3564    00001A                  ; DPTR points to return address on
                            stack
   3565    00001A E0               MOVX    A,@DPTR
   3566    00001B CA               XCH     A,R2            ; R2 = RET_L
   3567    00001C F0               MOVX    @DPTR,A
   3568    00001D A3               INC     DPTR
   3569    00001E          
   3570    00001E E0               MOVX    A,@DPTR
   3571    00001F CB               XCH     A,R3            ; R3 = RET_H
   3572    000020 F0               MOVX    @DPTR,A
   3573    000021 A3               INC     DPTR
   3574    000022          
   3575    000022          #if (__CORE__ == __CORE_EXTENDED1__)
   3579    000022          #else
   3580    000022 EC               MOV     A,R4
   3581    000023 C0E0             PUSH    A
   3582    000025          #endif
   3583    000025          
   3584    000025                  ; Save R regs not already saved
   3585    000025 E9               MOV     A,R1
   3586    000026 C0E0             PUSH    A
   3587    000028 ED               MOV     A,R5
   3588    000029 C0E0             PUSH    A
   3589    00002B EE               MOV     A,R6
   3590    00002C C0E0             PUSH    A
   3591    00002E EF               MOV     A,R7
   3592    00002F C0E0             PUSH    A
   3593    000031                  
   3594    000031                  ; save B, VB
   3595    000031 C0F0             PUSH    B
   3596    000033 C0..             PUSH    ?VB
   3597    000035          
   3598    000035                  ; save virtual registers
   3599    000035 79..             MOV     R1,#?V0
   3600    000037 E7       Loop:   MOV     A,@R1
   3601    000038 09               INC     R1      
   3602    000039 C0E0             PUSH    A
   3603    00003B D8FA             DJNZ    R0,Loop
   3604    00003D          
   3605    00003D                  ; Move (R4):R3:R2 (return address) to
                            DPTR
   3606    00003D 8A82             MOV     DPL,R2
   3607    00003F 8B83             MOV     DPH,R3
   3608    000041          #if (__CORE__ == __CORE_EXTENDED1__)
   3610    000041          #endif
   3611    000041          
   3612    000041 E4               CLR     A
   3613    000042 73               JMP     @A+DPTR
   3614    000043          
   3615    000043              cfi ENDBLOCK ?INTERRUPT_ENTER_ESP
   3616    000043                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958     3105     3130
                                                                     3225     3304     3382     3425
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959     3102     3113     3131
                                                                     3226     3303     3383     3424
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028     3089     3097
                                                                     3117     3121     3164     3212
                                                                     3219     3294     3307     3317
                                                                     3369     3376     3415     3428
                                                                     3438     3491     3499     3550
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
EXT_STACK           XDATA  	REL 
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ESP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?INTERRUPT_ENTER_ESPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      37 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:C984          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 67          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3617    000000          
   3618    000000          ;---------------------------------------------------
                           --------------------------
   3619    000000          ;
   3620    000000          ;       Function: ?SMALL_INTERRUPT_ENTER_ESP
   3621    000000          ;
   3622    000000          ;       Description:
   3623    000000          ;               Saves registers: B, VB, DPL,
                            DPH,
   3624    000000          ;                                DPX - if extended
                            dptr used
   3625    000000          ;                                DPS - if more than
                            one dptr used
   3626    000000          ;                                V0-V(#Reg
                            R7)
   3627    000000          ;               on the machine stack.
   3628    000000          ;
   3629    000000          ;       Register input:
   3630    000000          ;               R7  = Number of virtual registers to
                            save.
   3631    000000          ;
   3632    000000          ;       Register output:
   3633    000000          ;               SP = SP+(R7+4)+ 1 [if #dptrs > 1] +
                            1 [if extended dptr]
   3634    000000          ;               A  = Undefined
   3635    000000          ;               R1 = Undefined
   3636    000000          ;               R7 = Undefined.
   3637    000000          ;               DPTR Is the return address from this
                            function.
   3638    000000          ;
   3639    000000          ;       Multiple DPTR
   3640    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   3641    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   3642    000000          ;
   3643    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   3644    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   3645    000000          ;
   3646    000000          ;       Stack usage: NA
   3647    000000          ;
   3648    000000          ;---------------------------------------------------
                           --------------------------
   3649    000000                  MODULE  ?SMALL_INTERRUPT_ENTER_ESP
   3650    000000                  RSEG    EXT_STACK:NOROOT:XDATA
   3651    000000                  RSEG    RCODE:CODE:NOROOT
   3652    000000                  PUBLIC  ?SMALL_INTERRUPT_ENTER_ESP
   3653    000000                  EXTERN  ?VB
   3654    000000                  EXTERN  ?V0
   3655    000000                  EXTERN  ?ESP
   3656    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   3656.1  000000          #ifdef __EXTENDED_DPTR__
   3656.2  000000          #endif ; __EXTENDED_DPTR__
   3656.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3656.4  000000          #ifdef __DPTR_SEPARATE__
   3656.5  000000          #ifdef __EXTENDED_DPTR__
   3656.6  000000          #endif ; __EXTENDED_DPTR__
   3656.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3656.8  000000          #ifdef __EXTENDED_DPTR__
   3656.9  000000          #endif ; __EXTENDED_DPTR__
   3656.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   3656.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3656.12 000000          #ifdef __EXTENDED_DPTR__
   3656.13 000000          #endif ; __EXTENDED_DPTR__
   3656.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   3656.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3656.16 000000          #ifdef __EXTENDED_DPTR__
   3656.17 000000          #endif ; __EXTENDED_DPTR__
   3656.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   3656.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   3656.20 000000          #ifdef __EXTENDED_DPTR__
   3656.21 000000          #endif ; __EXTENDED_DPTR__
   3656.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   3656.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   3656.24 000000          #ifdef __EXTENDED_DPTR__
   3656.25 000000          #endif ; __EXTENDED_DPTR__
   3656.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   3656.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   3656.28 000000          #ifdef __EXTENDED_DPTR__
   3656.29 000000          #endif ; __EXTENDED_DPTR__
   3656.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   3656.31 000000          #endif ; __DPTR_SEPARATE__
   3656.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   3656.33 000000                  ENDM
   3657    000000          
   3658    000000              cfi BLOCK ?SMALL_INTERRUPT_ENTER_ESP Using
  cfi_common
   3659    000000              cfi NOFUNCTION
   3660    000000              cfi A     Undefined
   3661    000000          
   3662    000000          ?SMALL_INTERRUPT_ENTER_ESP:
   3663    000000          #if (__CODE_MODEL__ == __CM_FAR__)
   3666    000000          #endif
   3667    000000 D0E0             POP     A
   3668    000002 FB               MOV     R3,A
   3669    000003 D0E0             POP     A
   3670    000005 FA               MOV     R2,A
   3671    000006                  
   3672    000006                  ; (R4:)R3:R2 holds return address
   3673    000006                  
   3674    000006 C0F0             PUSH    B
   3675    000008 C0..             PUSH    ?VB
   3676    00000A          
   3677    00000A          #if (__NUMBER_OF_DPTRS__ > 1)
   3681    00000A          #endif
   3682    00000A          
   3683    00000A                  ; save DPTR0
   3684    00000A          #if defined(__EXTENDED_DPTR__)
   3686    00000A          #endif
   3687    00000A C083             PUSH    DPH
   3688    00000C C082             PUSH    DPL
   3689    00000E          
   3690    00000E                  ; save virtual registers
   3691    00000E 79..             MOV     R1,#?V0
   3692    000010 E7       Loop:   MOV     A,@R1
   3693    000011 09               INC     R1      
   3694    000012 C0E0             PUSH    A
   3695    000014 DFFA             DJNZ    R7,Loop
   3696    000016          
   3697    000016          #if (__CODE_MODEL__ == __CM_FAR__)
   3699    000016          #endif
   3700    000016 8B83             MOV     DPH,R3
   3701    000018 8A82             MOV     DPL,R2
   3702    00001A E4               CLR     A
   3703    00001B 73               JMP     @A+DPTR
   3704    00001C          
   3705    00001C              cfi ENDBLOCK ?SMALL_INTERRUPT_ENTER_ESP
   3706    00001C                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958     3105     3130
                                                                     3225     3304     3382     3425
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959     3102     3113     3131
                                                                     3226     3303     3383     3424
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
                                                                     3663     3697
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
                                                                     3663     3697
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028     3089     3097
                                                                     3117     3121     3164     3212
                                                                     3219     3294     3307     3317
                                                                     3369     3376     3415     3428
                                                                     3438     3491     3499     3550
                                                                     3656     3677
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
EXT_STACK           XDATA  	REL 
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ESP                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?SMALL_INTERRUPT_ENTER_ESPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      10 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
Using               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#           CRC:A5           #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 28          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3707    000000          
   3708    000000          ;---------------------------------------------------
                           --------------------------
   3709    000000          ;
   3710    000000          ;       Function: ?INTERRUPT_LEAVE_ESP
   3711    000000          ;
   3712    000000          ;       Description:
   3713    000000          ;               Restore register R0-R1,A,B,PSW,?VB,?
                           DPS,DPL,DPH,(DPX) plus a specified
   3714    000000          ;               number of virtual registers from the
                            machine stack.
   3715    000000          ;
   3716    000000          ;       Register input:
   3717    000000          ;               R7 = Number of virtual registers to
                            restore.
   3718    000000          ;
   3719    000000          ;       Register output:
   3720    000000          ;               SP = SP-R7
   3721    000000          ;               R0 = R0-R7
   3722    000000          ;               R6 = Restored value
   3723    000000          ;               R7 = Restored value
   3724    000000          ;               A  = R6
   3725    000000          ;
   3726    000000          ;       Multiple DPTR
   3727    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   3728    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   3729    000000          ;
   3730    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   3731    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   3732    000000          ;
   3733    000000          ;       Stack usage: NA
   3734    000000          ;
   3735    000000          ;---------------------------------------------------
                           --------------------------
   3736    000000                  MODULE  ?INTERRUPT_LEAVE_ESP
   3737    000000                  EXTERN  ?VB
   3738    000000                  EXTERN  ?V0
   3739    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   3739.1  000000          #ifdef __EXTENDED_DPTR__
   3739.2  000000          #endif ; __EXTENDED_DPTR__
   3739.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3739.4  000000          #ifdef __DPTR_SEPARATE__
   3739.5  000000          #ifdef __EXTENDED_DPTR__
   3739.6  000000          #endif ; __EXTENDED_DPTR__
   3739.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3739.8  000000          #ifdef __EXTENDED_DPTR__
   3739.9  000000          #endif ; __EXTENDED_DPTR__
   3739.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   3739.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3739.12 000000          #ifdef __EXTENDED_DPTR__
   3739.13 000000          #endif ; __EXTENDED_DPTR__
   3739.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   3739.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3739.16 000000          #ifdef __EXTENDED_DPTR__
   3739.17 000000          #endif ; __EXTENDED_DPTR__
   3739.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   3739.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   3739.20 000000          #ifdef __EXTENDED_DPTR__
   3739.21 000000          #endif ; __EXTENDED_DPTR__
   3739.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   3739.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   3739.24 000000          #ifdef __EXTENDED_DPTR__
   3739.25 000000          #endif ; __EXTENDED_DPTR__
   3739.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   3739.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   3739.28 000000          #ifdef __EXTENDED_DPTR__
   3739.29 000000          #endif ; __EXTENDED_DPTR__
   3739.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   3739.31 000000          #endif ; __DPTR_SEPARATE__
   3739.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   3739.33 000000                  ENDM
   3740    000000          
   3741    000000                  RSEG    RCODE:CODE:NOROOT
   3742    000000                  PUBLIC  ?INTERRUPT_LEAVE_ESP
   3743    000000          
   3744    000000              cfi BLOCK ?INTERRUPT_LEAVE_ESP USING cfi_common
   3745    000000              cfi NOFUNCTION
   3746    000000              cfi A     Undefined
   3747    000000          
   3748    000000          ?INTERRUPT_LEAVE_ESP:
   3749    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3750    000000          #ifdef __DPTR_SHADOWED__
   3752    000000          #endif
   3753    000000          #endif
   3754    000000                  ; restore virtual registers
   3755    000000 74..             MOV     A,#?V0-1
   3756    000002 2F               ADD     A,R7
   3757    000003 F8               MOV     R0,A
   3758    000004          Loop:   
   3759    000004 D0E0             POP     A
   3760    000006 F6               MOV     @R0,A
   3761    000007 18               DEC     R0
   3762    000008 DFFA             DJNZ    R7,Loop
   3763    00000A          
   3764    00000A D0..             POP     ?VB
   3765    00000C                  ; restore PSW, B, ?VB,
   3766    00000C D0F0             POP     B
   3767    00000E          
   3768    00000E                  ; restore R0-R7
   3769    00000E D0E0             POP     A
   3770    000010 FF               MOV     R7,A
   3771    000011 D0E0             POP     A
   3772    000013 FE               MOV     R6,A
   3773    000014 D0E0             POP     A
   3774    000016 FD               MOV     R5,A
   3775    000017 D0E0             POP     A
   3776    000019 F9               MOV     R1,A
   3777    00001A          
   3778    00001A          #if (__CORE__ != __CORE_EXTENDED1__)
   3779    00001A D0E0             POP     A
   3780    00001C FC               MOV     R4,A
   3781    00001D          #endif
   3782    00001D D0E0             POP     A
   3783    00001F F8               MOV     R0,A
   3784    000020          
   3785    000020 D0D0             POP     PSW
   3786    000022          
   3787    000022 D082             POP     DPL
   3788    000024 D083             POP     DPH
   3789    000026          
   3790    000026                  ; restore DPTR
   3791    000026          #if (defined(__EXTENDED_DPTR__))
   3793    000026          #endif
   3794    000026          
   3795    000026                  ; restore ?DPS
   3796    000026          #if (__NUMBER_OF_DPTRS__ > 1)
   3799    000026          #endif
   3800    000026          
   3801    000026          #if (__CORE__ == __CORE_EXTENDED1__)
   3804    000026          #endif
   3805    000026 D0E0             POP     A
   3806    000028 FB               MOV     R3,A
   3807    000029 D0E0             POP     A
   3808    00002B FA               MOV     R2,A
   3809    00002C          
   3810    00002C                  ; restore A
   3811    00002C D0E0             POP     A
   3812    00002E          
   3813    00002E 32               RETI
   3814    00002F          
   3815    00002F              cfi ENDBLOCK ?INTERRUPT_LEAVE_ESP
   3816    00002F                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958     3105     3130
                                                                     3225     3304     3382     3425
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959     3102     3113     3131
                                                                     3226     3303     3383     3424
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
                                                                     3663     3697
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
                                                                     3663     3697
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608     3778     3801
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608     3778     3801
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028     3089     3097
                                                                     3117     3121     3164     3212
                                                                     3219     3294     3307     3317
                                                                     3369     3376     3415     3428
                                                                     3438     3491     3499     3550
                                                                     3656     3677     3739     3749
                                                                     3796
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?INTERRUPT_LEAVE_ESPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      4 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:11DE          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 47          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:35             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3817    000000          
   3818    000000          ;---------------------------------------------------
                           --------------------------
   3819    000000          ;
   3820    000000          ;       Function: ?SMALL_INTERRUPT_LEAVE_ESP
   3821    000000          ;
   3822    000000          ;       Description:
   3823    000000          ;               This interrupt enter routine shoul
                            dbe used when the
   3824    000000          ;               register bank is switched.
   3825    000000          ;               Restore registers A,B,PSW,?VB,?DPS,D
                           PL,DPH,(DPX) plus a specified
   3826    000000          ;               number of virtual registers from the
                            machine stack.
   3827    000000          ;
   3828    000000          ;       Register input:
   3829    000000          ;               R7 = Number of virtual registers to
                            restore.
   3830    000000          ;
   3831    000000          ;       Register output:
   3832    000000          ;               SP = SP-R7
   3833    000000          ;               R0 = R0-R7
   3834    000000          ;               R6 = Restored value
   3835    000000          ;               R7 = Restored value
   3836    000000          ;               A  = R6
   3837    000000          ;
   3838    000000          ;       Multiple DPTR
   3839    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: none
   3840    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   3841    000000          ;
   3842    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: none
   3843    000000          ;                               Modifies DPTR: 0
                            (restored)     Returns  DPS: restored
   3844    000000          ;
   3845    000000          ;       Stack usage: NA
   3846    000000          ;
   3847    000000          ;---------------------------------------------------
                           --------------------------
   3848    000000                  MODULE  ?SMALL_INTERRUPT_LEAVE_ESP
   3849    000000                  EXTERN  ?VB
   3850    000000                  EXTERN  ?V0
   3851    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   3851.1  000000          #ifdef __EXTENDED_DPTR__
   3851.2  000000          #endif ; __EXTENDED_DPTR__
   3851.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3851.4  000000          #ifdef __DPTR_SEPARATE__
   3851.5  000000          #ifdef __EXTENDED_DPTR__
   3851.6  000000          #endif ; __EXTENDED_DPTR__
   3851.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3851.8  000000          #ifdef __EXTENDED_DPTR__
   3851.9  000000          #endif ; __EXTENDED_DPTR__
   3851.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   3851.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3851.12 000000          #ifdef __EXTENDED_DPTR__
   3851.13 000000          #endif ; __EXTENDED_DPTR__
   3851.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   3851.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3851.16 000000          #ifdef __EXTENDED_DPTR__
   3851.17 000000          #endif ; __EXTENDED_DPTR__
   3851.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   3851.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   3851.20 000000          #ifdef __EXTENDED_DPTR__
   3851.21 000000          #endif ; __EXTENDED_DPTR__
   3851.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   3851.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   3851.24 000000          #ifdef __EXTENDED_DPTR__
   3851.25 000000          #endif ; __EXTENDED_DPTR__
   3851.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   3851.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   3851.28 000000          #ifdef __EXTENDED_DPTR__
   3851.29 000000          #endif ; __EXTENDED_DPTR__
   3851.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   3851.31 000000          #endif ; __DPTR_SEPARATE__
   3851.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   3851.33 000000                  ENDM
   3852    000000          
   3853    000000                  RSEG    RCODE:CODE:NOROOT
   3854    000000                  PUBLIC  ?SMALL_INTERRUPT_LEAVE_ESP
   3855    000000          
   3856    000000              cfi BLOCK ?SMALL_INTERRUPT_LEAVE_ESP USING
  cfi_common
   3857    000000              cfi NOFUNCTION
   3858    000000              cfi A     Undefined
   3859    000000          
   3860    000000          ?SMALL_INTERRUPT_LEAVE_ESP:
   3861    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3862    000000          #ifdef __DPTR_SHADOWED__
   3864    000000          #endif
   3865    000000          #endif
   3866    000000                  ; restore virtual registers
   3867    000000 74..             MOV     A,#?V0-1
   3868    000002 2F               ADD     A,R7
   3869    000003 F8               MOV     R0,A
   3870    000004          Loop:   
   3871    000004 D0E0             POP     A
   3872    000006 F6               MOV     @R0,A
   3873    000007 18               DEC     R0
   3874    000008 DFFA             DJNZ    R7,Loop
   3875    00000A          
   3876    00000A                  ; restore DPTR
   3877    00000A D082             POP     DPL
   3878    00000C D083             POP     DPH
   3879    00000E          #if (defined(__EXTENDED_DPTR__))
   3881    00000E          #endif
   3882    00000E          
   3883    00000E          #if (__NUMBER_OF_DPTRS__ > 1)
   3886    00000E          #endif
   3887    00000E          
   3888    00000E D0..             POP     ?VB
   3889    000010 D0F0             POP     B
   3890    000012          
   3891    000012                  ; restore PSW and A
   3892    000012 D0D0             POP     PSW
   3893    000014 D0E0             POP     A
   3894    000016          
   3895    000016 32               RETI
   3896    000017          
   3897    000017              cfi ENDBLOCK ?SMALL_INTERRUPT_LEAVE_ESP
   3898    000017                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958     3105     3130
                                                                     3225     3304     3382     3425
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959     3102     3113     3131
                                                                     3226     3303     3383     3424
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
                                                                     3663     3697
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
                                                                     3663     3697
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608     3778     3801
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608     3778     3801
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028     3089     3097
                                                                     3117     3121     3164     3212
                                                                     3219     3294     3307     3317
                                                                     3369     3376     3415     3428
                                                                     3438     3491     3499     3550
                                                                     3656     3677     3739     3749
                                                                     3796     3851     3861     3883
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?SMALL_INTERRUPT_LEAVE_ESPREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?VB                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
Loop                REL    CONST UNTYP.           RCODE      4 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:CECD          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 23          #
##############################





EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      129      140
                                                                      205      208      229      232
                                                                      331      336      337      362
                                                                      365      370      373      376
                                                                      379      385      387      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      768
                                                                      768      768      768      768
                                                                      768      768      769      769
                                                                      769      769      769      769
                                                                      929      929      929      929
                                                                      929      930      930      930
                                                                      930     1222     1222     1222
                                                                     1222     1223     1223     1223
                                                                     1223     1420     1420     1421
                                                                     1421     2140     2141     2142
                                                                     2182     2184     2190     2193
                                                                     2281     2287     2288     2303
                                                                     2307     2309     2312     2328
                                                                     2330     2337     2339
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3        768      768      768      769
                                                                      769      769
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      129
                                                                      140      205      208      229
                                                                      232      331      362      365
                                                                      370      373      376      379
                                                                      385      387      581      581
                                                                      581      581      581      581
                                                                      581      581      582      582
                                                                      582      582      582      582
                                                                      582      582      768      768
                                                                      768      768      768      768
                                                                      768      769      769      769
                                                                      769      769      769      929
                                                                      929      929      929      929
                                                                      930      930      930      930
                                                                     1222     1222     1222     1222
                                                                     1223     1223     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2140     2182     2184     2190
                                                                     2193     2281     2303     2307
                                                                     2309     2312     2328     2330
                                                                     2337     2339
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3      768      768      769
                                                                      769
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       1222     1222     1223     1223
                                                                     1420     1420     1421     1421
                                                                     2933     2958     3105     3130
                                                                     3225     3304     3382     3425
XSP_L                #define, value: ?XSP, line:      23:1       1222     1222     1222     1223
                                                                     1223     1223     1420     1420
                                                                     1421     1421     2929     2942
                                                                     2959     3102     3113     3131
                                                                     3226     3303     3383     3424
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        581      581      581      581
                                                                      581      581      581      581
                                                                      582      582      582      582
                                                                      582      582      582      582
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
                                                                     3663     3697
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582      769
                                                                      769      769      930     1222
                                                                     1222     1222     1223     1223
                                                                     1223     1223     1223     1223
                                                                     1223     1421     1915     2043
                                                                     2051     2157     2316     2324
                                                                     3663     3697
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608     3778     3801
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      319      347
                                                                      581      582      768      769
                                                                     2134     2282     3543     3575
                                                                     3608     3778     3801
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       98      113      196
                                                                      235      304      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      318      318      318      318
                                                                      343      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      581      581      581
                                                                      581      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      582      582      582
                                                                      582      768      768      769
                                                                      769      929      929      930
                                                                      930     1222     1222     1223
                                                                     1223     1420     1420     1420
                                                                     1421     1421     1421     1457
                                                                     1492     1560     1568     1636
                                                                     1671     1688     1753     1761
                                                                     1778     1875     1882     1911
                                                                     1993     2003     2047     2057
                                                                     2129     2146     2153     2273
                                                                     2292     2320     2331     2375
                                                                     2389     2391     2408     2512
                                                                     2530     2532     2566     2653
                                                                     2685     2707     2782     2800
                                                                     2822     2915     2922     2946
                                                                     2950     3028     3089     3097
                                                                     3117     3121     3164     3212
                                                                     3219     3294     3307     3317
                                                                     3369     3376     3415     3428
                                                                     3438     3491     3499     3550
                                                                     3656     3677     3739     3749
                                                                     3796     3851     3861     3883
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3      581
                                                                      581      581      581      581
                                                                      581      581      581      582
                                                                      582      582      582      582
                                                                      582      582      582     2281
                                                                     2303     2307     2309     2312
                                                                     2328     2330     2337     2339
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
enter_PSP            MACRO 
enter_XSP            MACRO 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
leave_PSP            MACRO 
leave_SP             MACRO 
leave_XSP            MACRO 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
retType              Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 


##############################
#          CRC:CECD          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 23          #
#     Modules:        33     #
#     Total errors:   0      #
#     Total warnings: 0      #
##############################



