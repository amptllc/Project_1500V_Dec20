###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave_dptr.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_enter_leave_dptr.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave_dptr.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_enter_leave_dptr.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

      1    000000          ;---------------------------------------------------
                           --------------------------
      2    000000          ;
      3    000000          ;       File:           iar_stack_enter_leave_dptr.s
                           51
      4    000000          ;
      5    000000          ;       Version:        6.10
      6    000000          ;
      7    000000          ;       Description:    Saves DPTR registers on
                            stack.
      8    000000          ;
      9    000000          ;
     10    000000          ;       REVISON INFORMATION                         
                                   
     11    000000          ;                                                   
                                   
     12    000000          ;       Log information is available at the end of
                            this file
     13    000000          ;---------------------------------------------------
                           --------------------------
     14    000000          
     15    000000          #include "iar_common.h"
     16    000000          
     17    000000          #if (__NUMBER_OF_DPTRS__ > 1)
     73    000000          #ifdef __DPTR_SHADOWED__
     75    000000          #if (__NUMBER_OF_DPTRS__ > 7)
     86    000000          #ifdef __EXTENDED_DPTR__
     89    000000          #endif
     91    000000          #endif ; __NUMBER_OF_DPTRS__
     93    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    104    000000          #ifdef __EXTENDED_DPTR__
    107    000000          #endif
    109    000000          #endif ; __NUMBER_OF_DPTRS__
    112    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    123    000000          #ifdef __EXTENDED_DPTR__
    126    000000          #endif
    128    000000          #endif ; __NUMBER_OF_DPTRS__
    131    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    142    000000          #ifdef __EXTENDED_DPTR__
    145    000000          #endif
    147    000000          #endif ; __NUMBER_OF_DPTRS__
    150    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    161    000000          #ifdef __EXTENDED_DPTR__
    164    000000          #endif
    166    000000          #endif ; __NUMBER_OF_DPTRS__
    169    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    180    000000          #ifdef __EXTENDED_DPTR__
    183    000000          #endif
    185    000000          #endif ; __NUMBER_OF_DPTRS__
    188    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    197    000000          #ifdef __EXTENDED_DPTR__
    200    000000          #endif
    202    000000          #endif ; __NUMBER_OF_DPTRS__
    208    000000          #elif __DPTR_SEPARATE__
    209    000000          #if (__NUMBER_OF_DPTRS__ > 7)
    219    000000          #ifdef __EXTENDED_DPTR__
    222    000000          #endif
    223    000000          #endif ; __NUMBER_OF_DPTRS__
    225    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    235    000000          #ifdef __EXTENDED_DPTR__
    238    000000          #endif
    239    000000          #endif ; __NUMBER_OF_DPTRS__
    242    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    252    000000          #ifdef __EXTENDED_DPTR__
    255    000000          #endif
    256    000000          #endif ; __NUMBER_OF_DPTRS__
    259    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    269    000000          #ifdef __EXTENDED_DPTR__
    272    000000          #endif
    273    000000          #endif ; __NUMBER_OF_DPTRS__
    276    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    286    000000          #ifdef __EXTENDED_DPTR__
    289    000000          #endif
    290    000000          #endif ; __NUMBER_OF_DPTRS__
    293    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    303    000000          #ifdef __EXTENDED_DPTR__
    306    000000          #endif
    307    000000          #endif ; __NUMBER_OF_DPTRS__
    310    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    318    000000          #ifdef __EXTENDED_DPTR__
    321    000000          #endif
    322    000000          #endif ; __NUMBER_OF_DPTRS__
    324    000000          #else
    325    000000          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
    326    000000          #endif
    369    000000          #ifdef __DPTR_SHADOWED__
    371    000000          #if (__NUMBER_OF_DPTRS__ > 7)
    382    000000          #ifdef __EXTENDED_DPTR__
    385    000000          #endif
    387    000000          #endif ; __NUMBER_OF_DPTRS__
    390    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    401    000000          #ifdef __EXTENDED_DPTR__
    404    000000          #endif
    406    000000          #endif ; __NUMBER_OF_DPTRS__
    409    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    420    000000          #ifdef __EXTENDED_DPTR__
    423    000000          #endif
    425    000000          #endif ; __NUMBER_OF_DPTRS__
    428    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    439    000000          #ifdef __EXTENDED_DPTR__
    442    000000          #endif
    444    000000          #endif ; __NUMBER_OF_DPTRS__
    447    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    458    000000          #ifdef __EXTENDED_DPTR__
    461    000000          #endif
    463    000000          #endif ; __NUMBER_OF_DPTRS__
    466    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    477    000000          #ifdef __EXTENDED_DPTR__
    480    000000          #endif
    482    000000          #endif ; __NUMBER_OF_DPTRS__
    485    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    494    000000          #ifdef __EXTENDED_DPTR__
    497    000000          #endif
    499    000000          #endif ; __NUMBER_OF_DPTRS__
    505    000000          #elif __DPTR_SEPARATE__
    506    000000          #if (__NUMBER_OF_DPTRS__ > 7)
    516    000000          #ifdef __EXTENDED_DPTR__
    519    000000          #endif
    520    000000          #endif ; __NUMBER_OF_DPTRS__
    523    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    533    000000          #ifdef __EXTENDED_DPTR__
    536    000000          #endif
    537    000000          #endif ; __NUMBER_OF_DPTRS__
    540    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    550    000000          #ifdef __EXTENDED_DPTR__
    553    000000          #endif
    554    000000          #endif ; __NUMBER_OF_DPTRS__
    557    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    567    000000          #ifdef __EXTENDED_DPTR__
    570    000000          #endif
    571    000000          #endif ; __NUMBER_OF_DPTRS__
    574    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    584    000000          #ifdef __EXTENDED_DPTR__
    587    000000          #endif
    588    000000          #endif ; __NUMBER_OF_DPTRS__
    591    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    601    000000          #ifdef __EXTENDED_DPTR__
    604    000000          #endif
    605    000000          #endif ; __NUMBER_OF_DPTRS__
    608    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    616    000000          #ifdef __EXTENDED_DPTR__
    619    000000          #endif
    620    000000          #endif ; __NUMBER_OF_DPTRS__
    622    000000          #else
    623    000000          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
    624    000000          #endif
    688    000000          #ifdef __DPTR_SHADOWED__
    690    000000          #if (__NUMBER_OF_DPTRS__ > 7)
    699    000000          #ifdef __EXTENDED_DPTR__
    701    000000          #endif
    703    000000          #endif ; __NUMBER_OF_DPTRS__
    706    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    715    000000          #ifdef __EXTENDED_DPTR__
    717    000000          #endif
    719    000000          #endif ; __NUMBER_OF_DPTRS__
    722    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    731    000000          #ifdef __EXTENDED_DPTR__
    733    000000          #endif
    735    000000          #endif ; __NUMBER_OF_DPTRS__
    738    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    747    000000          #ifdef __EXTENDED_DPTR__
    749    000000          #endif
    751    000000          #endif ; __NUMBER_OF_DPTRS__
    754    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    763    000000          #ifdef __EXTENDED_DPTR__
    765    000000          #endif
    767    000000          #endif ; __NUMBER_OF_DPTRS__
    770    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    779    000000          #ifdef __EXTENDED_DPTR__
    781    000000          #endif
    783    000000          #endif ; __NUMBER_OF_DPTRS__
    786    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    794    000000          #ifdef __EXTENDED_DPTR__
    796    000000          #endif
    798    000000          #endif ; __NUMBER_OF_DPTRS__
    804    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    806    000000          #endif  
    813    000000          #elif __DPTR_SEPARATE__
    814    000000          #if (__NUMBER_OF_DPTRS__ > 7)
    822    000000          #ifdef __EXTENDED_DPTR__
    824    000000          #endif
    825    000000          #endif ; __NUMBER_OF_DPTRS__
    828    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    836    000000          #ifdef __EXTENDED_DPTR__
    838    000000          #endif
    839    000000          #endif ; __NUMBER_OF_DPTRS__
    842    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    850    000000          #ifdef __EXTENDED_DPTR__
    852    000000          #endif
    853    000000          #endif ; __NUMBER_OF_DPTRS__
    856    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    864    000000          #ifdef __EXTENDED_DPTR__
    866    000000          #endif
    867    000000          #endif ; __NUMBER_OF_DPTRS__
    870    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    878    000000          #ifdef __EXTENDED_DPTR__
    880    000000          #endif
    881    000000          #endif ; __NUMBER_OF_DPTRS__
    884    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    892    000000          #ifdef __EXTENDED_DPTR__
    894    000000          #endif
    895    000000          #endif ; __NUMBER_OF_DPTRS__
    898    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    905    000000          #ifdef __EXTENDED_DPTR__
    907    000000          #endif
    908    000000          #endif ; __NUMBER_OF_DPTRS__
    914    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    916    000000          #endif  
    920    000000          #else
    921    000000          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
    922    000000          #endif
    963    000000          #ifdef __DPTR_SHADOWED__
    965    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    971    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    973    000000          #endif
    978    000000          #ifdef __EXTENDED_DPTR__
    980    000000          #endif
    988    000000          #endif ; __NUMBER_OF_DPTRS__
    991    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    997    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    999    000000          #endif
   1004    000000          #ifdef __EXTENDED_DPTR__
   1006    000000          #endif
   1011    000000          #ifdef __EXTENDED_DPTR__
   1013    000000          #endif
   1021    000000          #endif ; __NUMBER_OF_DPTRS__
   1024    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1030    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1032    000000          #endif
   1037    000000          #ifdef __EXTENDED_DPTR__
   1039    000000          #endif
   1044    000000          #ifdef __EXTENDED_DPTR__
   1046    000000          #endif
   1051    000000          #ifdef __EXTENDED_DPTR__
   1053    000000          #endif
   1061    000000          #endif ; __NUMBER_OF_DPTRS__
   1064    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1070    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1072    000000          #endif
   1077    000000          #ifdef __EXTENDED_DPTR__
   1079    000000          #endif
   1084    000000          #ifdef __EXTENDED_DPTR__
   1086    000000          #endif
   1091    000000          #ifdef __EXTENDED_DPTR__
   1093    000000          #endif
   1098    000000          #ifdef __EXTENDED_DPTR__
   1100    000000          #endif
   1108    000000          #endif ; __NUMBER_OF_DPTRS__
   1111    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1117    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1119    000000          #endif
   1124    000000          #ifdef __EXTENDED_DPTR__
   1126    000000          #endif
   1131    000000          #ifdef __EXTENDED_DPTR__
   1133    000000          #endif
   1138    000000          #ifdef __EXTENDED_DPTR__
   1140    000000          #endif
   1145    000000          #ifdef __EXTENDED_DPTR__
   1147    000000          #endif
   1152    000000          #ifdef __EXTENDED_DPTR__
   1154    000000          #endif
   1162    000000          #endif ; __NUMBER_OF_DPTRS__
   1165    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1171    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1173    000000          #endif
   1178    000000          #ifdef __EXTENDED_DPTR__
   1180    000000          #endif
   1185    000000          #ifdef __EXTENDED_DPTR__
   1187    000000          #endif
   1192    000000          #ifdef __EXTENDED_DPTR__
   1194    000000          #endif
   1199    000000          #ifdef __EXTENDED_DPTR__
   1201    000000          #endif
   1206    000000          #ifdef __EXTENDED_DPTR__
   1208    000000          #endif
   1213    000000          #ifdef __EXTENDED_DPTR__
   1215    000000          #endif
   1223    000000          #endif ; __NUMBER_OF_DPTRS__
   1227    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1233    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1235    000000          #endif
   1240    000000          #ifdef __EXTENDED_DPTR__
   1242    000000          #endif
   1247    000000          #ifdef __EXTENDED_DPTR__
   1249    000000          #endif
   1254    000000          #ifdef __EXTENDED_DPTR__
   1256    000000          #endif
   1261    000000          #ifdef __EXTENDED_DPTR__
   1263    000000          #endif
   1268    000000          #ifdef __EXTENDED_DPTR__
   1270    000000          #endif
   1275    000000          #ifdef __EXTENDED_DPTR__
   1277    000000          #endif
   1282    000000          #ifdef __EXTENDED_DPTR__
   1284    000000          #endif
   1292    000000          #endif ; __NUMBER_OF_DPTRS__
   1299    000000          #elif __DPTR_SEPARATE__
   1302    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1308    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1310    000000          #endif
   1314    000000          #ifdef __EXTENDED_DPTR__
   1316    000000          #endif
   1323    000000          #endif ; __NUMBER_OF_DPTRS__
   1326    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1332    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1334    000000          #endif
   1338    000000          #ifdef __EXTENDED_DPTR__
   1340    000000          #endif
   1344    000000          #ifdef __EXTENDED_DPTR__
   1346    000000          #endif
   1353    000000          #endif ; __NUMBER_OF_DPTRS__
   1356    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1362    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1364    000000          #endif
   1368    000000          #ifdef __EXTENDED_DPTR__
   1370    000000          #endif
   1374    000000          #ifdef __EXTENDED_DPTR__
   1376    000000          #endif
   1380    000000          #ifdef __EXTENDED_DPTR__
   1382    000000          #endif
   1389    000000          #endif ; __NUMBER_OF_DPTRS__
   1392    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1398    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1400    000000          #endif
   1404    000000          #ifdef __EXTENDED_DPTR__
   1406    000000          #endif
   1410    000000          #ifdef __EXTENDED_DPTR__
   1412    000000          #endif
   1416    000000          #ifdef __EXTENDED_DPTR__
   1418    000000          #endif
   1422    000000          #ifdef __EXTENDED_DPTR__
   1424    000000          #endif
   1431    000000          #endif ; __NUMBER_OF_DPTRS__
   1434    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1440    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1442    000000          #endif
   1446    000000          #ifdef __EXTENDED_DPTR__
   1448    000000          #endif
   1452    000000          #ifdef __EXTENDED_DPTR__
   1454    000000          #endif
   1458    000000          #ifdef __EXTENDED_DPTR__
   1460    000000          #endif
   1464    000000          #ifdef __EXTENDED_DPTR__
   1466    000000          #endif
   1470    000000          #ifdef __EXTENDED_DPTR__
   1472    000000          #endif
   1479    000000          #endif ; __NUMBER_OF_DPTRS__
   1483    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1489    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1491    000000          #endif
   1495    000000          #ifdef __EXTENDED_DPTR__
   1497    000000          #endif
   1500    000000          #ifdef __EXTENDED_DPTR__
   1502    000000          #endif
   1505    000000          #ifdef __EXTENDED_DPTR__
   1507    000000          #endif
   1510    000000          #ifdef __EXTENDED_DPTR__
   1512    000000          #endif
   1515    000000          #ifdef __EXTENDED_DPTR__
   1517    000000          #endif
   1520    000000          #ifdef __EXTENDED_DPTR__
   1522    000000          #endif
   1528    000000          #endif ; __NUMBER_OF_DPTRS__
   1532    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1538    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1540    000000          #endif
   1544    000000          #ifdef __EXTENDED_DPTR__
   1546    000000          #endif
   1549    000000          #ifdef __EXTENDED_DPTR__
   1551    000000          #endif
   1554    000000          #ifdef __EXTENDED_DPTR__
   1556    000000          #endif
   1559    000000          #ifdef __EXTENDED_DPTR__
   1561    000000          #endif
   1564    000000          #ifdef __EXTENDED_DPTR__
   1566    000000          #endif
   1569    000000          #ifdef __EXTENDED_DPTR__
   1571    000000          #endif
   1574    000000          #ifdef __EXTENDED_DPTR__
   1576    000000          #endif
   1582    000000          #endif ; __NUMBER_OF_DPTRS__
   1584    000000          #else
   1585    000000          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
   1586    000000          #endif
   1646    000000          #ifdef __DPTR_SHADOWED__
   1648    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1661    000000          #ifdef __EXTENDED_DPTR__
   1665    000000          #endif
   1667    000000          #endif ; __NUMBER_OF_DPTRS__
   1670    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1683    000000          #ifdef __EXTENDED_DPTR__
   1687    000000          #endif
   1689    000000          #endif ; __NUMBER_OF_DPTRS__
   1692    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1705    000000          #ifdef __EXTENDED_DPTR__
   1709    000000          #endif
   1711    000000          #endif ; __NUMBER_OF_DPTRS__
   1713    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1726    000000          #ifdef __EXTENDED_DPTR__
   1730    000000          #endif
   1732    000000          #endif ; __NUMBER_OF_DPTRS__
   1735    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1748    000000          #ifdef __EXTENDED_DPTR__
   1752    000000          #endif
   1754    000000          #endif ; __NUMBER_OF_DPTRS__
   1757    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1770    000000          #ifdef __EXTENDED_DPTR__
   1774    000000          #endif
   1776    000000          #endif ; __NUMBER_OF_DPTRS__
   1779    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1790    000000          #ifdef __EXTENDED_DPTR__
   1794    000000          #endif
   1796    000000          #endif ; __NUMBER_OF_DPTRS__
   1802    000000          #elif __DPTR_SEPARATE__
   1804    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1816    000000          #ifdef __EXTENDED_DPTR__
   1820    000000          #endif
   1821    000000          #endif ; __NUMBER_OF_DPTRS__
   1824    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1836    000000          #ifdef __EXTENDED_DPTR__
   1840    000000          #endif
   1841    000000          #endif ; __NUMBER_OF_DPTRS__
   1844    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1856    000000          #ifdef __EXTENDED_DPTR__
   1860    000000          #endif
   1861    000000          #endif ; __NUMBER_OF_DPTRS__
   1864    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1876    000000          #ifdef __EXTENDED_DPTR__
   1880    000000          #endif
   1881    000000          #endif ; __NUMBER_OF_DPTRS__
   1884    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1896    000000          #ifdef __EXTENDED_DPTR__
   1900    000000          #endif
   1901    000000          #endif ; __NUMBER_OF_DPTRS__
   1904    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1916    000000          #ifdef __EXTENDED_DPTR__
   1920    000000          #endif
   1921    000000          #endif ; __NUMBER_OF_DPTRS__
   1924    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1934    000000          #ifdef __EXTENDED_DPTR__
   1938    000000          #endif
   1939    000000          #endif ; __NUMBER_OF_DPTRS__
   1941    000000          #else
   1942    000000          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
   1943    000000          #endif
   2007    000000          #ifdef __DPTR_SHADOWED__
   2009    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2022    000000          #ifdef __EXTENDED_DPTR__
   2026    000000          #endif
   2028    000000          #endif ; __NUMBER_OF_DPTRS__
   2031    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2044    000000          #ifdef __EXTENDED_DPTR__
   2048    000000          #endif
   2050    000000          #endif ; __NUMBER_OF_DPTRS__
   2053    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2066    000000          #ifdef __EXTENDED_DPTR__
   2070    000000          #endif
   2072    000000          #endif ; __NUMBER_OF_DPTRS__
   2075    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2088    000000          #ifdef __EXTENDED_DPTR__
   2092    000000          #endif
   2094    000000          #endif ; __NUMBER_OF_DPTRS__
   2097    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2110    000000          #ifdef __EXTENDED_DPTR__
   2114    000000          #endif
   2116    000000          #endif ; __NUMBER_OF_DPTRS__
   2119    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2132    000000          #ifdef __EXTENDED_DPTR__
   2136    000000          #endif
   2138    000000          #endif ; __NUMBER_OF_DPTRS__
   2141    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2152    000000          #ifdef __EXTENDED_DPTR__
   2156    000000          #endif
   2158    000000          #endif ; __NUMBER_OF_DPTRS__
   2164    000000          #elif __DPTR_SEPARATE__
   2167    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2179    000000          #ifdef __EXTENDED_DPTR__
   2183    000000          #endif
   2184    000000          #endif ; __NUMBER_OF_DPTRS__
   2187    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2199    000000          #ifdef __EXTENDED_DPTR__
   2203    000000          #endif
   2204    000000          #endif ; __NUMBER_OF_DPTRS__
   2206    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2218    000000          #ifdef __EXTENDED_DPTR__
   2222    000000          #endif
   2223    000000          #endif ; __NUMBER_OF_DPTRS__
   2225    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2237    000000          #ifdef __EXTENDED_DPTR__
   2241    000000          #endif
   2242    000000          #endif ; __NUMBER_OF_DPTRS__
   2244    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2256    000000          #ifdef __EXTENDED_DPTR__
   2260    000000          #endif
   2261    000000          #endif ; __NUMBER_OF_DPTRS__
   2263    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2275    000000          #ifdef __EXTENDED_DPTR__
   2279    000000          #endif
   2280    000000          #endif ; __NUMBER_OF_DPTRS__
   2282    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2292    000000          #ifdef __EXTENDED_DPTR__
   2296    000000          #endif
   2297    000000          #endif ; __NUMBER_OF_DPTRS__
   2299    000000          #else
   2300    000000          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
   2301    000000          #endif
   2364    000000          #ifdef __DPTR_SHADOWED__
   2366    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2382    000000          #ifdef __EXTENDED_DPTR__
   2388    000000          #endif
   2389    000000          #endif ; __NUMBER_OF_DPTRS__
   2392    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2408    000000          #ifdef __EXTENDED_DPTR__
   2414    000000          #endif
   2415    000000          #endif ; __NUMBER_OF_DPTRS__
   2418    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2434    000000          #ifdef __EXTENDED_DPTR__
   2440    000000          #endif
   2441    000000          #endif ; __NUMBER_OF_DPTRS__
   2444    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2460    000000          #ifdef __EXTENDED_DPTR__
   2466    000000          #endif
   2467    000000          #endif ; __NUMBER_OF_DPTRS__
   2470    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2486    000000          #ifdef __EXTENDED_DPTR__
   2492    000000          #endif
   2493    000000          #endif ; __NUMBER_OF_DPTRS__
   2496    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2512    000000          #ifdef __EXTENDED_DPTR__
   2518    000000          #endif
   2519    000000          #endif ; __NUMBER_OF_DPTRS__
   2522    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2536    000000          #ifdef __EXTENDED_DPTR__
   2542    000000          #endif
   2543    000000          #endif ; __NUMBER_OF_DPTRS__
   2549    000000          #elif __DPTR_SEPARATE__
   2552    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2564    000000          #ifdef __EXTENDED_DPTR__
   2568    000000          #endif
   2569    000000          #endif ; __NUMBER_OF_DPTRS__
   2572    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2584    000000          #ifdef __EXTENDED_DPTR__
   2588    000000          #endif
   2589    000000          #endif ; __NUMBER_OF_DPTRS__
   2592    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2604    000000          #ifdef __EXTENDED_DPTR__
   2608    000000          #endif
   2609    000000          #endif ; __NUMBER_OF_DPTRS__
   2612    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2624    000000          #ifdef __EXTENDED_DPTR__
   2628    000000          #endif
   2629    000000          #endif ; __NUMBER_OF_DPTRS__
   2632    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2644    000000          #ifdef __EXTENDED_DPTR__
   2648    000000          #endif
   2649    000000          #endif ; __NUMBER_OF_DPTRS__
   2652    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2664    000000          #ifdef __EXTENDED_DPTR__
   2668    000000          #endif
   2669    000000          #endif ; __NUMBER_OF_DPTRS__
   2672    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2682    000000          #ifdef __EXTENDED_DPTR__
   2686    000000          #endif
   2687    000000          #endif ; __NUMBER_OF_DPTRS__
   2689    000000          #else
   2690    000000          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
   2691    000000          #endif
   2755    000000          #ifdef __DPTR_SHADOWED__
   2757    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2772    000000          #ifdef __EXTENDED_DPTR__
   2778    000000          #endif
   2780    000000          #endif ; __NUMBER_OF_DPTRS__
   2782    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2797    000000          #ifdef __EXTENDED_DPTR__
   2803    000000          #endif
   2805    000000          #endif ; __NUMBER_OF_DPTRS__
   2807    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2822    000000          #ifdef __EXTENDED_DPTR__
   2828    000000          #endif
   2830    000000          #endif ; __NUMBER_OF_DPTRS__
   2832    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2847    000000          #ifdef __EXTENDED_DPTR__
   2853    000000          #endif
   2855    000000          #endif ; __NUMBER_OF_DPTRS__
   2857    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2872    000000          #ifdef __EXTENDED_DPTR__
   2878    000000          #endif
   2880    000000          #endif ; __NUMBER_OF_DPTRS__
   2882    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2897    000000          #ifdef __EXTENDED_DPTR__
   2903    000000          #endif
   2905    000000          #endif ; __NUMBER_OF_DPTRS__
   2907    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2920    000000          #ifdef __EXTENDED_DPTR__
   2926    000000          #endif
   2928    000000          #endif ; __NUMBER_OF_DPTRS__
   2933    000000          #elif __DPTR_SEPARATE__
   2935    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2947    000000          #ifdef __EXTENDED_DPTR__
   2951    000000          #endif
   2952    000000          #endif ; __NUMBER_OF_DPTRS__
   2954    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2966    000000          #ifdef __EXTENDED_DPTR__
   2970    000000          #endif
   2971    000000          #endif ; __NUMBER_OF_DPTRS__
   2973    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2985    000000          #ifdef __EXTENDED_DPTR__
   2989    000000          #endif
   2990    000000          #endif ; __NUMBER_OF_DPTRS__
   2992    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3004    000000          #ifdef __EXTENDED_DPTR__
   3008    000000          #endif
   3009    000000          #endif ; __NUMBER_OF_DPTRS__
   3011    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3023    000000          #ifdef __EXTENDED_DPTR__
   3027    000000          #endif
   3028    000000          #endif ; __NUMBER_OF_DPTRS__
   3030    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3042    000000          #ifdef __EXTENDED_DPTR__
   3046    000000          #endif
   3047    000000          #endif ; __NUMBER_OF_DPTRS__
   3049    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3059    000000          #ifdef __EXTENDED_DPTR__
   3063    000000          #endif
   3064    000000          #endif ; __NUMBER_OF_DPTRS__
   3066    000000          #else
   3067    000000          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
   3068    000000          #endif
   3075    000000          #endif ; (__NUMBER_OF_DPTRS__ > 1)
   3076    000000          
   3077    000000                  END


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       17
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?RET                ABS    CONST UNTYP.           ASEG       Not solved 
?RET_EXT            ABS    CONST UNTYP.           ASEG       Not solved 
?RET_HIGH           ABS    CONST UNTYP.           ASEG       Not solved 
?RET_LOW            ABS    CONST UNTYP.           ASEG       Not solved 
?V_START            ABS    CONST UNTYP.           ASEG       Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BASEADDRESS         ABS    CONST UNTYP.           ASEG       Not solved 
Base                ABS    CONST UNTYP.           ASEG       Not solved 
CFA_PSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CFA_SP              ABS    CONST UNTYP.           ASEG       Not solved 
CFA_XSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CODEALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
COMMON              ABS    CONST UNTYP.           ASEG       Not solved 
CONCAT              ABS    CONST UNTYP.           ASEG       Not solved 
DATAALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       Not solved 
DPTR0               ABS    CONST UNTYP.           ASEG       Not solved 
ENDCOMMON           ABS    CONST UNTYP.           ASEG       Not solved 
ENDNAMES            ABS    CONST UNTYP.           ASEG       Not solved 
EXTENDS             ABS    CONST UNTYP.           ASEG       Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FRAMECELL           ABS    CONST UNTYP.           ASEG       Not solved 
Frame               ABS    CONST UNTYP.           ASEG       Not solved 
NAMES               ABS    CONST UNTYP.           ASEG       Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               ABS    CONST UNTYP.           ASEG       Not solved 
PSPH                ABS    CONST UNTYP.           ASEG       Not solved 
PSPL                ABS    CONST UNTYP.           ASEG       Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RETH_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETL_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETURNADDRESS       ABS    CONST UNTYP.           ASEG       Not solved 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
Resource            ABS    CONST UNTYP.           ASEG       Not solved 
ResourceParts       ABS    CONST UNTYP.           ASEG       Not solved 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SameValue           ABS    CONST UNTYP.           ASEG       Not solved 
StackFrame          ABS    CONST UNTYP.           ASEG       Not solved 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               ABS    CONST UNTYP.           ASEG       Not solved 
Undefined           ABS    CONST UNTYP.           ASEG       Not solved 
V0                  ABS    CONST UNTYP.           ASEG       Not solved 
V1                  ABS    CONST UNTYP.           ASEG       Not solved 
V10                 ABS    CONST UNTYP.           ASEG       Not solved 
V11                 ABS    CONST UNTYP.           ASEG       Not solved 
V12                 ABS    CONST UNTYP.           ASEG       Not solved 
V13                 ABS    CONST UNTYP.           ASEG       Not solved 
V14                 ABS    CONST UNTYP.           ASEG       Not solved 
V15                 ABS    CONST UNTYP.           ASEG       Not solved 
V16                 ABS    CONST UNTYP.           ASEG       Not solved 
V17                 ABS    CONST UNTYP.           ASEG       Not solved 
V18                 ABS    CONST UNTYP.           ASEG       Not solved 
V19                 ABS    CONST UNTYP.           ASEG       Not solved 
V2                  ABS    CONST UNTYP.           ASEG       Not solved 
V20                 ABS    CONST UNTYP.           ASEG       Not solved 
V21                 ABS    CONST UNTYP.           ASEG       Not solved 
V22                 ABS    CONST UNTYP.           ASEG       Not solved 
V23                 ABS    CONST UNTYP.           ASEG       Not solved 
V24                 ABS    CONST UNTYP.           ASEG       Not solved 
V25                 ABS    CONST UNTYP.           ASEG       Not solved 
V26                 ABS    CONST UNTYP.           ASEG       Not solved 
V27                 ABS    CONST UNTYP.           ASEG       Not solved 
V28                 ABS    CONST UNTYP.           ASEG       Not solved 
V29                 ABS    CONST UNTYP.           ASEG       Not solved 
V3                  ABS    CONST UNTYP.           ASEG       Not solved 
V30                 ABS    CONST UNTYP.           ASEG       Not solved 
V31                 ABS    CONST UNTYP.           ASEG       Not solved 
V4                  ABS    CONST UNTYP.           ASEG       Not solved 
V5                  ABS    CONST UNTYP.           ASEG       Not solved 
V6                  ABS    CONST UNTYP.           ASEG       Not solved 
V7                  ABS    CONST UNTYP.           ASEG       Not solved 
V8                  ABS    CONST UNTYP.           ASEG       Not solved 
V9                  ABS    CONST UNTYP.           ASEG       Not solved 
VB                  ABS    CONST UNTYP.           ASEG       Not solved 
VirtualResource     ABS    CONST UNTYP.           ASEG       Not solved 
XSP16               ABS    CONST UNTYP.           ASEG       Not solved 
XSPH                ABS    CONST UNTYP.           ASEG       Not solved 
XSPL                ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_common   ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_names    ABS    CONST UNTYP.           ASEG       Not solved 
cfi_common          ABS    CONST UNTYP.           ASEG       Not solved 
cfi_names           ABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_commonABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_namesABS    CONST UNTYP.           ASEG       Not solved 
samevalue           ABS    CONST UNTYP.           ASEG       Not solved 
sub                 ABS    CONST UNTYP.           ASEG       Not solved 
undefined           ABS    CONST UNTYP.           ASEG       Not solved 


##############################
#          CRC:EB1           #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 0          #
##############################



