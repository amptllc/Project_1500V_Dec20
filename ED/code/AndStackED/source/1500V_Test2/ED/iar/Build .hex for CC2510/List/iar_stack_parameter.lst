###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

      1    000000          ;---------------------------------------------------
                           --------------------------
      2    000000          ;
      3    000000          ;       File:           iar_stack_parameter.s51
      4    000000          ;
      5    000000          ;       Version:        6.10
      6    000000          ;
      7    000000          ;       Created:        12/Mar/02 IANB
      8    000000          ;       Revised:
      9    000000          ;
     10    000000          ;
     11    000000          ;       Description:    This file contain the
                            functions to push parameters
     12    000000          ;                       on stack before a call.
     13    000000          ;
     14    000000          ;                       When using XDATA stack there
                            are two ways of assamble
     15    000000          ;                       the PUSH-routine.
     16    000000          ;                       Use the assambler option:
     17    000000          ;                         -D__NUMBER_OF_DPTRS__= 2 :
                            to get a routine to take advantage of 2-DPTRs.
     18    000000          ;                         -D__NUMBER_OF_DPTRS__= 1 :
                             to get a routine that uses only 1 DPTR.
     19    000000          ;                        
     20    000000          ;       REVISON INFORMATION                         
                                   
     21    000000          ;                                                   
                                   
     22    000000          ;                                                   
                                   
     23    000000          ;       Log information is available at the end of
                            this file
     24    000000          ;---------------------------------------------------
                           --------------------------
     25    000000          
     26    000000          #include "iar_common.h"
     27    000000          
     28    000000          #define GP1L    R1
     29    000000          #define GP1M    R2
     30    000000          #define GP1H    R3
     31    000000          
     32    000000          #define GP2L    R4
     33    000000          #define GP2M    R5
     34    000000          #define GP2H    R6
     35    000000          
     36    000000          ;---------------------------------------------------
                           --------------------------
     37    000000          ;
     38    000000          ;       Functions: Push element(s) from any memory
                            on IDATA stack.
     39    000000          ;                  ?PUSH_ISTACK_I
     40    000000          ;                  ?PUSH_ISTACK_P
     41    000000          ;                  ?PUSH_ISTACK_X
     42    000000          ;                  ?PUSH_ISTACK_C
     43    000000          ;
     44    000000          ;       Description:
     45    000000          ;
     46    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
     47    000000          ;       Function: ?PUSH_ISTACK_I
     48    000000          ;
     49    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
     50    000000          ;
     51    000000          ;       Register input:
     52    000000          ;               R1    = Nr of elements to push
     53    000000          ;               @R0  = Address to the first
                            element.
     54    000000          ;
     55    000000          ;       Register output:
     56    000000          ;               A     = 0
     57    000000          ;               R1    = 0
     58    000000          ;               R0    = Address to the first element
                            - Nr of elems.
     59    000000          ;               DPTR = Return address
     60    000000          ;
     61    000000          ;       DPTR:
     62    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
     63    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
     64    000000          ;
     65    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
     66    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
     67    000000          ;
     68    000000          ;       Stack usage: NA
     69    000000          ;
     70    000000          ;---------------------------------------------------
                           --------------------------
     71    000000                  MODULE  ?PUSH_ISTACK_I
     72    000000                  RSEG    RCODE:CODE:NOROOT
     73    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
     73.1  000000          #ifdef __EXTENDED_DPTR__
     73.2  000000          #endif ; __EXTENDED_DPTR__
     73.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
     73.4  000000          #ifdef __DPTR_SEPARATE__
     73.5  000000          #ifdef __EXTENDED_DPTR__
     73.6  000000          #endif ; __EXTENDED_DPTR__
     73.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
     73.8  000000          #ifdef __EXTENDED_DPTR__
     73.9  000000          #endif ; __EXTENDED_DPTR__
     73.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
     73.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
     73.12 000000          #ifdef __EXTENDED_DPTR__
     73.13 000000          #endif ; __EXTENDED_DPTR__
     73.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
     73.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
     73.16 000000          #ifdef __EXTENDED_DPTR__
     73.17 000000          #endif ; __EXTENDED_DPTR__
     73.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
     73.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
     73.20 000000          #ifdef __EXTENDED_DPTR__
     73.21 000000          #endif ; __EXTENDED_DPTR__
     73.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
     73.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
     73.24 000000          #ifdef __EXTENDED_DPTR__
     73.25 000000          #endif ; __EXTENDED_DPTR__
     73.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
     73.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
     73.28 000000          #ifdef __EXTENDED_DPTR__
     73.29 000000          #endif ; __EXTENDED_DPTR__
     73.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
     73.31 000000          #endif ; __DPTR_SEPARATE__
     73.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
     73.33 000000                  ENDM
     74    000000                  PUBLIC  ?PUSH_ISTACK_I
     75    000000                  PUBLIC  ?PUSH_ISTACK_I_FOUR
     76    000000                  PUBLIC  ?PUSH_ISTACK_I_THREE
     77    000000                  ; ------------------------------------------
                           ----------------------------------
     78    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_I_FOUR
     78.1  000000                                  cfi block ?PUSH_ISTACK_I_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
     78.2  000000                                  cfi nofunction
     78.3  000000          cfi_OFFSET              SET      0
     78.4  000000                                  ENDM
     79    000000              cfi A undefined
     80    000000              cfi R0 undefined
     81    000000              cfi R1 undefined
     82    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
     82.1  000000                  cfi DPTR0 Undefined
     82.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
     82.3  000000          #endif
     82.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
     82.5  000000          #endif
     82.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
     82.7  000000          #endif
     82.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
     82.9  000000          #endif
     82.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
     82.11 000000          #endif
     82.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
     82.13 000000          #endif
     82.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
     82.15 000000          #endif
     82.16 000000                  cfi DPL0 Undefined
     82.17 000000                  cfi DPH0 Undefined
     82.18 000000          #ifdef __EXTENDED_DPTR__
     82.19 000000          #endif
     82.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
     82.21 000000          #ifdef __EXTENDED_DPTR__
     82.22 000000          #endif
     82.23 000000          #endif
     82.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
     82.25 000000          #ifdef __EXTENDED_DPTR__
     82.26 000000          #endif
     82.27 000000          #endif
     82.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
     82.29 000000          #ifdef __EXTENDED_DPTR__
     82.30 000000          #endif
     82.31 000000          #endif
     82.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
     82.33 000000          #ifdef __EXTENDED_DPTR__
     82.34 000000          #endif
     82.35 000000          #endif
     82.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
     82.37 000000          #ifdef __EXTENDED_DPTR__
     82.38 000000          #endif
     82.39 000000          #endif
     82.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
     82.41 000000          #ifdef __EXTENDED_DPTR__
     82.42 000000          #endif
     82.43 000000          #endif
     82.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
     82.45 000000          #ifdef __EXTENDED_DPTR__
     82.46 000000          #endif
     82.47 000000          #endif
     82.48 000000                  ENDM
     83    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(4,
                            __SIZE_OF_RETADDR__))
     84    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 4
     84.1  000000          #if (defined(__EXTENDED_STACK__))
     84.2  000000          #else
     84.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,1)))
     84.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,2)))
     84.5  000000          #endif
     84.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
     84.7  000000            #if (defined(__EXTENDED_STACK__))
     84.8  000000            #else
     84.9  000000            #endif
     84.10 000000          #endif
     84.11 000000                                  ENDM
     85    000000          ?PUSH_ISTACK_I_FOUR:
     86    000000 7904             MOV     R1,#0x4
     87    000002 80..             SJMP    ?PUSH_ISTACK_I
     88    000004                  REQUIRE ?PUSH_ISTACK_I
     89    000004                  cfi_DATA_BLOCK_end ?PUSH_ISTACK_I_FOUR
     89.1  000004                                  IF cfi_OFFSET
     89.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
     89.3  000004                                  ELSE
     89.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           I_FOUR
     89.5  000004                                  ENDIF
     89.6  000004                                  ENDM
     90    000004          
     91    000004          ; --------------------------------------------------
                           --------------------------
     92    000000                  RSEG    RCODE:CODE:NOROOT
     93    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_I_THREE
     93.1  000000                                  cfi block ?PUSH_ISTACK_I_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
     93.2  000000                                  cfi nofunction
     93.3  000000          cfi_OFFSET              SET      0
     93.4  000000                                  ENDM
     94    000000              cfi A undefined
     95    000000              cfi R0 undefined
     96    000000              cfi R1 undefined
     97    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
     97.1  000000                  cfi DPTR0 Undefined
     97.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
     97.3  000000          #endif
     97.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
     97.5  000000          #endif
     97.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
     97.7  000000          #endif
     97.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
     97.9  000000          #endif
     97.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
     97.11 000000          #endif
     97.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
     97.13 000000          #endif
     97.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
     97.15 000000          #endif
     97.16 000000                  cfi DPL0 Undefined
     97.17 000000                  cfi DPH0 Undefined
     97.18 000000          #ifdef __EXTENDED_DPTR__
     97.19 000000          #endif
     97.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
     97.21 000000          #ifdef __EXTENDED_DPTR__
     97.22 000000          #endif
     97.23 000000          #endif
     97.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
     97.25 000000          #ifdef __EXTENDED_DPTR__
     97.26 000000          #endif
     97.27 000000          #endif
     97.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
     97.29 000000          #ifdef __EXTENDED_DPTR__
     97.30 000000          #endif
     97.31 000000          #endif
     97.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
     97.33 000000          #ifdef __EXTENDED_DPTR__
     97.34 000000          #endif
     97.35 000000          #endif
     97.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
     97.37 000000          #ifdef __EXTENDED_DPTR__
     97.38 000000          #endif
     97.39 000000          #endif
     97.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
     97.41 000000          #ifdef __EXTENDED_DPTR__
     97.42 000000          #endif
     97.43 000000          #endif
     97.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
     97.45 000000          #ifdef __EXTENDED_DPTR__
     97.46 000000          #endif
     97.47 000000          #endif
     97.48 000000                  ENDM
     98    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(3,
                            __SIZE_OF_RETADDR__))
     99    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 3
     99.1  000000          #if (defined(__EXTENDED_STACK__))
     99.2  000000          #else
     99.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,1)))
     99.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,2)))
     99.5  000000          #endif
     99.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
     99.7  000000            #if (defined(__EXTENDED_STACK__))
     99.8  000000            #else
     99.9  000000            #endif
     99.10 000000          #endif
     99.11 000000                                  ENDM
    100    000000          ?PUSH_ISTACK_I_THREE:
    101    000000 7903             MOV     R1,#0x3
    102    000002                  REQUIRE ?PUSH_ISTACK_I
    103    000002                  cfi_DATA_BLOCK_end ?PUSH_ISTACK_I_THREE
    103.1  000002                                  IF cfi_OFFSET
    103.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
    103.3  000002                                  ELSE
    103.4  000002                                    cfi endblock ?PUSH_ISTACK_
                           I_THREE
    103.5  000002                                  ENDIF
    103.6  000002                                  ENDM
    104    000002          
    105    000002          ; --------------------------------------------------
                           --------------------------
    106    000000                  RSEG    RCODE:CODE:NOROOT
    107    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_I
    107.1  000000                                  cfi block ?PUSH_ISTACK_I
                                                                    using
                                                                    cfi_common
    107.2  000000                                  cfi nofunction
    107.3  000000          cfi_OFFSET              SET      0
    107.4  000000                                  ENDM
    108    000000              cfi A undefined
    109    000000              cfi R0 undefined
    110    000000              cfi R1 undefined
    111    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    111.1  000000                  cfi DPTR0 Undefined
    111.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    111.3  000000          #endif
    111.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    111.5  000000          #endif
    111.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    111.7  000000          #endif
    111.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    111.9  000000          #endif
    111.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    111.11 000000          #endif
    111.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    111.13 000000          #endif
    111.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    111.15 000000          #endif
    111.16 000000                  cfi DPL0 Undefined
    111.17 000000                  cfi DPH0 Undefined
    111.18 000000          #ifdef __EXTENDED_DPTR__
    111.19 000000          #endif
    111.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    111.21 000000          #ifdef __EXTENDED_DPTR__
    111.22 000000          #endif
    111.23 000000          #endif
    111.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    111.25 000000          #ifdef __EXTENDED_DPTR__
    111.26 000000          #endif
    111.27 000000          #endif
    111.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    111.29 000000          #ifdef __EXTENDED_DPTR__
    111.30 000000          #endif
    111.31 000000          #endif
    111.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    111.33 000000          #ifdef __EXTENDED_DPTR__
    111.34 000000          #endif
    111.35 000000          #endif
    111.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    111.37 000000          #ifdef __EXTENDED_DPTR__
    111.38 000000          #endif
    111.39 000000          #endif
    111.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    111.41 000000          #ifdef __EXTENDED_DPTR__
    111.42 000000          #endif
    111.43 000000          #endif
    111.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    111.45 000000          #ifdef __EXTENDED_DPTR__
    111.46 000000          #endif
    111.47 000000          #endif
    111.48 000000                  ENDM
    112    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(R1,
                            __SIZE_OF_RETADDR__))
    113    000000              cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND R1
    113.1  000000          #if (defined(__EXTENDED_STACK__))
    113.2  000000          #else
    113.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(R1,1)))
    113.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(R1,2)))
    113.5  000000          #endif
    113.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    113.7  000000            #if (defined(__EXTENDED_STACK__))
    113.8  000000            #else
    113.9  000000            #endif
    113.10 000000          #endif
    113.11 000000                                  ENDM
    114    000000          ?PUSH_ISTACK_I:
    115    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    119    000000          #endif
    120    000000 D083             POP     DPH
    121    000002              cfi ?RET_HIGH DPH0
    122    000002              cfi CFA_MACHINE add(MACHINE_SP, sub(R1,
                            1))
    123    000002 D082             POP     DPL
    124    000004              cfi ?RET_LOW DPL0
    125    000004              cfi CFA_MACHINE add(MACHINE_SP, R1)
    126    000004          LOOP:
    127    000004 E6               MOV     A,@R0
    128    000005 C0E0             PUSH    A
    129    000007              cfi CFA_MACHINE add(MACHINE_SP, sub(R1,
                            1))
    130    000007 08               INC     R0
    131    000008 D9FA             DJNZ    R1,LOOP
    132    00000A              cfi CFA_MACHINE MACHINE_SP
    133    00000A E4               CLR     A
    134    00000B 73               JMP     @A+DPTR
    135    00000C          
    136    00000C                  cfi_DATA_BLOCK_end ?PUSH_ISTACK_I
    136.1  00000C                                  IF cfi_OFFSET
    136.2  00000C                                    #error "Non-zero offset on
                            cfi data block end"
    136.3  00000C                                  ELSE
    136.4  00000C                                    cfi endblock ?PUSH_ISTACK_
                           I
    136.5  00000C                                  ENDIF
    136.6  00000C                                  ENDM
    137    00000C                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30  
GP1L                 #define, value: R1, line:        28  
GP1M                 #define, value: R2, line:        29  
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_ISTACK_I      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_I_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_I_THREEREL    CONST PUB UNTYP.       RCODE      0 
?RET                ABS    CONST UNTYP.           ASEG       Not solved 
?RET_EXT            ABS    CONST UNTYP.           ASEG       Not solved 
?RET_HIGH           ABS    CONST UNTYP.           ASEG       Not solved 
?RET_LOW            ABS    CONST UNTYP.           ASEG       Not solved 
?V_START            ABS    CONST UNTYP.           ASEG       Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BASEADDRESS         ABS    CONST UNTYP.           ASEG       Not solved 
Base                ABS    CONST UNTYP.           ASEG       Not solved 
CFA_PSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CFA_SP              ABS    CONST UNTYP.           ASEG       Not solved 
CFA_XSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CODEALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
COMMON              ABS    CONST UNTYP.           ASEG       Not solved 
CONCAT              ABS    CONST UNTYP.           ASEG       Not solved 
DATAALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       Not solved 
DPTR0               ABS    CONST UNTYP.           ASEG       Not solved 
ENDCOMMON           ABS    CONST UNTYP.           ASEG       Not solved 
ENDNAMES            ABS    CONST UNTYP.           ASEG       Not solved 
EXTENDS             ABS    CONST UNTYP.           ASEG       Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FRAMECELL           ABS    CONST UNTYP.           ASEG       Not solved 
Frame               ABS    CONST UNTYP.           ASEG       Not solved 
LOOP                REL    CONST UNTYP.           RCODE      4 
NAMES               ABS    CONST UNTYP.           ASEG       Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               ABS    CONST UNTYP.           ASEG       Not solved 
PSPH                ABS    CONST UNTYP.           ASEG       Not solved 
PSPL                ABS    CONST UNTYP.           ASEG       Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RETH_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETL_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETURNADDRESS       ABS    CONST UNTYP.           ASEG       Not solved 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
Resource            ABS    CONST UNTYP.           ASEG       Not solved 
ResourceParts       ABS    CONST UNTYP.           ASEG       Not solved 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SameValue           ABS    CONST UNTYP.           ASEG       Not solved 
StackFrame          ABS    CONST UNTYP.           ASEG       Not solved 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               ABS    CONST UNTYP.           ASEG       Not solved 
Undefined           ABS    CONST UNTYP.           ASEG       Not solved 
V0                  ABS    CONST UNTYP.           ASEG       Not solved 
V1                  ABS    CONST UNTYP.           ASEG       Not solved 
V10                 ABS    CONST UNTYP.           ASEG       Not solved 
V11                 ABS    CONST UNTYP.           ASEG       Not solved 
V12                 ABS    CONST UNTYP.           ASEG       Not solved 
V13                 ABS    CONST UNTYP.           ASEG       Not solved 
V14                 ABS    CONST UNTYP.           ASEG       Not solved 
V15                 ABS    CONST UNTYP.           ASEG       Not solved 
V16                 ABS    CONST UNTYP.           ASEG       Not solved 
V17                 ABS    CONST UNTYP.           ASEG       Not solved 
V18                 ABS    CONST UNTYP.           ASEG       Not solved 
V19                 ABS    CONST UNTYP.           ASEG       Not solved 
V2                  ABS    CONST UNTYP.           ASEG       Not solved 
V20                 ABS    CONST UNTYP.           ASEG       Not solved 
V21                 ABS    CONST UNTYP.           ASEG       Not solved 
V22                 ABS    CONST UNTYP.           ASEG       Not solved 
V23                 ABS    CONST UNTYP.           ASEG       Not solved 
V24                 ABS    CONST UNTYP.           ASEG       Not solved 
V25                 ABS    CONST UNTYP.           ASEG       Not solved 
V26                 ABS    CONST UNTYP.           ASEG       Not solved 
V27                 ABS    CONST UNTYP.           ASEG       Not solved 
V28                 ABS    CONST UNTYP.           ASEG       Not solved 
V29                 ABS    CONST UNTYP.           ASEG       Not solved 
V3                  ABS    CONST UNTYP.           ASEG       Not solved 
V30                 ABS    CONST UNTYP.           ASEG       Not solved 
V31                 ABS    CONST UNTYP.           ASEG       Not solved 
V4                  ABS    CONST UNTYP.           ASEG       Not solved 
V5                  ABS    CONST UNTYP.           ASEG       Not solved 
V6                  ABS    CONST UNTYP.           ASEG       Not solved 
V7                  ABS    CONST UNTYP.           ASEG       Not solved 
V8                  ABS    CONST UNTYP.           ASEG       Not solved 
V9                  ABS    CONST UNTYP.           ASEG       Not solved 
VB                  ABS    CONST UNTYP.           ASEG       Not solved 
VirtualResource     ABS    CONST UNTYP.           ASEG       Not solved 
XSP16               ABS    CONST UNTYP.           ASEG       Not solved 
XSPH                ABS    CONST UNTYP.           ASEG       Not solved 
XSPL                ABS    CONST UNTYP.           ASEG       Not solved 
add                 REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_banked_common   ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_names    ABS    CONST UNTYP.           ASEG       Not solved 
cfi_common          ABS    CONST UNTYP.           ASEG       Not solved 
cfi_names           ABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_commonABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_namesABS    CONST UNTYP.           ASEG       Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           ABS    CONST UNTYP.           ASEG       Not solved 
sub                 ABS    CONST UNTYP.           ASEG       Not solved 
undefined           ABS    CONST UNTYP.           ASEG       Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3F29          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 18          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    138    000000          
    139    000000          ;---------------------------------------------------
                           --------------------------
    140    000000          ;       Function: ?PUSH_ISTACK_P
    141    000000          ;
    142    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
    143    000000          ;
    144    000000          ;       Register input:
    145    000000          ;               R1    = Nr of elements to push
    146    000000          ;               @R0  = Address to the first
                            element.
    147    000000          ;
    148    000000          ;       Register output:
    149    000000          ;               A    = 0
    150    000000          ;               R0   = Address to the first element
                            - Nr of elems.
    151    000000          ;               R1   = 0
    152    000000          ;               DPTR = Return address
    153    000000          ;
    154    000000          ;       DPTR:
    155    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
    156    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    157    000000          ;
    158    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
    159    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    160    000000          ;
    161    000000          ;       Stack usage: NA
    162    000000          ;
    163    000000          ;---------------------------------------------------
                           --------------------------
    164    000000                  MODULE  ?PUSH_ISTACK_P
    165    000000                  RSEG    RCODE:CODE:NOROOT
    166    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    166.1  000000          #ifdef __EXTENDED_DPTR__
    166.2  000000          #endif ; __EXTENDED_DPTR__
    166.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    166.4  000000          #ifdef __DPTR_SEPARATE__
    166.5  000000          #ifdef __EXTENDED_DPTR__
    166.6  000000          #endif ; __EXTENDED_DPTR__
    166.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    166.8  000000          #ifdef __EXTENDED_DPTR__
    166.9  000000          #endif ; __EXTENDED_DPTR__
    166.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    166.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    166.12 000000          #ifdef __EXTENDED_DPTR__
    166.13 000000          #endif ; __EXTENDED_DPTR__
    166.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    166.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    166.16 000000          #ifdef __EXTENDED_DPTR__
    166.17 000000          #endif ; __EXTENDED_DPTR__
    166.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    166.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    166.20 000000          #ifdef __EXTENDED_DPTR__
    166.21 000000          #endif ; __EXTENDED_DPTR__
    166.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    166.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    166.24 000000          #ifdef __EXTENDED_DPTR__
    166.25 000000          #endif ; __EXTENDED_DPTR__
    166.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    166.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    166.28 000000          #ifdef __EXTENDED_DPTR__
    166.29 000000          #endif ; __EXTENDED_DPTR__
    166.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    166.31 000000          #endif ; __DPTR_SEPARATE__
    166.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    166.33 000000                  ENDM
    167    000000                  PUBLIC  ?PUSH_ISTACK_P
    168    000000                  PUBLIC  ?PUSH_ISTACK_P_FOUR
    169    000000                  PUBLIC  ?PUSH_ISTACK_P_THREE
    170    000000                  PUBLIC  ?PUSH_ISTACK_P_TWO
    171    000000                  PUBLIC  ?PUSH_ISTACK_P_ONE
    172    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_P_FOUR
    172.1  000000                                  cfi block ?PUSH_ISTACK_P_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
    172.2  000000                                  cfi nofunction
    172.3  000000          cfi_OFFSET              SET      0
    172.4  000000                                  ENDM
    173    000000              cfi R1 undefined
    174    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(4,
                            __SIZE_OF_RETADDR__))
    175    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 4
    175.1  000000          #if (defined(__EXTENDED_STACK__))
    175.2  000000          #else
    175.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,1)))
    175.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,2)))
    175.5  000000          #endif
    175.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    175.7  000000            #if (defined(__EXTENDED_STACK__))
    175.8  000000            #else
    175.9  000000            #endif
    175.10 000000          #endif
    175.11 000000                                  ENDM
    176    000000          ?PUSH_ISTACK_P_FOUR:
    177    000000 7904             MOV     R1,#0x4
    178    000002 80..             SJMP    ?PUSH_ISTACK_P
    179    000004                  REQUIRE ?PUSH_ISTACK_P
    180    000004                  cfi_DATA_BLOCK_end ?PUSH_ISTACK_P_FOUR
    180.1  000004                                  IF cfi_OFFSET
    180.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    180.3  000004                                  ELSE
    180.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           P_FOUR
    180.5  000004                                  ENDIF
    180.6  000004                                  ENDM
    181    000004          
    182    000004          ; --------------------------------------------------
                           --------------------------
    183    000000                  RSEG    RCODE:CODE:NOROOT
    184    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_P_THREE
    184.1  000000                                  cfi block ?PUSH_ISTACK_P_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
    184.2  000000                                  cfi nofunction
    184.3  000000          cfi_OFFSET              SET      0
    184.4  000000                                  ENDM
    185    000000              cfi R1 undefined
    186    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(3,
                            __SIZE_OF_RETADDR__))
    187    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 3
    187.1  000000          #if (defined(__EXTENDED_STACK__))
    187.2  000000          #else
    187.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,1)))
    187.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,2)))
    187.5  000000          #endif
    187.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    187.7  000000            #if (defined(__EXTENDED_STACK__))
    187.8  000000            #else
    187.9  000000            #endif
    187.10 000000          #endif
    187.11 000000                                  ENDM
    188    000000          ?PUSH_ISTACK_P_THREE:
    189    000000 7903             MOV     R1,#0x3
    190    000002 80..             SJMP    ?PUSH_ISTACK_P
    191    000004                  REQUIRE ?PUSH_ISTACK_P
    192    000004                  cfi_DATA_BLOCK_end ?PUSH_ISTACK_P_THREE
    192.1  000004                                  IF cfi_OFFSET
    192.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    192.3  000004                                  ELSE
    192.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           P_THREE
    192.5  000004                                  ENDIF
    192.6  000004                                  ENDM
    193    000004          
    194    000004          ; --------------------------------------------------
                           --------------------------
    195    000000                  RSEG    RCODE:CODE:NOROOT
    196    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_P_TWO
    196.1  000000                                  cfi block ?PUSH_ISTACK_P_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
    196.2  000000                                  cfi nofunction
    196.3  000000          cfi_OFFSET              SET      0
    196.4  000000                                  ENDM
    197    000000              cfi R1 undefined
    198    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(2,
                            __SIZE_OF_RETADDR__))
    199    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 2
    199.1  000000          #if (defined(__EXTENDED_STACK__))
    199.2  000000          #else
    199.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(2,1)))
    199.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(2,2)))
    199.5  000000          #endif
    199.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    199.7  000000            #if (defined(__EXTENDED_STACK__))
    199.8  000000            #else
    199.9  000000            #endif
    199.10 000000          #endif
    199.11 000000                                  ENDM
    200    000000          ?PUSH_ISTACK_P_TWO:
    201    000000 7902             MOV     R1,#0x2
    202    000002 80..             SJMP    ?PUSH_ISTACK_P
    203    000004                  REQUIRE ?PUSH_ISTACK_P
    204    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_P_TWO
    204.1  000004                                  IF cfi_OFFSET
    204.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    204.3  000004                                  ELSE
    204.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           P_TWO
    204.5  000004                                  ENDIF
    204.6  000004                                  ENDM
    205    000004          
    206    000004          ; --------------------------------------------------
                           --------------------------
    207    000000                  RSEG    RCODE:CODE:NOROOT
    208    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_P_ONE
    208.1  000000                                  cfi block ?PUSH_ISTACK_P_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
    208.2  000000                                  cfi nofunction
    208.3  000000          cfi_OFFSET              SET      0
    208.4  000000                                  ENDM
    209    000000              cfi R1 undefined
    210    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(1,
                            __SIZE_OF_RETADDR__))
    211    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 1
    211.1  000000          #if (defined(__EXTENDED_STACK__))
    211.2  000000          #else
    211.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(1,1)))
    211.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(1,2)))
    211.5  000000          #endif
    211.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    211.7  000000            #if (defined(__EXTENDED_STACK__))
    211.8  000000            #else
    211.9  000000            #endif
    211.10 000000          #endif
    211.11 000000                                  ENDM
    212    000000          ?PUSH_ISTACK_P_ONE:
    213    000000 7901             MOV     R1,#0x1
    214    000002                  REQUIRE ?PUSH_ISTACK_P
    215    000002              cfi_DATA_BLOCK_end ?PUSH_ISTACK_P_ONE
    215.1  000002                                  IF cfi_OFFSET
    215.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
    215.3  000002                                  ELSE
    215.4  000002                                    cfi endblock ?PUSH_ISTACK_
                           P_ONE
    215.5  000002                                  ENDIF
    215.6  000002                                  ENDM
    216    000002          
    217    000002          ; --------------------------------------------------
                           --------------------------
    218    000000                  RSEG    RCODE:CODE:NOROOT
    219    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_P
    219.1  000000                                  cfi block ?PUSH_ISTACK_P
                                                                    using
                                                                    cfi_common
    219.2  000000                                  cfi nofunction
    219.3  000000          cfi_OFFSET              SET      0
    219.4  000000                                  ENDM
    220    000000              cfi A  undefined
    221    000000              cfi R0 undefined
    222    000000              cfi R1 undefined
    223    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(R1,
                            __SIZE_OF_RETADDR__))
    224    000000              cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND R1
    224.1  000000          #if (defined(__EXTENDED_STACK__))
    224.2  000000          #else
    224.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(R1,1)))
    224.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(R1,2)))
    224.5  000000          #endif
    224.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    224.7  000000            #if (defined(__EXTENDED_STACK__))
    224.8  000000            #else
    224.9  000000            #endif
    224.10 000000          #endif
    224.11 000000                                  ENDM
    225    000000          ?PUSH_ISTACK_P:
    226    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    230    000000          #endif
    231    000000 D083             POP     DPH
    232    000002              cfi CFA_MACHINE add(MACHINE_SP, sub(R1,
                            1))
    233    000002              cfi ?RET_HIGH DPH0
    234    000002 D082             POP     DPL
    235    000004              cfi CFA_MACHINE add(MACHINE_SP, R1)
    236    000004              cfi ?RET_LOW DPL0
    237    000004          LOOP:
    238    000004 E2               MOVX    A,@R0
    239    000005 C0E0             PUSH    A
    240    000007              cfi CFA_MACHINE add(MACHINE_SP, sub(R1,1))
    241    000007 08               INC     R0
    242    000008 D9FA             DJNZ    R1,LOOP
    243    00000A              cfi CFA_MACHINE MACHINE_SP
    244    00000A E4               CLR     A
    245    00000B 73               JMP     @A+DPTR
    246    00000C                  cfi_DATA_BLOCK_end ?PUSH_ISTACK_P
    246.1  00000C                                  IF cfi_OFFSET
    246.2  00000C                                    #error "Non-zero offset on
                            cfi data block end"
    246.3  00000C                                  ELSE
    246.4  00000C                                    cfi endblock ?PUSH_ISTACK_
                           P
    246.5  00000C                                  ENDIF
    246.6  00000C                                  ENDM
    247    00000C                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30  
GP1L                 #define, value: R1, line:        28  
GP1M                 #define, value: R2, line:        29  
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_ISTACK_P      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_P_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_P_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_P_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_P_TWO  REL    CONST PUB UNTYP.       RCODE      0 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LOOP                REL    CONST UNTYP.           RCODE      4 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
add                 REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:8CF3          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 26          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    248    000000          
    249    000000          ;---------------------------------------------------
                           --------------------------
    250    000000          ;       Function: ?PUSH_ISTACK_X
    251    000000          ;
    252    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
    253    000000          ;
    254    000000          ;       Register input:
    255    000000          ;               R0     = Nr of elements to
                            push
    256    000000          ;               DPTR   = Address to the first
                            element.
    257    000000          ;
    258    000000          ;       Register output:
    259    000000          ;               A    = 0
    260    000000          ;               R0   = 0
    261    000000          ;               V0   = Ret low
    262    000000          ;               V1   = Ret High
    263    000000          ;               V2   = Ret Ext
    264    000000          ;               DPTR = Return address
    265    000000          ;
    266    000000          ;       DPTR:
    267    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
    268    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    269    000000          ;
    270    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
    271    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    272    000000          ;
    273    000000          ;       Stack usage: NA
    274    000000          ;
    275    000000          ;---------------------------------------------------
                           --------------------------
    276    000000                  MODULE  ?PUSH_ISTACK_X
    277    000000                  RSEG    RCODE:CODE:NOROOT
    278    000000                  EXTERN  ?V0
    279    000000                  PUBLIC  ?PUSH_ISTACK_X_FOUR
    280    000000                  PUBLIC  ?PUSH_ISTACK_X_THREE
    281    000000                  PUBLIC  ?PUSH_ISTACK_X_TWO
    282    000000                  PUBLIC  ?PUSH_ISTACK_X_ONE
    283    000000                  PUBLIC  ?PUSH_ISTACK_X
    284    000000                  
    285    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_X_FOUR
    285.1  000000                                  cfi block ?PUSH_ISTACK_X_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
    285.2  000000                                  cfi nofunction
    285.3  000000          cfi_OFFSET              SET      0
    285.4  000000                                  ENDM
    286    000000              cfi A undefined
    287    000000              cfi R0 undefined
    288    000000              cfi R1 undefined
    289    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    289.1  000000                  cfi DPTR0 Undefined
    289.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    289.3  000000          #endif
    289.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    289.5  000000          #endif
    289.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    289.7  000000          #endif
    289.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    289.9  000000          #endif
    289.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    289.11 000000          #endif
    289.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    289.13 000000          #endif
    289.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    289.15 000000          #endif
    289.16 000000                  cfi DPL0 Undefined
    289.17 000000                  cfi DPH0 Undefined
    289.18 000000          #ifdef __EXTENDED_DPTR__
    289.19 000000          #endif
    289.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    289.21 000000          #ifdef __EXTENDED_DPTR__
    289.22 000000          #endif
    289.23 000000          #endif
    289.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    289.25 000000          #ifdef __EXTENDED_DPTR__
    289.26 000000          #endif
    289.27 000000          #endif
    289.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    289.29 000000          #ifdef __EXTENDED_DPTR__
    289.30 000000          #endif
    289.31 000000          #endif
    289.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    289.33 000000          #ifdef __EXTENDED_DPTR__
    289.34 000000          #endif
    289.35 000000          #endif
    289.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    289.37 000000          #ifdef __EXTENDED_DPTR__
    289.38 000000          #endif
    289.39 000000          #endif
    289.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    289.41 000000          #ifdef __EXTENDED_DPTR__
    289.42 000000          #endif
    289.43 000000          #endif
    289.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    289.45 000000          #ifdef __EXTENDED_DPTR__
    289.46 000000          #endif
    289.47 000000          #endif
    289.48 000000                  ENDM
    290    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(4,
                            __SIZE_OF_RETADDR__))
    291    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 4
    291.1  000000          #if (defined(__EXTENDED_STACK__))
    291.2  000000          #else
    291.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,1)))
    291.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,2)))
    291.5  000000          #endif
    291.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    291.7  000000            #if (defined(__EXTENDED_STACK__))
    291.8  000000            #else
    291.9  000000            #endif
    291.10 000000          #endif
    291.11 000000                                  ENDM
    292    000000          ?PUSH_ISTACK_X_FOUR:
    293    000000 7804             MOV     R0,#0x4
    294    000002 80..             SJMP    ?PUSH_ISTACK_X
    295    000004                  REQUIRE ?PUSH_ISTACK_X
    296    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_X_FOUR
    296.1  000004                                  IF cfi_OFFSET
    296.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    296.3  000004                                  ELSE
    296.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           X_FOUR
    296.5  000004                                  ENDIF
    296.6  000004                                  ENDM
    297    000004          
    298    000000                  RSEG    RCODE:CODE:NOROOT
    299    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_X_THREE
    299.1  000000                                  cfi block ?PUSH_ISTACK_X_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
    299.2  000000                                  cfi nofunction
    299.3  000000          cfi_OFFSET              SET      0
    299.4  000000                                  ENDM
    300    000000              cfi A undefined
    301    000000              cfi R0 undefined
    302    000000              cfi R1 undefined
    303    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    303.1  000000                  cfi DPTR0 Undefined
    303.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    303.3  000000          #endif
    303.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    303.5  000000          #endif
    303.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    303.7  000000          #endif
    303.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    303.9  000000          #endif
    303.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    303.11 000000          #endif
    303.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    303.13 000000          #endif
    303.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    303.15 000000          #endif
    303.16 000000                  cfi DPL0 Undefined
    303.17 000000                  cfi DPH0 Undefined
    303.18 000000          #ifdef __EXTENDED_DPTR__
    303.19 000000          #endif
    303.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    303.21 000000          #ifdef __EXTENDED_DPTR__
    303.22 000000          #endif
    303.23 000000          #endif
    303.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    303.25 000000          #ifdef __EXTENDED_DPTR__
    303.26 000000          #endif
    303.27 000000          #endif
    303.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    303.29 000000          #ifdef __EXTENDED_DPTR__
    303.30 000000          #endif
    303.31 000000          #endif
    303.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    303.33 000000          #ifdef __EXTENDED_DPTR__
    303.34 000000          #endif
    303.35 000000          #endif
    303.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    303.37 000000          #ifdef __EXTENDED_DPTR__
    303.38 000000          #endif
    303.39 000000          #endif
    303.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    303.41 000000          #ifdef __EXTENDED_DPTR__
    303.42 000000          #endif
    303.43 000000          #endif
    303.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    303.45 000000          #ifdef __EXTENDED_DPTR__
    303.46 000000          #endif
    303.47 000000          #endif
    303.48 000000                  ENDM
    304    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(3,
                            __SIZE_OF_RETADDR__))
    305    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 3
    305.1  000000          #if (defined(__EXTENDED_STACK__))
    305.2  000000          #else
    305.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,1)))
    305.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,2)))
    305.5  000000          #endif
    305.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    305.7  000000            #if (defined(__EXTENDED_STACK__))
    305.8  000000            #else
    305.9  000000            #endif
    305.10 000000          #endif
    305.11 000000                                  ENDM
    306    000000          ?PUSH_ISTACK_X_THREE:
    307    000000 7803             MOV     R0,#0x3
    308    000002 80..             SJMP    ?PUSH_ISTACK_X
    309    000004                  REQUIRE ?PUSH_ISTACK_X
    310    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_X_THREE
    310.1  000004                                  IF cfi_OFFSET
    310.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    310.3  000004                                  ELSE
    310.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           X_THREE
    310.5  000004                                  ENDIF
    310.6  000004                                  ENDM
    311    000004          
    312    000000                  RSEG    RCODE:CODE:NOROOT
    313    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_X_TWO
    313.1  000000                                  cfi block ?PUSH_ISTACK_X_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
    313.2  000000                                  cfi nofunction
    313.3  000000          cfi_OFFSET              SET      0
    313.4  000000                                  ENDM
    314    000000              cfi A undefined
    315    000000              cfi R0 undefined
    316    000000              cfi R1 undefined
    317    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    317.1  000000                  cfi DPTR0 Undefined
    317.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    317.3  000000          #endif
    317.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    317.5  000000          #endif
    317.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    317.7  000000          #endif
    317.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    317.9  000000          #endif
    317.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    317.11 000000          #endif
    317.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    317.13 000000          #endif
    317.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    317.15 000000          #endif
    317.16 000000                  cfi DPL0 Undefined
    317.17 000000                  cfi DPH0 Undefined
    317.18 000000          #ifdef __EXTENDED_DPTR__
    317.19 000000          #endif
    317.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    317.21 000000          #ifdef __EXTENDED_DPTR__
    317.22 000000          #endif
    317.23 000000          #endif
    317.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    317.25 000000          #ifdef __EXTENDED_DPTR__
    317.26 000000          #endif
    317.27 000000          #endif
    317.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    317.29 000000          #ifdef __EXTENDED_DPTR__
    317.30 000000          #endif
    317.31 000000          #endif
    317.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    317.33 000000          #ifdef __EXTENDED_DPTR__
    317.34 000000          #endif
    317.35 000000          #endif
    317.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    317.37 000000          #ifdef __EXTENDED_DPTR__
    317.38 000000          #endif
    317.39 000000          #endif
    317.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    317.41 000000          #ifdef __EXTENDED_DPTR__
    317.42 000000          #endif
    317.43 000000          #endif
    317.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    317.45 000000          #ifdef __EXTENDED_DPTR__
    317.46 000000          #endif
    317.47 000000          #endif
    317.48 000000                  ENDM
    318    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(2,
                            __SIZE_OF_RETADDR__))
    319    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 2
    319.1  000000          #if (defined(__EXTENDED_STACK__))
    319.2  000000          #else
    319.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(2,1)))
    319.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(2,2)))
    319.5  000000          #endif
    319.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    319.7  000000            #if (defined(__EXTENDED_STACK__))
    319.8  000000            #else
    319.9  000000            #endif
    319.10 000000          #endif
    319.11 000000                                  ENDM
    320    000000          ?PUSH_ISTACK_X_TWO:
    321    000000 7802             MOV     R0,#0x2
    322    000002 80..             SJMP    ?PUSH_ISTACK_X
    323    000004                  REQUIRE ?PUSH_ISTACK_X
    324    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_X_TWO
    324.1  000004                                  IF cfi_OFFSET
    324.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    324.3  000004                                  ELSE
    324.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           X_TWO
    324.5  000004                                  ENDIF
    324.6  000004                                  ENDM
    325    000004          
    326    000000                  RSEG    RCODE:CODE:NOROOT
    327    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_X_ONE
    327.1  000000                                  cfi block ?PUSH_ISTACK_X_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
    327.2  000000                                  cfi nofunction
    327.3  000000          cfi_OFFSET              SET      0
    327.4  000000                                  ENDM
    328    000000              cfi A undefined
    329    000000              cfi R0 undefined
    330    000000              cfi R1 undefined
    331    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    331.1  000000                  cfi DPTR0 Undefined
    331.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    331.3  000000          #endif
    331.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    331.5  000000          #endif
    331.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    331.7  000000          #endif
    331.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    331.9  000000          #endif
    331.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    331.11 000000          #endif
    331.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    331.13 000000          #endif
    331.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    331.15 000000          #endif
    331.16 000000                  cfi DPL0 Undefined
    331.17 000000                  cfi DPH0 Undefined
    331.18 000000          #ifdef __EXTENDED_DPTR__
    331.19 000000          #endif
    331.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    331.21 000000          #ifdef __EXTENDED_DPTR__
    331.22 000000          #endif
    331.23 000000          #endif
    331.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    331.25 000000          #ifdef __EXTENDED_DPTR__
    331.26 000000          #endif
    331.27 000000          #endif
    331.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    331.29 000000          #ifdef __EXTENDED_DPTR__
    331.30 000000          #endif
    331.31 000000          #endif
    331.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    331.33 000000          #ifdef __EXTENDED_DPTR__
    331.34 000000          #endif
    331.35 000000          #endif
    331.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    331.37 000000          #ifdef __EXTENDED_DPTR__
    331.38 000000          #endif
    331.39 000000          #endif
    331.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    331.41 000000          #ifdef __EXTENDED_DPTR__
    331.42 000000          #endif
    331.43 000000          #endif
    331.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    331.45 000000          #ifdef __EXTENDED_DPTR__
    331.46 000000          #endif
    331.47 000000          #endif
    331.48 000000                  ENDM
    332    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(1,
                            __SIZE_OF_RETADDR__))
    333    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 1
    333.1  000000          #if (defined(__EXTENDED_STACK__))
    333.2  000000          #else
    333.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(1,1)))
    333.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(1,2)))
    333.5  000000          #endif
    333.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    333.7  000000            #if (defined(__EXTENDED_STACK__))
    333.8  000000            #else
    333.9  000000            #endif
    333.10 000000          #endif
    333.11 000000                                  ENDM
    334    000000          ?PUSH_ISTACK_X_ONE:
    335    000000 7801             MOV     R0,#0x1
    336    000002                  REQUIRE ?PUSH_ISTACK_X
    337    000002              cfi_DATA_BLOCK_end ?PUSH_ISTACK_X_ONE
    337.1  000002                                  IF cfi_OFFSET
    337.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
    337.3  000002                                  ELSE
    337.4  000002                                    cfi endblock ?PUSH_ISTACK_
                           X_ONE
    337.5  000002                                  ENDIF
    337.6  000002                                  ENDM
    338    000002          
    339    000000                  RSEG    RCODE:CODE:NOROOT
    340    000000                  EXTERN  ?DPX
    341    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_X
    341.1  000000                                  cfi block ?PUSH_ISTACK_X
                                                                    using
                                                                    cfi_common
    341.2  000000                                  cfi nofunction
    341.3  000000          cfi_OFFSET              SET      0
    341.4  000000                                  ENDM
    342    000000              cfi A undefined
    343    000000              cfi R0 undefined
    344    000000              cfi R1 undefined
    345    000000              CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGIST
                           ERS()
    345.1  000000                  cfi DPTR0 Undefined
    345.2  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    345.3  000000          #endif
    345.4  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    345.5  000000          #endif
    345.6  000000          #if (__NUMBER_OF_DPTRS__ > 3)
    345.7  000000          #endif
    345.8  000000          #if (__NUMBER_OF_DPTRS__ > 4)
    345.9  000000          #endif
    345.10 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    345.11 000000          #endif
    345.12 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    345.13 000000          #endif
    345.14 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    345.15 000000          #endif
    345.16 000000                  cfi DPL0 Undefined
    345.17 000000                  cfi DPH0 Undefined
    345.18 000000          #ifdef __EXTENDED_DPTR__
    345.19 000000          #endif
    345.20 000000          #if (__NUMBER_OF_DPTRS__ > 1)
    345.21 000000          #ifdef __EXTENDED_DPTR__
    345.22 000000          #endif
    345.23 000000          #endif
    345.24 000000          #if (__NUMBER_OF_DPTRS__ > 2)
    345.25 000000          #ifdef __EXTENDED_DPTR__
    345.26 000000          #endif
    345.27 000000          #endif
    345.28 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    345.29 000000          #ifdef __EXTENDED_DPTR__
    345.30 000000          #endif
    345.31 000000          #endif
    345.32 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    345.33 000000          #ifdef __EXTENDED_DPTR__
    345.34 000000          #endif
    345.35 000000          #endif
    345.36 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    345.37 000000          #ifdef __EXTENDED_DPTR__
    345.38 000000          #endif
    345.39 000000          #endif
    345.40 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    345.41 000000          #ifdef __EXTENDED_DPTR__
    345.42 000000          #endif
    345.43 000000          #endif
    345.44 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    345.45 000000          #ifdef __EXTENDED_DPTR__
    345.46 000000          #endif
    345.47 000000          #endif
    345.48 000000                  ENDM
    346    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,
                            __SIZE_OF_RETADDR__))
    347    000000              cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND R0
    347.1  000000          #if (defined(__EXTENDED_STACK__))
    347.2  000000          #else
    347.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(R0,1)))
    347.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(R0,2)))
    347.5  000000          #endif
    347.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    347.7  000000            #if (defined(__EXTENDED_STACK__))
    347.8  000000            #else
    347.9  000000            #endif
    347.10 000000          #endif
    347.11 000000                                  ENDM
    348    000000          
    349    000000          ?PUSH_ISTACK_X:
    350    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    354    000000          #endif
    355    000000 D0..             POP     ?V0+1
    356    000002              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,1))
    357    000002              cfi ?RET_HIGH V1
    358    000002 D0..             POP     ?V0+0
    359    000004              cfi CFA_MACHINE add(MACHINE_SP, R0)
    360    000004              cfi ?RET_LOW V0
    361    000004          LOOP:
    362    000004 E0               MOVX    A,@DPTR
    363    000005 C0E0             PUSH    A
    364    000007              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,1))
    365    000007 A3               INC     DPTR
    366    000008 D8FA             DJNZ    R0,LOOP
    367    00000A              cfi CFA_MACHINE MACHINE_SP
    368    00000A 85..82           MOV     DPL,?V0
    369    00000D              cfi ?RET_LOW DPL0
    370    00000D 85..83           MOV     DPH,?V0+1
    371    000010              cfi ?RET_HIGH DPH0
    372    000010          #if (__CORE__ == __CORE_EXTENDED1__)
    375    000010          #endif
    376    000010 E4               CLR     A
    377    000011 73               JMP     @A+DPTR
    378    000012          
    379    000012              cfi_DATA_BLOCK_end ?PUSH_ISTACK_X
    379.1  000012                                  IF cfi_OFFSET
    379.2  000012                                    #error "Non-zero offset on
                            cfi data block end"
    379.3  000012                                  ELSE
    379.4  000012                                    cfi endblock ?PUSH_ISTACK_
                           X
    379.5  000012                                  ENDIF
    379.6  000012                                  ENDM
    380    000012                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30  
GP1L                 #define, value: R1, line:        28  
GP1M                 #define, value: R2, line:        29  
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DPX                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?PUSH_ISTACK_X      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_X_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_X_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_X_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_X_TWO  REL    CONST PUB UNTYP.       RCODE      0 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LOOP                REL    CONST UNTYP.           RCODE      4 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Undefined           REL    CONST UNTYP.           RCODE      Not solved 
V0                  REL    CONST UNTYP.           RCODE      Not solved 
V1                  REL    CONST UNTYP.           RCODE      Not solved 
add                 REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3081          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 32          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    381    000000          
    382    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    468    000000          #ifdef __DPTR_SHADOWED__
    470    000000          #endif
    472    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    476    000000          #endif
    484    000000          #ifdef __DPTR_SHADOWED__
    486    000000          #endif
    501    000000          #elif (!defined(__NUMBER_OF_DPTRS__))
    502    000000          #error "You must define __NUMBER_OF_DPTRS__"
    503    000000          #endif
    504    000000          
    505    000000          ;---------------------------------------------------
                           --------------------------
    506    000000          ;       Function: ?PUSH_ISTACK_C
    507    000000          ;
    508    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
    509    000000          ;
    510    000000          ;       Register input:
    511    000000          ;               R0     = Nr of elements to
                            push
    512    000000          ;               @DPTR  = Address to the first
                            element.
    513    000000          ;
    514    000000          ;       Register output:
    515    000000          ;               A    = 0
    516    000000          ;               R0   = 0
    517    000000          ;               V0   = Ret low
    518    000000          ;               V1   = Ret High
    519    000000          ;               DPTR = Return address
    520    000000          ;
    521    000000          ;       DPTR:
    522    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
    523    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    524    000000          ;
    525    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
    526    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    527    000000          ;              
    528    000000          ;
    529    000000          ;       Stack usage: NA
    530    000000          ;
    531    000000          ;---------------------------------------------------
                           --------------------------
    532    000000                  MODULE  ?PUSH_ISTACK_C
    533    000000                  RSEG    RCODE:CODE:NOROOT
    534    000000                  EXTERN  ?V0
    535    000000                  PUBLIC  ?PUSH_ISTACK_C_FOUR
    536    000000                  PUBLIC  ?PUSH_ISTACK_C_THREE
    537    000000                  PUBLIC  ?PUSH_ISTACK_C_TWO
    538    000000                  PUBLIC  ?PUSH_ISTACK_C_ONE
    539    000000                  PUBLIC  ?PUSH_ISTACK_C
    540    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    540.1  000000          #ifdef __EXTENDED_DPTR__
    540.2  000000          #endif ; __EXTENDED_DPTR__
    540.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    540.4  000000          #ifdef __DPTR_SEPARATE__
    540.5  000000          #ifdef __EXTENDED_DPTR__
    540.6  000000          #endif ; __EXTENDED_DPTR__
    540.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    540.8  000000          #ifdef __EXTENDED_DPTR__
    540.9  000000          #endif ; __EXTENDED_DPTR__
    540.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    540.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    540.12 000000          #ifdef __EXTENDED_DPTR__
    540.13 000000          #endif ; __EXTENDED_DPTR__
    540.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    540.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    540.16 000000          #ifdef __EXTENDED_DPTR__
    540.17 000000          #endif ; __EXTENDED_DPTR__
    540.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    540.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    540.20 000000          #ifdef __EXTENDED_DPTR__
    540.21 000000          #endif ; __EXTENDED_DPTR__
    540.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    540.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    540.24 000000          #ifdef __EXTENDED_DPTR__
    540.25 000000          #endif ; __EXTENDED_DPTR__
    540.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    540.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    540.28 000000          #ifdef __EXTENDED_DPTR__
    540.29 000000          #endif ; __EXTENDED_DPTR__
    540.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    540.31 000000          #endif ; __DPTR_SEPARATE__
    540.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    540.33 000000                  ENDM
    541    000000                  
    542    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_C_FOUR
    542.1  000000                                  cfi block ?PUSH_ISTACK_C_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
    542.2  000000                                  cfi nofunction
    542.3  000000          cfi_OFFSET              SET      0
    542.4  000000                                  ENDM
    543    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(4,
                            __SIZE_OF_RETADDR__))
    544    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 4
    544.1  000000          #if (defined(__EXTENDED_STACK__))
    544.2  000000          #else
    544.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,1)))
    544.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,2)))
    544.5  000000          #endif
    544.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    544.7  000000            #if (defined(__EXTENDED_STACK__))
    544.8  000000            #else
    544.9  000000            #endif
    544.10 000000          #endif
    544.11 000000                                  ENDM
    545    000000          ?PUSH_ISTACK_C_FOUR:
    546    000000 7804             MOV     R0,#0x4
    547    000002 80..             SJMP    ?PUSH_ISTACK_C
    548    000004                  REQUIRE ?PUSH_ISTACK_C
    549    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_C_FOUR
    549.1  000004                                  IF cfi_OFFSET
    549.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    549.3  000004                                  ELSE
    549.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           C_FOUR
    549.5  000004                                  ENDIF
    549.6  000004                                  ENDM
    550    000004          
    551    000000                  RSEG    RCODE:CODE:NOROOT
    552    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_C_THREE
    552.1  000000                                  cfi block ?PUSH_ISTACK_C_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
    552.2  000000                                  cfi nofunction
    552.3  000000          cfi_OFFSET              SET      0
    552.4  000000                                  ENDM
    553    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(3,
                            __SIZE_OF_RETADDR__))
    554    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 3
    554.1  000000          #if (defined(__EXTENDED_STACK__))
    554.2  000000          #else
    554.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,1)))
    554.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,2)))
    554.5  000000          #endif
    554.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    554.7  000000            #if (defined(__EXTENDED_STACK__))
    554.8  000000            #else
    554.9  000000            #endif
    554.10 000000          #endif
    554.11 000000                                  ENDM
    555    000000          ?PUSH_ISTACK_C_THREE:
    556    000000 7803             MOV     R0,#0x3
    557    000002 80..             SJMP    ?PUSH_ISTACK_C
    558    000004                  REQUIRE ?PUSH_ISTACK_C
    559    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_C_THREE
    559.1  000004                                  IF cfi_OFFSET
    559.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    559.3  000004                                  ELSE
    559.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           C_THREE
    559.5  000004                                  ENDIF
    559.6  000004                                  ENDM
    560    000004          
    561    000000                  RSEG    RCODE:CODE:NOROOT
    562    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_C_TWO
    562.1  000000                                  cfi block ?PUSH_ISTACK_C_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
    562.2  000000                                  cfi nofunction
    562.3  000000          cfi_OFFSET              SET      0
    562.4  000000                                  ENDM
    563    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(2,
                            __SIZE_OF_RETADDR__))
    564    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 2
    564.1  000000          #if (defined(__EXTENDED_STACK__))
    564.2  000000          #else
    564.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(2,1)))
    564.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(2,2)))
    564.5  000000          #endif
    564.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    564.7  000000            #if (defined(__EXTENDED_STACK__))
    564.8  000000            #else
    564.9  000000            #endif
    564.10 000000          #endif
    564.11 000000                                  ENDM
    565    000000          ?PUSH_ISTACK_C_TWO:
    566    000000 7802             MOV     R0,#0x2
    567    000002 80..             SJMP    ?PUSH_ISTACK_C
    568    000004                  REQUIRE ?PUSH_ISTACK_C
    569    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_C_TWO
    569.1  000004                                  IF cfi_OFFSET
    569.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    569.3  000004                                  ELSE
    569.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           C_TWO
    569.5  000004                                  ENDIF
    569.6  000004                                  ENDM
    570    000004          
    571    000000                  RSEG    RCODE:CODE:NOROOT
    572    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_C_ONE
    572.1  000000                                  cfi block ?PUSH_ISTACK_C_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
    572.2  000000                                  cfi nofunction
    572.3  000000          cfi_OFFSET              SET      0
    572.4  000000                                  ENDM
    573    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(1,
                            __SIZE_OF_RETADDR__))
    574    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 1
    574.1  000000          #if (defined(__EXTENDED_STACK__))
    574.2  000000          #else
    574.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(1,1)))
    574.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(1,2)))
    574.5  000000          #endif
    574.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    574.7  000000            #if (defined(__EXTENDED_STACK__))
    574.8  000000            #else
    574.9  000000            #endif
    574.10 000000          #endif
    574.11 000000                                  ENDM
    575    000000          ?PUSH_ISTACK_C_ONE:
    576    000000 7801             MOV     R0,#0x1
    577    000002                  REQUIRE ?PUSH_ISTACK_C
    578    000002              cfi_DATA_BLOCK_end ?PUSH_ISTACK_C_ONE
    578.1  000002                                  IF cfi_OFFSET
    578.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
    578.3  000002                                  ELSE
    578.4  000002                                    cfi endblock ?PUSH_ISTACK_
                           C_ONE
    578.5  000002                                  ENDIF
    578.6  000002                                  ENDM
    579    000002          
    580    000000                  RSEG    RCODE:CODE:NOROOT
    581    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_C
    581.1  000000                                  cfi block ?PUSH_ISTACK_C
                                                                    using
                                                                    cfi_common
    581.2  000000                                  cfi nofunction
    581.3  000000          cfi_OFFSET              SET      0
    581.4  000000                                  ENDM
    582    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,
                            __SIZE_OF_RETADDR__))
    583    000000              cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND R0
    583.1  000000          #if (defined(__EXTENDED_STACK__))
    583.2  000000          #else
    583.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(R0,1)))
    583.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(R0,2)))
    583.5  000000          #endif
    583.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    583.7  000000            #if (defined(__EXTENDED_STACK__))
    583.8  000000            #else
    583.9  000000            #endif
    583.10 000000          #endif
    583.11 000000                                  ENDM
    584    000000          ?PUSH_ISTACK_C:
    585    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    589    000000          #endif
    590    000000 D0..             POP     ?V0+1
    591    000002              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,1))
    592    000002              cfi ?RET_HIGH V1
    593    000002 D0..             POP     ?V0+0
    594    000004              cfi CFA_MACHINE add(MACHINE_SP, R0)
    595    000004              cfi ?RET_LOW V0
    596    000004          
    597    000004          LOOP:
    598    000004 E4               CLR     A
    599    000005 93               MOVC    A,@A+DPTR
    600    000006 C0E0             PUSH    A
    601    000008              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,1))
    602    000008 A3               INC     DPTR
    603    000009 D8F9             DJNZ    R0,LOOP
    604    00000B              cfi CFA_MACHINE MACHINE_SP
    605    00000B 85..82           MOV     DPL,?V0
    606    00000E              cfi ?RET_LOW DPL0
    607    00000E 85..83           MOV     DPH,?V0+1
    608    000011              cfi ?RET_HIGH DPH0
    609    000011          #if (__CORE__ == __CORE_EXTENDED1__)
    612    000011          #endif
    613    000011 E4               CLR     A
    614    000012 73               JMP     @A+DPTR
    615    000013              cfi_DATA_BLOCK_end ?PUSH_ISTACK_C
    615.1  000013                                  IF cfi_OFFSET
    615.2  000013                                    #error "Non-zero offset on
                            cfi data block end"
    615.3  000013                                  ELSE
    615.4  000013                                    cfi endblock ?PUSH_ISTACK_
                           C
    615.5  000013                                  ENDIF
    615.6  000013                                  ENDM
    616    000013                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30  
GP1L                 #define, value: R1, line:        28  
GP1M                 #define, value: R2, line:        29  
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_ISTACK_C      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_C_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_C_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_C_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_C_TWO  REL    CONST PUB UNTYP.       RCODE      0 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LOOP                REL    CONST UNTYP.           RCODE      4 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
V0                  REL    CONST UNTYP.           RCODE      Not solved 
V1                  REL    CONST UNTYP.           RCODE      Not solved 
add                 REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:FE7           #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 33          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    617    000000          
    618    000000          
    619    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    697    000000          #ifdef __DPTR_SHADOWED__
    699    000000          #endif
    700    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    704    000000          #endif
    712    000000          #ifdef __DPTR_SHADOWED__
    714    000000          #endif
    732    000000          #elif (!defined(__NUMBER_OF_DPTRS__))
    733    000000          #error "You must define __NUMBER_OF_DPTRS__"
    734    000000          #endif
    735    000000          
    736    000000          ;---------------------------------------------------
                           --------------------------
    737    000000          ;       Function: ?PUSH_ISTACK_G
    738    000000          ;
    739    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
    740    000000          ;
    741    000000          ;       Register input:
    742    000000          ;               R7       = Nr of elements to
                            push
    743    000000          ;               R3:R2:R1 = pointer to src
    744    000000          ;
    745    000000          ;       Register output:
    746    000000          ;               R7   = 0
    747    000000          ;               V0   = Ret low
    748    000000          ;               V1   = Ret High
    749    000000          ;               (V2   = Ret Ext)
    750    000000          ;               A    = Undefined
    751    000000          ;               R1   = Undefined
    752    000000          ;               R2   = Undefined
    753    000000          ;               R3   = Undefined
    754    000000          ;               DPTR = Undefined
    755    000000          ;
    756    000000          ;       Registers changed:
    757    000000          ;               A
    758    000000          ;
    759    000000          ;       Stack usage: NA
    760    000000          ;
    761    000000          ;---------------------------------------------------
                           --------------------------
    762    000000                  MODULE  ?PUSH_ISTACK_G
    763    000000                  RSEG    RCODE:CODE:NOROOT
    764    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    764.1  000000          #ifdef __EXTENDED_DPTR__
    764.2  000000          #endif ; __EXTENDED_DPTR__
    764.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    764.4  000000          #ifdef __DPTR_SEPARATE__
    764.5  000000          #ifdef __EXTENDED_DPTR__
    764.6  000000          #endif ; __EXTENDED_DPTR__
    764.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    764.8  000000          #ifdef __EXTENDED_DPTR__
    764.9  000000          #endif ; __EXTENDED_DPTR__
    764.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    764.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    764.12 000000          #ifdef __EXTENDED_DPTR__
    764.13 000000          #endif ; __EXTENDED_DPTR__
    764.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    764.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    764.16 000000          #ifdef __EXTENDED_DPTR__
    764.17 000000          #endif ; __EXTENDED_DPTR__
    764.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    764.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    764.20 000000          #ifdef __EXTENDED_DPTR__
    764.21 000000          #endif ; __EXTENDED_DPTR__
    764.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    764.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    764.24 000000          #ifdef __EXTENDED_DPTR__
    764.25 000000          #endif ; __EXTENDED_DPTR__
    764.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    764.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    764.28 000000          #ifdef __EXTENDED_DPTR__
    764.29 000000          #endif ; __EXTENDED_DPTR__
    764.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    764.31 000000          #endif ; __DPTR_SEPARATE__
    764.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    764.33 000000                  ENDM
    765    000000                  EXTERN  ?V0
    766    000000                  PUBLIC  ?PUSH_ISTACK_G_FOUR
    767    000000                  PUBLIC  ?PUSH_ISTACK_G_THREE
    768    000000                  PUBLIC  ?PUSH_ISTACK_G_TWO
    769    000000                  PUBLIC  ?PUSH_ISTACK_G_ONE
    770    000000                  PUBLIC  ?PUSH_ISTACK_G
    771    000000                  
    772    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_G_FOUR
    772.1  000000                                  cfi block ?PUSH_ISTACK_G_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
    772.2  000000                                  cfi nofunction
    772.3  000000          cfi_OFFSET              SET      0
    772.4  000000                                  ENDM
    773    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(4,
                            __SIZE_OF_RETADDR__))
    774    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 4
    774.1  000000          #if (defined(__EXTENDED_STACK__))
    774.2  000000          #else
    774.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,1)))
    774.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(4,2)))
    774.5  000000          #endif
    774.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    774.7  000000            #if (defined(__EXTENDED_STACK__))
    774.8  000000            #else
    774.9  000000            #endif
    774.10 000000          #endif
    774.11 000000                                  ENDM
    775    000000          ?PUSH_ISTACK_G_FOUR:
    776    000000 7F04             MOV     R7,#0x4
    777    000002 80..             SJMP    ?PUSH_ISTACK_G
    778    000004                  REQUIRE ?PUSH_ISTACK_G
    779    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_G_FOUR
    779.1  000004                                  IF cfi_OFFSET
    779.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    779.3  000004                                  ELSE
    779.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           G_FOUR
    779.5  000004                                  ENDIF
    779.6  000004                                  ENDM
    780    000004          
    781    000000                  RSEG    RCODE:CODE:NOROOT
    782    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_G_THREE
    782.1  000000                                  cfi block ?PUSH_ISTACK_G_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
    782.2  000000                                  cfi nofunction
    782.3  000000          cfi_OFFSET              SET      0
    782.4  000000                                  ENDM
    783    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(3,
                            __SIZE_OF_RETADDR__))
    784    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 3
    784.1  000000          #if (defined(__EXTENDED_STACK__))
    784.2  000000          #else
    784.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,1)))
    784.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(3,2)))
    784.5  000000          #endif
    784.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    784.7  000000            #if (defined(__EXTENDED_STACK__))
    784.8  000000            #else
    784.9  000000            #endif
    784.10 000000          #endif
    784.11 000000                                  ENDM
    785    000000          ?PUSH_ISTACK_G_THREE:
    786    000000 7F03             MOV     R7,#0x3
    787    000002 80..             SJMP    ?PUSH_ISTACK_G
    788    000004                  REQUIRE ?PUSH_ISTACK_G
    789    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_G_THREE
    789.1  000004                                  IF cfi_OFFSET
    789.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    789.3  000004                                  ELSE
    789.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           G_THREE
    789.5  000004                                  ENDIF
    789.6  000004                                  ENDM
    790    000004          
    791    000000                  RSEG    RCODE:CODE:NOROOT
    792    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_G_TWO
    792.1  000000                                  cfi block ?PUSH_ISTACK_G_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
    792.2  000000                                  cfi nofunction
    792.3  000000          cfi_OFFSET              SET      0
    792.4  000000                                  ENDM
    793    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(2,
                            __SIZE_OF_RETADDR__))
    794    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 2
    794.1  000000          #if (defined(__EXTENDED_STACK__))
    794.2  000000          #else
    794.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(2,1)))
    794.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(2,2)))
    794.5  000000          #endif
    794.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    794.7  000000            #if (defined(__EXTENDED_STACK__))
    794.8  000000            #else
    794.9  000000            #endif
    794.10 000000          #endif
    794.11 000000                                  ENDM
    795    000000          ?PUSH_ISTACK_G_TWO:
    796    000000 7F02             MOV     R7,#0x2
    797    000002 80..             SJMP    ?PUSH_ISTACK_G
    798    000004                  REQUIRE ?PUSH_ISTACK_G
    799    000004              cfi_DATA_BLOCK_end ?PUSH_ISTACK_G_TWO
    799.1  000004                                  IF cfi_OFFSET
    799.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
    799.3  000004                                  ELSE
    799.4  000004                                    cfi endblock ?PUSH_ISTACK_
                           G_TWO
    799.5  000004                                  ENDIF
    799.6  000004                                  ENDM
    800    000004          
    801    000000                  RSEG    RCODE:CODE:NOROOT
    802    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_G_ONE
    802.1  000000                                  cfi block ?PUSH_ISTACK_G_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
    802.2  000000                                  cfi nofunction
    802.3  000000          cfi_OFFSET              SET      0
    802.4  000000                                  ENDM
    803    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(1,
                            __SIZE_OF_RETADDR__))
    804    000000              cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND 1
    804.1  000000          #if (defined(__EXTENDED_STACK__))
    804.2  000000          #else
    804.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(1,1)))
    804.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(1,2)))
    804.5  000000          #endif
    804.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    804.7  000000            #if (defined(__EXTENDED_STACK__))
    804.8  000000            #else
    804.9  000000            #endif
    804.10 000000          #endif
    804.11 000000                                  ENDM
    805    000000          ?PUSH_ISTACK_G_ONE:
    806    000000 7F01             MOV     R7,#0x1
    807    000002                  REQUIRE ?PUSH_ISTACK_G
    808    000002              cfi_DATA_BLOCK_end ?PUSH_ISTACK_G_ONE
    808.1  000002                                  IF cfi_OFFSET
    808.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
    808.3  000002                                  ELSE
    808.4  000002                                    cfi endblock ?PUSH_ISTACK_
                           G_ONE
    808.5  000002                                  ENDIF
    808.6  000002                                  ENDM
    809    000002          
    810    000000                  RSEG    RCODE:CODE:NOROOT
    811    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK_G
    811.1  000000                                  cfi block ?PUSH_ISTACK_G
                                                                    using
                                                                    cfi_common
    811.2  000000                                  cfi nofunction
    811.3  000000          cfi_OFFSET              SET      0
    811.4  000000                                  ENDM
    812    000000              cfi CFA_MACHINE add(MACHINE_SP, sub(R7,
                            __SIZE_OF_RETADDR__))
    813    000000              cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND R7
    813.1  000000          #if (defined(__EXTENDED_STACK__))
    813.2  000000          #else
    813.3  000000              cfi ?RET_LOW  load(1, IDATA, sub(CFA_MACHINE,
                            sub(R7,1)))
    813.4  000000              cfi ?RET_HIGH load(1, IDATA, sub(CFA_MACHINE,
                            sub(R7,2)))
    813.5  000000          #endif
    813.6  000000          #if (__CORE__ == __CORE_EXTENDED1__)
    813.7  000000            #if (defined(__EXTENDED_STACK__))
    813.8  000000            #else
    813.9  000000            #endif
    813.10 000000          #endif
    813.11 000000                                  ENDM
    814    000000          ?PUSH_ISTACK_G:
    815    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    819    000000          #endif
    820    000000 D0..             POP     ?V0+1
    821    000002              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,1))
    822    000002              cfi ?RET_HIGH V1
    823    000002 D0..             POP     ?V0+0
    824    000004              cfi CFA_MACHINE add(MACHINE_SP, R0)
    825    000004              cfi ?RET_LOW V0
    826    000004 BB0108           CJNE    GP1H,#0x01,NOT_IDATA
    827    000007          
    828    000007                  ; push IDATA object
    829    000007          
    830    000007          LOOP_IDATA:
    831    000007 E7               MOV     A,@R1
    832    000008 C0E0             PUSH    A
    833    00000A              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,1))
    834    00000A 09               INC     R1
    835    00000B DFFA             DJNZ    R7,LOOP_IDATA
    836    00000D              cfi CFA_MACHINE MACHINE_SP
    837    00000D          
    838    00000D 8016             SJMP    MAKE_RETURN
    839    00000F          
    840    00000F              cfi CFA_MACHINE add(MACHINE_SP, R0)
    841    00000F          NOT_IDATA: ; CODE or XDATA object
    842    00000F          
    843    00000F                  ; setup src
    844    00000F 8982             MOV     DPL,GP1L
    845    000011 8A83             MOV     DPH,GP1M
    846    000013          #ifdef __EXTENDED_DPTR__
    848    000013          #endif
    849    000013          
    850    000013 BB0008           CJNE    GP1H,#0x00,NOT_XDATA
    851    000016          
    852    000016                  ; push XDATA object
    853    000016          
    854    000016              cfi CFA_MACHINE add(MACHINE_SP, R0)
    855    000016          LOOP_XDATA:
    856    000016 E0               MOVX    A,@DPTR
    857    000017 C0E0             PUSH    A
    858    000019              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,1))
    859    000019 A3               INC     DPTR
    860    00001A DFFA             DJNZ    R7,LOOP_XDATA
    861    00001C              cfi CFA_MACHINE MACHINE_SP
    862    00001C 8007             SJMP    MAKE_RETURN
    863    00001E          
    864    00001E          NOT_XDATA:
    865    00001E                  ; push CODE object
    866    00001E          
    867    00001E              cfi CFA_MACHINE add(MACHINE_SP, R0)
    868    00001E          LOOP_CODE:
    869    00001E E4               CLR     A
    870    00001F 93               MOVC    A,@A+DPTR
    871    000020 C0E0             PUSH    A
    872    000022              cfi CFA_MACHINE add(MACHINE_SP, sub(R0,1))
    873    000022 A3               INC     DPTR
    874    000023 DFF9             DJNZ    R7,LOOP_CODE
    875    000025              cfi CFA_MACHINE MACHINE_SP
    876    000025          
    877    000025          MAKE_RETURN:
    878    000025          
    879    000025 C0..             PUSH    ?V0+0
    880    000027              cfi CFA_MACHINE add(MACHINE_SP, 1)
    881    000027              cfi ?RET_LOW frame(CFA_MACHINE, 1)
    882    000027 C0..             PUSH    ?V0+1
    883    000029              cfi CFA_MACHINE add(MACHINE_SP, 2)
    884    000029              cfi ?RET_HIGH frame(CFA_MACHINE, 2)
    885    000029          #if (__CORE__ == __CORE_EXTENDED1__)
    889    000029          #endif
    890    000029 22               RET
    891    00002A          
    892    00002A              cfi_DATA_BLOCK_end ?PUSH_ISTACK_G
    892.1  00002A                                  IF cfi_OFFSET
    892.2  00002A                                    #error "Non-zero offset on
                            cfi data block end"
    892.3  00002A                                  ELSE
    892.4  00002A                                    cfi endblock ?PUSH_ISTACK_
                           G
    892.5  00002A                                  ENDIF
    892.6  00002A                                  ENDM
    893    00002A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850
GP1L                 #define, value: R1, line:        28        844
GP1M                 #define, value: R2, line:        29        845
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_ISTACK_G      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_G_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_G_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_G_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK_G_TWO  REL    CONST PUB UNTYP.       RCODE      0 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LOOP_CODE           REL    CONST UNTYP.           RCODE      1E 
LOOP_IDATA          REL    CONST UNTYP.           RCODE      7 
LOOP_XDATA          REL    CONST UNTYP.           RCODE      16 
MAKE_RETURN         REL    CONST UNTYP.           RCODE      25 
NOT_IDATA           REL    CONST UNTYP.           RCODE      F 
NOT_XDATA           REL    CONST UNTYP.           RCODE      1E 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
V0                  REL    CONST UNTYP.           RCODE      Not solved 
V1                  REL    CONST UNTYP.           RCODE      Not solved 
add                 REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:D7B8          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 56          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    894    000000          
    895    000000          ;---------------------------------------------------
                           --------------------------
    896    000000          ;       Function: ?PUSH_ISTACK16_X
    897    000000          ;
    898    000000          ;       Description: Push a block of bytes, max 64k
                            bytes.
    899    000000          ;
    900    000000          ;       Register input:
    901    000000          ;               R0     = Nr of elements to push
                            (low)
    902    000000          ;               R3     = Nr of elements to push
                            (high +1)
    903    000000          ;               DPTR   = Address to the first
                            element.
    904    000000          ;
    905    000000          ;       Register output:
    906    000000          ;               A    = 0
    907    000000          ;               R0   = 0
    908    000000          ;               R3   = 0
    909    000000          ;               V0   = Ret low
    910    000000          ;               V1   = Ret High
    911    000000          ;               V2   = Ret Ext
    912    000000          ;               DPTR = Return address
    913    000000          ;
    914    000000          ;       DPTR:
    915    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
    916    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    917    000000          ;
    918    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
    919    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    920    000000          ;
    921    000000          ;       Stack usage: NA
    922    000000          ;
    923    000000          ;---------------------------------------------------
                           --------------------------
    924    000000                  MODULE  ?PUSH_ISTACK16_X
    925    000000                  RSEG    RCODE:CODE:NOROOT
    926    000000                  EXTERN  ?V0
    927    000000                  EXTERN  ?DPX
    928    000000                  PUBLIC  ?PUSH_ISTACK16_X
    929    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK16_X
    929.1  000000                                  cfi block ?PUSH_ISTACK16_X
                                                                      using
                                                                      cfi_commo
                                                                     n
    929.2  000000                                  cfi nofunction
    929.3  000000          cfi_OFFSET              SET      0
    929.4  000000                                  ENDM
    930    000000          
    931    000000          ?PUSH_ISTACK16_X:
    932    000000          ?PUSH_ISTACK16_X_CFI_INVALID_BEGINS:
    933    000000              cfi invalid
    934    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    938    000000          #endif
    939    000000 D0..             POP     ?V0+1
    940    000002              cfi CFA_MACHINE MACHINE_SP - 1
    941    000002              cfi ?RET_HIGH V1
    942    000002 D0..             POP     ?V0+0
    943    000004              cfi CFA_MACHINE MACHINE_SP - 0
    944    000004              cfi ?RET_LOW V0
    945    000004          LOOP:
    946    000004 E0               MOVX    A,@DPTR
    947    000005 C0E0             PUSH    A
    948    000007 A3               INC     DPTR
    949    000008 D8FA             DJNZ    R0,LOOP
    950    00000A DBF8             DJNZ    R3,LOOP
    951    00000C          
    952    00000C 85..82           MOV     DPL,?V0
    953    00000F              cfi ?RET_LOW DPL0
    954    00000F 85..83           MOV     DPH,?V0+1
    955    000012              cfi ?RET_HIGH DPH0
    956    000012          #if (__CORE__ == __CORE_EXTENDED1__)
    959    000012          #endif
    960    000012 E4               CLR     A
    961    000013 73               JMP     @A+DPTR
    962    000014          
    963    000014          ?PUSH_ISTACK16_X_CFI_INVALID_ENDS:
    964    000014              cfi valid
    965    000014              cfi_DATA_BLOCK_end ?PUSH_ISTACK16_X
    965.1  000014                                  IF cfi_OFFSET
    965.2  000014                                    #error "Non-zero offset on
                            cfi data block end"
    965.3  000014                                  ELSE
    965.4  000014                                    cfi endblock ?PUSH_ISTACK1
                           6_X
    965.5  000014                                  ENDIF
    965.6  000014                                  ENDM
    966    000014                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850
GP1L                 #define, value: R1, line:        28        844
GP1M                 #define, value: R2, line:        29        845
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DPX                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?PUSH_ISTACK16_X    REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK16_X_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?PUSH_ISTACK16_X_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      14 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LOOP                REL    CONST UNTYP.           RCODE      4 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
V0                  REL    CONST UNTYP.           RCODE      Not solved 
V1                  REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:7A31          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 20          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    967    000000          
    968    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1009    000000          #ifdef __DPTR_SHADOWED__
   1011    000000          #endif
   1013    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1017    000000          #endif
   1025    000000          #ifdef __DPTR_SHADOWED__
   1027    000000          #endif
   1044    000000          #elif (!defined(__NUMBER_OF_DPTRS__))
   1045    000000          #error "You must define __NUMBER_OF_DPTRS__"
   1046    000000          #endif
   1047    000000          
   1048    000000          ;---------------------------------------------------
                           --------------------------
   1049    000000          ;       Function: ?PUSH_ISTACK16_C
   1050    000000          ;
   1051    000000          ;       Description: Push a block of bytes, max 64k
                            bytes.
   1052    000000          ;
   1053    000000          ;       Register input:
   1054    000000          ;               R0     = Nr of elements to push
                            (low)
   1055    000000          ;               R3     = Nr of elements to push
                            (high + 1)
   1056    000000          ;               @DPTR  = Address to the first
                            element.
   1057    000000          ;
   1058    000000          ;       Register output:
   1059    000000          ;               A    = 0
   1060    000000          ;               R0   = 0
   1061    000000          ;               R3   = 0
   1062    000000          ;               V0   = Ret low
   1063    000000          ;               V1   = Ret High
   1064    000000          ;               DPTR = Return address
   1065    000000          ;
   1066    000000          ;       DPTR:
   1067    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
   1068    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
   1069    000000          ;
   1070    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
   1071    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   1072    000000          ;
   1073    000000          ;       Stack usage: NA
   1074    000000          ;
   1075    000000          ;---------------------------------------------------
                           --------------------------
   1076    000000                  MODULE  ?PUSH_ISTACK16_C
   1077    000000                  RSEG    RCODE:CODE:NOROOT
   1078    000000                  EXTERN  ?V0
   1079    000000                  PUBLIC  ?PUSH_ISTACK16_C
   1080    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1080.1  000000          #ifdef __EXTENDED_DPTR__
   1080.2  000000          #endif ; __EXTENDED_DPTR__
   1080.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1080.4  000000          #ifdef __DPTR_SEPARATE__
   1080.5  000000          #ifdef __EXTENDED_DPTR__
   1080.6  000000          #endif ; __EXTENDED_DPTR__
   1080.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1080.8  000000          #ifdef __EXTENDED_DPTR__
   1080.9  000000          #endif ; __EXTENDED_DPTR__
   1080.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1080.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1080.12 000000          #ifdef __EXTENDED_DPTR__
   1080.13 000000          #endif ; __EXTENDED_DPTR__
   1080.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1080.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1080.16 000000          #ifdef __EXTENDED_DPTR__
   1080.17 000000          #endif ; __EXTENDED_DPTR__
   1080.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1080.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1080.20 000000          #ifdef __EXTENDED_DPTR__
   1080.21 000000          #endif ; __EXTENDED_DPTR__
   1080.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1080.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1080.24 000000          #ifdef __EXTENDED_DPTR__
   1080.25 000000          #endif ; __EXTENDED_DPTR__
   1080.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1080.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1080.28 000000          #ifdef __EXTENDED_DPTR__
   1080.29 000000          #endif ; __EXTENDED_DPTR__
   1080.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1080.31 000000          #endif ; __DPTR_SEPARATE__
   1080.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1080.33 000000                  ENDM
   1081    000000          
   1082    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK16_C
   1082.1  000000                                  cfi block ?PUSH_ISTACK16_C
                                                                      using
                                                                      cfi_commo
                                                                     n
   1082.2  000000                                  cfi nofunction
   1082.3  000000          cfi_OFFSET              SET      0
   1082.4  000000                                  ENDM
   1083    000000          ?PUSH_ISTACK16_C:
   1084    000000          ?PUSH_ISTACK16_C_CFI_INVALID_BEGINS:
   1085    000000              cfi invalid
   1086    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1090    000000          #endif
   1091    000000 D0..             POP     ?V0+1
   1092    000002              cfi CFA_MACHINE MACHINE_SP - 1
   1093    000002              cfi ?RET_HIGH V1
   1094    000002 D0..             POP     ?V0+0
   1095    000004              cfi CFA_MACHINE MACHINE_SP - 0
   1096    000004              cfi ?RET_LOW V0
   1097    000004          LOOP:
   1098    000004 E4               CLR     A
   1099    000005 93               MOVC    A,@A+DPTR
   1100    000006 C0E0             PUSH    A
   1101    000008 A3               INC     DPTR
   1102    000009 D8F9             DJNZ    R0,LOOP
   1103    00000B DBF7             DJNZ    R3,LOOP
   1104    00000D          
   1105    00000D 85..82           MOV     DPL,?V0
   1106    000010              cfi ?RET_LOW DPL0
   1107    000010 85..83           MOV     DPH,?V0+1
   1108    000013              cfi ?RET_HIGH DPH0
   1109    000013          #if (__CORE__ == __CORE_EXTENDED1__)
   1112    000013          #endif
   1113    000013 E4               CLR     A
   1114    000014 73               JMP     @A+DPTR
   1115    000015          ?PUSH_ISTACK16_C_CFI_INVALID_ENDS:
   1116    000015              cfi valid
   1117    000015              cfi_DATA_BLOCK_end ?PUSH_ISTACK16_C
   1117.1  000015                                  IF cfi_OFFSET
   1117.2  000015                                    #error "Non-zero offset on
                            cfi data block end"
   1117.3  000015                                  ELSE
   1117.4  000015                                    cfi endblock ?PUSH_ISTACK1
                           6_C
   1117.5  000015                                  ENDIF
   1117.6  000015                                  ENDM
   1118    000015                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850
GP1L                 #define, value: R1, line:        28        844
GP1M                 #define, value: R2, line:        29        845
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_ISTACK16_C    REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK16_C_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?PUSH_ISTACK16_C_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      15 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LOOP                REL    CONST UNTYP.           RCODE      4 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
V0                  REL    CONST UNTYP.           RCODE      Not solved 
V1                  REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:CE19          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 21          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1119    000000          
   1120    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1158    000000          #ifdef __DPTR_SHADOWED__
   1160    000000          #endif
   1161    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1165    000000          #endif
   1173    000000          #ifdef __DPTR_SHADOWED__
   1175    000000          #endif
   1195    000000          #elif (!defined(__NUMBER_OF_DPTRS__))
   1196    000000          #error "You must define __NUMBER_OF_DPTRS__"
   1197    000000          #endif
   1198    000000          
   1199    000000          ;---------------------------------------------------
                           --------------------------
   1200    000000          ;       Function: ?PUSH_ISTACK16_G
   1201    000000          ;
   1202    000000          ;       Description: Push a block of bytes, max 64k
                            bytes.
   1203    000000          ;
   1204    000000          ;       Register input:
   1205    000000          ;               R7        = Nr of elements to push
                            (low)
   1206    000000          ;               R0        = Nr of elements to push
                            (high + 1)
   1207    000000          ;               R1:R2:R3  = Address to the first
                            element.
   1208    000000          ;
   1209    000000          ;       Register output:
   1210    000000          ;               A    = Undefined
   1211    000000          ;               R0   = 0
   1212    000000          ;               R7   = 0
   1213    000000          ;               V0   = Ret low
   1214    000000          ;               V1   = Ret High
   1215    000000          ;               (V2  = Ret Ext)
   1216    000000          ;               R1   = Undefined
   1217    000000          ;               R2   = Undefined
   1218    000000          ;               R3   = Undefined
   1219    000000          ;               DPTR = Undefined
   1220    000000          ;
   1221    000000          ;       Stack usage: NA
   1222    000000          ;
   1223    000000          ;---------------------------------------------------
                           --------------------------
   1224    000000                  MODULE  ?PUSH_ISTACK16_G
   1225    000000                  RSEG    RCODE:CODE:NOROOT
   1226    000000                  EXTERN  ?V0
   1227    000000          #ifdef __EXTENDED_DPTR__
   1229    000000          #endif
   1230    000000                  PUBLIC  ?PUSH_ISTACK16_G
   1231    000000              cfi_DATA_BLOCK_start ?PUSH_ISTACK16_G
   1231.1  000000                                  cfi block ?PUSH_ISTACK16_G
                                                                      using
                                                                      cfi_commo
                                                                     n
   1231.2  000000                                  cfi nofunction
   1231.3  000000          cfi_OFFSET              SET      0
   1231.4  000000                                  ENDM
   1232    000000          ?PUSH_ISTACK16_G:
   1233    000000          ?PUSH_ISTACK16_G_CFI_INVALID_BEGINS:
   1234    000000              cfi invalid
   1235    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1239    000000          #else
   1240    000000 D0..             POP     ?V0+1
   1241    000002 D0..             POP     ?V0+0
   1242    000004          #endif
   1243    000004          
   1244    000004 BB010A           CJNE    GP1H,#0x01,NOT_IDATA
   1245    000007          
   1246    000007                  ; push IDATA object
   1247    000007          
   1248    000007          LOOP_IDATA:
   1249    000007 E7               MOV     A,@R1
   1250    000008 C0E0             PUSH    A
   1251    00000A 09               INC     R1
   1252    00000B DFFA             DJNZ    R7,LOOP_IDATA
   1253    00000D D8F8             DJNZ    R0,LOOP_IDATA
   1254    00000F          
   1255    00000F 801A             SJMP    MAKE_RETURN
   1256    000011          
   1257    000011          NOT_IDATA: ; CODE or XDATA object
   1258    000011          
   1259    000011                  ; setup src
   1260    000011 8982             MOV     DPL,GP1L
   1261    000013 8A83             MOV     DPH,GP1M
   1262    000015          #ifdef __EXTENDED_DPTR__
   1264    000015          #endif
   1265    000015          
   1266    000015 BB000A           CJNE    GP1H,#0x00,NOT_XDATA
   1267    000018          
   1268    000018                  ; push XDATA object
   1269    000018          
   1270    000018          LOOP_XDATA:
   1271    000018 E0               MOVX    A,@DPTR
   1272    000019 C0E0             PUSH    A
   1273    00001B A3               INC     DPTR
   1274    00001C DFFA             DJNZ    R7,LOOP_XDATA
   1275    00001E D8F8             DJNZ    R0,LOOP_XDATA
   1276    000020          
   1277    000020 8009             SJMP    MAKE_RETURN
   1278    000022          
   1279    000022          NOT_XDATA:
   1280    000022                  ; push CODE object
   1281    000022          
   1282    000022          LOOP_CODE:
   1283    000022 E4               CLR     A
   1284    000023 93               MOVC    A,@A+DPTR
   1285    000024 C0E0             PUSH    A
   1286    000026 A3               INC     DPTR
   1287    000027 DFF9             DJNZ    R7,LOOP_CODE
   1288    000029 D8F7             DJNZ    R0,LOOP_CODE
   1289    00002B          
   1290    00002B          MAKE_RETURN:
   1291    00002B C0..             PUSH    ?V0+0
   1292    00002D C0..             PUSH    ?V0+1
   1293    00002F          #if (__CORE__ == __CORE_EXTENDED1__)
   1295    00002F          #endif
   1296    00002F 22               RET
   1297    000030          
   1298    000030          ?PUSH_ISTACK16_G_CFI_INVALID_ENDS:
   1299    000030              cfi valid
   1300    000030              cfi_DATA_BLOCK_end ?PUSH_ISTACK16_G
   1300.1  000030                                  IF cfi_OFFSET
   1300.2  000030                                    #error "Non-zero offset on
                            cfi data block end"
   1300.3  000030                                  ELSE
   1300.4  000030                                    cfi endblock ?PUSH_ISTACK1
                           6_G
   1300.5  000030                                  ENDIF
   1300.6  000030                                  ENDM
   1301    000030                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_ISTACK16_G    REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_ISTACK16_G_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?PUSH_ISTACK16_G_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      30 
?V0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LOOP_CODE           REL    CONST UNTYP.           RCODE      22 
LOOP_IDATA          REL    CONST UNTYP.           RCODE      7 
LOOP_XDATA          REL    CONST UNTYP.           RCODE      18 
MAKE_RETURN         REL    CONST UNTYP.           RCODE      2B 
NOT_IDATA           REL    CONST UNTYP.           RCODE      11 
NOT_XDATA           REL    CONST UNTYP.           RCODE      22 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:6C51          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 48          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1302    000000          
   1303    000000          ;---------------------------------------------------
                           --------------------------
   1304    000000          ;
   1305    000000          ;       Functions: Push element(s) from any memory
                            on PDATA stack.
   1306    000000          ;                  ?PUSH_PSTACK_I
   1307    000000          ;                  ?PUSH_PSTACK_P
   1308    000000          ;                  ?PUSH_PSTACK_X
   1309    000000          ;                  ?PUSH_PSTACK_C
   1310    000000          ;
   1311    000000          ;       Description:
   1312    000000          ;
   1313    000000          ;               Use PUSH_PSTACK_I_ONE when pushing 1
                            element.
   1314    000000          ;               Use PUSH_PSTACK_I_TWO when pushing 2
                            element.
   1315    000000          ;               Use PUSH_PSTACK_I_THREE when pushing
                            3 element.
   1316    000000          ;               Use PUSH_PSTACK_I_FOUR when pushing
                            4 element.
   1317    000000          ;
   1318    000000          ;               NOTE: The above routines does not
                            use R0.
   1319    000000          ;
   1320    000000          ;               Use PUSH_PSTACK_P_ONE when pushing 1
                            element.
   1321    000000          ;               Use PUSH_PSTACK_P_TWO when pushing 2
                            element.
   1322    000000          ;               Use PUSH_PSTACK_P_THREE when pushing
                            3 element.
   1323    000000          ;               Use PUSH_PSTACK_P_FOUR when pushing
                            4 element.
   1324    000000          ;
   1325    000000          ;               NOTE: The above routines does not
                            use R0.
   1326    000000          ;
   1327    000000          ;               Use PUSH_PSTACK_C_ONE when pushing 1
                            element.
   1328    000000          ;               Use PUSH_PSTACK_C_TWO when pushing 2
                            element.
   1329    000000          ;               Use PUSH_PSTACK_C_THREE when pushing
                            3 element.
   1330    000000          ;               Use PUSH_PSTACK_C_FOUR when pushing
                            4 element.
   1331    000000          ;
   1332    000000          ;               Use PUSH_PSTACK_X_ONE when pushing 1
                            element.
   1333    000000          ;               Use PUSH_PSTACK_X_TWO when pushing 2
                            element.
   1334    000000          ;               Use PUSH_PSTACK_X_THREE when pushing
                            3 element.
   1335    000000          ;               Use PUSH_PSTACK_X_FOUR when pushing
                            4 element.
   1336    000000          ;
   1337    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
   1338    000000          ;       Function: ?PUSH_PSTACK_I
   1339    000000          ;
   1340    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   1341    000000          ;
   1342    000000          ;       Register input:
   1343    000000          ;               A    = Nr of elements to push
   1344    000000          ;               @R0  = Address to the first
                            element.
   1345    000000          ;
   1346    000000          ;       Register output:
   1347    000000          ;               A  = Undefined
   1348    000000          ;               R0 = Undefined
   1349    000000          ;               Carry = Undefined
   1350    000000          ;
   1351    000000          ;       Stack usage: NA
   1352    000000          ;
   1353    000000          ;---------------------------------------------------
                           --------------------------
   1354    000000                  MODULE  ?PUSH_PSTACK_I
   1355    000000                  RSEG    RCODE:CODE:NOROOT
   1356    000000                  EXTERN  ?MOVE_LONG8_PDATA_IDATA
   1357    000000                  EXTERN  ?PSP
   1358    000000                  PUBLIC  ?PUSH_PSTACK_I
   1359    000000                  PUBLIC  ?PUSH_PSTACK_I_FOUR
   1360    000000                  PUBLIC  ?PUSH_PSTACK_I_THREE
   1361    000000                  PUBLIC  ?PUSH_PSTACK_I_TWO
   1362    000000                  PUBLIC  ?PUSH_PSTACK_I_ONE
   1363    000000                  
   1364    000000                  RSEG    RCODE:CODE:NOROOT
   1365    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_I_FOUR
   1365.1  000000                                  cfi block ?PUSH_PSTACK_I_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
   1365.2  000000                                  cfi nofunction
   1365.3  000000          cfi_OFFSET              SET      0
   1365.4  000000                                  ENDM
   1366    000000              cfi A undefined
   1367    000000              cfi CFA_SPP sub(SPP,4)
   1368    000000          ?PUSH_PSTACK_I_FOUR:
   1369    000000 7404             MOV     A,#0x4
   1370    000002 80..             SJMP    ?PUSH_PSTACK_I
   1371    000004                  REQUIRE ?PUSH_PSTACK_I
   1372    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_I_FOUR
   1372.1  000004                                  IF cfi_OFFSET
   1372.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1372.3  000004                                  ELSE
   1372.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           I_FOUR
   1372.5  000004                                  ENDIF
   1372.6  000004                                  ENDM
   1373    000004          
   1374    000000                  RSEG    RCODE:CODE:NOROOT
   1375    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_I_THREE
   1375.1  000000                                  cfi block ?PUSH_PSTACK_I_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
   1375.2  000000                                  cfi nofunction
   1375.3  000000          cfi_OFFSET              SET      0
   1375.4  000000                                  ENDM
   1376    000000              cfi A undefined
   1377    000000              cfi CFA_SPP sub(SPP,3)
   1378    000000          ?PUSH_PSTACK_I_THREE:
   1379    000000 7403             MOV     A,#0x3
   1380    000002 80..             SJMP    ?PUSH_PSTACK_I
   1381    000004                  REQUIRE ?PUSH_PSTACK_I
   1382    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_I_THREE
   1382.1  000004                                  IF cfi_OFFSET
   1382.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1382.3  000004                                  ELSE
   1382.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           I_THREE
   1382.5  000004                                  ENDIF
   1382.6  000004                                  ENDM
   1383    000004          
   1384    000000                  RSEG    RCODE:CODE:NOROOT
   1385    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_I_TWO
   1385.1  000000                                  cfi block ?PUSH_PSTACK_I_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
   1385.2  000000                                  cfi nofunction
   1385.3  000000          cfi_OFFSET              SET      0
   1385.4  000000                                  ENDM
   1386    000000              cfi A undefined
   1387    000000              cfi CFA_SPP sub(SPP,2)
   1388    000000                
   1389    000000          ?PUSH_PSTACK_I_TWO:
   1390    000000 7402             MOV     A,#0x2
   1391    000002 80..             SJMP    ?PUSH_PSTACK_I
   1392    000004                  REQUIRE ?PUSH_PSTACK_I
   1393    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_I_TWO
   1393.1  000004                                  IF cfi_OFFSET
   1393.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1393.3  000004                                  ELSE
   1393.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           I_TWO
   1393.5  000004                                  ENDIF
   1393.6  000004                                  ENDM
   1394    000004          
   1395    000000                  RSEG    RCODE:CODE:NOROOT
   1396    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_I_ONE
   1396.1  000000                                  cfi block ?PUSH_PSTACK_I_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
   1396.2  000000                                  cfi nofunction
   1396.3  000000          cfi_OFFSET              SET      0
   1396.4  000000                                  ENDM
   1397    000000              cfi A undefined
   1398    000000              cfi CFA_SPP sub(SPP,1)
   1399    000000          ?PUSH_PSTACK_I_ONE:
   1400    000000 7401             MOV     A,#0x1
   1401    000002                  REQUIRE ?PUSH_PSTACK_I
   1402    000002              cfi_DATA_BLOCK_end ?PUSH_PSTACK_I_ONE
   1402.1  000002                                  IF cfi_OFFSET
   1402.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   1402.3  000002                                  ELSE
   1402.4  000002                                    cfi endblock ?PUSH_PSTACK_
                           I_ONE
   1402.5  000002                                  ENDIF
   1402.6  000002                                  ENDM
   1403    000002          
   1404    000000                  RSEG    RCODE:CODE:NOROOT
   1405    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_I
   1405.1  000000                                  cfi block ?PUSH_PSTACK_I
                                                                    using
                                                                    cfi_common
   1405.2  000000                                  cfi nofunction
   1405.3  000000          cfi_OFFSET              SET      0
   1405.4  000000                                  ENDM
   1406    000000              cfi A undefined
   1407    000000              cfi R0 undefined
   1408    000000              cfi CFA_SPP sub(SPP,A)
   1409    000000          ?PUSH_PSTACK_I:
   1410    000000 C9               XCH     A,R1
   1411    000001              cfi CFA_SPP sub(SPP,R1)
   1412    000001 C0E0             PUSH    A
   1413    000003              cfi_PUSH_REG R1
   1413    000003                                  cfi_STACK_ALLOC 1
   1413.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   1413.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1413.3  000003                                  ENDM
   1413.4  000003                                  cfi R1 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   1413.5  000003                                  ENDM
   1414    000003 E5..             MOV     A,?PSP
   1415    000005 C3               CLR     C
   1416    000006 99               SUBB    A,R1
   1417    000007 F5..             MOV     ?PSP,A
   1418    000009              cfi CFA_SPP SPP
   1419    000009 C9               XCH     A,R1
   1420    00000A 12....           CALL    ?MOVE_LONG8_PDATA_IDATA    ; @R1 =
                                                                       dst, @R0
                                                                       = src, A
                                                                       = Nr of
                                                                       elements
   1421    00000D D0E0             POP     A
   1422    00000F              cfi_STACK_DEALL 1
   1422.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   1422.2  00000F                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   1422.3  00000F          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   1422.4  00000F                                      #error "Negative size on
                            cfi deallocate"
   1422.5  00000F          #endif
   1422.6  00000F                                  ELSEIF cfi_OFFSET
   1422.7  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1422.8  00000F                                  ELSE
   1422.9  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   1422.10 00000F                                  ENDIF
   1422.11 00000F                                  ENDM
   1423    00000F F9               MOV     R1,A
   1424    000010              cfi R1 samevalue
   1425    000010 22               RET
   1426    000011              cfi_DATA_BLOCK_end ?PUSH_PSTACK_I
   1426.1  000011                                  IF cfi_OFFSET
   1426.2  000011                                    #error "Non-zero offset on
                            cfi data block end"
   1426.3  000011                                  ELSE
   1426.4  000011                                    cfi endblock ?PUSH_PSTACK_
                           I
   1426.5  000011                                  ENDIF
   1426.6  000011                                  ENDM
   1427    000011                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG8_PDATA_IDATAABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?PSP                ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_PSTACK_I      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_I_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_I_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_I_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_I_TWO  REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_PSP16           REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               REL    CONST UNTYP.           RCODE      Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:F303          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 31          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1428    000000          
   1429    000000          ;---------------------------------------------------
                           --------------------------
   1430    000000          ;       Function: ?PUSH_PSTACK_P
   1431    000000          ;
   1432    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   1433    000000          ;
   1434    000000          ;       Register input:
   1435    000000          ;               A    = Nr of elements to push
   1436    000000          ;               @R0  = Address to the first
                            element.
   1437    000000          ;
   1438    000000          ;       Register output:
   1439    000000          ;               A  = Undefined
   1440    000000          ;               R0 = Undefined
   1441    000000          ;               Carry = Undefined
   1442    000000          ;
   1443    000000          ;       Stack usage: NA
   1444    000000          ;
   1445    000000          ;---------------------------------------------------
                           --------------------------
   1446    000000                  MODULE  ?PUSH_PSTACK_P
   1447    000000                  RSEG    RCODE:CODE:NOROOT
   1448    000000                  EXTERN  ?MOVE_LONG8_PDATA_PDATA
   1449    000000                  EXTERN  ?PSP
   1450    000000                  PUBLIC  ?PUSH_PSTACK_P
   1451    000000                  PUBLIC  ?PUSH_PSTACK_P_FOUR
   1452    000000                  PUBLIC  ?PUSH_PSTACK_P_THREE
   1453    000000                  PUBLIC  ?PUSH_PSTACK_P_TWO
   1454    000000                  PUBLIC  ?PUSH_PSTACK_P_ONE      
   1455    000000                  RSEG    RCODE:CODE:NOROOT
   1456    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_P_FOUR
   1456.1  000000                                  cfi block ?PUSH_PSTACK_P_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
   1456.2  000000                                  cfi nofunction
   1456.3  000000          cfi_OFFSET              SET      0
   1456.4  000000                                  ENDM
   1457    000000              cfi A undefined
   1458    000000              cfi CFA_SPP sub(SPP,4)
   1459    000000          ?PUSH_PSTACK_P_FOUR:
   1460    000000 7404             MOV     A,#0x4
   1461    000002 80..             SJMP    ?PUSH_PSTACK_P
   1462    000004                  REQUIRE ?PUSH_PSTACK_P
   1463    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_P_FOUR
   1463.1  000004                                  IF cfi_OFFSET
   1463.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1463.3  000004                                  ELSE
   1463.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           P_FOUR
   1463.5  000004                                  ENDIF
   1463.6  000004                                  ENDM
   1464    000004          
   1465    000000                  RSEG    RCODE:CODE:NOROOT
   1466    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_P_THREE
   1466.1  000000                                  cfi block ?PUSH_PSTACK_P_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
   1466.2  000000                                  cfi nofunction
   1466.3  000000          cfi_OFFSET              SET      0
   1466.4  000000                                  ENDM
   1467    000000              cfi A undefined
   1468    000000              cfi CFA_SPP sub(SPP,3)
   1469    000000          ?PUSH_PSTACK_P_THREE:
   1470    000000 7403             MOV     A,#0x3
   1471    000002 80..             SJMP    ?PUSH_PSTACK_P
   1472    000004                  REQUIRE ?PUSH_PSTACK_P
   1473    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_P_THREE
   1473.1  000004                                  IF cfi_OFFSET
   1473.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1473.3  000004                                  ELSE
   1473.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           P_THREE
   1473.5  000004                                  ENDIF
   1473.6  000004                                  ENDM
   1474    000004          
   1475    000000                  RSEG    RCODE:CODE:NOROOT
   1476    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_P_TWO
   1476.1  000000                                  cfi block ?PUSH_PSTACK_P_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
   1476.2  000000                                  cfi nofunction
   1476.3  000000          cfi_OFFSET              SET      0
   1476.4  000000                                  ENDM
   1477    000000              cfi A undefined
   1478    000000              cfi CFA_SPP sub(SPP,2)
   1479    000000          ?PUSH_PSTACK_P_TWO:
   1480    000000 7402             MOV     A,#0x2
   1481    000002 80..             SJMP    ?PUSH_PSTACK_P
   1482    000004                  REQUIRE ?PUSH_PSTACK_P
   1483    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_P_TWO
   1483.1  000004                                  IF cfi_OFFSET
   1483.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1483.3  000004                                  ELSE
   1483.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           P_TWO
   1483.5  000004                                  ENDIF
   1483.6  000004                                  ENDM
   1484    000004          
   1485    000000                  RSEG    RCODE:CODE:NOROOT
   1486    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_P_ONE
   1486.1  000000                                  cfi block ?PUSH_PSTACK_P_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
   1486.2  000000                                  cfi nofunction
   1486.3  000000          cfi_OFFSET              SET      0
   1486.4  000000                                  ENDM
   1487    000000              cfi A undefined
   1488    000000              cfi CFA_SPP sub(SPP,1)
   1489    000000          ?PUSH_PSTACK_P_ONE:
   1490    000000 7401             MOV     A,#0x1
   1491    000002                  REQUIRE ?PUSH_PSTACK_P
   1492    000002              cfi_DATA_BLOCK_end ?PUSH_PSTACK_P_ONE
   1492.1  000002                                  IF cfi_OFFSET
   1492.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   1492.3  000002                                  ELSE
   1492.4  000002                                    cfi endblock ?PUSH_PSTACK_
                           P_ONE
   1492.5  000002                                  ENDIF
   1492.6  000002                                  ENDM
   1493    000002          
   1494    000000                  RSEG    RCODE:CODE:NOROOT
   1495    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_P
   1495.1  000000                                  cfi block ?PUSH_PSTACK_P
                                                                    using
                                                                    cfi_common
   1495.2  000000                                  cfi nofunction
   1495.3  000000          cfi_OFFSET              SET      0
   1495.4  000000                                  ENDM
   1496    000000              cfi A undefined
   1497    000000              cfi R0 undefined
   1498    000000              cfi CFA_SPP sub(SPP,A)
   1499    000000          ?PUSH_PSTACK_P:
   1500    000000 C9               XCH     A,R1
   1501    000001              cfi CFA_SPP sub(SPP,R1)
   1502    000001 C0E0             PUSH    A
   1503    000003              cfi_PUSH_REG R1
   1503    000003                                  cfi_STACK_ALLOC 1
   1503.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   1503.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1503.3  000003                                  ENDM
   1503.4  000003                                  cfi R1 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   1503.5  000003                                  ENDM
   1504    000003 E5..             MOV     A,?PSP
   1505    000005 C3               CLR     C
   1506    000006 99               SUBB    A,R1
   1507    000007 F5..             MOV     ?PSP,A
   1508    000009              cfi CFA_SPP SPP
   1509    000009 C9               XCH     A,R1
   1510    00000A 12....           CALL    ?MOVE_LONG8_PDATA_PDATA    ; @R1 =
                                                                       dst, @R0
                                                                       = src, A
                                                                       = Nr of
                                                                       elements
   1511    00000D D0E0             POP     A
   1512    00000F              cfi_STACK_DEALL 1
   1512.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   1512.2  00000F                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   1512.3  00000F          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   1512.4  00000F                                      #error "Negative size on
                            cfi deallocate"
   1512.5  00000F          #endif
   1512.6  00000F                                  ELSEIF cfi_OFFSET
   1512.7  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1512.8  00000F                                  ELSE
   1512.9  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   1512.10 00000F                                  ENDIF
   1512.11 00000F                                  ENDM
   1513    00000F F9               MOV     R1,A
   1514    000010              cfi R1 samevalue
   1515    000010 22               RET
   1516    000011              cfi_DATA_BLOCK_end ?PUSH_PSTACK_P
   1516.1  000011                                  IF cfi_OFFSET
   1516.2  000011                                    #error "Non-zero offset on
                            cfi data block end"
   1516.3  000011                                  ELSE
   1516.4  000011                                    cfi endblock ?PUSH_PSTACK_
                           P
   1516.5  000011                                  ENDIF
   1516.6  000011                                  ENDM
   1517    000011                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG8_PDATA_PDATAABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?PSP                ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_PSTACK_P      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_P_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_P_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_P_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_P_TWO  REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_PSP16           REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               REL    CONST UNTYP.           RCODE      Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:37CA          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 31          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1518    000000          
   1519    000000          ;---------------------------------------------------
                           --------------------------
   1520    000000          ;       Function: ?PUSH_PSTACK_X
   1521    000000          ;
   1522    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   1523    000000          ;
   1524    000000          ;       Register input:
   1525    000000          ;               A      = Nr of elements to
                            push
   1526    000000          ;               @DPTR  = Address to the first
                            element.
   1527    000000          ;
   1528    000000          ;       Register output:
   1529    000000          ;               A      = Zero
   1530    000000          ;               @DPTR  = Undefined
   1531    000000          ;               Carry  = Undefined
   1532    000000          ;
   1533    000000          ;       Multiple DPTR:
   1534    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
   1535    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
   1536    000000          ;
   1537    000000          ;               Separate:       Requires DPTR: DPTRx
                                Requires DPS: DPTRx 
   1538    000000          ;                               Modifies DPTR: DPTRx
                                Returns  DPS: DPTRx
   1539    000000          ;
   1540    000000          ;       Stack usage: NA
   1541    000000          ;
   1542    000000          ;---------------------------------------------------
                           --------------------------
   1543    000000                  MODULE  ?PUSH_PSTACK_X
   1544    000000                  RSEG    RCODE:CODE:NOROOT
   1545    000000                  EXTERN  ?MOVE_LONG8_PDATA_XDATA
   1546    000000                  EXTERN  ?PSP
   1547    000000                  PUBLIC  ?PUSH_PSTACK_X
   1548    000000                  PUBLIC  ?PUSH_PSTACK_X_FOUR
   1549    000000                  PUBLIC  ?PUSH_PSTACK_X_THREE
   1550    000000                  PUBLIC  ?PUSH_PSTACK_X_TWO
   1551    000000                  PUBLIC  ?PUSH_PSTACK_X_ONE
   1552    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_X_FOUR
   1552.1  000000                                  cfi block ?PUSH_PSTACK_X_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
   1552.2  000000                                  cfi nofunction
   1552.3  000000          cfi_OFFSET              SET      0
   1552.4  000000                                  ENDM
   1553    000000              cfi A undefined
   1554    000000              cfi CFA_SPP sub(SPP,4)
   1555    000000          ?PUSH_PSTACK_X_FOUR:
   1556    000000 7404             MOV     A,#0x4
   1557    000002 80..             SJMP    ?PUSH_PSTACK_X
   1558    000004                  REQUIRE ?PUSH_PSTACK_X
   1559    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_X_FOUR
   1559.1  000004                                  IF cfi_OFFSET
   1559.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1559.3  000004                                  ELSE
   1559.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           X_FOUR
   1559.5  000004                                  ENDIF
   1559.6  000004                                  ENDM
   1560    000004          
   1561    000000                  RSEG    RCODE:CODE:NOROOT
   1562    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_X_THREE
   1562.1  000000                                  cfi block ?PUSH_PSTACK_X_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
   1562.2  000000                                  cfi nofunction
   1562.3  000000          cfi_OFFSET              SET      0
   1562.4  000000                                  ENDM
   1563    000000              cfi A undefined
   1564    000000              cfi CFA_SPP sub(SPP,3)
   1565    000000          ?PUSH_PSTACK_X_THREE:
   1566    000000 7403             MOV     A,#0x3
   1567    000002 80..             SJMP    ?PUSH_PSTACK_X
   1568    000004                  REQUIRE ?PUSH_PSTACK_X
   1569    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_X_THREE
   1569.1  000004                                  IF cfi_OFFSET
   1569.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1569.3  000004                                  ELSE
   1569.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           X_THREE
   1569.5  000004                                  ENDIF
   1569.6  000004                                  ENDM
   1570    000004          
   1571    000000                  RSEG    RCODE:CODE:NOROOT
   1572    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_X_TWO
   1572.1  000000                                  cfi block ?PUSH_PSTACK_X_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
   1572.2  000000                                  cfi nofunction
   1572.3  000000          cfi_OFFSET              SET      0
   1572.4  000000                                  ENDM
   1573    000000              cfi A undefined
   1574    000000              cfi CFA_SPP sub(SPP,2)
   1575    000000          ?PUSH_PSTACK_X_TWO:
   1576    000000 7402             MOV     A,#0x2
   1577    000002 80..             SJMP    ?PUSH_PSTACK_X
   1578    000004                  REQUIRE ?PUSH_PSTACK_X
   1579    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_X_TWO
   1579.1  000004                                  IF cfi_OFFSET
   1579.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1579.3  000004                                  ELSE
   1579.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           X_TWO
   1579.5  000004                                  ENDIF
   1579.6  000004                                  ENDM
   1580    000004          
   1581    000000                  RSEG    RCODE:CODE:NOROOT
   1582    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_X_ONE
   1582.1  000000                                  cfi block ?PUSH_PSTACK_X_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
   1582.2  000000                                  cfi nofunction
   1582.3  000000          cfi_OFFSET              SET      0
   1582.4  000000                                  ENDM
   1583    000000              cfi A undefined
   1584    000000              cfi CFA_SPP sub(SPP,1)
   1585    000000          ?PUSH_PSTACK_X_ONE:
   1586    000000 7401             MOV     A,#0x1
   1587    000002                  REQUIRE ?PUSH_PSTACK_X
   1588    000002              cfi_DATA_BLOCK_end ?PUSH_PSTACK_X_ONE
   1588.1  000002                                  IF cfi_OFFSET
   1588.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   1588.3  000002                                  ELSE
   1588.4  000002                                    cfi endblock ?PUSH_PSTACK_
                           X_ONE
   1588.5  000002                                  ENDIF
   1588.6  000002                                  ENDM
   1589    000002          
   1590    000000                  RSEG    RCODE:CODE:NOROOT
   1591    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_X
   1591.1  000000                                  cfi block ?PUSH_PSTACK_X
                                                                    using
                                                                    cfi_common
   1591.2  000000                                  cfi nofunction
   1591.3  000000          cfi_OFFSET              SET      0
   1591.4  000000                                  ENDM
   1592    000000              cfi A undefined
   1593    000000              cfi DPTR0 undefined
   1594    000000              cfi CFA_SPP sub(SPP,A)
   1595    000000          ?PUSH_PSTACK_X:
   1596    000000 C8               XCH     A,R0
   1597    000001              cfi CFA_SPP sub(SPP,R0)
   1598    000001 C0E0             PUSH    A
   1599    000003                  cfi_PUSH_REG R0
   1599    000003                                  cfi_STACK_ALLOC 1
   1599.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   1599.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1599.3  000003                                  ENDM
   1599.4  000003                                  cfi R0 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   1599.5  000003                                  ENDM
   1600    000003 E5..             MOV     A,?PSP
   1601    000005 C3               CLR     C
   1602    000006 98               SUBB    A,R0
   1603    000007 F5..             MOV     ?PSP,A
   1604    000009              cfi CFA_SPP SPP
   1605    000009 C8               XCH     A,R0
   1606    00000A 12....           CALL    ?MOVE_LONG8_PDATA_XDATA    ; @R0 =
                                                                       dst,
                                                                       @DPTR =
                                                                       src, A =
                                                                       Nr of
                                                                       elements
   1607    00000D D0E0             POP     A
   1608    00000F                  cfi_STACK_DEALL 1
   1608.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   1608.2  00000F                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   1608.3  00000F          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   1608.4  00000F                                      #error "Negative size on
                            cfi deallocate"
   1608.5  00000F          #endif
   1608.6  00000F                                  ELSEIF cfi_OFFSET
   1608.7  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1608.8  00000F                                  ELSE
   1608.9  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   1608.10 00000F                                  ENDIF
   1608.11 00000F                                  ENDM
   1609    00000F F8               MOV     R0,A
   1610    000010              cfi R0 samevalue
   1611    000010 22               RET
   1612    000011          
   1613    000011              cfi_DATA_BLOCK_end ?PUSH_PSTACK_X
   1613.1  000011                                  IF cfi_OFFSET
   1613.2  000011                                    #error "Non-zero offset on
                            cfi data block end"
   1613.3  000011                                  ELSE
   1613.4  000011                                    cfi endblock ?PUSH_PSTACK_
                           X
   1613.5  000011                                  ENDIF
   1613.6  000011                                  ENDM
   1614    000011                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG8_PDATA_XDATAABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?PSP                ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_PSTACK_X      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_X_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_X_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_X_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_X_TWO  REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_PSP16           REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               REL    CONST UNTYP.           RCODE      Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:5CB1          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 31          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1615    000000          
   1616    000000          ;---------------------------------------------------
                           --------------------------
   1617    000000          ;       Function: ?PUSH_PSTACK_C
   1618    000000          ;
   1619    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   1620    000000          ;
   1621    000000          ;       Register input:
   1622    000000          ;               A      = Nr of elements to
                            push
   1623    000000          ;               @DPTR  = Address to the first
                            element.
   1624    000000          ;
   1625    000000          ;       Register output:
   1626    000000          ;               A     = 0
   1627    000000          ;               @DPTR = Undefined
   1628    000000          ;               Carry = Undefined
   1629    000000          ;
   1630    000000          ;       Multiple DPTR:
   1631    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
   1632    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
   1633    000000          ;
   1634    000000          ;               Separate:       Requires DPTR: DPTRx
                                Requires DPS: DPTRx 
   1635    000000          ;                               Modifies DPTR: DPTRx
                                Returns  DPS: DPTRx
   1636    000000          ;
   1637    000000          ;       Stack usage: NA
   1638    000000          ;
   1639    000000          ;---------------------------------------------------
                           --------------------------
   1640    000000                  MODULE  ?PUSH_PSTACK_C
   1641    000000                  RSEG    RCODE:CODE:NOROOT
   1642    000000                  EXTERN  ?MOVE_LONG8_PDATA_CODE
   1643    000000                  EXTERN  ?PSP
   1644    000000                  PUBLIC  ?PUSH_PSTACK_C
   1645    000000                  PUBLIC  ?PUSH_PSTACK_C_FOUR
   1646    000000                  PUBLIC  ?PUSH_PSTACK_C_THREE
   1647    000000                  PUBLIC  ?PUSH_PSTACK_C_TWO
   1648    000000                  PUBLIC  ?PUSH_PSTACK_C_ONE
   1649    000000          
   1650    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_C_FOUR
   1650.1  000000                                  cfi block ?PUSH_PSTACK_C_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
   1650.2  000000                                  cfi nofunction
   1650.3  000000          cfi_OFFSET              SET      0
   1650.4  000000                                  ENDM
   1651    000000              cfi A undefined
   1652    000000              cfi CFA_SPP sub(SPP,4)
   1653    000000          ?PUSH_PSTACK_C_FOUR:
   1654    000000 7404             MOV     A,#0x4
   1655    000002 80..             SJMP    ?PUSH_PSTACK_C
   1656    000004                  REQUIRE ?PUSH_PSTACK_C
   1657    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_C_FOUR
   1657.1  000004                                  IF cfi_OFFSET
   1657.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1657.3  000004                                  ELSE
   1657.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           C_FOUR
   1657.5  000004                                  ENDIF
   1657.6  000004                                  ENDM
   1658    000004          
   1659    000000                  RSEG    RCODE:CODE:NOROOT
   1660    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_C_THREE
   1660.1  000000                                  cfi block ?PUSH_PSTACK_C_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
   1660.2  000000                                  cfi nofunction
   1660.3  000000          cfi_OFFSET              SET      0
   1660.4  000000                                  ENDM
   1661    000000              cfi A undefined
   1662    000000              cfi CFA_SPP sub(SPP,3)
   1663    000000          ?PUSH_PSTACK_C_THREE:
   1664    000000 7403             MOV     A,#0x3
   1665    000002 80..             SJMP    ?PUSH_PSTACK_C
   1666    000004                  REQUIRE ?PUSH_PSTACK_C
   1667    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_C_THREE
   1667.1  000004                                  IF cfi_OFFSET
   1667.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1667.3  000004                                  ELSE
   1667.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           C_THREE
   1667.5  000004                                  ENDIF
   1667.6  000004                                  ENDM
   1668    000004          
   1669    000000                  RSEG    RCODE:CODE:NOROOT
   1670    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_C_TWO
   1670.1  000000                                  cfi block ?PUSH_PSTACK_C_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
   1670.2  000000                                  cfi nofunction
   1670.3  000000          cfi_OFFSET              SET      0
   1670.4  000000                                  ENDM
   1671    000000              cfi A undefined
   1672    000000              cfi CFA_SPP sub(SPP,2)
   1673    000000          ?PUSH_PSTACK_C_TWO:
   1674    000000 7402             MOV     A,#0x2
   1675    000002 80..             SJMP    ?PUSH_PSTACK_C
   1676    000004                  REQUIRE ?PUSH_PSTACK_C
   1677    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_C_TWO
   1677.1  000004                                  IF cfi_OFFSET
   1677.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1677.3  000004                                  ELSE
   1677.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           C_TWO
   1677.5  000004                                  ENDIF
   1677.6  000004                                  ENDM
   1678    000004          
   1679    000000                  RSEG    RCODE:CODE:NOROOT
   1680    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_C_ONE
   1680.1  000000                                  cfi block ?PUSH_PSTACK_C_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
   1680.2  000000                                  cfi nofunction
   1680.3  000000          cfi_OFFSET              SET      0
   1680.4  000000                                  ENDM
   1681    000000              cfi A undefined
   1682    000000              cfi CFA_SPP sub(SPP,1)
   1683    000000          ?PUSH_PSTACK_C_ONE:
   1684    000000 7401             MOV     A,#0x1
   1685    000002                  REQUIRE ?PUSH_PSTACK_C
   1686    000002              cfi_DATA_BLOCK_end ?PUSH_PSTACK_C_ONE
   1686.1  000002                                  IF cfi_OFFSET
   1686.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   1686.3  000002                                  ELSE
   1686.4  000002                                    cfi endblock ?PUSH_PSTACK_
                           C_ONE
   1686.5  000002                                  ENDIF
   1686.6  000002                                  ENDM
   1687    000002          
   1688    000000                  RSEG    RCODE:CODE:NOROOT
   1689    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_C
   1689.1  000000                                  cfi block ?PUSH_PSTACK_C
                                                                    using
                                                                    cfi_common
   1689.2  000000                                  cfi nofunction
   1689.3  000000          cfi_OFFSET              SET      0
   1689.4  000000                                  ENDM
   1690    000000              cfi A undefined
   1691    000000              cfi DPTR0 undefined
   1692    000000              cfi CFA_SPP sub(SPP,A)
   1693    000000          ?PUSH_PSTACK_C:
   1694    000000 C8               XCH     A,R0
   1695    000001              cfi CFA_SPP sub(SPP,R0)
   1696    000001 C0E0             PUSH    A
   1697    000003                  cfi_PUSH_REG R0
   1697    000003                                  cfi_STACK_ALLOC 1
   1697.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   1697.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1697.3  000003                                  ENDM
   1697.4  000003                                  cfi R0 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   1697.5  000003                                  ENDM
   1698    000003 E5..             MOV     A,?PSP
   1699    000005 C3               CLR     C
   1700    000006 98               SUBB    A,R0
   1701    000007 F5..             MOV     ?PSP,A
   1702    000009              cfi CFA_SPP SPP
   1703    000009 C8               XCH     A,R0
   1704    00000A 12....           CALL    ?MOVE_LONG8_PDATA_CODE    ; @R0 =
                                                                      dst,
                                                                      @DPTR =
                                                                      src, A =
                                                                      Nr of
                                                                      elements
   1705    00000D D0E0             POP     A
   1706    00000F                  cfi_STACK_DEALL 1
   1706.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   1706.2  00000F                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   1706.3  00000F          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   1706.4  00000F                                      #error "Negative size on
                            cfi deallocate"
   1706.5  00000F          #endif
   1706.6  00000F                                  ELSEIF cfi_OFFSET
   1706.7  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1706.8  00000F                                  ELSE
   1706.9  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   1706.10 00000F                                  ENDIF
   1706.11 00000F                                  ENDM
   1707    00000F F8               MOV     R0,A
   1708    000010              cfi R0 samevalue
   1709    000010 22               RET
   1710    000011          
   1711    000011              cfi_DATA_BLOCK_end ?PUSH_PSTACK_C
   1711.1  000011                                  IF cfi_OFFSET
   1711.2  000011                                    #error "Non-zero offset on
                            cfi data block end"
   1711.3  000011                                  ELSE
   1711.4  000011                                    cfi endblock ?PUSH_PSTACK_
                           C
   1711.5  000011                                  ENDIF
   1711.6  000011                                  ENDM
   1712    000011                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG8_PDATA_CODEABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?PSP                ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_PSTACK_C      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_C_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_C_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_C_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_C_TWO  REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_PSP16           REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               REL    CONST UNTYP.           RCODE      Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:5D75          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 31          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1713    000000          
   1714    000000          ;---------------------------------------------------
                           --------------------------
   1715    000000          ;       Function: ?PUSH_PSTACK_G
   1716    000000          ;
   1717    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   1718    000000          ;
   1719    000000          ;       Register input:
   1720    000000          ;               A         = Nr of elements to
                            push
   1721    000000          ;               R3:R2:R1  = Address to the first
                            element.
   1722    000000          ;
   1723    000000          ;       Register output:
   1724    000000          ;               R3:R2:R1  = Address to the first
                            element (same as in)
   1725    000000          ;               A         = Undefined
   1726    000000          ;               Carry     = Undefined
   1727    000000          ;
   1728    000000          ;       Multiple DPTR
   1729    000000          ;               DPTR/DPS: Unchanged
   1730    000000          ;
   1731    000000          ;       Stack usage: NA
   1732    000000          ;
   1733    000000          ;---------------------------------------------------
                           --------------------------
   1734    000000                  MODULE  ?PUSH_PSTACK_G
   1735    000000                  RSEG    RCODE:CODE:NOROOT
   1736    000000                  EXTERN  ?PSP
   1737    000000                  EXTERN  ?MOVE_LONG_PDATA_GPTR
   1738    000000                  PUBLIC  ?PUSH_PSTACK_G
   1739    000000                  PUBLIC  ?PUSH_PSTACK_G_FOUR
   1740    000000                  PUBLIC  ?PUSH_PSTACK_G_THREE
   1741    000000                  PUBLIC  ?PUSH_PSTACK_G_TWO
   1742    000000                  PUBLIC  ?PUSH_PSTACK_G_ONE
   1743    000000          
   1744    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_G_FOUR
   1744.1  000000                                  cfi block ?PUSH_PSTACK_G_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
   1744.2  000000                                  cfi nofunction
   1744.3  000000          cfi_OFFSET              SET      0
   1744.4  000000                                  ENDM
   1745    000000              cfi A undefined
   1746    000000              cfi CFA_SPP sub(SPP,4)
   1747    000000          ?PUSH_PSTACK_G_FOUR:
   1748    000000 7404             MOV     A,#0x4
   1749    000002 80..             SJMP    ?PUSH_PSTACK_G
   1750    000004                  REQUIRE ?PUSH_PSTACK_G
   1751    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_G_FOUR
   1751.1  000004                                  IF cfi_OFFSET
   1751.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1751.3  000004                                  ELSE
   1751.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           G_FOUR
   1751.5  000004                                  ENDIF
   1751.6  000004                                  ENDM
   1752    000004          
   1753    000000                  RSEG    RCODE:CODE:NOROOT
   1754    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_G_THREE
   1754.1  000000                                  cfi block ?PUSH_PSTACK_G_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
   1754.2  000000                                  cfi nofunction
   1754.3  000000          cfi_OFFSET              SET      0
   1754.4  000000                                  ENDM
   1755    000000              cfi A undefined
   1756    000000              cfi CFA_SPP sub(SPP,3)
   1757    000000          ?PUSH_PSTACK_G_THREE:
   1758    000000 7403             MOV     A,#0x3
   1759    000002 80..             SJMP    ?PUSH_PSTACK_G
   1760    000004                  REQUIRE ?PUSH_PSTACK_G
   1761    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_G_THREE
   1761.1  000004                                  IF cfi_OFFSET
   1761.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1761.3  000004                                  ELSE
   1761.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           G_THREE
   1761.5  000004                                  ENDIF
   1761.6  000004                                  ENDM
   1762    000004          
   1763    000000                  RSEG    RCODE:CODE:NOROOT
   1764    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_G_TWO
   1764.1  000000                                  cfi block ?PUSH_PSTACK_G_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
   1764.2  000000                                  cfi nofunction
   1764.3  000000          cfi_OFFSET              SET      0
   1764.4  000000                                  ENDM
   1765    000000              cfi A undefined
   1766    000000              cfi CFA_SPP sub(SPP,2)
   1767    000000          ?PUSH_PSTACK_G_TWO:
   1768    000000 7402             MOV     A,#0x2
   1769    000002 80..             SJMP    ?PUSH_PSTACK_G
   1770    000004                  REQUIRE ?PUSH_PSTACK_G
   1771    000004              cfi_DATA_BLOCK_end ?PUSH_PSTACK_G_TWO
   1771.1  000004                                  IF cfi_OFFSET
   1771.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1771.3  000004                                  ELSE
   1771.4  000004                                    cfi endblock ?PUSH_PSTACK_
                           G_TWO
   1771.5  000004                                  ENDIF
   1771.6  000004                                  ENDM
   1772    000004          
   1773    000000                  RSEG    RCODE:CODE:NOROOT
   1774    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_G_ONE
   1774.1  000000                                  cfi block ?PUSH_PSTACK_G_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
   1774.2  000000                                  cfi nofunction
   1774.3  000000          cfi_OFFSET              SET      0
   1774.4  000000                                  ENDM
   1775    000000              cfi A undefined
   1776    000000              cfi CFA_SPP sub(SPP,1)
   1777    000000          ?PUSH_PSTACK_G_ONE:
   1778    000000 7401             MOV     A,#0x1
   1779    000002                  REQUIRE ?PUSH_PSTACK_G
   1780    000002              cfi_DATA_BLOCK_end ?PUSH_PSTACK_G_ONE
   1780.1  000002                                  IF cfi_OFFSET
   1780.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   1780.3  000002                                  ELSE
   1780.4  000002                                    cfi endblock ?PUSH_PSTACK_
                           G_ONE
   1780.5  000002                                  ENDIF
   1780.6  000002                                  ENDM
   1781    000002          
   1782    000000                  RSEG    RCODE:CODE:NOROOT
   1783    000000              cfi_DATA_BLOCK_start ?PUSH_PSTACK_G
   1783.1  000000                                  cfi block ?PUSH_PSTACK_G
                                                                    using
                                                                    cfi_common
   1783.2  000000                                  cfi nofunction
   1783.3  000000          cfi_OFFSET              SET      0
   1783.4  000000                                  ENDM
   1784    000000              cfi A undefined
   1785    000000              cfi CFA_SPP sub(SPP,A)
   1786    000000          ?PUSH_PSTACK_G:
   1787    000000 CF               XCH     A,R7                     ; R7 = Nr
                                                                     of
                                                                     elements
   1788    000001              cfi CFA_SPP sub(SPP,R7)
   1789    000001 C0E0             PUSH    A
   1790    000003                  cfi_PUSH_REG R7
   1790    000003                                  cfi_STACK_ALLOC 1
   1790.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   1790.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1790.3  000003                                  ENDM
   1790.4  000003                                  cfi R7 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   1790.5  000003                                  ENDM
   1791    000003 E8               MOV     A,R0
   1792    000004 C0E0             PUSH    A
   1793    000006                  cfi_PUSH_REG R0
   1793    000006                                  cfi_STACK_ALLOC 1
   1793.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   1793.2  000006                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1793.3  000006                                  ENDM
   1793.4  000006                                  cfi R0 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   1793.5  000006                                  ENDM
   1794    000006 E5..             MOV     A,?PSP
   1795    000008 C3               CLR     C
   1796    000009 9F               SUBB    A,R7
   1797    00000A F5..             MOV     ?PSP,A
   1798    00000C              cfi CFA_SPP SPP
   1799    00000C F8               MOV     R0,A
   1800    00000D 12....           CALL    ?MOVE_LONG_PDATA_GPTR    ; @R0 =
                                                                     dst,
                                                                     R3:R2:R1 =
                                                                     src, R7 =
                                                                     Nr of
                                                                     elements
   1801    000010 D0E0             POP     A
   1802    000012                  cfi_STACK_DEALL 1
   1802.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   1802.2  000012                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   1802.3  000012          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   1802.4  000012                                      #error "Negative size on
                            cfi deallocate"
   1802.5  000012          #endif
   1802.6  000012                                  ELSEIF cfi_OFFSET
   1802.7  000012                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1802.8  000012                                  ELSE
   1802.9  000012                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   1802.10 000012                                  ENDIF
   1802.11 000012                                  ENDM
   1803    000012 F8               MOV     R0,A
   1804    000013              cfi R0 samevalue
   1805    000013 D0E0             POP     A
   1806    000015                  cfi_STACK_DEALL 1
   1806.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   1806.2  000015                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   1806.3  000015          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   1806.4  000015                                      #error "Negative size on
                            cfi deallocate"
   1806.5  000015          #endif
   1806.6  000015                                  ELSEIF cfi_OFFSET
   1806.7  000015                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1806.8  000015                                  ELSE
   1806.9  000015                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   1806.10 000015                                  ENDIF
   1806.11 000015                                  ENDM
   1807    000015 FF               MOV     R7,A
   1808    000016              cfi R7 samevalue
   1809    000016 22               RET
   1810    000017          
   1811    000017              cfi_DATA_BLOCK_end ?PUSH_PSTACK_G
   1811.1  000017                                  IF cfi_OFFSET
   1811.2  000017                                    #error "Non-zero offset on
                            cfi data block end"
   1811.3  000017                                  ELSE
   1811.4  000017                                    cfi endblock ?PUSH_PSTACK_
                           G
   1811.5  000017                                  ENDIF
   1811.6  000017                                  ENDM
   1812    000017                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG_PDATA_GPTRABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?PUSH_PSTACK_G      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_G_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_G_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_G_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_PSTACK_G_TWO  REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_PSP16           REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               REL    CONST UNTYP.           RCODE      Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:58C7          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 37          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1813    000000          
   1814    000000          ;---------------------------------------------------
                           --------------------------
   1815    000000          ;
   1816    000000          ;       Functions: Push element(s) from any memory
                            on XDATA stack.
   1817    000000          ;                  ?PUSH_XSTACK_I
   1818    000000          ;                  ?PUSH_XSTACK_P
   1819    000000          ;                  ?PUSH_XSTACK_X
   1820    000000          ;                  ?PUSH_XSTACK_C
   1821    000000          ;
   1822    000000          ;       Description:
   1823    000000          ;               There are two different routines to
                            push elements into the
   1824    000000          ;               XDATA stack. One that uses 2 DPTR:s
                            an one that uses only
   1825    000000          ;               1 DPTR.
   1826    000000          ;
   1827    000000          ;               See the description at the top of
                            this file on how to assemble
   1828    000000          ;               each variant.
   1829    000000          ;
   1830    000000          ;
   1831    000000          ;               Use PUSH_XSTACK_X_ONE when pushing 1
                            element.
   1832    000000          ;               Use PUSH_XSTACK_X_ONE when pushing 1
                            element.
   1833    000000          ;               Use PUSH_XSTACK_X_ONE when pushing 1
                            element.
   1834    000000          ;               Use PUSH_XSTACK_X_ONE when pushing 1
                            element.
   1835    000000          ;               Use PUSH_XSTACK_C_ONE when pushing 1
                            element.
   1836    000000          ;               Use PUSH_XSTACK_C_ONE when pushing 1
                            element.
   1837    000000          ;               Use PUSH_XSTACK_C_ONE when pushing 1
                            element.
   1838    000000          ;               Use PUSH_XSTACK_C_ONE when pushing 1
                            element.
   1839    000000          ;               Use PUSH_XSTACK_P_ONE when pushing 1
                            element.
   1840    000000          ;               Use PUSH_XSTACK_I_ONE when pushing 1
                            element.
   1841    000000          ;
   1842    000000          ;---------------------------------------------------
                           --------------------------
   1843    000000          ;
   1844    000000          ;       Function: ?PUSH_XSTACK_I
   1845    000000          ;
   1846    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   1847    000000          ;
   1848    000000          ;       Register input:
   1849    000000          ;               A    = Nr of elements to push
   1850    000000          ;               R0   = Address to the first
                            element.
   1851    000000          ;
   1852    000000          ;       Register output:
   1853    000000          ;               A     = Undefined
   1854    000000          ;               R0    = Undefined
   1855    000000          ;               DPTR  = Undefined
   1856    000000          ;               Carry = Undefined
   1857    000000          ;
   1858    000000          ;       Multiple DPTR
   1859    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
   1860    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
   1861    000000          ;
   1862    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0 
   1863    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   1864    000000          ;
   1865    000000          ;       Stack usage: NA
   1866    000000          ;
   1867    000000          ;---------------------------------------------------
                           --------------------------
   1868    000000                  MODULE  ?PUSH_XSTACK_I
   1869    000000                  RSEG    RCODE:CODE:NOROOT
   1870    000000                  EXTERN  ?ADD_XSTACK_DISP0_8
   1871    000000                  EXTERN  ?MOVE_LONG8_XDATA_IDATA
   1872    000000                  EXTERN  ?XSP
   1873    000000                  PUBLIC  ?PUSH_XSTACK_I_ONE
   1874    000000                  PUBLIC  ?PUSH_XSTACK_I_TWO
   1875    000000                  PUBLIC  ?PUSH_XSTACK_I_THREE
   1876    000000                  PUBLIC  ?PUSH_XSTACK_I_FOUR
   1877    000000                  PUBLIC  ?PUSH_XSTACK_I
   1878    000000          
   1879    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_I_FOUR
   1879.1  000000                                  cfi block ?PUSH_XSTACK_I_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
   1879.2  000000                                  cfi nofunction
   1879.3  000000          cfi_OFFSET              SET      0
   1879.4  000000                                  ENDM
   1880    000000              cfi A undefined
   1881    000000              cfi CFA_SPX sub(SPX,4)
   1882    000000          ?PUSH_XSTACK_I_FOUR:
   1883    000000 7404             MOV     A,#0x04
   1884    000002 80..             SJMP    ?PUSH_XSTACK_I  
   1885    000004                  REQUIRE ?PUSH_XSTACK_I
   1886    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK_I_FOUR
   1886.1  000004                                  IF cfi_OFFSET
   1886.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1886.3  000004                                  ELSE
   1886.4  000004                                    cfi endblock ?PUSH_XSTACK_
                           I_FOUR
   1886.5  000004                                  ENDIF
   1886.6  000004                                  ENDM
   1887    000004          
   1888    000000                  RSEG    RCODE:CODE:NOROOT
   1889    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_I_THREE
   1889.1  000000                                  cfi block ?PUSH_XSTACK_I_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
   1889.2  000000                                  cfi nofunction
   1889.3  000000          cfi_OFFSET              SET      0
   1889.4  000000                                  ENDM
   1890    000000              cfi A undefined
   1891    000000              cfi CFA_SPX sub(SPX,3)
   1892    000000          ?PUSH_XSTACK_I_THREE:
   1893    000000 7403             MOV     A,#0x03
   1894    000002 80..             SJMP    ?PUSH_XSTACK_I  
   1895    000004                  REQUIRE ?PUSH_XSTACK_I
   1896    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK_I_THREE
   1896.1  000004                                  IF cfi_OFFSET
   1896.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1896.3  000004                                  ELSE
   1896.4  000004                                    cfi endblock ?PUSH_XSTACK_
                           I_THREE
   1896.5  000004                                  ENDIF
   1896.6  000004                                  ENDM
   1897    000004          
   1898    000000                  RSEG    RCODE:CODE:NOROOT
   1899    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_I_TWO
   1899.1  000000                                  cfi block ?PUSH_XSTACK_I_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
   1899.2  000000                                  cfi nofunction
   1899.3  000000          cfi_OFFSET              SET      0
   1899.4  000000                                  ENDM
   1900    000000              cfi A undefined
   1901    000000              cfi CFA_SPX sub(SPX,2)
   1902    000000          ?PUSH_XSTACK_I_TWO:
   1903    000000 7402             MOV     A,#0x02
   1904    000002 80..             SJMP    ?PUSH_XSTACK_I  
   1905    000004                  REQUIRE ?PUSH_XSTACK_I
   1906    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK_I_TWO
   1906.1  000004                                  IF cfi_OFFSET
   1906.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1906.3  000004                                  ELSE
   1906.4  000004                                    cfi endblock ?PUSH_XSTACK_
                           I_TWO
   1906.5  000004                                  ENDIF
   1906.6  000004                                  ENDM
   1907    000004          
   1908    000000                  RSEG    RCODE:CODE:NOROOT
   1909    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_I_ONE
   1909.1  000000                                  cfi block ?PUSH_XSTACK_I_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
   1909.2  000000                                  cfi nofunction
   1909.3  000000          cfi_OFFSET              SET      0
   1909.4  000000                                  ENDM
   1910    000000              cfi A undefined
   1911    000000              cfi CFA_SPX sub(SPX,1)
   1912    000000          ?PUSH_XSTACK_I_ONE:
   1913    000000 7401             MOV     A,#0x01
   1914    000002                  REQUIRE ?PUSH_XSTACK_I
   1915    000002              cfi_DATA_BLOCK_end ?PUSH_XSTACK_I_ONE
   1915.1  000002                                  IF cfi_OFFSET
   1915.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   1915.3  000002                                  ELSE
   1915.4  000002                                    cfi endblock ?PUSH_XSTACK_
                           I_ONE
   1915.5  000002                                  ENDIF
   1915.6  000002                                  ENDM
   1916    000002          
   1917    000000                  RSEG    RCODE:CODE:NOROOT
   1918    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_I
   1918.1  000000                                  cfi block ?PUSH_XSTACK_I
                                                                    using
                                                                    cfi_common
   1918.2  000000                                  cfi nofunction
   1918.3  000000          cfi_OFFSET              SET      0
   1918.4  000000                                  ENDM
   1919    000000              cfi A undefined
   1920    000000              cfi CFA_SPX sub(SPX,A)
   1921    000000          ?PUSH_XSTACK_I:
   1922    000000 C0E0             PUSH    A
   1923    000002              cfi_STACK_ALLOC 1
   1923.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   1923.2  000002                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1923.3  000002                                  ENDM
   1924    000002          #if (defined(__EXTENDED_STACK__))
   1926    000002          #else
   1927    000002              cfi CFA_SPX sub(SPX,load(1,IDATA,MACHINE_SP))
   1928    000002          #endif
   1929    000002 F4               CPL     A
   1930    000003 04               INC     A
   1931    000004 12....           CALL    ?ADD_XSTACK_DISP0_8    ; DPTR =
                                                                   TOS
   1932    000007              cfi CFA_SPX SPX
   1933    000007 D0E0             POP     A                ; Size of the data
                                                             to move.
   1934    000009                  cfi_STACK_DEALL 1
   1934.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   1934.2  000009                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   1934.3  000009          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   1934.4  000009                                      #error "Negative size on
                            cfi deallocate"
   1934.5  000009          #endif
   1934.6  000009                                  ELSEIF cfi_OFFSET
   1934.7  000009                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   1934.8  000009                                  ELSE
   1934.9  000009                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   1934.10 000009                                  ENDIF
   1934.11 000009                                  ENDM
   1935    000009 12....           CALL    ?MOVE_LONG8_XDATA_IDATA ; DPTR =
                                                                    dst, R0 =
                                                                    src, A = Nr
                                                                    of elements
                                                                    to
                                                                    move
   1936    00000C 22               RET
   1937    00000D          
   1938    00000D              cfi_DATA_BLOCK_end ?PUSH_XSTACK_I
   1938.1  00000D                                  IF cfi_OFFSET
   1938.2  00000D                                    #error "Non-zero offset on
                            cfi data block end"
   1938.3  00000D                                  ELSE
   1938.4  00000D                                    cfi endblock ?PUSH_XSTACK_
                           I
   1938.5  00000D                                  ENDIF
   1938.6  00000D                                  ENDM
   1939    00000D                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ADD_XSTACK_DISP0_8 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?MOVE_LONG8_XDATA_IDATAABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_XSTACK_I      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK_I_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK_I_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK_I_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK_I_TWO  REL    CONST PUB UNTYP.       RCODE      0 
?XSP                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
CFA_XSP16           REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
XSP16               REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
load                REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3762          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 27          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1940    000000          
   1941    000000          ;---------------------------------------------------
                           --------------------------
   1942    000000          ;
   1943    000000          ;       Function: ?PUSH_XSTACK_P
   1944    000000          ;
   1945    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   1946    000000          ;
   1947    000000          ;       Register input:
   1948    000000          ;               A    = Nr of elements to push
   1949    000000          ;               R0   = Address to the first
                            element.
   1950    000000          ;
   1951    000000          ;       Register output:
   1952    000000          ;               A     = Undefined
   1953    000000          ;               R0    = Undefined
   1954    000000          ;               DPTR  = Undefined
   1955    000000          ;               Carry = Undefined
   1956    000000          ;
   1957    000000          ;       Multiple DPTR
   1958    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
   1959    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
   1960    000000          ;
   1961    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0 
   1962    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
   1963    000000          ;
   1964    000000          ;       Stack usage: NA
   1965    000000          ;
   1966    000000          ;---------------------------------------------------
                           --------------------------
   1967    000000                  MODULE  ?PUSH_XSTACK_P
   1968    000000                  RSEG    RCODE:CODE:NOROOT
   1969    000000                  EXTERN  ?ADD_XSTACK_DISP0_8
   1970    000000                  EXTERN  ?MOVE_LONG8_XDATA_PDATA
   1971    000000                  EXTERN  ?XSP
   1972    000000                  PUBLIC  ?PUSH_XSTACK_P_ONE
   1973    000000                  PUBLIC  ?PUSH_XSTACK_P_TWO
   1974    000000                  PUBLIC  ?PUSH_XSTACK_P_THREE
   1975    000000                  PUBLIC  ?PUSH_XSTACK_P_FOUR
   1976    000000                  PUBLIC  ?PUSH_XSTACK_P
   1977    000000          
   1978    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_P_FOUR
   1978.1  000000                                  cfi block ?PUSH_XSTACK_P_FOU
                                                                        R using
                                                                         cfi_co
                                                                        mmon
   1978.2  000000                                  cfi nofunction
   1978.3  000000          cfi_OFFSET              SET      0
   1978.4  000000                                  ENDM
   1979    000000              cfi A undefined
   1980    000000              cfi CFA_SPX sub(SPX,4)
   1981    000000          ?PUSH_XSTACK_P_FOUR:
   1982    000000 7404             MOV     A,#0x04
   1983    000002 80..             SJMP    ?PUSH_XSTACK_P  
   1984    000004                  REQUIRE ?PUSH_XSTACK_P
   1985    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK_P_FOUR
   1985.1  000004                                  IF cfi_OFFSET
   1985.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1985.3  000004                                  ELSE
   1985.4  000004                                    cfi endblock ?PUSH_XSTACK_
                           P_FOUR
   1985.5  000004                                  ENDIF
   1985.6  000004                                  ENDM
   1986    000004          
   1987    000000                  RSEG    RCODE:CODE:NOROOT
   1988    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_P_THREE
   1988.1  000000                                  cfi block ?PUSH_XSTACK_P_THR
                                                                         EE
                                                                          using
                                                                          cfi_c
                                                                         ommon
   1988.2  000000                                  cfi nofunction
   1988.3  000000          cfi_OFFSET              SET      0
   1988.4  000000                                  ENDM
   1989    000000              cfi A undefined
   1990    000000              cfi CFA_SPX sub(SPX,3)
   1991    000000          ?PUSH_XSTACK_P_THREE:
   1992    000000 7403             MOV     A,#0x03
   1993    000002 80..             SJMP    ?PUSH_XSTACK_P  
   1994    000004                  REQUIRE ?PUSH_XSTACK_P
   1995    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK_P_THREE
   1995.1  000004                                  IF cfi_OFFSET
   1995.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   1995.3  000004                                  ELSE
   1995.4  000004                                    cfi endblock ?PUSH_XSTACK_
                           P_THREE
   1995.5  000004                                  ENDIF
   1995.6  000004                                  ENDM
   1996    000004          
   1997    000000                  RSEG    RCODE:CODE:NOROOT
   1998    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_P_TWO
   1998.1  000000                                  cfi block ?PUSH_XSTACK_P_TWO
                                                                        using
                                                                        cfi_com
                                                                       mon
   1998.2  000000                                  cfi nofunction
   1998.3  000000          cfi_OFFSET              SET      0
   1998.4  000000                                  ENDM
   1999    000000              cfi A undefined
   2000    000000              cfi CFA_SPX sub(SPX,2)
   2001    000000          ?PUSH_XSTACK_P_TWO:
   2002    000000 7402             MOV     A,#0x02
   2003    000002 80..             SJMP    ?PUSH_XSTACK_P  
   2004    000004                  REQUIRE ?PUSH_XSTACK_P
   2005    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK_P_TWO
   2005.1  000004                                  IF cfi_OFFSET
   2005.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   2005.3  000004                                  ELSE
   2005.4  000004                                    cfi endblock ?PUSH_XSTACK_
                           P_TWO
   2005.5  000004                                  ENDIF
   2005.6  000004                                  ENDM
   2006    000004          
   2007    000000                  RSEG    RCODE:CODE:NOROOT
   2008    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_P_ONE
   2008.1  000000                                  cfi block ?PUSH_XSTACK_P_ONE
                                                                        using
                                                                        cfi_com
                                                                       mon
   2008.2  000000                                  cfi nofunction
   2008.3  000000          cfi_OFFSET              SET      0
   2008.4  000000                                  ENDM
   2009    000000              cfi A undefined
   2010    000000              cfi CFA_SPX sub(SPX,1)
   2011    000000          ?PUSH_XSTACK_P_ONE:
   2012    000000 7401             MOV     A,#0x01
   2013    000002                  REQUIRE ?PUSH_XSTACK_P
   2014    000002              cfi_DATA_BLOCK_end ?PUSH_XSTACK_P_ONE
   2014.1  000002                                  IF cfi_OFFSET
   2014.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   2014.3  000002                                  ELSE
   2014.4  000002                                    cfi endblock ?PUSH_XSTACK_
                           P_ONE
   2014.5  000002                                  ENDIF
   2014.6  000002                                  ENDM
   2015    000002          
   2016    000000                  RSEG    RCODE:CODE:NOROOT
   2017    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK_P
   2017.1  000000                                  cfi block ?PUSH_XSTACK_P
                                                                    using
                                                                    cfi_common
   2017.2  000000                                  cfi nofunction
   2017.3  000000          cfi_OFFSET              SET      0
   2017.4  000000                                  ENDM
   2018    000000              cfi A undefined
   2019    000000              cfi CFA_SPX sub(SPX,A)
   2020    000000          ?PUSH_XSTACK_P:
   2021    000000 C0E0             PUSH    A
   2022    000002                  cfi_STACK_ALLOC 1
   2022.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2022.2  000002                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2022.3  000002                                  ENDM
   2023    000002 F4               CPL     A
   2024    000003 04               INC     A
   2025    000004 12....           CALL    ?ADD_XSTACK_DISP0_8    ; DPTR =
                                                                   TOS
   2026    000007              cfi CFA_SPX SPX
   2027    000007 D0E0             POP     A                ; Size of the data
                                                             to move.
   2028    000009                  cfi_STACK_DEALL 1
   2028.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2028.2  000009                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2028.3  000009          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2028.4  000009                                      #error "Negative size on
                            cfi deallocate"
   2028.5  000009          #endif
   2028.6  000009                                  ELSEIF cfi_OFFSET
   2028.7  000009                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2028.8  000009                                  ELSE
   2028.9  000009                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2028.10 000009                                  ENDIF
   2028.11 000009                                  ENDM
   2029    000009 12....           CALL    ?MOVE_LONG8_XDATA_PDATA ; DPTR =
                                                                    dst, R0 =
                                                                    src, A = Nr
                                                                    of elements
                                                                    to
                                                                    push
   2030    00000C 22               RET
   2031    00000D          
   2032    00000D              cfi_DATA_BLOCK_end ?PUSH_XSTACK_P
   2032.1  00000D                                  IF cfi_OFFSET
   2032.2  00000D                                    #error "Non-zero offset on
                            cfi data block end"
   2032.3  00000D                                  ELSE
   2032.4  00000D                                    cfi endblock ?PUSH_XSTACK_
                           P
   2032.5  00000D                                  ENDIF
   2032.6  00000D                                  ENDM
   2033    00000D                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ADD_XSTACK_DISP0_8 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?MOVE_LONG8_XDATA_PDATAABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_XSTACK_P      REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK_P_FOUR REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK_P_ONE  REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK_P_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK_P_TWO  REL    CONST PUB UNTYP.       RCODE      0 
?XSP                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
CFA_XSP16           REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
XSP16               REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:42D8          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 27          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2034    000000          
   2035    000000          ;---------------------------------------------------
                           --------------------------
   2036    000000          ;
   2037    000000          ;       Function: ?PUSH_XSTACK8_X
   2038    000000          ;
   2039    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   2040    000000          ;
   2041    000000          ;       Register input:
   2042    000000          ;               A    = Nr of elements to push
   2043    000000          ;               DPTR = Address to the first
                            element.
   2044    000000          ;
   2045    000000          ;       Register output:
   2046    000000          ;               A     = Undefined
   2047    000000          ;               DPTR  = Undefined
   2048    000000          ;               Carry = Undefined
   2049    000000          ;
   2050    000000          ;       Stack usage: NA
   2051    000000          ;
   2052    000000          ;---------------------------------------------------
                           --------------------------
   2053    000000          #if (__NUMBER_OF_DPTRS__ == 1)
   2054    000000                  MODULE  ?PUSH_XSTACK8_X
   2055    000000                  RSEG    XSTACK:NOROOT:XDATA
   2056    000000                  RSEG    RCODE:CODE:NOROOT
   2057    000000                  EXTERN  ?XSP
   2058    000000                  EXTERN  ?MOVE_LONG8_XDATA_XDATA
   2059    000000                  PUBLIC  ?PUSH_XSTACK8_X_ONE
   2060    000000                  PUBLIC  ?PUSH_XSTACK8_X_TWO
   2061    000000                  PUBLIC  ?PUSH_XSTACK8_X_THREE
   2062    000000                  PUBLIC  ?PUSH_XSTACK8_X_FOUR
   2063    000000                  PUBLIC  ?PUSH_XSTACK8_X
   2064    000000          
   2065    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_X_FOUR
   2065.1  000000                                  cfi block ?PUSH_XSTACK8_X_FO
                                                                         UR
                                                                          using
                                                                          cfi_c
                                                                         ommon
   2065.2  000000                                  cfi nofunction
   2065.3  000000          cfi_OFFSET              SET      0
   2065.4  000000                                  ENDM
   2066    000000              cfi A undefined
   2067    000000              cfi CFA_SPX sub(SPX,4)
   2068    000000          ?PUSH_XSTACK8_X_FOUR:
   2069    000000 7404             MOV     A,#0x04
   2070    000002 80..             SJMP    ?PUSH_XSTACK8_X 
   2071    000004                  REQUIRE ?PUSH_XSTACK8_X
   2072    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_X_FOUR
   2072.1  000004                                  IF cfi_OFFSET
   2072.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   2072.3  000004                                  ELSE
   2072.4  000004                                    cfi endblock ?PUSH_XSTACK8
                           _X_FOUR
   2072.5  000004                                  ENDIF
   2072.6  000004                                  ENDM
   2073    000004          
   2074    000000                  RSEG    RCODE:CODE:NOROOT
   2075    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_X_THREE
   2075.1  000000                                  cfi block ?PUSH_XSTACK8_X_TH
 REE using cfi_common
   2075.2  000000                                  cfi nofunction
   2075.3  000000          cfi_OFFSET              SET      0
   2075.4  000000                                  ENDM
   2076    000000              cfi A undefined
   2077    000000              cfi CFA_SPX sub(SPX,3)
   2078    000000          ?PUSH_XSTACK8_X_THREE:
   2079    000000 7403             MOV     A,#0x03
   2080    000002 80..             SJMP    ?PUSH_XSTACK8_X 
   2081    000004                  REQUIRE ?PUSH_XSTACK8_X
   2082    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_X_THREE
   2082.1  000004                                  IF cfi_OFFSET
   2082.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   2082.3  000004                                  ELSE
   2082.4  000004                                    cfi endblock ?PUSH_XSTACK8
                           _X_THREE
   2082.5  000004                                  ENDIF
   2082.6  000004                                  ENDM
   2083    000004          
   2084    000000                  RSEG    RCODE:CODE:NOROOT
   2085    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_X_TWO
   2085.1  000000                                  cfi block ?PUSH_XSTACK8_X_TW
                                                                        O using
                                                                         cfi_co
                                                                        mmon
   2085.2  000000                                  cfi nofunction
   2085.3  000000          cfi_OFFSET              SET      0
   2085.4  000000                                  ENDM
   2086    000000              cfi A undefined
   2087    000000              cfi CFA_SPX sub(SPX,2)
   2088    000000          ?PUSH_XSTACK8_X_TWO:
   2089    000000 7402             MOV     A,#0x02
   2090    000002 80..             SJMP    ?PUSH_XSTACK8_X 
   2091    000004                  REQUIRE ?PUSH_XSTACK8_X
   2092    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_X_TWO
   2092.1  000004                                  IF cfi_OFFSET
   2092.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   2092.3  000004                                  ELSE
   2092.4  000004                                    cfi endblock ?PUSH_XSTACK8
                           _X_TWO
   2092.5  000004                                  ENDIF
   2092.6  000004                                  ENDM
   2093    000004          
   2094    000000                  RSEG    RCODE:CODE:NOROOT
   2095    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_X_ONE
   2095.1  000000                                  cfi block ?PUSH_XSTACK8_X_ON
                                                                        E using
                                                                         cfi_co
                                                                        mmon
   2095.2  000000                                  cfi nofunction
   2095.3  000000          cfi_OFFSET              SET      0
   2095.4  000000                                  ENDM
   2096    000000              cfi A undefined
   2097    000000              cfi CFA_SPX sub(SPX,1)
   2098    000000          ?PUSH_XSTACK8_X_ONE:
   2099    000000 7401             MOV     A,#0x01
   2100    000002                  REQUIRE ?PUSH_XSTACK8_X
   2101    000002              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_X_ONE
   2101.1  000002                                  IF cfi_OFFSET
   2101.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   2101.3  000002                                  ELSE
   2101.4  000002                                    cfi endblock ?PUSH_XSTACK8
                           _X_ONE
   2101.5  000002                                  ENDIF
   2101.6  000002                                  ENDM
   2102    000002          
   2103    000000                  RSEG    RCODE:CODE:NOROOT
   2104    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_X
   2104.1  000000                                  cfi block ?PUSH_XSTACK8_X
                                                                     using
                                                                     cfi_common
   2104.2  000000                                  cfi nofunction
   2104.3  000000          cfi_OFFSET              SET      0
   2104.4  000000                                  ENDM
   2105    000000              cfi A undefined
   2106    000000              cfi DPTR0 undefined
   2107    000000              cfi CFA_SPX sub(SPX,A)
   2108    000000          #ifdef __EXTENDED_DPTR__
   2164    000000          #else
   2165    000000          ?PUSH_XSTACK8_X:
   2166    000000 CC               XCH     A,R4           ; R4 = Nr of elements
                                                           to push
   2167    000001              cfi CFA_SPX sub(SPX,R4)
   2168    000001 C0E0             PUSH    A       
   2169    000003              cfi_PUSH_REG R4
   2169    000003                                  cfi_STACK_ALLOC 1
   2169.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2169.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2169.3  000003                                  ENDM
   2169.4  000003                                  cfi R4 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   2169.5  000003                                  ENDM
   2170    000003 ED               MOV     A,R5
   2171    000004 C0E0             PUSH    A
   2172    000006              cfi_PUSH_REG R4
   2172    000006                                  cfi_STACK_ALLOC 1
   2172.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2172.2  000006                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2172.3  000006                                  ENDM
   2172.4  000006                                  cfi R4 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   2172.5  000006                                  ENDM
   2173    000006          
   2174    000006          ;;;;; Update XSP and let R5:R4 point at start
   2175    000006 E5..             MOV     A,XSP_L
   2176    000008 C3               CLR     C
   2177    000009 9C               SUBB    A,R4
   2178    00000A CC               XCH     A,R4           ; A = Nr of elements
                                                           to push, R4 =
                                                           TOS_L
   2179    00000B              cfi CFA_SPX sub(SPX,A)
   2180    00000B AD..             MOV     R5,XSP_H
   2181    00000D 5001             JNC     NoBorrow
   2182    00000F 1D               DEC     R5
   2183    000010          NoBorrow:
   2184    000010 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   2185    000012                  cfi_STACK_ALLOC 1
   2185.1  000003          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2185.2  000012                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2185.3  000012                                  ENDM
   2186    000012 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   2187    000014          ?PUSH_XSTACK8_X_CFI_INVALID_BEGINS:
   2188    000014              cfi invalid
   2189    000014 8C..             MOV     XSP_L,R4
   2190    000016 8D..             MOV     XSP_H,R5
   2191    000018          ?PUSH_XSTACK8_X_CFI_INVALID_ENDS:
   2192    000018              cfi valid
   2193    000018              cfi CFA_SPX SPX
   2194    000018 D0A8             POP     0xA8 /* IE */
   2195    00001A                  cfi_STACK_DEALL 1
   2195.1  000002          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2195.2  00001A                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2195.3  00001A          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2195.4  00001A                                      #error "Negative size on
                            cfi deallocate"
   2195.5  00001A          #endif
   2195.6  00001A                                  ELSEIF cfi_OFFSET
   2195.7  00001A                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2195.8  00001A                                  ELSE
   2195.9  00001A                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2195.10 00001A                                  ENDIF
   2195.11 00001A                                  ENDM
   2196    00001A          ;;;;;;;;
   2197    00001A          
   2198    00001A 12....           CALL    ?MOVE_LONG8_XDATA_XDATA ; R45 = dst,
                                                                    DPTR = src,
                                                                    A = Nr of
                                                                    elements to
                                                                    push
   2199    00001D D0E0             POP     A
   2200    00001F                  cfi_STACK_DEALL 1
   2200.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2200.2  00001F                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2200.3  00001F          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2200.4  00001F                                      #error "Negative size on
                            cfi deallocate"
   2200.5  00001F          #endif
   2200.6  00001F                                  ELSEIF cfi_OFFSET
   2200.7  00001F                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2200.8  00001F                                  ELSE
   2200.9  00001F                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2200.10 00001F                                  ENDIF
   2200.11 00001F                                  ENDM
   2201    00001F FD               MOV     R5,A
   2202    000020              cfi R5 samevalue
   2203    000020 D0E0             POP     A
   2204    000022                  cfi_STACK_DEALL 1
   2204.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2204.2  000022                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2204.3  000022          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2204.4  000022                                      #error "Negative size on
                            cfi deallocate"
   2204.5  000022          #endif
   2204.6  000022                                  ELSEIF cfi_OFFSET
   2204.7  000022                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2204.8  000022                                  ELSE
   2204.9  000022                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2204.10 000022                                  ENDIF
   2204.11 000022                                  ENDM
   2205    000022 FC               MOV     R4,A
   2206    000023              cfi R4 samevalue
   2207    000023 22               RET
   2208    000024          
   2209    000024              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_X
   2209.1  000024                                  IF cfi_OFFSET
   2209.2  000024                                    #error "Non-zero offset on
                            cfi data block end"
   2209.3  000024                                  ELSE
   2209.4  000024                                    cfi endblock ?PUSH_XSTACK8
                           _X
   2209.5  000024                                  ENDIF
   2209.6  000024                                  ENDM
   2210    000024                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG8_XDATA_XDATAABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_XSTACK8_X     REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK8_X_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      14 
?PUSH_XSTACK8_X_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      18 
?PUSH_XSTACK8_X_FOURREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK8_X_ONE REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK8_X_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK8_X_TWO REL    CONST PUB UNTYP.       RCODE      0 
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
CFA_XSP16           REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NoBorrow            REL    CONST UNTYP.           RCODE      10 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
XSP16               REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:8C24          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 50          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2211    000000          
   2212    000000          #endif
   2213    000000          #elif  (__NUMBER_OF_DPTRS__ > 1)
   2304    000000          #ifdef __DPTR_SHADOWED__
   2306    000000          #endif
   2311    000000          #ifdef __DPTR_SHADOWED__
   2313    000000          #endif
   2320    000000          #else
   2321    000000          #error "You must define __NUMBER_OF_DPTRS__"
   2322    000000          #endif
   2323    000000          
   2324    000000          ;---------------------------------------------------
                           --------------------------
   2325    000000          ;
   2326    000000          ;       Function: ?PUSH_XSTACK8_C
   2327    000000          ;
   2328    000000          ;       Description: Push a block of bytes, max 256
                            bytes.
   2329    000000          ;
   2330    000000          ;       Register input:
   2331    000000          ;               A    = Nr of elements to push
   2332    000000          ;               DPTR = Address to the first
                            element.
   2333    000000          ;
   2334    000000          ;       Register output:
   2335    000000          ;               A     = Undefined
   2336    000000          ;               DPTR  = Undefined
   2337    000000          ;               Carry = Undefined
   2338    000000          ;
   2339    000000          ;       Stack usage: NA
   2340    000000          ;
   2341    000000          ;---------------------------------------------------
                           --------------------------
   2342    000000          #if (__NUMBER_OF_DPTRS__ == 1)
   2343    000000                  MODULE  ?PUSH_XSTACK8_C
   2344    000000                  RSEG    XSTACK:NOROOT:XDATA
   2345    000000                  RSEG    RCODE:CODE:NOROOT
   2346    000000                  EXTERN  ?ADD_XSTACK_DISP0_8
   2347    000000                  EXTERN  ?MOVE_LONG8_XDATA_CODE
   2348    000000                  PUBLIC  ?PUSH_XSTACK8_C_ONE
   2349    000000                  PUBLIC  ?PUSH_XSTACK8_C_TWO
   2350    000000                  PUBLIC  ?PUSH_XSTACK8_C_THREE
   2351    000000                  PUBLIC  ?PUSH_XSTACK8_C_FOUR
   2352    000000                  PUBLIC  ?PUSH_XSTACK8_C
   2353    000000          
   2354    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_C_FOUR
   2354.1  000000                                  cfi block ?PUSH_XSTACK8_C_FO
                                                                         UR
                                                                          using
                                                                          cfi_c
                                                                         ommon
   2354.2  000000                                  cfi nofunction
   2354.3  000000          cfi_OFFSET              SET      0
   2354.4  000000                                  ENDM
   2355    000000              cfi A undefined
   2356    000000              cfi CFA_SPX sub(SPX,4)
   2357    000000          ?PUSH_XSTACK8_C_FOUR:
   2358    000000 7404             MOV     A,#0x04
   2359    000002 80..             SJMP    ?PUSH_XSTACK8_C 
   2360    000004                  REQUIRE ?PUSH_XSTACK8_C
   2361    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_C_FOUR
   2361.1  000004                                  IF cfi_OFFSET
   2361.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   2361.3  000004                                  ELSE
   2361.4  000004                                    cfi endblock ?PUSH_XSTACK8
                           _C_FOUR
   2361.5  000004                                  ENDIF
   2361.6  000004                                  ENDM
   2362    000004          
   2363    000000                  RSEG    RCODE:CODE:NOROOT
   2364    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_C_THREE
   2364.1  000000                                  cfi block ?PUSH_XSTACK8_C_TH
 REE using cfi_common
   2364.2  000000                                  cfi nofunction
   2364.3  000000          cfi_OFFSET              SET      0
   2364.4  000000                                  ENDM
   2365    000000              cfi A undefined
   2366    000000              cfi CFA_SPX sub(SPX,3)
   2367    000000          ?PUSH_XSTACK8_C_THREE:
   2368    000000 7403             MOV     A,#0x03
   2369    000002 80..             SJMP    ?PUSH_XSTACK8_C 
   2370    000004                  REQUIRE ?PUSH_XSTACK8_C
   2371    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_C_THREE
   2371.1  000004                                  IF cfi_OFFSET
   2371.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   2371.3  000004                                  ELSE
   2371.4  000004                                    cfi endblock ?PUSH_XSTACK8
                           _C_THREE
   2371.5  000004                                  ENDIF
   2371.6  000004                                  ENDM
   2372    000004          
   2373    000000                  RSEG    RCODE:CODE:NOROOT
   2374    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_C_TWO
   2374.1  000000                                  cfi block ?PUSH_XSTACK8_C_TW
                                                                        O using
                                                                         cfi_co
                                                                        mmon
   2374.2  000000                                  cfi nofunction
   2374.3  000000          cfi_OFFSET              SET      0
   2374.4  000000                                  ENDM
   2375    000000              cfi A undefined
   2376    000000              cfi CFA_SPX sub(SPX,2)
   2377    000000          ?PUSH_XSTACK8_C_TWO:
   2378    000000 7402             MOV     A,#0x02
   2379    000002 80..             SJMP    ?PUSH_XSTACK8_C 
   2380    000004                  REQUIRE ?PUSH_XSTACK8_C
   2381    000004              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_C_TWO
   2381.1  000004                                  IF cfi_OFFSET
   2381.2  000004                                    #error "Non-zero offset on
                            cfi data block end"
   2381.3  000004                                  ELSE
   2381.4  000004                                    cfi endblock ?PUSH_XSTACK8
                           _C_TWO
   2381.5  000004                                  ENDIF
   2381.6  000004                                  ENDM
   2382    000004          
   2383    000000                  RSEG    RCODE:CODE:NOROOT
   2384    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_C_ONE
   2384.1  000000                                  cfi block ?PUSH_XSTACK8_C_ON
                                                                        E using
                                                                         cfi_co
                                                                        mmon
   2384.2  000000                                  cfi nofunction
   2384.3  000000          cfi_OFFSET              SET      0
   2384.4  000000                                  ENDM
   2385    000000              cfi A undefined
   2386    000000              cfi CFA_SPX sub(SPX,1)
   2387    000000          ?PUSH_XSTACK8_C_ONE:
   2388    000000 7401             MOV     A,#0x01
   2389    000002                  REQUIRE ?PUSH_XSTACK8_C
   2390    000002              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_C_ONE
   2390.1  000002                                  IF cfi_OFFSET
   2390.2  000002                                    #error "Non-zero offset on
                            cfi data block end"
   2390.3  000002                                  ELSE
   2390.4  000002                                    cfi endblock ?PUSH_XSTACK8
                           _C_ONE
   2390.5  000002                                  ENDIF
   2390.6  000002                                  ENDM
   2391    000002          
   2392    000000                  RSEG    RCODE:CODE:NOROOT
   2393    000000                  EXTERN  ?XSP
   2394    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK8_C
   2394.1  000000                                  cfi block ?PUSH_XSTACK8_C
                                                                     using
                                                                     cfi_common
   2394.2  000000                                  cfi nofunction
   2394.3  000000          cfi_OFFSET              SET      0
   2394.4  000000                                  ENDM
   2395    000000              cfi A undefined
   2396    000000              cfi DPTR0 undefined
   2397    000000              cfi CFA_SPX sub(SPX,A)
   2398    000000          
   2399    000000          #ifdef __EXTENDED_DPTR__
   2456    000000          #else
   2457    000000          
   2458    000000          ?PUSH_XSTACK8_C:
   2459    000000 CC               XCH     A,R4         ; R4 = Nr of elements
                                                         to push
   2460    000001              cfi CFA_SPX sub(SPX,R4)
   2461    000001 C0E0             PUSH    A
   2462    000003                  cfi_PUSH_REG R4
   2462    000003                                  cfi_STACK_ALLOC 1
   2462.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2462.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2462.3  000003                                  ENDM
   2462.4  000003                                  cfi R4 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   2462.5  000003                                  ENDM
   2463    000003 ED               MOV     A,R5
   2464    000004 C0E0             PUSH    A
   2465    000006                  cfi_PUSH_REG R5
   2465    000006                                  cfi_STACK_ALLOC 1
   2465.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2465.2  000006                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2465.3  000006                                  ENDM
   2465.4  000006                                  cfi R5 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   2465.5  000006                                  ENDM
   2466    000006          
   2467    000006          ;;;;; Update XSP and let R5:R4 point at start
   2468    000006 E5..             MOV     A,XSP_L
   2469    000008 C3               CLR     C
   2470    000009 9C               SUBB    A,R4
   2471    00000A CC               XCH     A,R4                ; A = Nr of
                                                                elements to
                                                                push, R4 =
                                                                TOS_L
   2472    00000B              cfi CFA_SPX sub(SPX,A)
   2473    00000B AD..             MOV     R5,XSP_H
   2474    00000D 5001             JNC     NoBorrow
   2475    00000F 1D               DEC     R5
   2476    000010          NoBorrow:
   2477    000010 C0A8             PUSH    0xA8 /* IE */        ; Preserve the
                                                                 Interrupt
                                                                 Enable
                                                                 register
   2478    000012                  cfi_STACK_ALLOC 1
   2478.1  000003          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2478.2  000012                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2478.3  000012                                  ENDM
   2479    000012 C2AF             CLR     0xA8.7 /* IE.EA */   ; Disable all
                                                                 interrupts for
                                                                 max 6
                                                                 cycles
   2480    000014          ?PUSH_XSTACK8_C_CFI_INVALID_BEGINS:
   2481    000014              cfi invalid
   2482    000014 8C..             MOV     XSP_L,R4
   2483    000016 8D..             MOV     XSP_H,R5
   2484    000018          ?PUSH_XSTACK8_C_CFI_INVALID_ENDS:
   2485    000018              cfi valid
   2486    000018              cfi CFA_SPX SPX
   2487    000018 D0A8             POP     0xA8 /* IE */
   2488    00001A                  cfi_STACK_DEALL 1
   2488.1  000002          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2488.2  00001A                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2488.3  00001A          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2488.4  00001A                                      #error "Negative size on
                            cfi deallocate"
   2488.5  00001A          #endif
   2488.6  00001A                                  ELSEIF cfi_OFFSET
   2488.7  00001A                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2488.8  00001A                                  ELSE
   2488.9  00001A                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2488.10 00001A                                  ENDIF
   2488.11 00001A                                  ENDM
   2489    00001A          ;;;;;;;;
   2490    00001A          
   2491    00001A 12....           CALL    ?MOVE_LONG8_XDATA_CODE ; R45 = dst,
                                                                   DPTR = src,
                                                                   A= Nr of
                                                                   elements to
                                                                   push
   2492    00001D D0E0             POP     A
   2493    00001F                  cfi_STACK_DEALL 1
   2493.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2493.2  00001F                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2493.3  00001F          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2493.4  00001F                                      #error "Negative size on
                            cfi deallocate"
   2493.5  00001F          #endif
   2493.6  00001F                                  ELSEIF cfi_OFFSET
   2493.7  00001F                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2493.8  00001F                                  ELSE
   2493.9  00001F                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2493.10 00001F                                  ENDIF
   2493.11 00001F                                  ENDM
   2494    00001F FD               MOV     R5,A
   2495    000020              cfi R5 samevalue
   2496    000020 D0E0             POP     A
   2497    000022                  cfi_STACK_DEALL 1
   2497.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2497.2  000022                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2497.3  000022          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2497.4  000022                                      #error "Negative size on
                            cfi deallocate"
   2497.5  000022          #endif
   2497.6  000022                                  ELSEIF cfi_OFFSET
   2497.7  000022                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2497.8  000022                                  ELSE
   2497.9  000022                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2497.10 000022                                  ENDIF
   2497.11 000022                                  ENDM
   2498    000022 FC               MOV     R4,A
   2499    000023              cfi R4 samevalue
   2500    000023 22               RET
   2501    000024          
   2502    000024              cfi_DATA_BLOCK_end ?PUSH_XSTACK8_C
   2502.1  000024                                  IF cfi_OFFSET
   2502.2  000024                                    #error "Non-zero offset on
                            cfi data block end"
   2502.3  000024                                  ELSE
   2502.4  000024                                    cfi endblock ?PUSH_XSTACK8
                           _C
   2502.5  000024                                  ENDIF
   2502.6  000024                                  ENDM
   2503    000024                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ADD_XSTACK_DISP0_8 ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?MOVE_LONG8_XDATA_CODEABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?PUSH_XSTACK8_C     REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK8_C_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      14 
?PUSH_XSTACK8_C_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      18 
?PUSH_XSTACK8_C_FOURREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK8_C_ONE REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK8_C_THREEREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK8_C_TWO REL    CONST PUB UNTYP.       RCODE      0 
?XSP                ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
CFA_XSP16           REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NoBorrow            REL    CONST UNTYP.           RCODE      10 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
XSP16               REL    CONST UNTYP.           RCODE      Not solved 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:BDBD          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 50          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2504    000000          
   2505    000000          #endif
   2506    000000          
   2507    000000          #elif (__NUMBER_OF_DPTRS__ > 1)
   2600    000000          #ifdef __DPTR_SHADOWED__
   2602    000000          #endif
   2608    000000          #ifdef __DPTR_SHADOWED__
   2610    000000          #endif
   2618    000000          #else
   2619    000000          #error "You must define __NUMBER_OF_DPTRS__"
   2620    000000          #endif
   2621    000000          
   2622    000000          ;---------------------------------------------------
                           --------------------------
   2623    000000          ;
   2624    000000          ;       Function: ?PUSH_XSTACK16_X
   2625    000000          ;
   2626    000000          ;       Description: Push a block of bytes, max 64k
                            bytes.
   2627    000000          ;
   2628    000000          ;       Register input:
   2629    000000          ;               A    = Nr of elements to push
                            (low)
   2630    000000          ;               R3   = Nr of elements to push (high
                            + 1)
   2631    000000          ;               DPTR = Address to the first
                            element.
   2632    000000          ;
   2633    000000          ;       Register output:
   2634    000000          ;               A     = Undefined
   2635    000000          ;               R3    = Undefined
   2636    000000          ;               DPTR  = Undefined
   2637    000000          ;               Carry = Undefined
   2638    000000          ;
   2639    000000          ;       Stack usage: NA
   2640    000000          ;
   2641    000000          ;---------------------------------------------------
                           --------------------------
   2642    000000          #if (__NUMBER_OF_DPTRS__ == 1)
   2643    000000                  MODULE  ?PUSH_XSTACK16_X
   2644    000000                  RSEG    XSTACK:NOROOT:XDATA
   2645    000000                  RSEG    RCODE:CODE:NOROOT
   2646    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2646.1  000000          #ifdef __EXTENDED_DPTR__
   2646.2  000000          #endif ; __EXTENDED_DPTR__
   2646.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2646.4  000000          #ifdef __DPTR_SEPARATE__
   2646.5  000000          #ifdef __EXTENDED_DPTR__
   2646.6  000000          #endif ; __EXTENDED_DPTR__
   2646.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2646.8  000000          #ifdef __EXTENDED_DPTR__
   2646.9  000000          #endif ; __EXTENDED_DPTR__
   2646.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2646.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2646.12 000000          #ifdef __EXTENDED_DPTR__
   2646.13 000000          #endif ; __EXTENDED_DPTR__
   2646.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2646.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2646.16 000000          #ifdef __EXTENDED_DPTR__
   2646.17 000000          #endif ; __EXTENDED_DPTR__
   2646.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2646.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2646.20 000000          #ifdef __EXTENDED_DPTR__
   2646.21 000000          #endif ; __EXTENDED_DPTR__
   2646.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2646.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2646.24 000000          #ifdef __EXTENDED_DPTR__
   2646.25 000000          #endif ; __EXTENDED_DPTR__
   2646.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2646.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2646.28 000000          #ifdef __EXTENDED_DPTR__
   2646.29 000000          #endif ; __EXTENDED_DPTR__
   2646.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2646.31 000000          #endif ; __DPTR_SEPARATE__
   2646.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2646.33 000000                  ENDM
   2647    000000                  EXTERN  ?XSP
   2648    000000                  EXTERN  ?MOVE_LONG16_XDATA_XDATA
   2649    000000                  PUBLIC  ?PUSH_XSTACK16_X
   2650    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK16_X
   2650.1  000000                                  cfi block ?PUSH_XSTACK16_X
                                                                      using
                                                                      cfi_commo
                                                                     n
   2650.2  000000                                  cfi nofunction
   2650.3  000000          cfi_OFFSET              SET      0
   2650.4  000000                                  ENDM
   2651    000000              cfi A undefined
   2652    000000              cfi R3 undefined
   2653    000000              cfi DPTR0 undefined
   2654    000000          #ifdef __EXTENDED_DPTR__
   2715    000000          #else
   2716    000000          
   2717    000000          ?PUSH_XSTACK16_X:
   2718    000000          ?PUSH_XSTACK16_X_CFI_INVALID_BEGINS:
   2719    000000              cfi invalid
   2720    000000 CC               XCH     A,R4
   2721    000001 C0E0             PUSH    A
   2722    000003                  cfi_PUSH_REG R4
   2722    000003                                  cfi_STACK_ALLOC 1
   2722.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2722.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2722.3  000003                                  ENDM
   2722.4  000003                                  cfi R4 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   2722.5  000003                                  ENDM
   2723    000003 ED               MOV     A,R5
   2724    000004 C0E0             PUSH    A
   2725    000006                  cfi_PUSH_REG R5
   2725    000006                                  cfi_STACK_ALLOC 1
   2725.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2725.2  000006                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2725.3  000006                                  ENDM
   2725.4  000006                                  cfi R5 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   2725.5  000006                                  ENDM
   2726    000006 EC               MOV     A,R4
   2727    000007 C0E0             PUSH    A
   2728    000009                  cfi_STACK_ALLOC 1
   2728.1  000003          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2728.2  000009                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2728.3  000009                                  ENDM
   2729    000009 F4               CPL     A
   2730    00000A 04               INC     A
   2731    00000B          
   2732    00000B          ;;;;; Update XSP and let R5:R4 point at start
   2733    00000B C3               CLR     C
   2734    00000C E5..             MOV     A,XSP_L
   2735    00000E 9C               SUBB    A,R4
   2736    00000F FC               MOV     R4,A
   2737    000010 E5..             MOV     A,XSP_H
   2738    000012 1B               DEC     R3
   2739    000013 9B               SUBB    A,R3
   2740    000014 0B               INC     R3
   2741    000015 FD               MOV     R5,A
   2742    000016                  
   2743    000016 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   2744    000018                  cfi_STACK_ALLOC 1
   2744.1  000004          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2744.2  000018                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2744.3  000018                                  ENDM
   2745    000018 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   2746    00001A F5..             MOV     XSP_H,A
   2747    00001C 8C..             MOV     XSP_L,R4
   2748    00001E D0A8             POP     0xA8 /* IE */
   2749    000020                  cfi_STACK_DEALL 1
   2749.1  000003          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2749.2  000020                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2749.3  000020          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2749.4  000020                                      #error "Negative size on
                            cfi deallocate"
   2749.5  000020          #endif
   2749.6  000020                                  ELSEIF cfi_OFFSET
   2749.7  000020                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2749.8  000020                                  ELSE
   2749.9  000020                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2749.10 000020                                  ENDIF
   2749.11 000020                                  ENDM
   2750    000020          ;;;;;;;;
   2751    000020          
   2752    000020 D0E0             POP     A           ; Size of the data to
                                                        move, Low.
   2753    000022                  cfi_STACK_DEALL 1
   2753.1  000002          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2753.2  000022                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2753.3  000022          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2753.4  000022                                      #error "Negative size on
                            cfi deallocate"
   2753.5  000022          #endif
   2753.6  000022                                  ELSEIF cfi_OFFSET
   2753.7  000022                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2753.8  000022                                  ELSE
   2753.9  000022                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2753.10 000022                                  ENDIF
   2753.11 000022                                  ENDM
   2754    000022 12....           CALL    ?MOVE_LONG16_XDATA_XDATA ; R45 =
                                                                     dst, DPTR
                                                                     = src, AR3
                                                                     = 0x100 +
                                                                     Nr of
                                                                     elements
                                                                     to
                                                                     push
   2755    000025 D0E0             POP     A
   2756    000027                  cfi_STACK_DEALL 1
   2756.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2756.2  000027                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2756.3  000027          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2756.4  000027                                      #error "Negative size on
                            cfi deallocate"
   2756.5  000027          #endif
   2756.6  000027                                  ELSEIF cfi_OFFSET
   2756.7  000027                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2756.8  000027                                  ELSE
   2756.9  000027                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2756.10 000027                                  ENDIF
   2756.11 000027                                  ENDM
   2757    000027 FD               MOV     R5,A
   2758    000028              cfi R5 samevalue
   2759    000028 D0E0             POP     A
   2760    00002A                  cfi_STACK_DEALL 1
   2760.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   2760.2  00002A                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   2760.3  00002A          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   2760.4  00002A                                      #error "Negative size on
                            cfi deallocate"
   2760.5  00002A          #endif
   2760.6  00002A                                  ELSEIF cfi_OFFSET
   2760.7  00002A                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2760.8  00002A                                  ELSE
   2760.9  00002A                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   2760.10 00002A                                  ENDIF
   2760.11 00002A                                  ENDM
   2761    00002A FC               MOV     R4,A
   2762    00002B              cfi R4 samevalue
   2763    00002B 22               RET
   2764    00002C          
   2765    00002C          ?PUSH_XSTACK16_X_CFI_INVALID_ENDS:
   2766    00002C              cfi valid
   2767    00002C              cfi_DATA_BLOCK_end ?PUSH_XSTACK16_X
   2767.1  00002C                                  IF cfi_OFFSET
   2767.2  00002C                                    #error "Non-zero offset on
                            cfi data block end"
   2767.3  00002C                                  ELSE
   2767.4  00002C                                    cfi endblock ?PUSH_XSTACK1
                           6_X
   2767.5  00002C                                  ENDIF
   2767.6  00002C                                  ENDM
   2768    00002C                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG16_XDATA_XDATAABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_XSTACK16_X    REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK16_X_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?PUSH_XSTACK16_X_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      2C 
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:778B          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 44          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2769    000000          
   2770    000000          #endif
   2771    000000          
   2772    000000          ;---------------------------------------------------
                           --------------------------
   2773    000000          ;
   2774    000000          ;       Function: ?PUSH_XSTACK16_X_2DPTR
   2775    000000          ;
   2776    000000          ;       Description: Push a block of bytes, max 64k
                            bytes.
   2777    000000          ;
   2778    000000          ;       Register input:
   2779    000000          ;               A     = Nr of elements to push
                            (low)
   2780    000000          ;               R3    = Nr of elements to push (high
                            + 1)
   2781    000000          ;               DPTR1 = Address to the first
                            element.
   2782    000000          ;
   2783    000000          ;       Register output:
   2784    000000          ;               A     = Undefined
   2785    000000          ;               R3    = Undefined
   2786    000000          ;               DPTR1 = Undefined
   2787    000000          ;               DPTR0 = Undefined
   2788    000000          ;               Carry = Undefined
   2789    000000          ;
   2790    000000          ;       Multiple DPTR
   2791    000000          ;               Shadowed:       Requires DPTR: pair 
                               Requires DPS: high
   2792    000000          ;                               Modifies DPTR: pair 
                               Returns  DPS: high
   2793    000000          ;
   2794    000000          ;               Separate:       Requires DPTR: 0
                            (stack),     Requires DPS: 1
   2795    000000          ;                                              1
                            (pointer)    Returns  DPS: 1
   2796    000000          ;                               Modifies DPTR: 0
                            (stack), 
   2797    000000          ;                                              1
                            (pointer)
   2798    000000          ;
   2799    000000          ;       Stack usage: NA
   2800    000000          ;
   2801    000000          ;---------------------------------------------------
                           --------------------------
   2802    000000          #elif (__NUMBER_OF_DPTRS__ > 1)
   2822    000000          #ifdef __DPTR_SHADOWED__
   2824    000000          #endif
   2846    000000          #ifdef __EXTENDED_DPTR__
   2848    000000          #endif
   2854    000000          #ifdef __DPTR_SHADOWED__
   2856    000000          #endif
   2865    000000          #else
   2866    000000          #error "You must define __NUMBER_OF_DPTRS__"
   2867    000000          #endif
   2868    000000          
   2869    000000          ;---------------------------------------------------
                           --------------------------
   2870    000000          ;
   2871    000000          ;       Function: ?PUSH_XSTACK16_C
   2872    000000          ;
   2873    000000          ;       Description: Push a block of bytes, max 64k
                            bytes.
   2874    000000          ;
   2875    000000          ;       Register input:
   2876    000000          ;               A    = Nr of elements to push
                            (low)
   2877    000000          ;               R3   = Nr of elements to push (high
                            + 1)
   2878    000000          ;               DPTR = Address to the first
                            element.
   2879    000000          ;
   2880    000000          ;       Register output:
   2881    000000          ;               A     = Undefined
   2882    000000          ;               R3    = Undefined
   2883    000000          ;               DPTR  = Undefined
   2884    000000          ;               Carry = Undefined
   2885    000000          ;
   2886    000000          ;       Stack usage: NA
   2887    000000          ;
   2888    000000          ;---------------------------------------------------
                           --------------------------
   2889    000000          #if (__NUMBER_OF_DPTRS__ == 1)
   2890    000000                  MODULE  ?PUSH_XSTACK16_C
   2891    000000                  RSEG    XSTACK:NOROOT:XDATA
   2892    000000                  RSEG    RCODE:CODE:NOROOT
   2893    000000                  EXTERN  ?XSP
   2894    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   2894.1  000000          #ifdef __EXTENDED_DPTR__
   2894.2  000000          #endif ; __EXTENDED_DPTR__
   2894.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   2894.4  000000          #ifdef __DPTR_SEPARATE__
   2894.5  000000          #ifdef __EXTENDED_DPTR__
   2894.6  000000          #endif ; __EXTENDED_DPTR__
   2894.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   2894.8  000000          #ifdef __EXTENDED_DPTR__
   2894.9  000000          #endif ; __EXTENDED_DPTR__
   2894.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   2894.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   2894.12 000000          #ifdef __EXTENDED_DPTR__
   2894.13 000000          #endif ; __EXTENDED_DPTR__
   2894.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   2894.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   2894.16 000000          #ifdef __EXTENDED_DPTR__
   2894.17 000000          #endif ; __EXTENDED_DPTR__
   2894.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   2894.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   2894.20 000000          #ifdef __EXTENDED_DPTR__
   2894.21 000000          #endif ; __EXTENDED_DPTR__
   2894.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   2894.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   2894.24 000000          #ifdef __EXTENDED_DPTR__
   2894.25 000000          #endif ; __EXTENDED_DPTR__
   2894.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   2894.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   2894.28 000000          #ifdef __EXTENDED_DPTR__
   2894.29 000000          #endif ; __EXTENDED_DPTR__
   2894.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   2894.31 000000          #endif ; __DPTR_SEPARATE__
   2894.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   2894.33 000000                  ENDM
   2895    000000                  EXTERN  ?MOVE_LONG16_XDATA_CODE
   2896    000000                  PUBLIC  ?PUSH_XSTACK16_C
   2897    000000          
   2898    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK16_C
   2898.1  000000                                  cfi block ?PUSH_XSTACK16_C
                                                                      using
                                                                      cfi_commo
                                                                     n
   2898.2  000000                                  cfi nofunction
   2898.3  000000          cfi_OFFSET              SET      0
   2898.4  000000                                  ENDM
   2899    000000              cfi A undefined
   2900    000000              cfi R3 undefined
   2901    000000              cfi DPTR0 undefined
   2902    000000          
   2903    000000          #ifdef __EXTENDED_DPTR__
   2966    000000          #else
   2967    000000          
   2968    000000          ?PUSH_XSTACK16_C:
   2969    000000          ?PUSH_XSTACK16_C_CFI_INVALID_BEGINS:
   2970    000000              cfi invalid
   2971    000000 CC               XCH     A,R4
   2972    000001 C0E0             PUSH    A
   2973    000003                  cfi_PUSH_REG R4
   2973    000003                                  cfi_STACK_ALLOC 1
   2973.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2973.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2973.3  000003                                  ENDM
   2973.4  000003                                  cfi R4 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   2973.5  000003                                  ENDM
   2974    000003 ED               MOV     A,R5
   2975    000004 C0E0             PUSH    A
   2976    000006                  cfi_PUSH_REG R5
   2976    000006                                  cfi_STACK_ALLOC 1
   2976.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2976.2  000006                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2976.3  000006                                  ENDM
   2976.4  000006                                  cfi R5 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   2976.5  000006                                  ENDM
   2977    000006 EC               MOV     A,R4
   2978    000007 C0E0             PUSH    A
   2979    000009                  cfi_STACK_ALLOC 1
   2979.1  000003          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2979.2  000009                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2979.3  000009                                  ENDM
   2980    000009 F4               CPL     A
   2981    00000A 04               INC     A
   2982    00000B          
   2983    00000B          ;;;;; Update XSP and let R5:R4 point at start
   2984    00000B C3               CLR     C
   2985    00000C E5..             MOV     A,XSP_L
   2986    00000E 9C               SUBB    A,R4
   2987    00000F FC               MOV     R4,A
   2988    000010 E5..             MOV     A,XSP_H
   2989    000012 1B               DEC     R3
   2990    000013 9B               SUBB    A,R3
   2991    000014 0B               INC     R3
   2992    000015 FD               MOV     R5,A
   2993    000016                  
   2994    000016 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   2995    000018                  cfi_STACK_ALLOC 1
   2995.1  000004          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   2995.2  000018                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   2995.3  000018                                  ENDM
   2996    000018 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   2997    00001A F5..             MOV     XSP_H,A
   2998    00001C 8C..             MOV     XSP_L,R4
   2999    00001E D0A8             POP     0xA8 /* IE */
   3000    000020                  cfi_STACK_DEALL 1
   3000.1  000003          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3000.2  000020                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3000.3  000020          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3000.4  000020                                      #error "Negative size on
                            cfi deallocate"
   3000.5  000020          #endif
   3000.6  000020                                  ELSEIF cfi_OFFSET
   3000.7  000020                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3000.8  000020                                  ELSE
   3000.9  000020                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3000.10 000020                                  ENDIF
   3000.11 000020                                  ENDM
   3001    000020          ;;;;;;;;
   3002    000020          
   3003    000020 D0E0             POP     A           ; Size of the data to
                                                        move, Low.
   3004    000022                  cfi_STACK_DEALL 1
   3004.1  000002          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3004.2  000022                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3004.3  000022          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3004.4  000022                                      #error "Negative size on
                            cfi deallocate"
   3004.5  000022          #endif
   3004.6  000022                                  ELSEIF cfi_OFFSET
   3004.7  000022                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3004.8  000022                                  ELSE
   3004.9  000022                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3004.10 000022                                  ENDIF
   3004.11 000022                                  ENDM
   3005    000022 12....           CALL    ?MOVE_LONG16_XDATA_CODE ; R45 = dst,
                                                                    DPTR = src,
                                                                    AR3 = 0x100
                                                                    + Nr of
                                                                    elements to
                                                                    push
   3006    000025 D0E0             POP     A
   3007    000027                  cfi_STACK_DEALL 1
   3007.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3007.2  000027                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3007.3  000027          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3007.4  000027                                      #error "Negative size on
                            cfi deallocate"
   3007.5  000027          #endif
   3007.6  000027                                  ELSEIF cfi_OFFSET
   3007.7  000027                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3007.8  000027                                  ELSE
   3007.9  000027                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3007.10 000027                                  ENDIF
   3007.11 000027                                  ENDM
   3008    000027 FD               MOV     R5,A
   3009    000028              cfi R5 samevalue
   3010    000028 D0E0             POP     A
   3011    00002A                  cfi_STACK_DEALL 1
   3011.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3011.2  00002A                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3011.3  00002A          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3011.4  00002A                                      #error "Negative size on
                            cfi deallocate"
   3011.5  00002A          #endif
   3011.6  00002A                                  ELSEIF cfi_OFFSET
   3011.7  00002A                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3011.8  00002A                                  ELSE
   3011.9  00002A                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3011.10 00002A                                  ENDIF
   3011.11 00002A                                  ENDM
   3012    00002A FC               MOV     R4,A
   3013    00002B              cfi R4 samevalue
   3014    00002B 22               RET
   3015    00002C          ?PUSH_XSTACK16_C_CFI_INVALID_ENDS:
   3016    00002C              cfi valid
   3017    00002C              cfi_DATA_BLOCK_end ?PUSH_XSTACK16_C
   3017.1  00002C                                  IF cfi_OFFSET
   3017.2  00002C                                    #error "Non-zero offset on
                            cfi data block end"
   3017.3  00002C                                  ELSE
   3017.4  00002C                                    cfi endblock ?PUSH_XSTACK1
                           6_C
   3017.5  00002C                                  ENDIF
   3017.6  00002C                                  ENDM
   3018    00002C                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG16_XDATA_CODEABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_XSTACK16_C    REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK16_C_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?PUSH_XSTACK16_C_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      2C 
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:95A0          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 44          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3019    000000          
   3020    000000          #endif
   3021    000000          
   3022    000000          #elif (__NUMBER_OF_DPTRS__ > 1)
   3070    000000          #ifdef __DPTR_SHADOWED__
   3072    000000          #endif
   3094    000000          #ifdef __EXTENDED_DPTR__
   3096    000000          #endif
   3101    000000          #ifdef __DPTR_SHADOWED__
   3103    000000          #endif
   3112    000000          #else
   3113    000000          #error "You must define __NUMBER_OF_DPTRS__"
   3114    000000          #endif
   3115    000000          
   3116    000000          ;---------------------------------------------------
                           --------------------------
   3117    000000          ;
   3118    000000          ;       Function: ?PUSH_XSTACK16_G
   3119    000000          ;
   3120    000000          ;       Description: Push a block of bytes, max 64k
                            bytes.
   3121    000000          ;
   3122    000000          ;       Register input:
   3123    000000          ;               A        = Nr of elements to push
                            (low)
   3124    000000          ;               R0       = Nr of elements to push
                            (high + 1)
   3125    000000          ;               R3:R2:R1 = Address to the first
                            element.
   3126    000000          ;
   3127    000000          ;       Register output:
   3128    000000          ;               R0       = Undefined
   3129    000000          ;               R3:R2:R1 = Address to the first
                            element (same as in)
   3130    000000          ;               A        = Undefined
   3131    000000          ;               Carry    = Undefined
   3132    000000          ;               AuxCarry = Undefined
   3133    000000          ;               Overflow = Undefined
   3134    000000          ;
   3135    000000          ;       Multiple DPTR:
   3136    000000          ;               DPTR/DPS: Unchanged
   3137    000000          ;
   3138    000000          ;       Stack usage: NA
   3139    000000          ;
   3140    000000          ;---------------------------------------------------
                           --------------------------
   3141    000000                  MODULE  ?PUSH_XSTACK16_G
   3142    000000                  RSEG    XSTACK:NOROOT:XDATA
   3143    000000                  RSEG    RCODE:CODE:NOROOT
   3144    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   3144.1  000000          #ifdef __EXTENDED_DPTR__
   3144.2  000000          #endif ; __EXTENDED_DPTR__
   3144.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   3144.4  000000          #ifdef __DPTR_SEPARATE__
   3144.5  000000          #ifdef __EXTENDED_DPTR__
   3144.6  000000          #endif ; __EXTENDED_DPTR__
   3144.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   3144.8  000000          #ifdef __EXTENDED_DPTR__
   3144.9  000000          #endif ; __EXTENDED_DPTR__
   3144.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   3144.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   3144.12 000000          #ifdef __EXTENDED_DPTR__
   3144.13 000000          #endif ; __EXTENDED_DPTR__
   3144.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   3144.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   3144.16 000000          #ifdef __EXTENDED_DPTR__
   3144.17 000000          #endif ; __EXTENDED_DPTR__
   3144.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   3144.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   3144.20 000000          #ifdef __EXTENDED_DPTR__
   3144.21 000000          #endif ; __EXTENDED_DPTR__
   3144.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   3144.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   3144.24 000000          #ifdef __EXTENDED_DPTR__
   3144.25 000000          #endif ; __EXTENDED_DPTR__
   3144.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   3144.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   3144.28 000000          #ifdef __EXTENDED_DPTR__
   3144.29 000000          #endif ; __EXTENDED_DPTR__
   3144.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   3144.31 000000          #endif ; __DPTR_SEPARATE__
   3144.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   3144.33 000000                  ENDM
   3145    000000                  EXTERN  ?XSP
   3146    000000                  EXTERN  ?MOVE_LONG_XDATA_GPTR
   3147    000000                  PUBLIC  ?PUSH_XSTACK16_G
   3148    000000          
   3149    000000              cfi_DATA_BLOCK_start ?PUSH_XSTACK16_G
   3149.1  000000                                  cfi block ?PUSH_XSTACK16_G
                                                                      using
                                                                      cfi_commo
                                                                     n
   3149.2  000000                                  cfi nofunction
   3149.3  000000          cfi_OFFSET              SET      0
   3149.4  000000                                  ENDM
   3150    000000              cfi R0 undefined
   3151    000000          
   3152    000000          #ifdef __EXTENDED_DPTR__
   3213    000000          #else
   3214    000000          
   3215    000000          ?PUSH_XSTACK16_G:
   3216    000000          ?PUSH_XSTACK16_G_CFI_INVALID_BEGINS:
   3217    000000              cfi invalid
   3218    000000 CF               XCH     A,R7              ; R7 = Nr of
                                                              elements to push
                                                              (low)
   3219    000001 C0E0             PUSH    A
   3220    000003                  cfi_PUSH_REG R7
   3220    000003                                  cfi_STACK_ALLOC 1
   3220.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3220.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3220.3  000003                                  ENDM
   3220.4  000003                                  cfi R7 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   3220.5  000003                                  ENDM
   3221    000003 EC               MOV     A,R4
   3222    000004 C0E0             PUSH    A
   3223    000006                  cfi_PUSH_REG R4
   3223    000006                                  cfi_STACK_ALLOC 1
   3223.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3223.2  000006                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3223.3  000006                                  ENDM
   3223.4  000006                                  cfi R4 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   3223.5  000006                                  ENDM
   3224    000006 ED               MOV     A,R5
   3225    000007 C0E0             PUSH    A
   3226    000009                  cfi_PUSH_REG R5
   3226    000009                                  cfi_STACK_ALLOC 1
   3226.1  000003          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3226.2  000009                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3226.3  000009                                  ENDM
   3226.4  000009                                  cfi R5 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   3226.5  000009                                  ENDM
   3227    000009          
   3228    000009          ;;;;; Update XSP and let R5:R4 point at start
   3229    000009 C3               CLR     C
   3230    00000A E5..             MOV     A,XSP_L
   3231    00000C 9F               SUBB    A,R7
   3232    00000D FC               MOV     R4,A
   3233    00000E E5..             MOV     A,XSP_H
   3234    000010 18               DEC     R0
   3235    000011 98               SUBB    A,R0
   3236    000012 08               INC     R0
   3237    000013 FD               MOV     R5,A
   3238    000014                  
   3239    000014 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
   3240    000016                  cfi_STACK_ALLOC 1
   3240.1  000004          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3240.2  000016                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3240.3  000016                                  ENDM
   3241    000016 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 6
                                                                cycles
   3242    000018 F5..             MOV     XSP_H,A
   3243    00001A 8C..             MOV     XSP_L,R4
   3244    00001C D0A8             POP     0xA8 /* IE */
   3245    00001E                  cfi_STACK_DEALL 1
   3245.1  000003          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3245.2  00001E                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3245.3  00001E          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3245.4  00001E                                      #error "Negative size on
                            cfi deallocate"
   3245.5  00001E          #endif
   3245.6  00001E                                  ELSEIF cfi_OFFSET
   3245.7  00001E                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3245.8  00001E                                  ELSE
   3245.9  00001E                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3245.10 00001E                                  ENDIF
   3245.11 00001E                                  ENDM
   3246    00001E          ;;;;;;;;
   3247    00001E          
   3248    00001E 12....           CALL    ?MOVE_LONG_XDATA_GPTR   ; R4:R5 =
                                                                    dst,
                                                                    R3:R2:R1 =
                                                                    src, R0:R7
                                                                    = Nr of
                                                                    elements to
                                                                    push
   3249    000021          
   3250    000021 D0E0             POP     A
   3251    000023                  cfi_STACK_DEALL 1
   3251.1  000002          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3251.2  000023                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3251.3  000023          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3251.4  000023                                      #error "Negative size on
                            cfi deallocate"
   3251.5  000023          #endif
   3251.6  000023                                  ELSEIF cfi_OFFSET
   3251.7  000023                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3251.8  000023                                  ELSE
   3251.9  000023                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3251.10 000023                                  ENDIF
   3251.11 000023                                  ENDM
   3252    000023 FD               MOV     R5,A
   3253    000024              cfi R5 samevalue
   3254    000024 D0E0             POP     A
   3255    000026                  cfi_STACK_DEALL 1
   3255.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3255.2  000026                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3255.3  000026          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3255.4  000026                                      #error "Negative size on
                            cfi deallocate"
   3255.5  000026          #endif
   3255.6  000026                                  ELSEIF cfi_OFFSET
   3255.7  000026                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3255.8  000026                                  ELSE
   3255.9  000026                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3255.10 000026                                  ENDIF
   3255.11 000026                                  ENDM
   3256    000026 FC               MOV     R4,A
   3257    000027              cfi R4 samevalue
   3258    000027 D0E0             POP     A
   3259    000029                  cfi_STACK_DEALL 1
   3259.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3259.2  000029                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3259.3  000029          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3259.4  000029                                      #error "Negative size on
                            cfi deallocate"
   3259.5  000029          #endif
   3259.6  000029                                  ELSEIF cfi_OFFSET
   3259.7  000029                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3259.8  000029                                  ELSE
   3259.9  000029                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3259.10 000029                                  ENDIF
   3259.11 000029                                  ENDM
   3260    000029 FF               MOV     R7,A
   3261    00002A              cfi R7 samevalue
   3262    00002A 22               RET
   3263    00002B          ?PUSH_XSTACK16_G_CFI_INVALID_ENDS:
   3264    00002B              cfi valid
   3265    00002B              cfi_DATA_BLOCK_end ?PUSH_XSTACK16_G
   3265.1  00002B                                  IF cfi_OFFSET
   3265.2  00002B                                    #error "Non-zero offset on
                            cfi data block end"
   3265.3  00002B                                  ELSE
   3265.4  00002B                                    cfi endblock ?PUSH_XSTACK1
                           6_G
   3265.5  00002B                                  ENDIF
   3265.6  00002B                                  ENDM
   3266    00002B                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG_XDATA_GPTRABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?PUSH_XSTACK16_G    REL    CONST PUB UNTYP.       RCODE      0 
?PUSH_XSTACK16_G_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?PUSH_XSTACK16_G_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      2B 
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:9190          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 43          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3267    000000          #endif
   3268    000000          
   3269    000000          ;---------------------------------------------------
                           --------------------------
   3270    000000          ;
   3271    000000          ;       Function: ?PUSH_IND_OVERLAY16_I
   3272    000000          ;
   3273    000000          ;       Description: Push 2-bytes of data from idata
                            to overlay frame
   3274    000000          ;
   3275    000000          ;       Register input:
   3276    000000          ;               R1 = Address to the first element.
   3277    000000          ;               R0 = Pointer to parameter area
   3278    000000          ;
   3279    000000          ;       Register output:
   3280    000000          ;               A  = Undefined
   3281    000000          ;               R1 = Undefined
   3282    000000          ;               R0 = Pointer to next parameter
                            location
   3283    000000          ;
   3284    000000          ;       Stack usage: NA
   3285    000000          ;
   3286    000000          ;---------------------------------------------------
                           --------------------------
   3287    000000                  MODULE  ?PUSH_IND_OVERLAY16_I
   3288    000000          
   3289    000000                  RSEG    RCODE:CODE:NOROOT
   3290    000000                  PUBLIC  ?PUSH_IND_OVERLAY16_I
   3291    000000          
   3292    000000              cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY16_I
   3292.1  000000                                  cfi block ?PUSH_IND_OVERLAY1
 6_I using cfi_common
   3292.2  000000                                  cfi nofunction
   3292.3  000000          cfi_OFFSET              SET      0
   3292.4  000000                                  ENDM
   3293    000000              cfi A undefined
   3294    000000              cfi R0 undefined
   3295    000000              cfi R1 undefined
   3296    000000          
   3297    000000          ?PUSH_IND_OVERLAY16_I:
   3298    000000 09               INC     R1
   3299    000001 E7               MOV     A,@R1
   3300    000002 F6               MOV     @R0,A
   3301    000003 18               DEC     R0
   3302    000004 19               DEC     R1
   3303    000005 E7               MOV     A,@R1
   3304    000006 F6               MOV     @R0,A
   3305    000007 18               DEC     R0
   3306    000008 22               RET
   3307    000009          
   3308    000009              cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY16_I
   3308.1  000009                                  IF cfi_OFFSET
   3308.2  000009                                    #error "Non-zero offset on
                            cfi data block end"
   3308.3  000009                                  ELSE
   3308.4  000009                                    cfi endblock ?PUSH_IND_OVE
                           RLAY16_I
   3308.5  000009                                  ENDIF
   3308.6  000009                                  ENDM
   3309    000009                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_IND_OVERLAY16_IREL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3807          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 9          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3310    000000          
   3311    000000          
   3312    000000          ;---------------------------------------------------
                           --------------------------
   3313    000000          ;
   3314    000000          ;       Function: ?PUSH_IND_OVERLAY16_P
   3315    000000          ;
   3316    000000          ;       Description: Push 2-bytes of data from idata
                            to overlay frame
   3317    000000          ;
   3318    000000          ;       Register input:
   3319    000000          ;               R1 = Address to the first element.
   3320    000000          ;               R0 = Pointer to parameter area
   3321    000000          ;
   3322    000000          ;       Register output:
   3323    000000          ;               A  = Undefined
   3324    000000          ;               R1 = Undefined
   3325    000000          ;               R0 = Pointer to next parameter
                            location
   3326    000000          ;
   3327    000000          ;       Stack usage: NA
   3328    000000          ;
   3329    000000          ;---------------------------------------------------
                           --------------------------
   3330    000000                  MODULE  ?PUSH_IND_OVERLAY16_P
   3331    000000          
   3332    000000                  RSEG    RCODE:CODE:NOROOT
   3333    000000                  PUBLIC  ?PUSH_IND_OVERLAY16_P
   3334    000000          
   3335    000000              cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY16_P
   3335.1  000000                                  cfi block ?PUSH_IND_OVERLAY1
 6_P using cfi_common
   3335.2  000000                                  cfi nofunction
   3335.3  000000          cfi_OFFSET              SET      0
   3335.4  000000                                  ENDM
   3336    000000              cfi A undefined
   3337    000000              cfi R0 undefined
   3338    000000              cfi R1 undefined
   3339    000000          
   3340    000000          ?PUSH_IND_OVERLAY16_P:
   3341    000000 09               INC     R1
   3342    000001 E3               MOVX    A,@R1
   3343    000002 F6               MOV     @R0,A
   3344    000003 18               DEC     R0
   3345    000004 19               DEC     R1
   3346    000005 E3               MOVX    A,@R1
   3347    000006 F6               MOV     @R0,A
   3348    000007 18               DEC     R0
   3349    000008 22               RET
   3350    000009          
   3351    000009              cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY16_P
   3351.1  000009                                  IF cfi_OFFSET
   3351.2  000009                                    #error "Non-zero offset on
                            cfi data block end"
   3351.3  000009                                  ELSE
   3351.4  000009                                    cfi endblock ?PUSH_IND_OVE
                           RLAY16_P
   3351.5  000009                                  ENDIF
   3351.6  000009                                  ENDM
   3352    000009                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_IND_OVERLAY16_PREL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:6734          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 9          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3353    000000          
   3354    000000          ;---------------------------------------------------
                           --------------------------
   3355    000000          ;
   3356    000000          ;       Function: ?PUSH_IND_OVERLAY16_C
   3357    000000          ;
   3358    000000          ;       Description: Push 2-bytes of data from code
                            to overlay frame
   3359    000000          ;
   3360    000000          ;       Register input:
   3361    000000          ;               DPRT0 = Address to the first
                            element.
   3362    000000          ;               R0 = Pointer to parameter area
   3363    000000          ;
   3364    000000          ;       Register output:
   3365    000000          ;               A  = Undefined
   3366    000000          ;               R0 = Pointer to next parameter
                            location
   3367    000000          ;
   3368    000000          ;       DPTR:
   3369    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
   3370    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: DPTRx
   3371    000000          ;
   3372    000000          ;               Separate:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
   3373    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: DPTRx
   3374    000000          ;
   3375    000000          ;       Stack usage: NA
   3376    000000          ;
   3377    000000          ;---------------------------------------------------
                           --------------------------
   3378    000000                  MODULE  ?PUSH_IND_OVERLAY16_C
   3379    000000          
   3380    000000                  RSEG    RCODE:CODE:NOROOT
   3381    000000                  PUBLIC  ?PUSH_IND_OVERLAY16_C
   3382    000000                  EXTERN  ?V0
   3383    000000          
   3384    000000              cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY16_C
   3384.1  000000                                  cfi block ?PUSH_IND_OVERLAY1
 6_C using cfi_common
   3384.2  000000                                  cfi nofunction
   3384.3  000000          cfi_OFFSET              SET      0
   3384.4  000000                                  ENDM
   3385    000000              cfi A  undefined
   3386    000000              cfi R0 undefined
   3387    000000          
   3388    000000          ?PUSH_IND_OVERLAY16_C:
   3389    000000 7401             MOV     A,#1
   3390    000002 93               MOVC    A,@A+DPTR
   3391    000003 F6               MOV     @R0,A
   3392    000004 18               DEC     R0
   3393    000005 E4               CLR     A
   3394    000006 93               MOVC    A,@A+DPTR
   3395    000007 F6               MOV     @R0,A
   3396    000008 18               DEC     R0
   3397    000009 22               RET
   3398    00000A          
   3399    00000A              cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY16_C
   3399.1  00000A                                  IF cfi_OFFSET
   3399.2  00000A                                    #error "Non-zero offset on
                            cfi data block end"
   3399.3  00000A                                  ELSE
   3399.4  00000A                                    cfi endblock ?PUSH_IND_OVE
                           RLAY16_C
   3399.5  00000A                                  ENDIF
   3399.6  00000A                                  ENDM
   3400    00000A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_IND_OVERLAY16_CREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:2DBC          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 10          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3401    000000          
   3402    000000          ;---------------------------------------------------
                           --------------------------
   3403    000000          ;
   3404    000000          ;       Function: ?PUSH_IND_OVERLAY16_X
   3405    000000          ;
   3406    000000          ;       Description: Push 2-bytes of data from xdata
                            to overlay frame
   3407    000000          ;
   3408    000000          ;       Register input:
   3409    000000          ;               DPRT0 = Address to the first
                            element.
   3410    000000          ;               R0 = Pointer to parameter area
   3411    000000          ;
   3412    000000          ;       Register output:
   3413    000000          ;               A  = Undefined
   3414    000000          ;               DPTR0 = Undefined
   3415    000000          ;               R0 = Pointer to next parameter
                            location
   3416    000000          ;
   3417    000000          ;       DPTR:
   3418    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                Requires DPS: DPTRx
   3419    000000          ;                               Modifies DPTR: DPTRx
                                Returns  DPS: DPTRx
   3420    000000          ;
   3421    000000          ;               Separate:       Requires DPTR: DPTRx
                                Requires DPS: DPTRx
   3422    000000          ;                               Modifies DPTR: DPTRx
                                Returns  DPS: DPTRx
   3423    000000          ;
   3424    000000          ;       Stack usage: NA
   3425    000000          ;
   3426    000000          ;---------------------------------------------------
                           --------------------------
   3427    000000                  MODULE  ?PUSH_IND_OVERLAY16_X
   3428    000000          
   3429    000000                  RSEG    RCODE:CODE:NOROOT
   3430    000000                  PUBLIC  ?PUSH_IND_OVERLAY16_X
   3431    000000                  EXTERN  ?V0
   3432    000000          
   3433    000000              cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY16_X
   3433.1  000000                                  cfi block ?PUSH_IND_OVERLAY1
 6_X using cfi_common
   3433.2  000000                                  cfi nofunction
   3433.3  000000          cfi_OFFSET              SET      0
   3433.4  000000                                  ENDM
   3434    000000              cfi A     undefined
   3435    000000              cfi R0    undefined
   3436    000000              cfi DPTR0 undefined
   3437    000000          
   3438    000000          ?PUSH_IND_OVERLAY16_X:
   3439    000000 E0               MOVX    A,@DPTR
   3440    000001 C0E0             PUSH    A
   3441    000003                  cfi_STACK_ALLOC 1
   3441.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3441.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3441.3  000003                                  ENDM
   3442    000003 A3               INC     DPTR
   3443    000004 E0               MOVX    A,@DPTR
   3444    000005 F6               MOV     @R0,A
   3445    000006 18               DEC     R0
   3446    000007 D0E0             POP     A
   3447    000009                  cfi_STACK_DEALL 1
   3447.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3447.2  000009                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3447.3  000009          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3447.4  000009                                      #error "Negative size on
                            cfi deallocate"
   3447.5  000009          #endif
   3447.6  000009                                  ELSEIF cfi_OFFSET
   3447.7  000009                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3447.8  000009                                  ELSE
   3447.9  000009                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3447.10 000009                                  ENDIF
   3447.11 000009                                  ENDM
   3448    000009 F6               MOV     @R0,A
   3449    00000A 18               DEC     R0
   3450    00000B 22               RET
   3451    00000C          
   3452    00000C              cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY16_X
   3452.1  00000C                                  IF cfi_OFFSET
   3452.2  00000C                                    #error "Non-zero offset on
                            cfi data block end"
   3452.3  00000C                                  ELSE
   3452.4  00000C                                    cfi endblock ?PUSH_IND_OVE
                           RLAY16_X
   3452.5  00000C                                  ENDIF
   3452.6  00000C                                  ENDM
   3453    00000C                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259     3441
                                                                     3447
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
                                                                     3441     3447
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259     3441     3447     3447
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_IND_OVERLAY16_XREL    CONST PUB UNTYP.       RCODE      0 
?V0                 ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:AE7A          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 12          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3454    000000          
   3455    000000          ;---------------------------------------------------
                           --------------------------
   3456    000000          ;
   3457    000000          ;       Function: ?PUSH_IND_OVERLAY_I
   3458    000000          ;
   3459    000000          ;       Description: Push x-bytes of data from idata
                            to overlay frame
   3460    000000          ;
   3461    000000          ;       Register input:
   3462    000000          ;               R1 = Address to the first element.
   3463    000000          ;               R0 = Pointer to parameter area
   3464    000000          ;               A  = size - 1
   3465    000000          ;
   3466    000000          ;       Register output:
   3467    000000          ;               A     = Undefined
   3468    000000          ;               R1    = Undefined
   3469    000000          ;               R0    = Pointer to next parameter
                            location
   3470    000000          ;               Carry = Undefined
   3471    000000          ;
   3472    000000          ;       Stack usage: NA
   3473    000000          ;
   3474    000000          ;---------------------------------------------------
                           --------------------------
   3475    000000                  MODULE  ?PUSH_IND_OVERLAY_I
   3476    000000          
   3477    000000                  RSEG    RCODE:CODE:NOROOT
   3478    000000                  PUBLIC  ?PUSH_IND_OVERLAY_I
   3479    000000                  PUBLIC  ?PUSH_IND_OVERLAY32_I
   3480    000000                  PUBLIC  ?PUSH_IND_OVERLAY24_I
   3481    000000          
   3482    000000              cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY_I
   3482.1  000000                                  cfi block ?PUSH_IND_OVERLAY_
                                                                        I using
                                                                         cfi_co
                                                                        mmon
   3482.2  000000                                  cfi nofunction
   3482.3  000000          cfi_OFFSET              SET      0
   3482.4  000000                                  ENDM
   3483    000000              cfi A undefined
   3484    000000              cfi R0 undefined
   3485    000000              cfi R1 undefined
   3486    000000          
   3487    000000          ?PUSH_IND_OVERLAY24_I:
   3488    000000 7402             MOV     A,#2    ; size = 3
   3489    000002 8002             SJMP    ?PUSH_IND_OVERLAY_I
   3490    000004          
   3491    000004          ?PUSH_IND_OVERLAY32_I:
   3492    000004 7403             MOV     A,#3    ; size = 4
   3493    000006                  ; Fall through
   3494    000006          
   3495    000006          ?PUSH_IND_OVERLAY_I:
   3496    000006 CA               XCH     A,R2    ; size - 1
   3497    000007 C0E0             PUSH    A
   3498    000009                  cfi_PUSH_REG R2
   3498    000009                                  cfi_STACK_ALLOC 1
   3498.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3498.2  000009                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3498.3  000009                                  ENDM
   3498.4  000009                                  cfi R2 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   3498.5  000009                                  ENDM
   3499    000009 EA               MOV     A,R2
   3500    00000A 29               ADD     A,R1
   3501    00000B F9               MOV     R1,A
   3502    00000C          
   3503    00000C 0A               INC     R2      ; size
   3504    00000D                  
   3505    00000D          MOVE_BYTE:
   3506    00000D E7               MOV     A,@R1
   3507    00000E F6               MOV     @R0,A
   3508    00000F 19               DEC     R1
   3509    000010 18               DEC     R0
   3510    000011 DAFA             DJNZ    R2,MOVE_BYTE
   3511    000013          
   3512    000013 D0E0             POP     A
   3513    000015                  cfi_STACK_DEALL 1
   3513.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3513.2  000015                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3513.3  000015          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3513.4  000015                                      #error "Negative size on
                            cfi deallocate"
   3513.5  000015          #endif
   3513.6  000015                                  ELSEIF cfi_OFFSET
   3513.7  000015                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3513.8  000015                                  ELSE
   3513.9  000015                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3513.10 000015                                  ENDIF
   3513.11 000015                                  ENDM
   3514    000015 FA               MOV     R2,A
   3515    000016              cfi R2 samevalue
   3516    000016 22               RET
   3517    000017          
   3518    000017              cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY_I
   3518.1  000017                                  IF cfi_OFFSET
   3518.2  000017                                    #error "Non-zero offset on
                            cfi data block end"
   3518.3  000017                                  ELSE
   3518.4  000017                                    cfi endblock ?PUSH_IND_OVE
                           RLAY_I
   3518.5  000017                                  ENDIF
   3518.6  000017                                  ENDM
   3519    000017                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259     3441
                                                                     3447     3498     3498     3513
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
                                                                     3441     3447     3498     3513
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259     3441     3447     3447
                                                                     3498     3498     3513     3513
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_IND_OVERLAY24_IREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_IND_OVERLAY32_IREL    CONST PUB UNTYP.       RCODE      4 
?PUSH_IND_OVERLAY_I REL    CONST PUB UNTYP.       RCODE      6 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
MOVE_BYTE           REL    CONST UNTYP.           RCODE      D 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3869          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 23          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3520    000000          
   3521    000000          ;---------------------------------------------------
                           --------------------------
   3522    000000          ;
   3523    000000          ;       Function: ?PUSH_IND_OVERLAY_P
   3524    000000          ;
   3525    000000          ;       Description: Push x-bytes of data from pdata
                            to overlay frame
   3526    000000          ;
   3527    000000          ;       Register input:
   3528    000000          ;               R1 = Address to the first element.
   3529    000000          ;               R0 = Pointer to parameter area
   3530    000000          ;               A  = size - 1
   3531    000000          ;
   3532    000000          ;       Register output:
   3533    000000          ;               A     = Undefined
   3534    000000          ;               R1    = Undefined
   3535    000000          ;               R0    = Pointer to next parameter
                            location
   3536    000000          ;               Carry = Undefined
   3537    000000          ;
   3538    000000          ;       Stack usage: NA
   3539    000000          ;
   3540    000000          ;---------------------------------------------------
                           --------------------------
   3541    000000                  MODULE  ?PUSH_IND_OVERLAY_P
   3542    000000          
   3543    000000                  RSEG    RCODE:CODE:NOROOT
   3544    000000                  PUBLIC  ?PUSH_IND_OVERLAY_P
   3545    000000                  PUBLIC  ?PUSH_IND_OVERLAY32_P
   3546    000000                  PUBLIC  ?PUSH_IND_OVERLAY24_P
   3547    000000          
   3548    000000                  cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY_P
   3548.1  000000                                  cfi block ?PUSH_IND_OVERLAY_
 P using cfi_common
   3548.2  000000                                  cfi nofunction
   3548.3  000000          cfi_OFFSET              SET      0
   3548.4  000000                                  ENDM
   3549    000000              cfi A undefined
   3550    000000              cfi R0 undefined
   3551    000000              cfi R1 undefined
   3552    000000          
   3553    000000          
   3554    000000          ?PUSH_IND_OVERLAY24_P:
   3555    000000 7402             MOV     A,#2    // size = 3
   3556    000002 8002             SJMP    ?PUSH_IND_OVERLAY_P
   3557    000004          
   3558    000004          ?PUSH_IND_OVERLAY32_P:
   3559    000004 7403             MOV     A,#3    // size = 4
   3560    000006                  ; Fall through
   3561    000006          
   3562    000006          ?PUSH_IND_OVERLAY_P:
   3563    000006 CA               XCH     A,R2    // size - 1
   3564    000007 C0E0             PUSH    A
   3565    000009                  cfi_PUSH_REG R2
   3565    000009                                  cfi_STACK_ALLOC 1
   3565.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3565.2  000009                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3565.3  000009                                  ENDM
   3565.4  000009                                  cfi R2 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   3565.5  000009                                  ENDM
   3566    000009 EA               MOV     A,R2
   3567    00000A 29               ADD     A,R1
   3568    00000B F9               MOV     R1,A
   3569    00000C                  
   3570    00000C 0A               INC     R2      // size
   3571    00000D          
   3572    00000D          MOVE_BYTE:
   3573    00000D E3               MOVX    A,@R1
   3574    00000E F6               MOV     @R0,A
   3575    00000F 19               DEC     R1
   3576    000010 18               DEC     R0
   3577    000011 DAFA             DJNZ    R2,MOVE_BYTE
   3578    000013          
   3579    000013 D0E0             POP     A
   3580    000015                  cfi_STACK_DEALL 1
   3580.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3580.2  000015                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3580.3  000015          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3580.4  000015                                      #error "Negative size on
                            cfi deallocate"
   3580.5  000015          #endif
   3580.6  000015                                  ELSEIF cfi_OFFSET
   3580.7  000015                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3580.8  000015                                  ELSE
   3580.9  000015                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3580.10 000015                                  ENDIF
   3580.11 000015                                  ENDM
   3581    000015 FA               MOV     R2,A
   3582    000016              cfi R2 samevalue
   3583    000016 22               RET
   3584    000017          
   3585    000017                  cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY_P
   3585.1  000017                                  IF cfi_OFFSET
   3585.2  000017                                    #error "Non-zero offset on
                            cfi data block end"
   3585.3  000017                                  ELSE
   3585.4  000017                                    cfi endblock ?PUSH_IND_OVE
                           RLAY_P
   3585.5  000017                                  ENDIF
   3585.6  000017                                  ENDM
   3586    000017                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259     3441
                                                                     3447     3498     3498     3513
                                                                     3565     3565     3580
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
                                                                     3441     3447     3498     3513
                                                                     3565     3580
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259     3441     3447     3447
                                                                     3498     3498     3513     3513
                                                                     3565     3565     3580     3580
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_IND_OVERLAY24_PREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_IND_OVERLAY32_PREL    CONST PUB UNTYP.       RCODE      4 
?PUSH_IND_OVERLAY_P REL    CONST PUB UNTYP.       RCODE      6 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
MOVE_BYTE           REL    CONST UNTYP.           RCODE      D 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:E73A          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 23          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3587    000000          
   3588    000000          ;---------------------------------------------------
                           --------------------------
   3589    000000          ;
   3590    000000          ;       Function: ?PUSH_IND_OVERLAY_X
   3591    000000          ;
   3592    000000          ;       Description: Push x-bytes of data from xdata
                            to overlay frame
   3593    000000          ;
   3594    000000          ;       Register input:
   3595    000000          ;               DPRT0 = Address to the first
                            element.
   3596    000000          ;               R0 = Pointer to parameter area
   3597    000000          ;               A  = size - 1
   3598    000000          ;
   3599    000000          ;       Register output:
   3600    000000          ;               A     = Undefined
   3601    000000          ;               DPTR0 = Undefined
   3602    000000          ;               R0    = Pointer to next parameter
                            location
   3603    000000          ;               Carry = Undefined
   3604    000000          ;
   3605    000000          ;       DPTR:
   3606    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                Requires DPS: DPTRx
   3607    000000          ;                               Modifies DPTR: DPTRx
                                Returns  DPS: DPTRx
   3608    000000          ;
   3609    000000          ;               Separate:       Requires DPTR: DPTRx
                                Requires DPS: DPTRx
   3610    000000          ;                               Modifies DPTR: DPTRx
                                Returns  DPS: DPTRx
   3611    000000          ;
   3612    000000          ;       Stack usage: 1 + return address
   3613    000000          ;
   3614    000000          ;---------------------------------------------------
                           --------------------------
   3615    000000                  MODULE  ?PUSH_IND_OVERLAY_X
   3616    000000          
   3617    000000                  RSEG    RCODE:CODE:NOROOT
   3618    000000                  PUBLIC  ?PUSH_IND_OVERLAY_X
   3619    000000                  PUBLIC  ?PUSH_IND_OVERLAY32_X
   3620    000000                  PUBLIC  ?PUSH_IND_OVERLAY24_X
   3621    000000          
   3622    000000              cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY_X
   3622.1  000000                                  cfi block ?PUSH_IND_OVERLAY_
                                                                        X using
                                                                         cfi_co
                                                                        mmon
   3622.2  000000                                  cfi nofunction
   3622.3  000000          cfi_OFFSET              SET      0
   3622.4  000000                                  ENDM
   3623    000000              cfi A undefined
   3624    000000              cfi R0 undefined
   3625    000000              cfi DPTR0 undefined
   3626    000000          
   3627    000000          ?PUSH_IND_OVERLAY24_X:
   3628    000000 7402             MOV     A,#2            // size = 3
   3629    000002 8002             SJMP    ?PUSH_IND_OVERLAY_X
   3630    000004          
   3631    000004          ?PUSH_IND_OVERLAY32_X:
   3632    000004 7403             MOV     A,#3            // size = 4
   3633    000006                  ; Fall through
   3634    000006          
   3635    000006          ?PUSH_IND_OVERLAY_X:
   3636    000006 CA               XCH     A,R2            // R2 = size -
                                              1
   3637    000007 C0E0             PUSH    A
   3638    000009                  cfi_PUSH_REG R2
   3638    000009                                  cfi_STACK_ALLOC 1
   3638.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3638.2  000009                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3638.3  000009                                  ENDM
   3638.4  000009                                  cfi R2 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   3638.5  000009                                  ENDM
   3639    000009 C3               CLR     C
   3640    00000A E8               MOV     A,R0    
   3641    00000B 9A               SUBB    A,R2
   3642    00000C F8               MOV     R0,A
   3643    00000D C0E0             PUSH    A               // A = R0_enter -
                                                            (size-1)
   3644    00000F                  cfi_STACK_ALLOC 1
   3644.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3644.2  00000F                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3644.3  00000F                                  ENDM
   3645    00000F 0A               INC     R2              // R2 = size
   3646    000010          
   3647    000010          MOVE_BYTE:
   3648    000010 E0               MOVX    A,@DPTR
   3649    000011 F6               MOV     @R0,A
   3650    000012 08               INC     R0
   3651    000013 A3               INC     DPTR
   3652    000014 DAFA             DJNZ    R2,MOVE_BYTE
   3653    000016          
   3654    000016 D0E0             POP     A
   3655    000018                  cfi_STACK_DEALL 1
   3655.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3655.2  000018                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3655.3  000018          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3655.4  000018                                      #error "Negative size on
                            cfi deallocate"
   3655.5  000018          #endif
   3655.6  000018                                  ELSEIF cfi_OFFSET
   3655.7  000018                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3655.8  000018                                  ELSE
   3655.9  000018                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3655.10 000018                                  ENDIF
   3655.11 000018                                  ENDM
   3656    000018 14               DEC     A
   3657    000019 F8               MOV     R0,A            // R0 = R0_enter -
                                               (size+1)
   3658    00001A          
   3659    00001A D0E0             POP     A
   3660    00001C                  cfi_STACK_DEALL 1
   3660.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3660.2  00001C                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3660.3  00001C          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3660.4  00001C                                      #error "Negative size on
                            cfi deallocate"
   3660.5  00001C          #endif
   3660.6  00001C                                  ELSEIF cfi_OFFSET
   3660.7  00001C                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3660.8  00001C                                  ELSE
   3660.9  00001C                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3660.10 00001C                                  ENDIF
   3660.11 00001C                                  ENDM
   3661    00001C FA               MOV     R2,A
   3662    00001D              cfi R2 samevalue
   3663    00001D 22               RET
   3664    00001E          
   3665    00001E              cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY_X
   3665.1  00001E                                  IF cfi_OFFSET
   3665.2  00001E                                    #error "Non-zero offset on
                            cfi data block end"
   3665.3  00001E                                  ELSE
   3665.4  00001E                                    cfi endblock ?PUSH_IND_OVE
                           RLAY_X
   3665.5  00001E                                  ENDIF
   3665.6  00001E                                  ENDM
   3666    00001E                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259     3441
                                                                     3447     3498     3498     3513
                                                                     3565     3565     3580     3638
                                                                     3638     3644     3655     3660
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
                                                                     3441     3447     3498     3513
                                                                     3565     3580     3638     3644
                                                                     3655     3660
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259     3441     3447     3447
                                                                     3498     3498     3513     3513
                                                                     3565     3565     3580     3580
                                                                     3638     3638     3644     3655
                                                                     3655     3660     3660
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_IND_OVERLAY24_XREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_IND_OVERLAY32_XREL    CONST PUB UNTYP.       RCODE      4 
?PUSH_IND_OVERLAY_X REL    CONST PUB UNTYP.       RCODE      6 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
MOVE_BYTE           REL    CONST UNTYP.           RCODE      10 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:5C81          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 30          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3667    000000          
   3668    000000          ;---------------------------------------------------
                           --------------------------
   3669    000000          ;
   3670    000000          ;       Function: ?PUSH_IND_OVERLAY_C
   3671    000000          ;
   3672    000000          ;       Description: Push x-bytes of data from code
                            to overlay frame
   3673    000000          ;
   3674    000000          ;       Register input:
   3675    000000          ;               DPRT0 = Address to the first
                            element.
   3676    000000          ;               R0 = Pointer to parameter area
   3677    000000          ;               A  = size - 1
   3678    000000          ;
   3679    000000          ;       Register output:
   3680    000000          ;               A     = Undefined
   3681    000000          ;               DPTR0 = Undefined
   3682    000000          ;               R0    = Pointer to next parameter
                            location
   3683    000000          ;               Carry = Undefined
   3684    000000          ;
   3685    000000          ;       DPTR:
   3686    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                Requires DPS: DPTRx
   3687    000000          ;                               Modifies DPTR: DPTRx
                                Returns  DPS: DPTRx
   3688    000000          ;
   3689    000000          ;               Separate:       Requires DPTR: DPTRx
                                Requires DPS: DPTRx
   3690    000000          ;                               Modifies DPTR: DPTRx
                                Returns  DPS: DPTRx
   3691    000000          ;
   3692    000000          ;       Stack usage: NA
   3693    000000          ;
   3694    000000          ;---------------------------------------------------
                           --------------------------
   3695    000000                  MODULE  ?PUSH_IND_OVERLAY_C
   3696    000000          
   3697    000000                  RSEG    RCODE:CODE:NOROOT
   3698    000000                  PUBLIC  ?PUSH_IND_OVERLAY_C
   3699    000000                  PUBLIC  ?PUSH_IND_OVERLAY32_C
   3700    000000                  PUBLIC  ?PUSH_IND_OVERLAY24_C
   3701    000000          
   3702    000000              cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY_C
   3702.1  000000                                  cfi block ?PUSH_IND_OVERLAY_
                                                                        C using
                                                                         cfi_co
                                                                        mmon
   3702.2  000000                                  cfi nofunction
   3702.3  000000          cfi_OFFSET              SET      0
   3702.4  000000                                  ENDM
   3703    000000              cfi A undefined
   3704    000000              cfi R0 undefined
   3705    000000              cfi DPTR0 undefined
   3706    000000          
   3707    000000          ?PUSH_IND_OVERLAY24_C:
   3708    000000 7402             MOV     A,#2            // size = 3
   3709    000002 8002             SJMP    ?PUSH_IND_OVERLAY_C
   3710    000004          
   3711    000004          ?PUSH_IND_OVERLAY32_C:
   3712    000004 7403             MOV     A,#3            // size = 4
   3713    000006                  ; Fall through
   3714    000006          
   3715    000006          ?PUSH_IND_OVERLAY_C:
   3716    000006 CA               XCH     A,R2            // R2 = size -
                                              1
   3717    000007 C0E0             PUSH    A
   3718    000009                  cfi_PUSH_REG R2
   3718    000009                                  cfi_STACK_ALLOC 1
   3718.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3718.2  000009                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3718.3  000009                                  ENDM
   3718.4  000009                                  cfi R2 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   3718.5  000009                                  ENDM
   3719    000009 C3               CLR     C
   3720    00000A E8               MOV     A,R0    
   3721    00000B 9A               SUBB    A,R2
   3722    00000C F8               MOV     R0,A
   3723    00000D C0E0             PUSH    A               // A = R0_enter -
                                                            (size-1)
   3724    00000F                  cfi_STACK_ALLOC 1
   3724.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3724.2  00000F                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3724.3  00000F                                  ENDM
   3725    00000F 0A               INC     R2              // R2 = size
   3726    000010          
   3727    000010          MOVE_BYTE:
   3728    000010 E4               CLR     A
   3729    000011 93               MOVC    A,@A+DPTR
   3730    000012 F6               MOV     @R0,A
   3731    000013 08               INC     R0
   3732    000014 A3               INC     DPTR
   3733    000015 DAF9             DJNZ    R2,MOVE_BYTE
   3734    000017          
   3735    000017 D0E0             POP     A
   3736    000019                  cfi_STACK_DEALL 1
   3736.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3736.2  000019                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3736.3  000019          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3736.4  000019                                      #error "Negative size on
                            cfi deallocate"
   3736.5  000019          #endif
   3736.6  000019                                  ELSEIF cfi_OFFSET
   3736.7  000019                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3736.8  000019                                  ELSE
   3736.9  000019                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3736.10 000019                                  ENDIF
   3736.11 000019                                  ENDM
   3737    000019 14               DEC     A
   3738    00001A F8               MOV     R0,A            // R0 = R0_enter -
                                               (size+1)
   3739    00001B          
   3740    00001B D0E0             POP     A
   3741    00001D                  cfi_STACK_DEALL 1
   3741.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3741.2  00001D                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3741.3  00001D          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3741.4  00001D                                      #error "Negative size on
                            cfi deallocate"
   3741.5  00001D          #endif
   3741.6  00001D                                  ELSEIF cfi_OFFSET
   3741.7  00001D                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3741.8  00001D                                  ELSE
   3741.9  00001D                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3741.10 00001D                                  ENDIF
   3741.11 00001D                                  ENDM
   3742    00001D FA               MOV     R2,A
   3743    00001E              cfi R2 samevalue
   3744    00001E 22               RET
   3745    00001F          
   3746    00001F              cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY_C
   3746.1  00001F                                  IF cfi_OFFSET
   3746.2  00001F                                    #error "Non-zero offset on
                            cfi data block end"
   3746.3  00001F                                  ELSE
   3746.4  00001F                                    cfi endblock ?PUSH_IND_OVE
                           RLAY_C
   3746.5  00001F                                  ENDIF
   3746.6  00001F                                  ENDM
   3747    00001F                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259     3441
                                                                     3447     3498     3498     3513
                                                                     3565     3565     3580     3638
                                                                     3638     3644     3655     3660
                                                                     3718     3718     3724     3736
                                                                     3741
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
                                                                     3441     3447     3498     3513
                                                                     3565     3580     3638     3644
                                                                     3655     3660     3718     3724
                                                                     3736     3741
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259     3441     3447     3447
                                                                     3498     3498     3513     3513
                                                                     3565     3565     3580     3580
                                                                     3638     3638     3644     3655
                                                                     3655     3660     3660     3718
                                                                     3718     3724     3736     3736
                                                                     3741     3741
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?PUSH_IND_OVERLAY24_CREL    CONST PUB UNTYP.       RCODE      0 
?PUSH_IND_OVERLAY32_CREL    CONST PUB UNTYP.       RCODE      4 
?PUSH_IND_OVERLAY_C REL    CONST PUB UNTYP.       RCODE      6 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
MOVE_BYTE           REL    CONST UNTYP.           RCODE      10 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:BA2           #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 31          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 06/Apr/2017  13:54:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51#
#           List file     =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\List\iar_stack_parameter.lst#
#           Object file   =  E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_parameter.r51#
#           Command line  =  E:\1500V_Test2\ED\code\Library\clib\iar_stack_parameter.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\1500V_Test2\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3748    000000          
   3749    000000          ;---------------------------------------------------
                           --------------------------
   3750    000000          ;
   3751    000000          ;       Function: ?PUSH_IND_OVERLAY_G
   3752    000000          ;
   3753    000000          ;       Description: Push x-bytes to overlafram from
                            generic pointer
   3754    000000          ;
   3755    000000          ;       Register input:
   3756    000000          ;               R1:R2:R3 = Address to the first
                            element.
   3757    000000          ;               R0       = Pointer to parameter
                            area
   3758    000000          ;               A        = Nr of bytes to move -
                            1
   3759    000000          ;
   3760    000000          ;       Register output:
   3761    000000          ;               A     = Undefined
   3762    000000          ;               DPTR0 = Undefined
   3763    000000          ;               R0    = Pointer to next parameter
                            location
   3764    000000          ;               Carry = Undefined
   3765    000000          ;
   3766    000000          ;       Multiple DPTR
   3767    000000          ;               DPTR/DPS: Unchanged
   3768    000000          ;
   3769    000000          ;       Stack usage: NA
   3770    000000          ;
   3771    000000          ;---------------------------------------------------
                           --------------------------
   3772    000000                  MODULE  ?PUSH_IND_OVERLAY_G
   3773    000000                  EXTERN  ?MOVE_LONG_IDATA_GPTR
   3774    000000                  RSEG    RCODE:CODE:NOROOT
   3775    000000                  PUBLIC  ?PUSH_IND_OVERLAY_G
   3776    000000          
   3777    000000              cfi_DATA_BLOCK_start ?PUSH_IND_OVERLAY_G
   3777.1  000000                                  cfi block ?PUSH_IND_OVERLAY_
                                                                        G using
                                                                         cfi_co
                                                                        mmon
   3777.2  000000                                  cfi nofunction
   3777.3  000000          cfi_OFFSET              SET      0
   3777.4  000000                                  ENDM
   3778    000000              cfi A undefined
   3779    000000              cfi R0 undefined
   3780    000000              cfi DPTR0 undefined
   3781    000000          
   3782    000000          ?PUSH_IND_OVERLAY_G:
   3783    000000 CF               XCH     A,R7            // R7 = size -
                                              1
   3784    000001 C0E0             PUSH    A
   3785    000003                  cfi_PUSH_REG R7
   3785    000003                                  cfi_STACK_ALLOC 1
   3785.1  000001          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3785.2  000003                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3785.3  000003                                  ENDM
   3785.4  000003                                  cfi R7 frame(CFA_MACHINE,
                            __SIZE_OF_RETADDR__ + cfi_OFFSET)
   3785.5  000003                                  ENDM
   3786    000003 C3               CLR     C
   3787    000004 E8               MOV     A,R0
   3788    000005 9F               SUBB    A,R7
   3789    000006 F8               MOV     R0,A
   3790    000007 C0E0             PUSH    A               // A = R0_enter -
                                                            (size-1)
   3791    000009                  cfi_STACK_ALLOC 1
   3791.1  000002          cfi_OFFSET              SET     cfi_OFFSET +
                            1
   3791.2  000009                                  cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3791.3  000009                                  ENDM
   3792    000009 0F               INC     R7              // R7 = size
   3793    00000A 12....           CALL    ?MOVE_LONG_IDATA_GPTR ; R0=dest,
                                                                  R3:R2:R1=src,
                                                                  R7=bytes to
                                                                  move
   3794    00000D          
   3795    00000D D0E0             POP     A
   3796    00000F                  cfi_STACK_DEALL 1
   3796.1  000001          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3796.2  00000F                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3796.3  00000F          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3796.4  00000F                                      #error "Negative size on
                            cfi deallocate"
   3796.5  00000F          #endif
   3796.6  00000F                                  ELSEIF cfi_OFFSET
   3796.7  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3796.8  00000F                                  ELSE
   3796.9  00000F                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3796.10 00000F                                  ENDIF
   3796.11 00000F                                  ENDM
   3797    00000F 14               DEC     A
   3798    000010 F8               MOV     R0,A            // R0 = R0_enter -
                                               (size+1)
   3799    000011 D0E0             POP     A
   3800    000013                  cfi_STACK_DEALL 1
   3800.1  000000          cfi_OFFSET              SET     cfi_OFFSET -
                            1
   3800.2  000013                                  IF (cfi_OFFSET + __SIZE_OF_R
                           ETADDR__) < 0
   3800.3  000013          #ifndef __IAR_SYSTEMS_ICC__ /* Let it accept
                            preprocessing by compiler */
   3800.4  000013                                      #error "Negative size on
                            cfi deallocate"
   3800.5  000013          #endif
   3800.6  000013                                  ELSEIF cfi_OFFSET
   3800.7  000013                                    cfi     CFA_MACHINE
                            MACHINE_SP - (__SIZE_OF_RETADDR__ + cfi_OFFSET)
   3800.8  000013                                  ELSE
   3800.9  000013                                    cfi     CFA_MACHINE
                            MACHINE_SP - __SIZE_OF_RETADDR__
   3800.10 000013                                  ENDIF
   3800.11 000013                                  ENDM
   3801    000013 FF               MOV     R7,A
   3802    000014              cfi R7 samevalue
   3803    000014 22               RET
   3804    000015          
   3805    000015              cfi_DATA_BLOCK_end ?PUSH_IND_OVERLAY_G
   3805.1  000015                                  IF cfi_OFFSET
   3805.2  000015                                    #error "Non-zero offset on
                            cfi data block end"
   3805.3  000015                                  ELSE
   3805.4  000015                                    cfi endblock ?PUSH_IND_OVE
                           RLAY_G
   3805.5  000015                                  ENDIF
   3805.6  000015                                  ENDM
   3806    000015                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259     3441
                                                                     3447     3498     3498     3513
                                                                     3565     3565     3580     3638
                                                                     3638     3644     3655     3660
                                                                     3718     3718     3724     3736
                                                                     3741     3785     3785     3791
                                                                     3796     3800
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
                                                                     3441     3447     3498     3513
                                                                     3565     3580     3638     3644
                                                                     3655     3660     3718     3724
                                                                     3736     3741     3785     3791
                                                                     3796     3800
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259     3441     3447     3447
                                                                     3498     3498     3513     3513
                                                                     3565     3565     3580     3580
                                                                     3638     3638     3644     3655
                                                                     3655     3660     3660     3718
                                                                     3718     3724     3736     3736
                                                                     3741     3741     3785     3785
                                                                     3791     3796     3796     3800
                                                                     3800
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?MOVE_LONG_IDATA_GPTRABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?PUSH_IND_OVERLAY_G REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPTR0               REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
block               REL    CONST UNTYP.           RCODE      Not solved 
cfi_OFFSET          ABS    VAR UNTYP.             RCODE      0 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
endblock            REL    CONST UNTYP.           RCODE      Not solved 
frame               REL    CONST UNTYP.           RCODE      Not solved 
nofunction          REL    CONST UNTYP.           RCODE      Not solved 
samevalue           REL    CONST UNTYP.           RCODE      Not solved 
undefined           REL    CONST UNTYP.           RCODE      Not solved 
using               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:D224          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 21          #
##############################





EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       83       84
                                                                       84       98       99       99
                                                                      112      113      113      122
                                                                      125      129      132      174
                                                                      175      175      186      187
                                                                      187      198      199      199
                                                                      210      211      211      223
                                                                      224      224      232      235
                                                                      240      243      290      291
                                                                      291      304      305      305
                                                                      318      319      319      332
                                                                      333      333      346      347
                                                                      347      356      359      364
                                                                      367      543      544      544
                                                                      553      554      554      563
                                                                      564      564      573      574
                                                                      574      582      583      583
                                                                      591      594      601      604
                                                                      773      774      774      783
                                                                      784      784      793      794
                                                                      794      803      804      804
                                                                      812      813      813      821
                                                                      824      833      836      840
                                                                      854      858      861      867
                                                                      872      875      880      881
                                                                      883      884      940      943
                                                                     1092     1095     1413     1413
                                                                     1422     1503     1503     1512
                                                                     1599     1599     1608     1697
                                                                     1697     1706     1790     1790
                                                                     1793     1793     1802     1806
                                                                     1923     1934     2022     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2200     2204
                                                                     2462     2462     2465     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2722     2725     2725
                                                                     2728     2744     2749     2753
                                                                     2756     2760     2973     2973
                                                                     2976     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3220     3223     3223
                                                                     3226     3226     3240     3245
                                                                     3251     3255     3259     3441
                                                                     3447     3498     3498     3513
                                                                     3565     3565     3580     3638
                                                                     3638     3644     3655     3660
                                                                     3718     3718     3724     3736
                                                                     3741     3785     3785     3791
                                                                     3796     3800
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3       1367     1377     1387     1398
                                                                     1408     1411     1418     1458
                                                                     1468     1478     1488     1498
                                                                     1501     1508     1554     1564
                                                                     1574     1584     1594     1597
                                                                     1604     1652     1662     1672
                                                                     1682     1692     1695     1702
                                                                     1746     1756     1766     1776
                                                                     1785     1788     1798
CFA_SPX              #define, value: CFA_XSP16, line:      23:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GP1H                 #define, value: R3, line:        30        826      850     1244     1266
GP1L                 #define, value: R1, line:        28        844     1260
GP1M                 #define, value: R2, line:        29        845     1261
GP2H                 #define, value: R6, line:        34  
GP2L                 #define, value: R4, line:        32  
GP2M                 #define, value: R5, line:        33  
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       83
                                                                       98      112      122      125
                                                                      129      132      174      186
                                                                      198      210      223      232
                                                                      235      240      243      290
                                                                      304      318      332      346
                                                                      356      359      364      367
                                                                      543      553      563      573
                                                                      582      591      594      601
                                                                      604      773      783      793
                                                                      803      812      821      824
                                                                      833      836      840      854
                                                                      858      861      867      872
                                                                      875      880      883      940
                                                                      943     1092     1095     1413
                                                                     1422     1503     1512     1599
                                                                     1608     1697     1706     1790
                                                                     1793     1802     1806     1923
                                                                     1927     1934     2022     2028
                                                                     2169     2172     2185     2195
                                                                     2200     2204     2462     2465
                                                                     2478     2488     2493     2497
                                                                     2722     2725     2728     2744
                                                                     2749     2753     2756     2760
                                                                     2973     2976     2979     2995
                                                                     3000     3004     3007     3011
                                                                     3220     3223     3226     3240
                                                                     3245     3251     3255     3259
                                                                     3441     3447     3498     3513
                                                                     3565     3580     3638     3644
                                                                     3655     3660     3718     3724
                                                                     3736     3741     3785     3791
                                                                     3796     3800
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3     1367     1377     1387
                                                                     1398     1408     1411     1418
                                                                     1458     1468     1478     1488
                                                                     1498     1501     1508     1554
                                                                     1564     1574     1584     1594
                                                                     1597     1604     1652     1662
                                                                     1672     1682     1692     1695
                                                                     1702     1746     1756     1766
                                                                     1776     1785     1788     1798
SPX                  #define, value: XSP16, line:      24:3       1881     1891     1901     1911
                                                                     1920     1927     1932     1980
                                                                     1990     2000     2010     2019
                                                                     2026     2067     2077     2087
                                                                     2097     2107     2167     2179
                                                                     2193     2356     2366     2376
                                                                     2386     2397     2460     2472
                                                                     2486
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1       2180     2190     2473     2483
                                                                     2737     2746     2988     2997
                                                                     3233     3242
XSP_L                #define, value: ?XSP, line:      23:1       2175     2189     2468     2482
                                                                     2734     2747     2985     2998
                                                                     3230     3243
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       84       99
                                                                      113      115      175      187
                                                                      199      211      224      226
                                                                      291      305      319      333
                                                                      347      350      372      544
                                                                      554      564      574      583
                                                                      585      609      774      784
                                                                      794      804      813      815
                                                                      885      934      956     1086
                                                                     1109     1235     1293
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       73       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       82       82       82       82
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97       97       97
                                                                       97       97      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      111      111      111      111
                                                                      166      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      289
                                                                      289      289      289      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      303      303      303
                                                                      303      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      317
                                                                      317      317      317      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      331      331      331
                                                                      331      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      345
                                                                      345      345      345      382
                                                                      540      619      764      968
                                                                     1080     1120     2053     2342
                                                                     2642     2646     2889     2894
                                                                     3144
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3       83
                                                                       98      112      174      186
                                                                      198      210      223      290
                                                                      304      318      332      346
                                                                      543      553      563      573
                                                                      582      773      783      793
                                                                      803      812     1413     1413
                                                                     1422     1422     1503     1503
                                                                     1512     1512     1599     1599
                                                                     1608     1608     1697     1697
                                                                     1706     1706     1790     1790
                                                                     1793     1793     1802     1802
                                                                     1806     1806     1923     1934
                                                                     1934     2022     2028     2028
                                                                     2169     2169     2172     2172
                                                                     2185     2195     2195     2200
                                                                     2200     2204     2204     2462
                                                                     2462     2465     2465     2478
                                                                     2488     2488     2493     2493
                                                                     2497     2497     2722     2722
                                                                     2725     2725     2728     2744
                                                                     2749     2749     2753     2753
                                                                     2756     2756     2760     2760
                                                                     2973     2973     2976     2976
                                                                     2979     2995     3000     3000
                                                                     3004     3004     3007     3007
                                                                     3011     3011     3220     3220
                                                                     3223     3223     3226     3226
                                                                     3240     3245     3245     3251
                                                                     3251     3255     3255     3259
                                                                     3259     3441     3447     3447
                                                                     3498     3498     3513     3513
                                                                     3565     3565     3580     3580
                                                                     3638     3638     3644     3655
                                                                     3655     3660     3660     3718
                                                                     3718     3724     3736     3736
                                                                     3741     3741     3785     3785
                                                                     3791     3796     3796     3800
                                                                     3800
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 


##############################
#          CRC:D224          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 21          #
#     Modules:        29     #
#     Total errors:   0      #
#     Total warnings: 0      #
##############################



