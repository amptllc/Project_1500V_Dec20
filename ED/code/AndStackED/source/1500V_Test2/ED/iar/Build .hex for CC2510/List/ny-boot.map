################################################################################
#                                                                              #
#      IAR Universal Linker V4.60K/386                                         #
#                                                                              #
#           Link time     =  06/Apr/2017  13:54:41                             #
#           Target CPU    =  x51                                               #
#           List file     =  "E:\1500V_Test2\ED\iar\Build .hex for CC2510\List #
#                            \ny-boot.map"                                     #
#           Output file 1 =  E:\1500V_Test2\ED\hex\ny-boot.hex                 #
#                            Format: intel-extended, variant: -y(CODE)         #
#           Command line  =  -y(CODE) -IC:\IARSystems-CD-730B\8051\CONFIG\     #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            cmain-ny-boot.r51"                                #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            cstartup-ny-boot.r51"                             #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_stack.r51"                                    #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_stack_enter_leave.r51"                        #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_stack_enter_leave_dptr.r51"                   #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_stack_parameter.r51"                          #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            iar_switch.r51"                                   #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            ny-alt-call.r51"                                  #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ #
#                            ny-boot.r51"                                      #
#                            -o E:\1500V_Test2\ED\hex\ny-boot.hex              #
#                            -Fintel-extended -l                               #
#                            "E:\1500V_Test2\ED\iar\Build .hex for CC2510\List #
#                            \ny-boot.map"                                     #
#                            -xes -IC:\IARSystems-CD-730B\8051\LIB\ -f         #
#                            E:\1500V_Test2\ED\iar\lnk51ew_cc2510-boot.xcl     #
#                            (-D_IDATA_START=0xB0 -D_IDATA_END=0xFF            #
#                            -D_PDATA_START=0xF0B0 -D_PDATA_END=0xF0FF         #
#                            -D_IXDATA_START=0xF0B0 -D_IXDATA_END=0xF500       #
#                            -D_XDATA_START=_IXDATA_START                      #
#                            -D_XDATA_END=_IXDATA_END -D_CODE_START=0x0000     #
#                            -D_CODE_END=0x3FF -D_NEAR_CODE_END=_CODE_END      #
#                            -D_TINY_CODE_END=0x47FF                           #
#                            -D_FIRST_BANK_ADDR=0x10000 -D_NR_OF_BANKS=0x00    #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_START=0       #
#                            -D?PBANK_NUMBER=F0 -D?PBANK=93                    #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END -f lnk_base.xcl)        #
#                            (-Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F        #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)BANK_RELAYS=_CODE_START                   #
#                            -Z(CODE)RCODE=_CODE_START-_CODE_END               #
#                            -Z(CODE)TINY_CODE=_CODE_START-_TINY_CODE_END      #
#                            -Z(CODE)NEAR_CODE=_CODE_START-_NEAR_CODE_END      #
#                            -Z(CODE)DIFUNCT=_CODE_START-_CODE_END             #
#                            -P(CODE)BANKED_CODE=[(_CODEBANK_START+_FIRST_BANK #
#                            _ADDR)-(_CODEBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_B #
#                            ANKS+10000                                        #
#                            -P(CODE)FAR_CODE=[_FAR_CODE_START-_FAR_CODE_END]/ #
#                            10000                                             #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START-_EXTENDED_STACK_END                  #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_N,PDATA_Z,PDATA_I=_PDATA_START-_PD #
#                            ATA_END                                           #
#                            -Z(XDATA)IXDATA_N,IXDATA_Z,IXDATA_I=_IXDATA_START #
#                            -_IXDATA_END                                      #
#                            -Z(XDATA)XDATA_N,XDATA_Z,XDATA_I=_XDATA_START-_XD #
#                            ATA_END                                           #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CODE)XDATA_ROM_C=_CODE_START-_CODE_END         #
#                            -Z(SPLIT-XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA #
#                            _START-_FAR_DATA_END]/10000                       #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*E+10000                                         #
#                            -Z(XDATA)HUGE_N,HUGE_Z,HUGE_I=_FAR_DATA_START-_FA #
#                            R_DATA_END                                        #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -Z(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -P(CODE)FAR_CODE_C=[_FAR_CODE_START-_FAR_CODE_END #
#                            ]/10000                                           #
#                            -Z(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CODE_N=_CODE_START-_CODE_END              #
#                            -P(CODE)FAR_CODE_N=[_FAR_CODE_START-_FAR_CODE_END #
#                            ]/10000                                           #
#                            -Z(CODE)CHECKSUM#_CODE_END -cx51)                 #
#                            -D_CODEBANK_START=0 -D_CODEBANK_END=0             #
#                            -D_NR_OF_VIRTUAL_REGISTERS=20 -s                  #
#                            __program_start -D_IDATA_STACK_SIZE=0x60          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_END=0x00                        #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0xA0                          #
#                            -D_XDATA_STACK_SIZE=0x100                         #
#                            -D_XDATA_HEAP_SIZE=0x00 -D_FAR_HEAP_SIZE=0x00     #
#                            -D_HUGE_HEAP_SIZE=0x00                            #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000008B  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = xdata_reentrant
  __code_model             = near
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1

                ****************************************
                *                                      *
                *              ENTRY LIST              *
                *                                      *
                ****************************************

?FILLER_BYTES
?ABS_ENTRY_MOD
  _HUGE_HEAP_SIZE                  CODE      00000000 
  _FAR_HEAP_SIZE                   CODE      00000000 
  _XDATA_HEAP_SIZE                 CODE      00000000 
  _XDATA_STACK_SIZE                CODE      00000100 
  _PDATA_STACK_SIZE                CODE      000000A0 
  _EXTENDED_STACK_SIZE             CODE      00000000 
  _EXTENDED_STACK_END              CODE      00000000 
  _EXTENDED_STACK_START            CODE      00000000 
  _IDATA_STACK_SIZE                CODE      00000060 
  _NR_OF_VIRTUAL_REGISTERS         CODE      00000020 
  _CODEBANK_END                    CODE      00000000 
  _CODEBANK_START                  CODE      00000000 
  _FAR_CODE_END                    CODE      000003FF 
  _FAR_CODE_START                  CODE      00000000 
  _FAR_DATA_END                    CODE      00FFFFFF 
  _FAR_DATA_START                  CODE      00010001 
  _FAR_DATA_NR_OF_BANKS            CODE      0000000E 
  ?VB                              CODE      00000020 
  _BREG_START                      CODE      00000000 
  ?PBANK                           CODE      00000093 
  ?PBANK_NUMBER                    CODE      000000F0 
  _REGISTER_BANK_START             CODE      00000000 
  ?REGISTER_BANK                   CODE      00000000 
  _NR_OF_BANKS                     CODE      00000000 
  _FIRST_BANK_ADDR                 CODE      00010000 
  _TINY_CODE_END                   CODE      000047FF 
  _NEAR_CODE_END                   CODE      000003FF 
  _CODE_END                        CODE      000003FF 
  _CODE_START                      CODE      00000000 
  _XDATA_END                       CODE      0000F500 
  _XDATA_START                     CODE      0000F0B0 
  _IXDATA_END                      CODE      0000F500 
  _IXDATA_START                    CODE      0000F0B0 
  _PDATA_END                       CODE      0000F0FF 
  _PDATA_START                     CODE      0000F0B0 
  _IDATA_END                       CODE      000000FF 
  _IDATA_START                     CODE      000000B0 
?cmain ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\cmain-ny-boot.r51 )
  ?cmain                           CODE      00000086 
  ?call_main                       CODE      00000086 
CSTARTUP ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\cstartup-ny-boot.r51 )
  ?REGISTERS                       DATA      00000000 
  ?ISTACK_START                    IDATA     000000A0 
  ?XSTACK_START                    XDATA     0000F0B0 
  __program_start                  CODE      0000008B 
  ?RESET_SP                        CODE      00000095 
  ?RESET_XSP                       CODE      00000098 
VIRTUAL_REGISTERS ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\cstartup-ny-boot.r51 )
  ?B0                              BIT       00000020.0
  ?V0                              DATA      00000021 
  ?XSP                             DATA      00000041 
?CALL_IND ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51 )
  ?CALL_IND                        CODE      000000A2 
?INTERRUPT_ENTER_XSP ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51 )
  ?INTERRUPT_ENTER_XSP             CODE      000000A4 
?INTERRUPT_LEAVE_XSP ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave.r51 )
  ?INTERRUPT_LEAVE_XSP             CODE      000000FC 
iar_stack_enter_leave_dptr ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_stack_enter_leave_dptr.r51 )
?UC_SWITCH_DENSE ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51 )
  ?UC_SWITCH_DENSE                 CODE      0000014D 
main_asm ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ny-alt-call.r51 )
  call_alt_image                   CODE      00000265 
  main_asm                         CODE      00000184 
  main                             CODE      00000184 
mpp_work ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ny-alt-call.r51 )
  mpp_work                         CODE      0000026E 
ny-boot ( E:\1500V_Test2\ED\iar\Build .hex for CC2510\Obj\ny-boot.r51 )
  _A_TCON                          DATA      00000088 
  S1CON                            DATA      0000009B 
  _A_IEN0                          DATA      000000A8 
  _A_IRCON                         DATA      000000C0 
  DMAIRQ                           DATA      000000D1 
  DMAARM                           DATA      000000D6 
  _A_TIMIF                         DATA      000000D8 
  RFIF                             DATA      000000E9 
  flagWork                         CODE      00000294 
  rf_IRQ                           CODE      000002C2 
  adc_IRQ                          CODE      000002DE 
  t1_IRQ                           CODE      000002F4 
  dmaFlash_IRQ                     CODE      000003B3 
  adc_IRQ::??INTVEC 11             CODE      0000000B 
  dmaFlash_IRQ::??INTVEC 67        CODE      00000043 
  t1_IRQ::??INTVEC 75              CODE      0000004B 
  rf_IRQ::??INTVEC 131             CODE      00000083 



                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 000000A0          1B   rel    0
RCODE                CODE          000000A2 - 00000293         1F2   rel    1
NEAR_CODE            CODE          00000294 - 000003CD         13A   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
VREG                 DATA          00000021 - 00000040          20   rel    0
PSP                  DATA               00000041                     dse    0
XSP                  DATA          00000041 - 00000042           2   rel    0
SFR_AN               DATA          00000088 - 00000088           1   rel    0
                     DATA          0000009B - 0000009B           1 
                     DATA          000000A8 - 000000A8           1 
                     DATA          000000C0 - 000000C0           1 
                     DATA          000000D1 - 000000D1           1 
                     DATA          000000D6 - 000000D6           1 
                     DATA          000000D8 - 000000D8           1 
                     DATA          000000E9 - 000000E9           1 
XSTACK               XDATA         0000F0B0 - 0000F1AF         100   rel    0
ISTACK               IDATA         000000A0 - 000000FF          60   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 973 bytes of CODE  memory
  42 bytes of DATA  memory (+ 8 absolute )
 256 bytes of XDATA memory
  96 bytes of IDATA memory
   8 bits  of BIT   memory

Errors: none
Warnings: none

