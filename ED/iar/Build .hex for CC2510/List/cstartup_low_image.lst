###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

      1    000000          //--------------------------------------------------
                           ----------------------
      2    000000          //
      3    000000          //                       CStartup.s51
      4    000000          //
      5    000000          // This module contains the code executed before the
                            C/EC++
      6    000000          // "main" function is called. The code is designed
                            to run on any
      7    000000          // processor based on the 8051 architecture.
      8    000000          //
      9    000000          //       REVISON INFORMATION
     10    000000          //
     11    000000          //       $Revision: 1.114 $
     12    000000          //
     13    000000          //       Log information is available at the end of
                            this file
     14    000000          //
     15    000000          //--------------------------------------------------
                           ----------------------
     16    000000          
     17    000000          #include "iar_common.h"
     18    000000                  MODULE   CSTARTUP
     19    000000              FUNCTION __program_start,0203H
     20    000000                  PUBLIC   __program_start        
     21    000000          
     22    000000                  EXTERN  ?B0
     23    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
     23.1  000000          #ifdef __EXTENDED_DPTR__
     23.2  000000          #endif ; __EXTENDED_DPTR__
     23.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
     23.4  000000          #ifdef __DPTR_SEPARATE__
     23.5  000000          #ifdef __EXTENDED_DPTR__
     23.6  000000          #endif ; __EXTENDED_DPTR__
     23.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
     23.8  000000          #ifdef __EXTENDED_DPTR__
     23.9  000000          #endif ; __EXTENDED_DPTR__
     23.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
     23.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
     23.12 000000          #ifdef __EXTENDED_DPTR__
     23.13 000000          #endif ; __EXTENDED_DPTR__
     23.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
     23.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
     23.16 000000          #ifdef __EXTENDED_DPTR__
     23.17 000000          #endif ; __EXTENDED_DPTR__
     23.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
     23.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
     23.20 000000          #ifdef __EXTENDED_DPTR__
     23.21 000000          #endif ; __EXTENDED_DPTR__
     23.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
     23.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
     23.24 000000          #ifdef __EXTENDED_DPTR__
     23.25 000000          #endif ; __EXTENDED_DPTR__
     23.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
     23.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
     23.28 000000          #ifdef __EXTENDED_DPTR__
     23.29 000000          #endif ; __EXTENDED_DPTR__
     23.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
     23.31 000000          #endif ; __DPTR_SEPARATE__
     23.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
     23.33 000000                  ENDM
     24    000000                  REQUIRE ?B0
     25    000000                  REQUIRE __call_main
     26    000000              
     27    000000               #if (__NUMBER_OF_DPTRS__ > 1)
     29    000000               #endif
     30    000000          
     31    000000               #if (__CORE__ == __CORE_EXTENDED1__)
     33    000000               #endif
     34    000000          
     35    000000               #if (__CORE__ == __CORE_EXTENDED2__)
     37    000000               #endif
     38    000000          
     39    000000                  ; Uncomment this when rom-monitor requires 3
                            NOPS between statements.
     40    000000          ;       REQUIRE ?ROM_MONITOR_NOPS
     41    000000          
     42    000000                  RSEG    REGISTERS:NOROOT:DATA
     43    000000                  PUBLIC  ?REGISTERS
     44    000000          
     45    000000          ?REGISTERS:
     46    000000          
     47    000000          //--------------------------------------------------
                           ----------------------
     48    000000          // The C stack segment. Should be mapped into
                            internal data RAM
     49    000000          //
     50    000000          //   ISTACK:    Should be mapped into internal data
                            RAM
     51    000000          //   PSTACK:    Should be mapped into external data
                            RAM page
     52    000000          //   XSTACK:    Should be mapped into external data
                            RAM
     53    000000          //   EXT_STACK: Should be mapped into external data
                            RAM
     54    000000          //
     55    000000          //--------------------------------------------------
                           ----------------------
     56    000000          // The C stack is used for LCALL's and temporary
                            storage for
     57    000000          // code generator help-routines (math etc). The
                            stack will be
     58    000000          // located after all other internal RAM variables if
                            the stan-
     59    000000          // dard linking procedure is followed. Note that C
                            interrupt
     60    000000          // routines can double stack size demands.
     61    000000          //
     62    000000          //--------------------------------------------------
                           ----------------------
     63    000000          
     64    000000                  RSEG    ISTACK:NOROOT:IDATA
     65    000000                  PUBLIC  ?ISTACK_START
     66    000000          ?ISTACK_START:
     67    000000          
     68    000000                  RSEG    PSTACK:NOROOT:XDATA
     69    000000                  PUBLIC  ?PSTACK_START
     70    000000          ?PSTACK_START:
     71    000000          
     72    000000                  RSEG    XSTACK:NOROOT:XDATA
     73    000000                  PUBLIC  ?XSTACK_START
     74    000000          ?XSTACK_START:
     75    000000          
     76    000000                  RSEG    EXT_STACK:NOROOT:XDATA
     77    000000                  PUBLIC  ?EXT_STACK_START
     78    000000          ?EXT_STACK_START:
     79    000000          
     80    000000          
     81    000000          //--------------------------------------------------
                           ----------------------
     82    000000          //
     83    000000          // Define reset vector.
     84    000000          //
     85    000000          //--------------------------------------------------
                           ----------------------
     86    000000          
     87    000000                  COMMON  INTVEC:CODE:ROOT(0)
     88    000000          
     89    000000                  // The reset vector must be located at
                            address zero, the reset
     90    000000                  // vector is located first in the INTVEC
                            segment. This segment
     91    000000                  // must thus be located at address zero. Be
                            carefull if using
     92    000000                  // assembler sequences located with the ASEG
                            directive, which may
     93    000000                  // prevent the INTVEC segment from being
                            located at address zero.
     94    000000          
     95    000000                  LIMIT SFB(INTVEC),0,0,"The INTVEC segment
                                                     must begin at address
                                                     zero"
     96    000000          
     97    000000          ?reset_vector:
     98    000000 02               DB      0x02    ; LJMP
     99    000001          #if defined(START_INIT_IN_FAR)
    101    000001          #endif
    102    000001 ..               DB      high(__program_start)
    103    000002 ..               DB      low(__program_start)
    104    000003          
    105    000003          
    106    000003          //--------------------------------------------------
                           ----------------------
    107    000003          //                                      
    108    000003          // Initialize the chip to suit IAR ICC8051
                            Compiler
    109    000003          //
    110    000003          //--------------------------------------------------
                           ----------------------
    111    000003          
    112    000000                  RSEG    CSTART:CODE:ROOT
    113    000000                  EXTERN  ?REGISTER_BANK
    114    000000                  REQUIRE ?ISTACK_START
    115    000000                  REQUIRE ?REGISTERS
    116    000000                  REQUIRE ?reset_vector
    117    000000              
    118    000000          __program_start:
    119    000000 75FE02       MOV  0xFE, #0x2
    120    000003 D291         SETB 0x90.1
    121    000005 75D0..           MOV     PSW,#(?REGISTER_BANK << 3)
    122    000008          
    123    000008          //--------------------------------------------------
                           ----------------------
    124    000008          //
    125    000008          // Reset of bank registers and stack pointers
    126    000008          // ==========================================
    127    000008          //
    128    000008          // ?RESET_SP:  Resets the IDATA stack pointer
    129    000008          // ?RESET_ESP: Resets the extended stack pointer
    130    000008          // ?RESET_PSP: Resets the PDATA stack pointer
    131    000008          // ?RESET_XSP: Resets the XDATA stack pointer
    132    000008          //
    133    000008          // ?RESET_CODE_BANK:      Resets the current code
                            bank register
    134    000008          // ?RESET_PDATA_BANK:     Resets the high byte of
                            PDATA page register
    135    000008          //
    136    000008          // ?RESET_DPS: Resets the DPTR selector (point at
                            DPTR0)
    137    000008          //
    138    000008          //--------------------------------------------------
                           ----------------------
    139    000008          
    140    000008          //--------------------------------------------------
                           ----------------------
    141    000008          //
    142    000008          // Reset idata or extended stack pointer
    143    000008          //   extended stack pointer if  the extended stack
                            is used
    144    000008          //   otherwise, the ordinary stack pointer
    145    000008          //
    146    000008          //--------------------------------------------------
                           ----------------------
    147    000008          
    148    000008          #if (defined(__EXTENDED_STACK__) )
    161    000008          #else
    162    000008          
    163    000008          //
    164    000008          // Reset idata stack pointer
    165    000008          //
    166    000008          
    167    000000                  PUBLIC  ?RESET_SP
    168    000008                  REQUIRE ?ISTACK_START
    169    000008          
    170    000008          ?RESET_SP:
    171    000008 7581..           MOV     SP,#SFB(ISTACK)
    172    00000B          #endif
    173    00000B          
    174    00000B          
    175    00000B          //--------------------------------------------------
                           ----------------------
    176    00000B          //
    177    00000B          // Reset pdata stack pointer
    178    00000B          //
    179    00000B          //--------------------------------------------------
                           ----------------------
    180    00000B          
    181    000000                  RSEG    CSTART:CODE:NOROOT
    182    000000                  PUBLIC  ?RESET_PSP
    183    000000                  EXTERN  ?PSP
    184    000000                  REQUIRE ?PSTACK_START
    185    000000                  REQUIRE ?RESET_PDATA_BANK
    186    000000                  EXTERN  ?PSTACK
    187    000000          
    188    000000          ?RESET_PSP:
    189    000000 75....           MOV     ?PSP,#low(sfe(PSTACK))
    190    000003          
    191    000003          
    192    000003          //--------------------------------------------------
                           ----------------------
    193    000003          //
    194    000003          // Reset xdata stack pointer
    195    000003          //
    196    000003          //--------------------------------------------------
                           ----------------------
    197    000003          
    198    000000                  RSEG    CSTART:CODE:NOROOT
    199    000000                  PUBLIC  ?RESET_XSP
    200    000000                  EXTERN  ?XSP
    201    000000                  REQUIRE ?XSTACK_START
    202    000000                  EXTERN  ?XSTACK
    203    000000          
    204    000000          ?RESET_XSP:
    205    000000 75....           MOV     ?XSP,#low(sfe(XSTACK))
    206    000003 75....           MOV     ?XSP+1,#high(sfe(XSTACK))
    207    000006          
    208    000006          
    209    000006          //--------------------------------------------------
                           ----------------------
    210    000006          //
    211    000006          // Reset code bank
    212    000006          //
    213    000006          //--------------------------------------------------
                           ----------------------
    214    000006          
    215    000006          #if ( (__CODE_MODEL__ == __CM_BANKED__) || (
                            __CODE_MODEL__ == __CM_NEAR__ ) )
    216    000000                  RSEG    CSTART:CODE:NOROOT
    217    000000                  PUBLIC  ?RESET_CODE_BANK
    218    000000                  EXTERN  ?CBANK
    219    000000          
    220    000000          ?RESET_CODE_BANK:
    221    000000 75..00           MOV     ?CBANK,#0x00
    222    000003          #endif
    223    000003          
    224    000003          
    225    000003          //--------------------------------------------------
                           ----------------------
    226    000003          //
    227    000003          // Reset pdata page
    228    000003          //
    229    000003          //--------------------------------------------------
                           ----------------------
    230    000003          
    231    000000                  RSEG    CSTART:CODE:NOROOT
    232    000000                  PUBLIC  ?RESET_PDATA_BANK
    233    000000                  EXTERN  ?PBANK
    234    000000                  EXTERN  ?PBANK_NUMBER
    235    000000          
    236    000000          ?RESET_PDATA_BANK:
    237    000000 75....           MOV     ?PBANK,#?PBANK_NUMBER
    238    000003          #if (defined ( __EXTENDED_DPTR__))
    243    000003          #endif
    244    000003          
    245    000003          
    246    000003          //--------------------------------------------------
                           ----------------------
    247    000003          //
    248    000003          // Reset data pointer select register
    249    000003          //
    250    000003          //--------------------------------------------------
                           ----------------------
    251    000003          
    252    000003          #if (__NUMBER_OF_DPTRS__ > 1)
    260    000003          #endif
    261    000003          
    262    000003          
    263    000003          
    264    000003          //--------------------------------------------------
                           ----------------------
    265    000003          //
    266    000003          // Initialize the extended1 core
    267    000003          //
    268    000003          //--------------------------------------------------
                           ----------------------
    269    000003          
    270    000003          #if (__CORE__ == __CORE_EXTENDED1__)
    281    000003          #if defined(START_INIT_IN_FAR)
    283    000003          #endif
    286    000003          #endif
    287    000003          
    288    000003          
    289    000003          
    290    000003          //--------------------------------------------------
                           ----------------------
    291    000003          //
    292    000003          // Initialize the extended2 core
    293    000003          //
    294    000003          //--------------------------------------------------
                           ----------------------
    295    000003          
    296    000003          #if (__CORE__ == __CORE_EXTENDED2__)
    315    000003          #endif
    316    000003                  
    317    000003          //--------------------------------------------------
                           ----------------------
    318    000003          //
    319    000003          // Jump to the code that performs the rest of the
                            system initialization
    320    000003          // before calling main().
    321    000003          //
    322    000003          //--------------------------------------------------
                           ----------------------
    323    000003          
    324    000003          
    325    000000                  RSEG    CSTART:CODE:NOROOT
    326    000000                  EXTERN  ?cmain
    327    000000          
    328    000000          __call_main:
    329    000000                  //P1DIR = 0xDB;
    330    000000          //        MOV  0xFE, #0x2
    331    000000          //        SETB 0x90.1
    332    000000 02....           LJMP    ?cmain
    333    000003          
    334    000003                  ENDMOD __program_start


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
CSTART              CODE  	REL 
EXT_STACK           XDATA  	REL 
INTVEC              CODE  	COMMON 
ISTACK              IDATA  	REL 
PSTACK              XDATA  	REL 
REGISTERS           DATA  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?B0                 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?CBANK              ABS    CONST EXT [004] UNTYP. __EXTERNS  Solved Extern 
?EXT_STACK_START    REL    CONST PUB UNTYP.       EXT_STACK  0 
?ISTACK_START       REL    CONST PUB UNTYP.       ISTACK     0 
?PBANK              ABS    CONST EXT [005] UNTYP. __EXTERNS  Solved Extern 
?PBANK_NUMBER       ABS    CONST EXT [006] UNTYP. __EXTERNS  Solved Extern 
?PSP                ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?PSTACK             ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?PSTACK_START       REL    CONST PUB UNTYP.       PSTACK     0 
?REGISTERS          REL    CONST PUB UNTYP.       REGISTERS  0 
?REGISTER_BANK      ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?RESET_CODE_BANK    REL    CONST PUB UNTYP.       CSTART     0 
?RESET_PDATA_BANK   REL    CONST PUB UNTYP.       CSTART     0 
?RESET_PSP          REL    CONST PUB UNTYP.       CSTART     0 
?RESET_SP           REL    CONST PUB UNTYP.       CSTART     8 
?RESET_XSP          REL    CONST PUB UNTYP.       CSTART     0 
?RET                ABS    CONST UNTYP.           ASEG       Not solved 
?RET_EXT            ABS    CONST UNTYP.           ASEG       Not solved 
?RET_HIGH           ABS    CONST UNTYP.           ASEG       Not solved 
?RET_LOW            ABS    CONST UNTYP.           ASEG       Not solved 
?V_START            ABS    CONST UNTYP.           ASEG       Not solved 
?XSP                ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
?XSTACK             ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?XSTACK_START       REL    CONST PUB UNTYP.       XSTACK     0 
?cmain              ABS    CONST EXT [007] UNTYP. __EXTERNS  Solved Extern 
?reset_vector       COMMON CONST UNTYP.           INTVEC     0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BASEADDRESS         ABS    CONST UNTYP.           ASEG       Not solved 
Base                ABS    CONST UNTYP.           ASEG       Not solved 
CFA_PSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CFA_SP              ABS    CONST UNTYP.           ASEG       Not solved 
CFA_XSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CODEALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
COMMON              ABS    CONST UNTYP.           ASEG       Not solved 
CONCAT              ABS    CONST UNTYP.           ASEG       Not solved 
DATAALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       Not solved 
DPTR0               ABS    CONST UNTYP.           ASEG       Not solved 
ENDCOMMON           ABS    CONST UNTYP.           ASEG       Not solved 
ENDNAMES            ABS    CONST UNTYP.           ASEG       Not solved 
EXTENDS             ABS    CONST UNTYP.           ASEG       Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FRAMECELL           ABS    CONST UNTYP.           ASEG       Not solved 
Frame               ABS    CONST UNTYP.           ASEG       Not solved 
NAMES               ABS    CONST UNTYP.           ASEG       Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               ABS    CONST UNTYP.           ASEG       Not solved 
PSPH                ABS    CONST UNTYP.           ASEG       Not solved 
PSPL                ABS    CONST UNTYP.           ASEG       Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RETH_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETL_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETURNADDRESS       ABS    CONST UNTYP.           ASEG       Not solved 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
Resource            ABS    CONST UNTYP.           ASEG       Not solved 
ResourceParts       ABS    CONST UNTYP.           ASEG       Not solved 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SameValue           ABS    CONST UNTYP.           ASEG       Not solved 
StackFrame          ABS    CONST UNTYP.           ASEG       Not solved 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               ABS    CONST UNTYP.           ASEG       Not solved 
Undefined           ABS    CONST UNTYP.           ASEG       Not solved 
V0                  ABS    CONST UNTYP.           ASEG       Not solved 
V1                  ABS    CONST UNTYP.           ASEG       Not solved 
V10                 ABS    CONST UNTYP.           ASEG       Not solved 
V11                 ABS    CONST UNTYP.           ASEG       Not solved 
V12                 ABS    CONST UNTYP.           ASEG       Not solved 
V13                 ABS    CONST UNTYP.           ASEG       Not solved 
V14                 ABS    CONST UNTYP.           ASEG       Not solved 
V15                 ABS    CONST UNTYP.           ASEG       Not solved 
V16                 ABS    CONST UNTYP.           ASEG       Not solved 
V17                 ABS    CONST UNTYP.           ASEG       Not solved 
V18                 ABS    CONST UNTYP.           ASEG       Not solved 
V19                 ABS    CONST UNTYP.           ASEG       Not solved 
V2                  ABS    CONST UNTYP.           ASEG       Not solved 
V20                 ABS    CONST UNTYP.           ASEG       Not solved 
V21                 ABS    CONST UNTYP.           ASEG       Not solved 
V22                 ABS    CONST UNTYP.           ASEG       Not solved 
V23                 ABS    CONST UNTYP.           ASEG       Not solved 
V24                 ABS    CONST UNTYP.           ASEG       Not solved 
V25                 ABS    CONST UNTYP.           ASEG       Not solved 
V26                 ABS    CONST UNTYP.           ASEG       Not solved 
V27                 ABS    CONST UNTYP.           ASEG       Not solved 
V28                 ABS    CONST UNTYP.           ASEG       Not solved 
V29                 ABS    CONST UNTYP.           ASEG       Not solved 
V3                  ABS    CONST UNTYP.           ASEG       Not solved 
V30                 ABS    CONST UNTYP.           ASEG       Not solved 
V31                 ABS    CONST UNTYP.           ASEG       Not solved 
V4                  ABS    CONST UNTYP.           ASEG       Not solved 
V5                  ABS    CONST UNTYP.           ASEG       Not solved 
V6                  ABS    CONST UNTYP.           ASEG       Not solved 
V7                  ABS    CONST UNTYP.           ASEG       Not solved 
V8                  ABS    CONST UNTYP.           ASEG       Not solved 
V9                  ABS    CONST UNTYP.           ASEG       Not solved 
VB                  ABS    CONST UNTYP.           ASEG       Not solved 
VirtualResource     ABS    CONST UNTYP.           ASEG       Not solved 
XSP16               ABS    CONST UNTYP.           ASEG       Not solved 
XSPH                ABS    CONST UNTYP.           ASEG       Not solved 
XSPL                ABS    CONST UNTYP.           ASEG       Not solved 
__call_main         REL    CONST UNTYP.           CSTART     0 
__program_start     REL    CONST PUB UNTYP.       CSTART     0 
cfi_banked_common   ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_names    ABS    CONST UNTYP.           ASEG       Not solved 
cfi_common          ABS    CONST UNTYP.           ASEG       Not solved 
cfi_names           ABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_commonABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_namesABS    CONST UNTYP.           ASEG       Not solved 
samevalue           ABS    CONST UNTYP.           ASEG       Not solved 
sub                 ABS    CONST UNTYP.           ASEG       Not solved 
undefined           ABS    CONST UNTYP.           ASEG       Not solved 


##############################
#          CRC:3582          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 32          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    335    000000          
    336    000000          ;---------------------------------------------------
                           -------------;
    337    000000          ; Virtual registers                                 
                                        ;
    338    000000          ; =================                                 
                                        ;
    339    000000          ; Below is some segment needed for the IAR ICC
                            C/EC++ compiler   ;
    340    000000          ;                                                   
                                        ;
    341    000000          ; BREG  : A segment for 8 bit registers for use by
                            the compiler. ;
    342    000000          ;         ?B0 is the first register.                
                                        ;
    343    000000          ; VREG  : Segement that holds up to 32 virtual
                            registers for     ;
    344    000000          ;         use by the compiler. ?V0 is the first
                            register.        ;
    345    000000          ; PSP   : Segment containing the PDATA stack pointer
                            (?PSP)      ;
    346    000000          ; XSP   : Segment containing the XDATA stack pointer
                            (?XSP)      ;
    347    000000          ;                                                   
                                        ;
    348    000000          ;---------------------------------------------------
                           -------------;
    349    000000          ; NOTE: The XLINK varialbe _NR_OF_VIRTUAL_REGISTERS
                            must be      ;
    350    000000          ;       defined to set the size for the VREG
                            segment.            ;
    351    000000          ;---------------------------------------------------
                           -------------;
    352    000000          
    353    000000                  MODULE  VIRTUAL_REGISTERS
    354    000000                  PUBLIC  ?B0
    355    000000                  PUBLIC  ?V0
    356    000000                  PUBLIC  ?PSP
    357    000000                  PUBLIC  ?XSP
    358    000000                  RSEG    BREG:BIT:NOROOT
    359    000000          
    360    000000          ?B0:
    361    000000                  DS      8
    362    000008          
    363    000000                  RSEG    VREG:DATA:NOROOT
    364    000000                  EXTERN  _NR_OF_VIRTUAL_REGISTERS
    365    000000          ?V0:
    366    000000                  DS      0
    367    000000          
    368    000000                  RSEG    PSP:DATA:NOROOT
    369    000000                  EXTERN  ?RESET_PSP
    370    000000                  REQUIRE ?RESET_PSP
    371    000000          ?PSP:
    372    000000                  DS      1
    373    000001          
    374    000000                  RSEG    XSP:DATA:NOROOT
    375    000000                  EXTERN  ?RESET_XSP
    376    000000                  REQUIRE ?RESET_XSP
    377    000000          ?XSP:
    378    000000                  DS      2
    379    000002          
    380    000002                  ENDMOD ; VIRTUAL_REGISTERS


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
BREG                BIT  	REL 
PSP                 DATA  	REL 
VREG                DATA  	REL 
XSP                 DATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?B0                 REL    CONST PUB UNTYP.       BREG       0 
?PSP                REL    CONST PUB UNTYP.       PSP        0 
?RESET_PSP          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?RESET_XSP          ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?V0                 REL    CONST PUB UNTYP.       VREG       0 
?XSP                REL    CONST PUB UNTYP.       XSP        0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
_NR_OF_VIRTUAL_REGISTERSABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 


##############################
#          CRC:9EE1          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 0          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    381    000000          
    382    000000          
    383    000000          
    384    000000          ;---------------------------------------------------
                           -------------;
    385    000000          ; Register banks                                    
                                        ;
    386    000000          ; =================                                 
                                        ;
    387    000000          ; Below is some segment needed for the IAR ICC
                            C/EC++ compiler   ;
    388    000000          ;                                                   
                                        ;
    389    000000          ; The register banks will only be included if the
                            #pragma        ;
    390    000000          ; register_bank is used for the corresponding
                            register bank      ;
    391    000000          ;                                                   
                                        ;
    392    000000          ;---------------------------------------------------
                           -------------;
    393    000000          
    394    000000                  MODULE  REGISTER_BANK0
    395    000000                  PUBLIC  __REG_BANK_0
    396    000000                  ASEGN   __REG_BANK0:DATA,0x00
    397    000000          
    398    000000          __REG_BANK_0:
    399    000000                  DS      8
    400    000008                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 
__REG_BANK0         DATA  	REL 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
__REG_BANK_0        REL    CONST PUB UNTYP.       __REG_BANK 0 


##############################
#          CRC:8BAF          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 0          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    401    000000          
    402    000000          
    403    000000                  MODULE  REGISTER_BANK1
    404    000000                  PUBLIC  __REG_BANK_1
    405    000000                  ASEGN   __REG_BANK1:DATA,0x08
    406    000000          __REG_BANK_1:
    407    000000                  DS      8
    408    000008                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 
__REG_BANK1         DATA  	REL 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
__REG_BANK_1        REL    CONST PUB UNTYP.       __REG_BANK 0 


##############################
#          CRC:7A97          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 0          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    409    000000          
    410    000000          
    411    000000                  MODULE  REGISTER_BANK2
    412    000000                  PUBLIC  __REG_BANK_2
    413    000000                  ASEGN   __REG_BANK2:DATA,0x10
    414    000000          __REG_BANK_2:
    415    000000                  DS      8
    416    000008                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 
__REG_BANK2         DATA  	REL 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
__REG_BANK_2        REL    CONST PUB UNTYP.       __REG_BANK 0 


##############################
#          CRC:F333          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 0          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    417    000000          
    418    000000          
    419    000000                  MODULE  REGISTER_BANK3
    420    000000                  PUBLIC  __REG_BANK_3
    421    000000                  ASEGN   __REG_BANK3:DATA,0x18
    422    000000          __REG_BANK_3:
    423    000000                  DS      8
    424    000008                  ENDMOD  ; REGISTER_BANK3


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 
__REG_BANK3         DATA  	REL 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
__REG_BANK_3        REL    CONST PUB UNTYP.       __REG_BANK 0 


##############################
#          CRC:20B           #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 0          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    425    000000              
    426    000000          #include "ioCC2510.h"
    427    000000              MODULE  flashDmaTrigger.s51
    428    000000          ;    RSEG RCODE (1)
    429    000000              RSEG CSTART:CODE:NOROOT
    430    000000              PUBLIC halFlashDmaTrigger
    431    000000              FUNCTION halFlashDmaTrigger, 0203H
    432    000000                
    433    000000              halFlashDmaTrigger:
    434    000000 43AE02       ORL FCTL, #0x02;
    435    000003 22           RET;
    436    000004              ENDMOD;


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
AC                   #define, value: ACx, line:      50:4      210:4    349:4
ACALL                MNEMONIC 
ACC                  #define, value: ACCx, line:      46:4      229:4
ADC_VECTOR           #define, value: VECT( 1, 0x0B ), line:      80:4  
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
ADDR                 #define, value: XREG( 0xDF05 ), line:     397:4  
AGCCTRL0             #define, value: XREG( 0xDF19 ), line:     417:4  
AGCCTRL1             #define, value: XREG( 0xDF18 ), line:     416:4  
AGCCTRL2             #define, value: XREG( 0xDF17 ), line:     415:4  
AGCTEST              #define, value: XREG( 0xDF22 ), line:     426:4  
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
B                    #define, value: Bx, line:      47:4      248:4
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BSCFG                #define, value: XREG( 0xDF16 ), line:     414:4  
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CHANNR               #define, value: XREG( 0xDF06 ), line:     398:4  
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   #define, value: CYx, line:      49:4      210:4    348:4
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DEVIATN              #define, value: XREG( 0xDF11 ), line:     409:4  
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DMA_VECTOR           #define, value: VECT( 8, 0x43 ), line:      87:4  
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
ENC_VECTOR           #define, value: VECT( 4, 0x23 ), line:      83:4  
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
F0                   #define, value: F0x, line:      51:4      210:4    350:4
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOCCFG               #define, value: XREG( 0xDF15 ), line:     413:4  
FOR                  DIRECTIVE 
FREND0               #define, value: XREG( 0xDF1B ), line:     419:4  
FREND1               #define, value: XREG( 0xDF1A ), line:     418:4  
FREQ0                #define, value: XREG( 0xDF0B ), line:     403:4  
FREQ1                #define, value: XREG( 0xDF0A ), line:     402:4  
FREQ2                #define, value: XREG( 0xDF09 ), line:     401:4  
FREQEST              #define, value: XREG( 0xDF38 ), line:     448:4  
FSCAL0               #define, value: XREG( 0xDF1F ), line:     423:4  
FSCAL1               #define, value: XREG( 0xDF1E ), line:     422:4  
FSCAL2               #define, value: XREG( 0xDF1D ), line:     421:4  
FSCAL3               #define, value: XREG( 0xDF1C ), line:     420:4  
FSCTRL0              #define, value: XREG( 0xDF08 ), line:     400:4  
FSCTRL1              #define, value: XREG( 0xDF07 ), line:     399:4  
FSTEST               #define, value: XREG( 0xDF20 ), line:     424:4  
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
I2SCFG0              #define, value: XREG( 0xDF40 ), line:     460:4  
I2SCFG1              #define, value: XREG( 0xDF41 ), line:     461:4  
I2SCLKF0             #define, value: XREG( 0xDF46 ), line:     466:4  
I2SCLKF1             #define, value: XREG( 0xDF47 ), line:     467:4  
I2SCLKF2             #define, value: XREG( 0xDF48 ), line:     468:4  
I2SDATH              #define, value: XREG( 0xDF43 ), line:     463:4  
I2SDATL              #define, value: XREG( 0xDF42 ), line:     462:4  
I2SRXIE              #define, value: URX1IE, line:     382:4  
I2SRXIF              #define, value: URX1IF, line:     384:4  
I2SRX_VECTOR         #define, value: URX1_VECTOR, line:     102:4  
I2SSTAT              #define, value: XREG( 0xDF45 ), line:     465:4  
I2STXIF              #define, value: UTX1IF, line:     385:4  
I2STX_VECTOR         #define, value: UTX1_VECTOR, line:     103:4  
I2SWCNT              #define, value: XREG( 0xDF44 ), line:     464:4  
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
IOCC2510_H           #define, value: , line:      10:4  
IOCFG0               #define, value: XREG( 0xDF31 ), line:     441:4  
IOCFG1               #define, value: XREG( 0xDF30 ), line:     440:4  
IOCFG2               #define, value: XREG( 0xDF2F ), line:     439:4  
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LQI                  #define, value: XREG( 0xDF39 ), line:     449:4  
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MARCSTATE            #define, value: XREG( 0xDF3B ), line:     451:4  
MCSM0                #define, value: XREG( 0xDF14 ), line:     412:4  
MCSM1                #define, value: XREG( 0xDF13 ), line:     411:4  
MCSM2                #define, value: XREG( 0xDF12 ), line:     410:4  
MDMCFG0              #define, value: XREG( 0xDF10 ), line:     408:4  
MDMCFG1              #define, value: XREG( 0xDF0F ), line:     407:4  
MDMCFG2              #define, value: XREG( 0xDF0E ), line:     406:4  
MDMCFG3              #define, value: XREG( 0xDF0D ), line:     405:4  
MDMCFG4              #define, value: XREG( 0xDF0C ), line:     404:4  
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
OV                   #define, value: OVx, line:      54:4      210:4    353:4
P                    #define, value: Px, line:      55:4      210:4    355:4
P0INT_VECTOR         #define, value: VECT( 13, 0x6B ), line:      92:4  
P1INT_VECTOR         #define, value: VECT( 15, 0x7B ), line:      94:4  
P2INT_VECTOR         #define, value: VECT( 6, 0x33 ), line:      85:4  
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PARTNUM              #define, value: XREG( 0xDF36 ), line:     446:4  
PA_TABLE0            #define, value: XREG( 0xDF2E ), line:     438:4  
PA_TABLE1            #define, value: XREG( 0xDF2D ), line:     437:4  
PA_TABLE2            #define, value: XREG( 0xDF2C ), line:     436:4  
PA_TABLE3            #define, value: XREG( 0xDF2B ), line:     435:4  
PA_TABLE4            #define, value: XREG( 0xDF2A ), line:     434:4  
PA_TABLE5            #define, value: XREG( 0xDF29 ), line:     433:4  
PA_TABLE6            #define, value: XREG( 0xDF28 ), line:     432:4  
PA_TABLE7            #define, value: XREG( 0xDF27 ), line:     431:4  
PC                   REGISTER 
PKTCTRL0             #define, value: XREG( 0xDF04 ), line:     396:4  
PKTCTRL1             #define, value: XREG( 0xDF03 ), line:     395:4  
PKTLEN               #define, value: XREG( 0xDF02 ), line:     394:4  
PKTSTATUS            #define, value: XREG( 0xDF3C ), line:     452:4  
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PSW                  #define, value: PSWx, line:      48:4      210:4
PTEST                #define, value: XREG( 0xDF21 ), line:     425:4  
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RFTXRX_VECTOR        #define, value: VECT( 0, 0x03 ), line:      79:4  
RF_VECTOR            #define, value: VECT( 16, 0x83 ), line:      95:4  
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RS0                  #define, value: RS0x, line:      53:4      210:4    352:4
RS1                  #define, value: RS1x, line:      52:4      210:4    351:4
RSEG                 DIRECTIVE 
RSSI                 #define, value: XREG( 0xDF3A ), line:     450:4  
RTMODEL              DIRECTIVE 
S                    PREFIX 
SBIT                 #define,            line:      41:4      274:4    275:4    276:4    277:4
                                                                    278:4    279:4    280:4    281:4
                                                                    284:4    285:4    286:4    287:4
                                                                    288:4    289:4    290:4    291:4
                                                                    294:4    295:4    296:4    297:4
                                                                    298:4    299:4    300:4    301:4
                                                                    304:4    305:4    308:4    309:4
                                                                    310:4    311:4    312:4    313:4
                                                                    314:4    315:4    318:4    319:4
                                                                    320:4    321:4    322:4    323:4
                                                                    324:4    325:4    328:4    329:4
                                                                    330:4    331:4    332:4    333:4
                                                                    334:4    335:4    338:4    339:4
                                                                    340:4    341:4    342:4    343:4
                                                                    344:4    345:4    348:4    349:4
                                                                    350:4    351:4    352:4    353:4
                                                                    354:4    355:4    358:4    359:4
                                                                    360:4    361:4    362:4    363:4
                                                                    364:4    365:4    368:4    369:4
                                                                    370:4    371:4    372:4    373:4
                                                                    374:4    375:4
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFR                  #define,            line:      39:4      113:4    114:4    115:4    116:4
                                                                    117:4    118:4    119:4    123:4
                                                                    124:4    125:4    126:4    127:4
                                                                    128:4    129:4    133:4    134:4
                                                                    135:4    136:4    137:4    138:4
                                                                    139:4    143:4    144:4    145:4
                                                                    146:4    147:4    148:4    149:4
                                                                    153:4    154:4    155:4    156:4
                                                                    157:4    158:4    159:4    163:4
                                                                    164:4    165:4    166:4    167:4
                                                                    168:4    169:4    171:4    172:4
                                                                    173:4    174:4    175:4    176:4
                                                                    177:4    178:4    182:4    183:4
                                                                    184:4    185:4    186:4    187:4
                                                                    188:4    192:4    193:4    194:4
                                                                    195:4    196:4    197:4    198:4
                                                                    200:4    201:4    202:4    203:4
                                                                    204:4    205:4    206:4    207:4
                                                                    211:4    212:4    213:4    214:4
                                                                    215:4    216:4    217:4    221:4
                                                                    222:4    223:4    224:4    225:4
                                                                    226:4    227:4    229:4    230:4
                                                                    231:4    232:4    233:4    234:4
                                                                    235:4    236:4    240:4    241:4
                                                                    242:4    243:4    244:4    245:4
                                                                    246:4    248:4    249:4    250:4
                                                                    251:4    252:4    253:4    254:4
                                                                    255:4    259:4    260:4    261:4
                                                                    262:4    263:4    264:4    265:4
SFRBIT               #define,            line:      40:4      112:4    122:4    132:4    142:4
                                                                    152:4    162:4    181:4    191:4
                                                                    210:4    220:4    239:4    258:4
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SP                   #define, value: SPx, line:      45:4      113:4
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
ST_VECTOR            #define, value: VECT( 5, 0x2B ), line:      84:4  
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
SYNC0                #define, value: XREG( 0xDF01 ), line:     393:4  
SYNC1                #define, value: XREG( 0xDF00 ), line:     392:4  
T1_VECTOR            #define, value: VECT( 9, 0x4B ), line:      88:4  
T2_VECTOR            #define, value: VECT( 10, 0x53 ), line:      89:4  
T3_VECTOR            #define, value: VECT( 11, 0x5B ), line:      90:4  
T4_VECTOR            #define, value: VECT( 12, 0x63 ), line:      91:4  
TEST0                #define, value: XREG( 0xDF25 ), line:     429:4  
TEST1                #define, value: XREG( 0xDF24 ), line:     428:4  
TEST2                #define, value: XREG( 0xDF23 ), line:     427:4  
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
URX0_VECTOR          #define, value: VECT( 2, 0x13 ), line:      81:4  
URX1_VECTOR          #define, value: VECT( 3, 0x1B ), line:      82:4  
UTX0_VECTOR          #define, value: VECT( 7, 0x3B ), line:      86:4  
UTX1_VECTOR          #define, value: VECT( 14, 0x73 ), line:      93:4  
VCO_VC_DAC           #define, value: XREG( 0xDF3D ), line:     453:4  
VECT                 #define,            line:      43:4  
VERSION              #define, value: XREG( 0xDF37 ), line:     447:4  
WDT_VECTOR           #define, value: VECT( 17, 0x8B ), line:      96:4  
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XREG                 #define,            line:      42:4  
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
X_ADCCFG             #define, value: XREG( 0xDFF2 ), line:     614:4  
X_ADCCON1            #define, value: XREG( 0xDFB4 ), line:     544:4  
X_ADCCON2            #define, value: XREG( 0xDFB5 ), line:     545:4  
X_ADCCON3            #define, value: XREG( 0xDFB6 ), line:     546:4  
X_ADCH               #define, value: XREG( 0xDFBB ), line:     552:4  
X_ADCL               #define, value: XREG( 0xDFBA ), line:     551:4  
X_CLKCON             #define, value: XREG( 0xDFC6 ), line:     564:4  
X_DMA0CFGH           #define, value: XREG( 0xDFD5 ), line:     581:4  
X_DMA0CFGL           #define, value: XREG( 0xDFD4 ), line:     580:4  
X_DMA1CFGH           #define, value: XREG( 0xDFD3 ), line:     579:4  
X_DMA1CFGL           #define, value: XREG( 0xDFD2 ), line:     578:4  
X_DMAARM             #define, value: XREG( 0xDFD6 ), line:     582:4  
X_DMAIRQ             #define, value: XREG( 0xDFD1 ), line:     577:4  
X_DMAREQ             #define, value: XREG( 0xDFD7 ), line:     583:4  
X_ENCCS              #define, value: XREG( 0xDFB3 ), line:     543:4  
X_ENCDI              #define, value: XREG( 0xDFB1 ), line:     541:4  
X_ENCDO              #define, value: XREG( 0xDFB2 ), line:     542:4  
X_FADDRH             #define, value: XREG( 0xDFAD ), line:     536:4  
X_FADDRL             #define, value: XREG( 0xDFAC ), line:     535:4  
X_FCTL               #define, value: XREG( 0xDFAE ), line:     537:4  
X_FWDATA             #define, value: XREG( 0xDFAF ), line:     538:4  
X_FWT                #define, value: XREG( 0xDFAB ), line:     534:4  
X_MEMCTR             #define, value: XREG( 0xDFC7 ), line:     565:4  
X_MPAGE              #define, value: XREG( 0xDF93 ), line:     507:4  
X_P0DIR              #define, value: XREG( 0xDFFD ), line:     626:4  
X_P0IFG              #define, value: XREG( 0xDF89 ), line:     496:4  
X_P0INP              #define, value: XREG( 0xDF8F ), line:     502:4  
X_P0SEL              #define, value: XREG( 0xDFF3 ), line:     615:4  
X_P1DIR              #define, value: XREG( 0xDFFE ), line:     627:4  
X_P1IEN              #define, value: XREG( 0xDF8D ), line:     500:4  
X_P1IFG              #define, value: XREG( 0xDF8A ), line:     497:4  
X_P1INP              #define, value: XREG( 0xDFF6 ), line:     618:4  
X_P1SEL              #define, value: XREG( 0xDFF4 ), line:     616:4  
X_P2DIR              #define, value: XREG( 0xDFFF ), line:     628:4  
X_P2IFG              #define, value: XREG( 0xDF8B ), line:     498:4  
X_P2INP              #define, value: XREG( 0xDFF7 ), line:     619:4  
X_P2SEL              #define, value: XREG( 0xDFF5 ), line:     617:4  
X_PERCFG             #define, value: XREG( 0xDFF1 ), line:     613:4  
X_PICTL              #define, value: XREG( 0xDF8C ), line:     499:4  
X_RFD                #define, value: XREG( 0xDFD9 ), line:     586:4  
X_RFIF               #define, value: XREG( 0xDFE9 ), line:     604:4  
X_RFIM               #define, value: XREG( 0xDF91 ), line:     505:4  
X_RFST               #define, value: XREG( 0xDFE1 ), line:     595:4  
X_RNDH               #define, value: XREG( 0xDFBD ), line:     554:4  
X_RNDL               #define, value: XREG( 0xDFBC ), line:     553:4  
X_SLEEP              #define, value: XREG( 0xDFBE ), line:     555:4  
X_T1CC0H             #define, value: XREG( 0xDFDB ), line:     588:4  
X_T1CC0L             #define, value: XREG( 0xDFDA ), line:     587:4  
X_T1CC1H             #define, value: XREG( 0xDFDD ), line:     590:4  
X_T1CC1L             #define, value: XREG( 0xDFDC ), line:     589:4  
X_T1CC2H             #define, value: XREG( 0xDFDF ), line:     592:4  
X_T1CC2L             #define, value: XREG( 0xDFDE ), line:     591:4  
X_T1CCTL0            #define, value: XREG( 0xDFE5 ), line:     599:4  
X_T1CCTL1            #define, value: XREG( 0xDFE6 ), line:     600:4  
X_T1CCTL2            #define, value: XREG( 0xDFE7 ), line:     601:4  
X_T1CNTH             #define, value: XREG( 0xDFE3 ), line:     597:4  
X_T1CNTL             #define, value: XREG( 0xDFE2 ), line:     596:4  
X_T1CTL              #define, value: XREG( 0xDFE4 ), line:     598:4  
X_T2CT               #define, value: XREG( 0xDF9C ), line:     517:4  
X_T2CTL              #define, value: XREG( 0xDF9E ), line:     519:4  
X_T2PR               #define, value: XREG( 0xDF9D ), line:     518:4  
X_T3CC0              #define, value: XREG( 0xDFCD ), line:     572:4  
X_T3CC1              #define, value: XREG( 0xDFCF ), line:     574:4  
X_T3CCTL0            #define, value: XREG( 0xDFCC ), line:     571:4  
X_T3CCTL1            #define, value: XREG( 0xDFCE ), line:     573:4  
X_T3CNT              #define, value: XREG( 0xDFCA ), line:     569:4  
X_T3CTL              #define, value: XREG( 0xDFCB ), line:     570:4  
X_T4CC0              #define, value: XREG( 0xDFED ), line:     608:4  
X_T4CC1              #define, value: XREG( 0xDFEF ), line:     610:4  
X_T4CCTL0            #define, value: XREG( 0xDFEC ), line:     607:4  
X_T4CCTL1            #define, value: XREG( 0xDFEE ), line:     609:4  
X_T4CNT              #define, value: XREG( 0xDFEA ), line:     605:4  
X_T4CTL              #define, value: XREG( 0xDFEB ), line:     606:4  
X_TIMIF              #define, value: XREG( 0xDFD8 ), line:     585:4  
X_U0BAUD             #define, value: XREG( 0xDFC2 ), line:     560:4  
X_U0CSR              #define, value: XREG( 0xDF86 ), line:     492:4  
X_U0DBUF             #define, value: XREG( 0xDFC1 ), line:     559:4  
X_U0GCR              #define, value: XREG( 0xDFC5 ), line:     563:4  
X_U0UCR              #define, value: XREG( 0xDFC4 ), line:     562:4  
X_U1BAUD             #define, value: XREG( 0xDFFA ), line:     623:4  
X_U1CSR              #define, value: XREG( 0xDFF8 ), line:     621:4  
X_U1DBUF             #define, value: XREG( 0xDFF9 ), line:     622:4  
X_U1GCR              #define, value: XREG( 0xDFFC ), line:     625:4  
X_U1UCR              #define, value: XREG( 0xDFFB ), line:     624:4  
X_WDCTL              #define, value: XREG( 0xDFC9 ), line:     568:4  
X_WORCTL             #define, value: XREG( 0xDFA2 ), line:     524:4  
X_WOREVT0            #define, value: XREG( 0xDFA3 ), line:     525:4  
X_WOREVT1            #define, value: XREG( 0xDFA4 ), line:     526:4  
X_WORIRQ             #define, value: XREG( 0xDFA1 ), line:     523:4  
X_WORTIME0           #define, value: XREG( 0xDFA5 ), line:     527:4  
X_WORTIME1           #define, value: XREG( 0xDFA6 ), line:     528:4  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
_NA_ACC              #define, value: XREG( 0xDFE0 ), line:     594:4  
_NA_B                #define, value: XREG( 0xDFF0 ), line:     612:4  
_NA_DPH0             #define, value: XREG( 0xDF83 ), line:     489:4  
_NA_DPH1             #define, value: XREG( 0xDF85 ), line:     491:4  
_NA_DPL0             #define, value: XREG( 0xDF82 ), line:     488:4  
_NA_DPL1             #define, value: XREG( 0xDF84 ), line:     490:4  
_NA_DPS              #define, value: XREG( 0xDF92 ), line:     506:4  
_NA_IEN0             #define, value: XREG( 0xDFA8 ), line:     531:4  
_NA_IEN1             #define, value: XREG( 0xDFB8 ), line:     549:4  
_NA_IEN2             #define, value: XREG( 0xDF9A ), line:     515:4  
_NA_IP0              #define, value: XREG( 0xDFA9 ), line:     532:4  
_NA_IP1              #define, value: XREG( 0xDFB9 ), line:     550:4  
_NA_IRCON            #define, value: XREG( 0xDFC0 ), line:     558:4  
_NA_IRCON2           #define, value: XREG( 0xDFE8 ), line:     603:4  
_NA_P0               #define, value: XREG( 0xDF80 ), line:     486:4  
_NA_P1               #define, value: XREG( 0xDF90 ), line:     504:4  
_NA_P2               #define, value: XREG( 0xDFA0 ), line:     522:4  
_NA_PCON             #define, value: XREG( 0xDF87 ), line:     493:4  
_NA_PSW              #define, value: XREG( 0xDFD0 ), line:     576:4  
_NA_S0CON            #define, value: XREG( 0xDF98 ), line:     513:4  
_NA_S1CON            #define, value: XREG( 0xDF9B ), line:     516:4  
_NA_SP               #define, value: XREG( 0xDF81 ), line:     487:4  
_NA_TCON             #define, value: XREG( 0xDF88 ), line:     495:4  
_XREGDF26            #define, value: XREG( 0xDF26 ), line:     430:4  
_XREGDF32            #define, value: XREG( 0xDF32 ), line:     442:4  
_XREGDF33            #define, value: XREG( 0xDF33 ), line:     443:4  
_XREGDF34            #define, value: XREG( 0xDF34 ), line:     444:4  
_XREGDF35            #define, value: XREG( 0xDF35 ), line:     445:4  
_X_SFR8E             #define, value: XREG( 0xDF8E ), line:     501:4  
_X_SFR94             #define, value: XREG( 0xDF94 ), line:     508:4  
_X_SFR95             #define, value: XREG( 0xDF95 ), line:     509:4  
_X_SFR96             #define, value: XREG( 0xDF96 ), line:     510:4  
_X_SFR97             #define, value: XREG( 0xDF97 ), line:     511:4  
_X_SFR99             #define, value: XREG( 0xDF99 ), line:     514:4  
_X_SFR9F             #define, value: XREG( 0xDF9F ), line:     520:4  
_X_SFRA7             #define, value: XREG( 0xDFA7 ), line:     529:4  
_X_SFRAA             #define, value: XREG( 0xDFAA ), line:     533:4  
_X_SFRB0             #define, value: XREG( 0xDFB0 ), line:     540:4  
_X_SFRB7             #define, value: XREG( 0xDFB7 ), line:     547:4  
_X_SFRBF             #define, value: XREG( 0xDFBF ), line:     556:4  
_X_SFRC3             #define, value: XREG( 0xDFC3 ), line:     561:4  
_X_SFRC8             #define, value: XREG( 0xDFC8 ), line:     567:4  
__A51__              Target symbol: 0 
__AX51__             Target symbol: 0 
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
__no_init            Target symbol: 0 
__sfr                Target symbol: 0 
__xdata              Target symbol: 0 
addr                 Target symbol: 0 
bit0                 Target symbol: 0 
bit1                 Target symbol: 0 
bit2                 Target symbol: 0 
bit3                 Target symbol: 0 
bit4                 Target symbol: 0 
bit5                 Target symbol: 0 
bit6                 Target symbol: 0 
bit7                 Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
char                 Target symbol: 0 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
num                  Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
sbit                 Target symbol: 0 
sfr                  Target symbol: 0 
struct               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
union                Target symbol: 0 
unsigned             Target symbol: 0 
volatile             Target symbol: 0 
xdata                Target symbol: 0 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
CSTART              CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
ACCx                ABS    CONST UNTYP.           ASEG       E0 
ACx                 ABS    CONST UNTYP.           ASEG       D6 
ADCCFG              ABS    CONST UNTYP.           ASEG       F2 
ADCCON1             ABS    CONST UNTYP.           ASEG       B4 
ADCCON2             ABS    CONST UNTYP.           ASEG       B5 
ADCCON3             ABS    CONST UNTYP.           ASEG       B6 
ADCH                ABS    CONST UNTYP.           ASEG       BB 
ADCIE               ABS    CONST UNTYP.           ASEG       A9 
ADCIF               ABS    CONST UNTYP.           ASEG       8D 
ADCL                ABS    CONST UNTYP.           ASEG       BA 
Bx                  ABS    CONST UNTYP.           ASEG       F0 
CLKCON              ABS    CONST UNTYP.           ASEG       C6 
CYx                 ABS    CONST UNTYP.           ASEG       D7 
DMA0CFGH            ABS    CONST UNTYP.           ASEG       D5 
DMA0CFGL            ABS    CONST UNTYP.           ASEG       D4 
DMA1CFGH            ABS    CONST UNTYP.           ASEG       D3 
DMA1CFGL            ABS    CONST UNTYP.           ASEG       D2 
DMAARM              ABS    CONST UNTYP.           ASEG       D6 
DMAIE               ABS    CONST UNTYP.           ASEG       B8 
DMAIF               ABS    CONST UNTYP.           ASEG       C0 
DMAIRQ              ABS    CONST UNTYP.           ASEG       D1 
DMAREQ              ABS    CONST UNTYP.           ASEG       D7 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       83 
DPH1                ABS    CONST UNTYP.           ASEG       85 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       82 
DPL1                ABS    CONST UNTYP.           ASEG       84 
DPS                 ABS    CONST UNTYP.           ASEG       92 
EA                  ABS    CONST UNTYP.           ASEG       AF 
ENCCS               ABS    CONST UNTYP.           ASEG       B3 
ENCDI               ABS    CONST UNTYP.           ASEG       B1 
ENCDO               ABS    CONST UNTYP.           ASEG       B2 
ENCIE               ABS    CONST UNTYP.           ASEG       AC 
ENCIF_0             ABS    CONST UNTYP.           ASEG       98 
ENCIF_1             ABS    CONST UNTYP.           ASEG       99 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0x                 ABS    CONST UNTYP.           ASEG       D5 
F1                  ABS    CONST UNTYP.           ASEG       D1 
FADDRH              ABS    CONST UNTYP.           ASEG       AD 
FADDRL              ABS    CONST UNTYP.           ASEG       AC 
FCTL                ABS    CONST UNTYP.           ASEG       AE 
FWDATA              ABS    CONST UNTYP.           ASEG       AF 
FWT                 ABS    CONST UNTYP.           ASEG       AB 
IEN0                ABS    CONST UNTYP.           ASEG       A8 
IEN1                ABS    CONST UNTYP.           ASEG       B8 
IEN2                ABS    CONST UNTYP.           ASEG       9A 
IP0                 ABS    CONST UNTYP.           ASEG       A9 
IP1                 ABS    CONST UNTYP.           ASEG       B9 
IRCON               ABS    CONST UNTYP.           ASEG       C0 
IRCON2              ABS    CONST UNTYP.           ASEG       E8 
IT0                 ABS    CONST UNTYP.           ASEG       88 
IT1                 ABS    CONST UNTYP.           ASEG       8A 
MEMCTR              ABS    CONST UNTYP.           ASEG       C7 
MPAGE               ABS    CONST UNTYP.           ASEG       93 
OVFIM               ABS    CONST UNTYP.           ASEG       DE 
OVx                 ABS    CONST UNTYP.           ASEG       D2 
P0                  ABS    CONST UNTYP.           ASEG       80 
P0DIR               ABS    CONST UNTYP.           ASEG       FD 
P0IE                ABS    CONST UNTYP.           ASEG       BD 
P0IF                ABS    CONST UNTYP.           ASEG       C5 
P0IFG               ABS    CONST UNTYP.           ASEG       89 
P0INP               ABS    CONST UNTYP.           ASEG       8F 
P0SEL               ABS    CONST UNTYP.           ASEG       F3 
P0_0                ABS    CONST UNTYP.           ASEG       80 
P0_1                ABS    CONST UNTYP.           ASEG       81 
P0_2                ABS    CONST UNTYP.           ASEG       82 
P0_3                ABS    CONST UNTYP.           ASEG       83 
P0_4                ABS    CONST UNTYP.           ASEG       84 
P0_5                ABS    CONST UNTYP.           ASEG       85 
P0_6                ABS    CONST UNTYP.           ASEG       86 
P0_7                ABS    CONST UNTYP.           ASEG       87 
P1                  ABS    CONST UNTYP.           ASEG       90 
P1DIR               ABS    CONST UNTYP.           ASEG       FE 
P1IEN               ABS    CONST UNTYP.           ASEG       8D 
P1IF                ABS    CONST UNTYP.           ASEG       EB 
P1IFG               ABS    CONST UNTYP.           ASEG       8A 
P1INP               ABS    CONST UNTYP.           ASEG       F6 
P1SEL               ABS    CONST UNTYP.           ASEG       F4 
P1_0                ABS    CONST UNTYP.           ASEG       90 
P1_1                ABS    CONST UNTYP.           ASEG       91 
P1_2                ABS    CONST UNTYP.           ASEG       92 
P1_3                ABS    CONST UNTYP.           ASEG       93 
P1_4                ABS    CONST UNTYP.           ASEG       94 
P1_5                ABS    CONST UNTYP.           ASEG       95 
P1_6                ABS    CONST UNTYP.           ASEG       96 
P1_7                ABS    CONST UNTYP.           ASEG       97 
P2                  ABS    CONST UNTYP.           ASEG       A0 
P2DIR               ABS    CONST UNTYP.           ASEG       FF 
P2IF                ABS    CONST UNTYP.           ASEG       E8 
P2IFG               ABS    CONST UNTYP.           ASEG       8B 
P2INP               ABS    CONST UNTYP.           ASEG       F7 
P2SEL               ABS    CONST UNTYP.           ASEG       F5 
P2_0                ABS    CONST UNTYP.           ASEG       A0 
P2_1                ABS    CONST UNTYP.           ASEG       A1 
P2_2                ABS    CONST UNTYP.           ASEG       A2 
P2_3                ABS    CONST UNTYP.           ASEG       A3 
P2_4                ABS    CONST UNTYP.           ASEG       A4 
PCON                ABS    CONST UNTYP.           ASEG       87 
PERCFG              ABS    CONST UNTYP.           ASEG       F1 
PICTL               ABS    CONST UNTYP.           ASEG       8C 
PSWx                ABS    CONST UNTYP.           ASEG       D0 
Px                  ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RFD                 ABS    CONST UNTYP.           ASEG       D9 
RFIF                ABS    CONST UNTYP.           ASEG       E9 
RFIM                ABS    CONST UNTYP.           ASEG       91 
RFST                ABS    CONST UNTYP.           ASEG       E1 
RFTXRXIE            ABS    CONST UNTYP.           ASEG       A8 
RFTXRXIF            ABS    CONST UNTYP.           ASEG       89 
RNDH                ABS    CONST UNTYP.           ASEG       BD 
RNDL                ABS    CONST UNTYP.           ASEG       BC 
RS0x                ABS    CONST UNTYP.           ASEG       D3 
RS1x                ABS    CONST UNTYP.           ASEG       D4 
S0CON               ABS    CONST UNTYP.           ASEG       98 
S1CON               ABS    CONST UNTYP.           ASEG       9B 
SINT                ABS    CONST UNTYP.           ASEG       23 
SLEEP               ABS    CONST UNTYP.           ASEG       BE 
SPx                 ABS    CONST UNTYP.           ASEG       81 
STIE                ABS    CONST UNTYP.           ASEG       AD 
STIF                ABS    CONST UNTYP.           ASEG       C7 
T1CC0H              ABS    CONST UNTYP.           ASEG       DB 
T1CC0L              ABS    CONST UNTYP.           ASEG       DA 
T1CC1H              ABS    CONST UNTYP.           ASEG       DD 
T1CC1L              ABS    CONST UNTYP.           ASEG       DC 
T1CC2H              ABS    CONST UNTYP.           ASEG       DF 
T1CC2L              ABS    CONST UNTYP.           ASEG       DE 
T1CCTL0             ABS    CONST UNTYP.           ASEG       E5 
T1CCTL1             ABS    CONST UNTYP.           ASEG       E6 
T1CCTL2             ABS    CONST UNTYP.           ASEG       E7 
T1CNTH              ABS    CONST UNTYP.           ASEG       E3 
T1CNTL              ABS    CONST UNTYP.           ASEG       E2 
T1CTL               ABS    CONST UNTYP.           ASEG       E4 
T1IE                ABS    CONST UNTYP.           ASEG       B9 
T1IF                ABS    CONST UNTYP.           ASEG       C1 
T2CT                ABS    CONST UNTYP.           ASEG       9C 
T2CTL               ABS    CONST UNTYP.           ASEG       9E 
T2IE                ABS    CONST UNTYP.           ASEG       BA 
T2IF                ABS    CONST UNTYP.           ASEG       C2 
T2PR                ABS    CONST UNTYP.           ASEG       9D 
T3CC0               ABS    CONST UNTYP.           ASEG       CD 
T3CC1               ABS    CONST UNTYP.           ASEG       CF 
T3CCTL0             ABS    CONST UNTYP.           ASEG       CC 
T3CCTL1             ABS    CONST UNTYP.           ASEG       CE 
T3CH0IF             ABS    CONST UNTYP.           ASEG       D9 
T3CH1IF             ABS    CONST UNTYP.           ASEG       DA 
T3CNT               ABS    CONST UNTYP.           ASEG       CA 
T3CTL               ABS    CONST UNTYP.           ASEG       CB 
T3IE                ABS    CONST UNTYP.           ASEG       BB 
T3IF                ABS    CONST UNTYP.           ASEG       C3 
T3OVFIF             ABS    CONST UNTYP.           ASEG       D8 
T4CC0               ABS    CONST UNTYP.           ASEG       ED 
T4CC1               ABS    CONST UNTYP.           ASEG       EF 
T4CCTL0             ABS    CONST UNTYP.           ASEG       EC 
T4CCTL1             ABS    CONST UNTYP.           ASEG       EE 
T4CH0IF             ABS    CONST UNTYP.           ASEG       DC 
T4CH1IF             ABS    CONST UNTYP.           ASEG       DD 
T4CNT               ABS    CONST UNTYP.           ASEG       EA 
T4CTL               ABS    CONST UNTYP.           ASEG       EB 
T4IE                ABS    CONST UNTYP.           ASEG       BC 
T4IF                ABS    CONST UNTYP.           ASEG       C4 
T4OVFIF             ABS    CONST UNTYP.           ASEG       DB 
TCON                ABS    CONST UNTYP.           ASEG       88 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
TIMIF               ABS    CONST UNTYP.           ASEG       D8 
U0BAUD              ABS    CONST UNTYP.           ASEG       C2 
U0CSR               ABS    CONST UNTYP.           ASEG       86 
U0DBUF              ABS    CONST UNTYP.           ASEG       C1 
U0GCR               ABS    CONST UNTYP.           ASEG       C5 
U0UCR               ABS    CONST UNTYP.           ASEG       C4 
U1ACTIVE            ABS    CONST UNTYP.           ASEG       Not solved 
U1BAUD              ABS    CONST UNTYP.           ASEG       FA 
U1CSR               ABS    CONST UNTYP.           ASEG       F8 
U1DBUF              ABS    CONST UNTYP.           ASEG       F9 
U1ERR               ABS    CONST UNTYP.           ASEG       Not solved 
U1FE                ABS    CONST UNTYP.           ASEG       Not solved 
U1GCR               ABS    CONST UNTYP.           ASEG       FC 
U1MODE              ABS    CONST UNTYP.           ASEG       Not solved 
U1RE                ABS    CONST UNTYP.           ASEG       Not solved 
U1RX_BYTE           ABS    CONST UNTYP.           ASEG       Not solved 
U1SLAVE             ABS    CONST UNTYP.           ASEG       Not solved 
U1TX_BYTE           ABS    CONST UNTYP.           ASEG       Not solved 
U1UCR               ABS    CONST UNTYP.           ASEG       FB 
URX0IE              ABS    CONST UNTYP.           ASEG       AA 
URX0IF              ABS    CONST UNTYP.           ASEG       8B 
URX1IE              ABS    CONST UNTYP.           ASEG       AB 
URX1IF              ABS    CONST UNTYP.           ASEG       8F 
UTX0IF              ABS    CONST UNTYP.           ASEG       E9 
UTX1IF              ABS    CONST UNTYP.           ASEG       EA 
WDCTL               ABS    CONST UNTYP.           ASEG       C9 
WDTIF               ABS    CONST UNTYP.           ASEG       EC 
WORCTL              ABS    CONST UNTYP.           ASEG       A2 
WOREVT0             ABS    CONST UNTYP.           ASEG       A3 
WOREVT1             ABS    CONST UNTYP.           ASEG       A4 
WORIRQ              ABS    CONST UNTYP.           ASEG       A1 
WORTIME0            ABS    CONST UNTYP.           ASEG       A5 
WORTIME1            ABS    CONST UNTYP.           ASEG       A6 
_IEN06              ABS    CONST UNTYP.           ASEG       AE 
_IEN16              ABS    CONST UNTYP.           ASEG       BE 
_IEN17              ABS    CONST UNTYP.           ASEG       BF 
_IRCON25            ABS    CONST UNTYP.           ASEG       ED 
_IRCON26            ABS    CONST UNTYP.           ASEG       EE 
_IRCON27            ABS    CONST UNTYP.           ASEG       EF 
_IRCON6             ABS    CONST UNTYP.           ASEG       C6 
_P2_5               ABS    CONST UNTYP.           ASEG       A5 
_P2_6               ABS    CONST UNTYP.           ASEG       A6 
_P2_7               ABS    CONST UNTYP.           ASEG       A7 
_SFR8E              ABS    CONST UNTYP.           ASEG       8E 
_SFR94              ABS    CONST UNTYP.           ASEG       94 
_SFR95              ABS    CONST UNTYP.           ASEG       95 
_SFR96              ABS    CONST UNTYP.           ASEG       96 
_SFR97              ABS    CONST UNTYP.           ASEG       97 
_SFR99              ABS    CONST UNTYP.           ASEG       99 
_SFR9F              ABS    CONST UNTYP.           ASEG       9F 
_SFRA7              ABS    CONST UNTYP.           ASEG       A7 
_SFRAA              ABS    CONST UNTYP.           ASEG       AA 
_SFRB0              ABS    CONST UNTYP.           ASEG       B0 
_SFRB7              ABS    CONST UNTYP.           ASEG       B7 
_SFRBF              ABS    CONST UNTYP.           ASEG       BF 
_SFRC3              ABS    CONST UNTYP.           ASEG       C3 
_SFRC8              ABS    CONST UNTYP.           ASEG       C8 
_SOCON2             ABS    CONST UNTYP.           ASEG       Not solved 
_SOCON3             ABS    CONST UNTYP.           ASEG       Not solved 
_SOCON4             ABS    CONST UNTYP.           ASEG       Not solved 
_SOCON5             ABS    CONST UNTYP.           ASEG       Not solved 
_SOCON6             ABS    CONST UNTYP.           ASEG       Not solved 
_SOCON7             ABS    CONST UNTYP.           ASEG       Not solved 
_TCON4              ABS    CONST UNTYP.           ASEG       8C 
_TCON6              ABS    CONST UNTYP.           ASEG       8E 
_TIMIF7             ABS    CONST UNTYP.           ASEG       DF 
__KEIL__            ABS    CONST UNTYP.           ASEG       Not solved 
halFlashDmaTrigger  REL    CONST PUB UNTYP.       CSTART     0 


##############################
#          CRC:D6FC          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 4          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    437    000000          /*
    438    000000              MODULE  clearThePage.s51
    439    000000          ;    RSEG RCODE (1)
    440    000000              RSEG CSTART:CODE:NOROOT
    441    000000              PUBLIC clearThePage
    442    000000              FUNCTION clearThePage, 0203H
    443    000000                
    444    000000          clearThePage:
    445    000000          ;    MOV A, R1
    446    000000          ;    JZ  NO_ZERO_PAGE
    447    000000          clearThePage_l1:    
    448    000000              MOV A, FCTL  
    449    000000              JB ACC.7, clearThePage_l1
    450    000000              CLR     0xa8.7
    451    000000              //FADDRH = page; FWT = 0x21; FCTL |= 1;
                            asm("NOP");
    452    000000              //asm( "MOV FWT,  #21h; MOV FCTL, #01h; NOP; "
                            );    
    453    000000              MOV FADDRH, R1
    454    000000              MOV FWT,    #0x21
    455    000000              ORL FCTL,   #0x1
    456    000000          NO_ZERO_PAGE:    
    457    000000              NOP              ; omitting the NOP leads to
                            undefined behaviour
    458    000000              SETB    0xa8.7
    459    000000          ;clearThePage_1:    
    460    000000          ;    MOV A, FCTL  
    461    000000          ;    JB ACC.7, clearThePage
    462    000000              RET;
    463    000000              ENDMOD;
    464    000000          */
    465    000000              
    466    000000              MODULE  waitForClearThePage.s51
    467    000000              RSEG CSTART:CODE:NOROOT
    468    000000              PUBLIC waitForClearThePage
    469    000000              FUNCTION waitForClearThePage, 0203H
    470    000000                
    471    000000          waitForClearThePage:    
    472    000000 E5AE         MOV A, FCTL  
    473    000002 20E7FB       JB ACC.7, waitForClearThePage
    474    000005 22           RET;
    475    000006              ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
AC                   #define, value: ACx, line:      50:4      210:4    349:4
ACALL                MNEMONIC 
ACC                  #define, value: ACCx, line:      46:4      229:4      473
ADC_VECTOR           #define, value: VECT( 1, 0x0B ), line:      80:4  
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
ADDR                 #define, value: XREG( 0xDF05 ), line:     397:4  
AGCCTRL0             #define, value: XREG( 0xDF19 ), line:     417:4  
AGCCTRL1             #define, value: XREG( 0xDF18 ), line:     416:4  
AGCCTRL2             #define, value: XREG( 0xDF17 ), line:     415:4  
AGCTEST              #define, value: XREG( 0xDF22 ), line:     426:4  
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
B                    #define, value: Bx, line:      47:4      248:4
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BSCFG                #define, value: XREG( 0xDF16 ), line:     414:4  
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CHANNR               #define, value: XREG( 0xDF06 ), line:     398:4  
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   #define, value: CYx, line:      49:4      210:4    348:4
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DEVIATN              #define, value: XREG( 0xDF11 ), line:     409:4  
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DMA_VECTOR           #define, value: VECT( 8, 0x43 ), line:      87:4  
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
ENC_VECTOR           #define, value: VECT( 4, 0x23 ), line:      83:4  
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
F0                   #define, value: F0x, line:      51:4      210:4    350:4
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOCCFG               #define, value: XREG( 0xDF15 ), line:     413:4  
FOR                  DIRECTIVE 
FREND0               #define, value: XREG( 0xDF1B ), line:     419:4  
FREND1               #define, value: XREG( 0xDF1A ), line:     418:4  
FREQ0                #define, value: XREG( 0xDF0B ), line:     403:4  
FREQ1                #define, value: XREG( 0xDF0A ), line:     402:4  
FREQ2                #define, value: XREG( 0xDF09 ), line:     401:4  
FREQEST              #define, value: XREG( 0xDF38 ), line:     448:4  
FSCAL0               #define, value: XREG( 0xDF1F ), line:     423:4  
FSCAL1               #define, value: XREG( 0xDF1E ), line:     422:4  
FSCAL2               #define, value: XREG( 0xDF1D ), line:     421:4  
FSCAL3               #define, value: XREG( 0xDF1C ), line:     420:4  
FSCTRL0              #define, value: XREG( 0xDF08 ), line:     400:4  
FSCTRL1              #define, value: XREG( 0xDF07 ), line:     399:4  
FSTEST               #define, value: XREG( 0xDF20 ), line:     424:4  
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
I2SCFG0              #define, value: XREG( 0xDF40 ), line:     460:4  
I2SCFG1              #define, value: XREG( 0xDF41 ), line:     461:4  
I2SCLKF0             #define, value: XREG( 0xDF46 ), line:     466:4  
I2SCLKF1             #define, value: XREG( 0xDF47 ), line:     467:4  
I2SCLKF2             #define, value: XREG( 0xDF48 ), line:     468:4  
I2SDATH              #define, value: XREG( 0xDF43 ), line:     463:4  
I2SDATL              #define, value: XREG( 0xDF42 ), line:     462:4  
I2SRXIE              #define, value: URX1IE, line:     382:4  
I2SRXIF              #define, value: URX1IF, line:     384:4  
I2SRX_VECTOR         #define, value: URX1_VECTOR, line:     102:4  
I2SSTAT              #define, value: XREG( 0xDF45 ), line:     465:4  
I2STXIF              #define, value: UTX1IF, line:     385:4  
I2STX_VECTOR         #define, value: UTX1_VECTOR, line:     103:4  
I2SWCNT              #define, value: XREG( 0xDF44 ), line:     464:4  
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
IOCC2510_H           #define, value: , line:      10:4  
IOCFG0               #define, value: XREG( 0xDF31 ), line:     441:4  
IOCFG1               #define, value: XREG( 0xDF30 ), line:     440:4  
IOCFG2               #define, value: XREG( 0xDF2F ), line:     439:4  
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LQI                  #define, value: XREG( 0xDF39 ), line:     449:4  
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MARCSTATE            #define, value: XREG( 0xDF3B ), line:     451:4  
MCSM0                #define, value: XREG( 0xDF14 ), line:     412:4  
MCSM1                #define, value: XREG( 0xDF13 ), line:     411:4  
MCSM2                #define, value: XREG( 0xDF12 ), line:     410:4  
MDMCFG0              #define, value: XREG( 0xDF10 ), line:     408:4  
MDMCFG1              #define, value: XREG( 0xDF0F ), line:     407:4  
MDMCFG2              #define, value: XREG( 0xDF0E ), line:     406:4  
MDMCFG3              #define, value: XREG( 0xDF0D ), line:     405:4  
MDMCFG4              #define, value: XREG( 0xDF0C ), line:     404:4  
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
OV                   #define, value: OVx, line:      54:4      210:4    353:4
P                    #define, value: Px, line:      55:4      210:4    355:4
P0INT_VECTOR         #define, value: VECT( 13, 0x6B ), line:      92:4  
P1INT_VECTOR         #define, value: VECT( 15, 0x7B ), line:      94:4  
P2INT_VECTOR         #define, value: VECT( 6, 0x33 ), line:      85:4  
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PARTNUM              #define, value: XREG( 0xDF36 ), line:     446:4  
PA_TABLE0            #define, value: XREG( 0xDF2E ), line:     438:4  
PA_TABLE1            #define, value: XREG( 0xDF2D ), line:     437:4  
PA_TABLE2            #define, value: XREG( 0xDF2C ), line:     436:4  
PA_TABLE3            #define, value: XREG( 0xDF2B ), line:     435:4  
PA_TABLE4            #define, value: XREG( 0xDF2A ), line:     434:4  
PA_TABLE5            #define, value: XREG( 0xDF29 ), line:     433:4  
PA_TABLE6            #define, value: XREG( 0xDF28 ), line:     432:4  
PA_TABLE7            #define, value: XREG( 0xDF27 ), line:     431:4  
PC                   REGISTER 
PKTCTRL0             #define, value: XREG( 0xDF04 ), line:     396:4  
PKTCTRL1             #define, value: XREG( 0xDF03 ), line:     395:4  
PKTLEN               #define, value: XREG( 0xDF02 ), line:     394:4  
PKTSTATUS            #define, value: XREG( 0xDF3C ), line:     452:4  
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PSW                  #define, value: PSWx, line:      48:4      210:4
PTEST                #define, value: XREG( 0xDF21 ), line:     425:4  
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RFTXRX_VECTOR        #define, value: VECT( 0, 0x03 ), line:      79:4  
RF_VECTOR            #define, value: VECT( 16, 0x83 ), line:      95:4  
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RS0                  #define, value: RS0x, line:      53:4      210:4    352:4
RS1                  #define, value: RS1x, line:      52:4      210:4    351:4
RSEG                 DIRECTIVE 
RSSI                 #define, value: XREG( 0xDF3A ), line:     450:4  
RTMODEL              DIRECTIVE 
S                    PREFIX 
SBIT                 #define,            line:      41:4      274:4    275:4    276:4    277:4
                                                                    278:4    279:4    280:4    281:4
                                                                    284:4    285:4    286:4    287:4
                                                                    288:4    289:4    290:4    291:4
                                                                    294:4    295:4    296:4    297:4
                                                                    298:4    299:4    300:4    301:4
                                                                    304:4    305:4    308:4    309:4
                                                                    310:4    311:4    312:4    313:4
                                                                    314:4    315:4    318:4    319:4
                                                                    320:4    321:4    322:4    323:4
                                                                    324:4    325:4    328:4    329:4
                                                                    330:4    331:4    332:4    333:4
                                                                    334:4    335:4    338:4    339:4
                                                                    340:4    341:4    342:4    343:4
                                                                    344:4    345:4    348:4    349:4
                                                                    350:4    351:4    352:4    353:4
                                                                    354:4    355:4    358:4    359:4
                                                                    360:4    361:4    362:4    363:4
                                                                    364:4    365:4    368:4    369:4
                                                                    370:4    371:4    372:4    373:4
                                                                    374:4    375:4
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFR                  #define,            line:      39:4      113:4    114:4    115:4    116:4
                                                                    117:4    118:4    119:4    123:4
                                                                    124:4    125:4    126:4    127:4
                                                                    128:4    129:4    133:4    134:4
                                                                    135:4    136:4    137:4    138:4
                                                                    139:4    143:4    144:4    145:4
                                                                    146:4    147:4    148:4    149:4
                                                                    153:4    154:4    155:4    156:4
                                                                    157:4    158:4    159:4    163:4
                                                                    164:4    165:4    166:4    167:4
                                                                    168:4    169:4    171:4    172:4
                                                                    173:4    174:4    175:4    176:4
                                                                    177:4    178:4    182:4    183:4
                                                                    184:4    185:4    186:4    187:4
                                                                    188:4    192:4    193:4    194:4
                                                                    195:4    196:4    197:4    198:4
                                                                    200:4    201:4    202:4    203:4
                                                                    204:4    205:4    206:4    207:4
                                                                    211:4    212:4    213:4    214:4
                                                                    215:4    216:4    217:4    221:4
                                                                    222:4    223:4    224:4    225:4
                                                                    226:4    227:4    229:4    230:4
                                                                    231:4    232:4    233:4    234:4
                                                                    235:4    236:4    240:4    241:4
                                                                    242:4    243:4    244:4    245:4
                                                                    246:4    248:4    249:4    250:4
                                                                    251:4    252:4    253:4    254:4
                                                                    255:4    259:4    260:4    261:4
                                                                    262:4    263:4    264:4    265:4
SFRBIT               #define,            line:      40:4      112:4    122:4    132:4    142:4
                                                                    152:4    162:4    181:4    191:4
                                                                    210:4    220:4    239:4    258:4
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SP                   #define, value: SPx, line:      45:4      113:4
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
ST_VECTOR            #define, value: VECT( 5, 0x2B ), line:      84:4  
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
SYNC0                #define, value: XREG( 0xDF01 ), line:     393:4  
SYNC1                #define, value: XREG( 0xDF00 ), line:     392:4  
T1_VECTOR            #define, value: VECT( 9, 0x4B ), line:      88:4  
T2_VECTOR            #define, value: VECT( 10, 0x53 ), line:      89:4  
T3_VECTOR            #define, value: VECT( 11, 0x5B ), line:      90:4  
T4_VECTOR            #define, value: VECT( 12, 0x63 ), line:      91:4  
TEST0                #define, value: XREG( 0xDF25 ), line:     429:4  
TEST1                #define, value: XREG( 0xDF24 ), line:     428:4  
TEST2                #define, value: XREG( 0xDF23 ), line:     427:4  
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
URX0_VECTOR          #define, value: VECT( 2, 0x13 ), line:      81:4  
URX1_VECTOR          #define, value: VECT( 3, 0x1B ), line:      82:4  
UTX0_VECTOR          #define, value: VECT( 7, 0x3B ), line:      86:4  
UTX1_VECTOR          #define, value: VECT( 14, 0x73 ), line:      93:4  
VCO_VC_DAC           #define, value: XREG( 0xDF3D ), line:     453:4  
VECT                 #define,            line:      43:4  
VERSION              #define, value: XREG( 0xDF37 ), line:     447:4  
WDT_VECTOR           #define, value: VECT( 17, 0x8B ), line:      96:4  
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XREG                 #define,            line:      42:4  
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
X_ADCCFG             #define, value: XREG( 0xDFF2 ), line:     614:4  
X_ADCCON1            #define, value: XREG( 0xDFB4 ), line:     544:4  
X_ADCCON2            #define, value: XREG( 0xDFB5 ), line:     545:4  
X_ADCCON3            #define, value: XREG( 0xDFB6 ), line:     546:4  
X_ADCH               #define, value: XREG( 0xDFBB ), line:     552:4  
X_ADCL               #define, value: XREG( 0xDFBA ), line:     551:4  
X_CLKCON             #define, value: XREG( 0xDFC6 ), line:     564:4  
X_DMA0CFGH           #define, value: XREG( 0xDFD5 ), line:     581:4  
X_DMA0CFGL           #define, value: XREG( 0xDFD4 ), line:     580:4  
X_DMA1CFGH           #define, value: XREG( 0xDFD3 ), line:     579:4  
X_DMA1CFGL           #define, value: XREG( 0xDFD2 ), line:     578:4  
X_DMAARM             #define, value: XREG( 0xDFD6 ), line:     582:4  
X_DMAIRQ             #define, value: XREG( 0xDFD1 ), line:     577:4  
X_DMAREQ             #define, value: XREG( 0xDFD7 ), line:     583:4  
X_ENCCS              #define, value: XREG( 0xDFB3 ), line:     543:4  
X_ENCDI              #define, value: XREG( 0xDFB1 ), line:     541:4  
X_ENCDO              #define, value: XREG( 0xDFB2 ), line:     542:4  
X_FADDRH             #define, value: XREG( 0xDFAD ), line:     536:4  
X_FADDRL             #define, value: XREG( 0xDFAC ), line:     535:4  
X_FCTL               #define, value: XREG( 0xDFAE ), line:     537:4  
X_FWDATA             #define, value: XREG( 0xDFAF ), line:     538:4  
X_FWT                #define, value: XREG( 0xDFAB ), line:     534:4  
X_MEMCTR             #define, value: XREG( 0xDFC7 ), line:     565:4  
X_MPAGE              #define, value: XREG( 0xDF93 ), line:     507:4  
X_P0DIR              #define, value: XREG( 0xDFFD ), line:     626:4  
X_P0IFG              #define, value: XREG( 0xDF89 ), line:     496:4  
X_P0INP              #define, value: XREG( 0xDF8F ), line:     502:4  
X_P0SEL              #define, value: XREG( 0xDFF3 ), line:     615:4  
X_P1DIR              #define, value: XREG( 0xDFFE ), line:     627:4  
X_P1IEN              #define, value: XREG( 0xDF8D ), line:     500:4  
X_P1IFG              #define, value: XREG( 0xDF8A ), line:     497:4  
X_P1INP              #define, value: XREG( 0xDFF6 ), line:     618:4  
X_P1SEL              #define, value: XREG( 0xDFF4 ), line:     616:4  
X_P2DIR              #define, value: XREG( 0xDFFF ), line:     628:4  
X_P2IFG              #define, value: XREG( 0xDF8B ), line:     498:4  
X_P2INP              #define, value: XREG( 0xDFF7 ), line:     619:4  
X_P2SEL              #define, value: XREG( 0xDFF5 ), line:     617:4  
X_PERCFG             #define, value: XREG( 0xDFF1 ), line:     613:4  
X_PICTL              #define, value: XREG( 0xDF8C ), line:     499:4  
X_RFD                #define, value: XREG( 0xDFD9 ), line:     586:4  
X_RFIF               #define, value: XREG( 0xDFE9 ), line:     604:4  
X_RFIM               #define, value: XREG( 0xDF91 ), line:     505:4  
X_RFST               #define, value: XREG( 0xDFE1 ), line:     595:4  
X_RNDH               #define, value: XREG( 0xDFBD ), line:     554:4  
X_RNDL               #define, value: XREG( 0xDFBC ), line:     553:4  
X_SLEEP              #define, value: XREG( 0xDFBE ), line:     555:4  
X_T1CC0H             #define, value: XREG( 0xDFDB ), line:     588:4  
X_T1CC0L             #define, value: XREG( 0xDFDA ), line:     587:4  
X_T1CC1H             #define, value: XREG( 0xDFDD ), line:     590:4  
X_T1CC1L             #define, value: XREG( 0xDFDC ), line:     589:4  
X_T1CC2H             #define, value: XREG( 0xDFDF ), line:     592:4  
X_T1CC2L             #define, value: XREG( 0xDFDE ), line:     591:4  
X_T1CCTL0            #define, value: XREG( 0xDFE5 ), line:     599:4  
X_T1CCTL1            #define, value: XREG( 0xDFE6 ), line:     600:4  
X_T1CCTL2            #define, value: XREG( 0xDFE7 ), line:     601:4  
X_T1CNTH             #define, value: XREG( 0xDFE3 ), line:     597:4  
X_T1CNTL             #define, value: XREG( 0xDFE2 ), line:     596:4  
X_T1CTL              #define, value: XREG( 0xDFE4 ), line:     598:4  
X_T2CT               #define, value: XREG( 0xDF9C ), line:     517:4  
X_T2CTL              #define, value: XREG( 0xDF9E ), line:     519:4  
X_T2PR               #define, value: XREG( 0xDF9D ), line:     518:4  
X_T3CC0              #define, value: XREG( 0xDFCD ), line:     572:4  
X_T3CC1              #define, value: XREG( 0xDFCF ), line:     574:4  
X_T3CCTL0            #define, value: XREG( 0xDFCC ), line:     571:4  
X_T3CCTL1            #define, value: XREG( 0xDFCE ), line:     573:4  
X_T3CNT              #define, value: XREG( 0xDFCA ), line:     569:4  
X_T3CTL              #define, value: XREG( 0xDFCB ), line:     570:4  
X_T4CC0              #define, value: XREG( 0xDFED ), line:     608:4  
X_T4CC1              #define, value: XREG( 0xDFEF ), line:     610:4  
X_T4CCTL0            #define, value: XREG( 0xDFEC ), line:     607:4  
X_T4CCTL1            #define, value: XREG( 0xDFEE ), line:     609:4  
X_T4CNT              #define, value: XREG( 0xDFEA ), line:     605:4  
X_T4CTL              #define, value: XREG( 0xDFEB ), line:     606:4  
X_TIMIF              #define, value: XREG( 0xDFD8 ), line:     585:4  
X_U0BAUD             #define, value: XREG( 0xDFC2 ), line:     560:4  
X_U0CSR              #define, value: XREG( 0xDF86 ), line:     492:4  
X_U0DBUF             #define, value: XREG( 0xDFC1 ), line:     559:4  
X_U0GCR              #define, value: XREG( 0xDFC5 ), line:     563:4  
X_U0UCR              #define, value: XREG( 0xDFC4 ), line:     562:4  
X_U1BAUD             #define, value: XREG( 0xDFFA ), line:     623:4  
X_U1CSR              #define, value: XREG( 0xDFF8 ), line:     621:4  
X_U1DBUF             #define, value: XREG( 0xDFF9 ), line:     622:4  
X_U1GCR              #define, value: XREG( 0xDFFC ), line:     625:4  
X_U1UCR              #define, value: XREG( 0xDFFB ), line:     624:4  
X_WDCTL              #define, value: XREG( 0xDFC9 ), line:     568:4  
X_WORCTL             #define, value: XREG( 0xDFA2 ), line:     524:4  
X_WOREVT0            #define, value: XREG( 0xDFA3 ), line:     525:4  
X_WOREVT1            #define, value: XREG( 0xDFA4 ), line:     526:4  
X_WORIRQ             #define, value: XREG( 0xDFA1 ), line:     523:4  
X_WORTIME0           #define, value: XREG( 0xDFA5 ), line:     527:4  
X_WORTIME1           #define, value: XREG( 0xDFA6 ), line:     528:4  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
_NA_ACC              #define, value: XREG( 0xDFE0 ), line:     594:4  
_NA_B                #define, value: XREG( 0xDFF0 ), line:     612:4  
_NA_DPH0             #define, value: XREG( 0xDF83 ), line:     489:4  
_NA_DPH1             #define, value: XREG( 0xDF85 ), line:     491:4  
_NA_DPL0             #define, value: XREG( 0xDF82 ), line:     488:4  
_NA_DPL1             #define, value: XREG( 0xDF84 ), line:     490:4  
_NA_DPS              #define, value: XREG( 0xDF92 ), line:     506:4  
_NA_IEN0             #define, value: XREG( 0xDFA8 ), line:     531:4  
_NA_IEN1             #define, value: XREG( 0xDFB8 ), line:     549:4  
_NA_IEN2             #define, value: XREG( 0xDF9A ), line:     515:4  
_NA_IP0              #define, value: XREG( 0xDFA9 ), line:     532:4  
_NA_IP1              #define, value: XREG( 0xDFB9 ), line:     550:4  
_NA_IRCON            #define, value: XREG( 0xDFC0 ), line:     558:4  
_NA_IRCON2           #define, value: XREG( 0xDFE8 ), line:     603:4  
_NA_P0               #define, value: XREG( 0xDF80 ), line:     486:4  
_NA_P1               #define, value: XREG( 0xDF90 ), line:     504:4  
_NA_P2               #define, value: XREG( 0xDFA0 ), line:     522:4  
_NA_PCON             #define, value: XREG( 0xDF87 ), line:     493:4  
_NA_PSW              #define, value: XREG( 0xDFD0 ), line:     576:4  
_NA_S0CON            #define, value: XREG( 0xDF98 ), line:     513:4  
_NA_S1CON            #define, value: XREG( 0xDF9B ), line:     516:4  
_NA_SP               #define, value: XREG( 0xDF81 ), line:     487:4  
_NA_TCON             #define, value: XREG( 0xDF88 ), line:     495:4  
_XREGDF26            #define, value: XREG( 0xDF26 ), line:     430:4  
_XREGDF32            #define, value: XREG( 0xDF32 ), line:     442:4  
_XREGDF33            #define, value: XREG( 0xDF33 ), line:     443:4  
_XREGDF34            #define, value: XREG( 0xDF34 ), line:     444:4  
_XREGDF35            #define, value: XREG( 0xDF35 ), line:     445:4  
_X_SFR8E             #define, value: XREG( 0xDF8E ), line:     501:4  
_X_SFR94             #define, value: XREG( 0xDF94 ), line:     508:4  
_X_SFR95             #define, value: XREG( 0xDF95 ), line:     509:4  
_X_SFR96             #define, value: XREG( 0xDF96 ), line:     510:4  
_X_SFR97             #define, value: XREG( 0xDF97 ), line:     511:4  
_X_SFR99             #define, value: XREG( 0xDF99 ), line:     514:4  
_X_SFR9F             #define, value: XREG( 0xDF9F ), line:     520:4  
_X_SFRA7             #define, value: XREG( 0xDFA7 ), line:     529:4  
_X_SFRAA             #define, value: XREG( 0xDFAA ), line:     533:4  
_X_SFRB0             #define, value: XREG( 0xDFB0 ), line:     540:4  
_X_SFRB7             #define, value: XREG( 0xDFB7 ), line:     547:4  
_X_SFRBF             #define, value: XREG( 0xDFBF ), line:     556:4  
_X_SFRC3             #define, value: XREG( 0xDFC3 ), line:     561:4  
_X_SFRC8             #define, value: XREG( 0xDFC8 ), line:     567:4  
__A51__              Target symbol: 0 
__AX51__             Target symbol: 0 
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
__no_init            Target symbol: 0 
__sfr                Target symbol: 0 
__xdata              Target symbol: 0 
addr                 Target symbol: 0 
bit0                 Target symbol: 0 
bit1                 Target symbol: 0 
bit2                 Target symbol: 0 
bit3                 Target symbol: 0 
bit4                 Target symbol: 0 
bit5                 Target symbol: 0 
bit6                 Target symbol: 0 
bit7                 Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
char                 Target symbol: 0 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
num                  Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
sbit                 Target symbol: 0 
sfr                  Target symbol: 0 
struct               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
union                Target symbol: 0 
unsigned             Target symbol: 0 
volatile             Target symbol: 0 
xdata                Target symbol: 0 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
CSTART              CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
ACCx                ABS    CONST UNTYP.           ASEG       E0 
ACx                 ABS    CONST UNTYP.           ASEG       D6 
ADCCFG              ABS    CONST UNTYP.           ASEG       F2 
ADCCON1             ABS    CONST UNTYP.           ASEG       B4 
ADCCON2             ABS    CONST UNTYP.           ASEG       B5 
ADCCON3             ABS    CONST UNTYP.           ASEG       B6 
ADCH                ABS    CONST UNTYP.           ASEG       BB 
ADCIE               ABS    CONST UNTYP.           ASEG       A9 
ADCIF               ABS    CONST UNTYP.           ASEG       8D 
ADCL                ABS    CONST UNTYP.           ASEG       BA 
Bx                  ABS    CONST UNTYP.           ASEG       F0 
CLKCON              ABS    CONST UNTYP.           ASEG       C6 
CYx                 ABS    CONST UNTYP.           ASEG       D7 
DMA0CFGH            ABS    CONST UNTYP.           ASEG       D5 
DMA0CFGL            ABS    CONST UNTYP.           ASEG       D4 
DMA1CFGH            ABS    CONST UNTYP.           ASEG       D3 
DMA1CFGL            ABS    CONST UNTYP.           ASEG       D2 
DMAARM              ABS    CONST UNTYP.           ASEG       D6 
DMAIE               ABS    CONST UNTYP.           ASEG       B8 
DMAIF               ABS    CONST UNTYP.           ASEG       C0 
DMAIRQ              ABS    CONST UNTYP.           ASEG       D1 
DMAREQ              ABS    CONST UNTYP.           ASEG       D7 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       83 
DPH1                ABS    CONST UNTYP.           ASEG       85 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       82 
DPL1                ABS    CONST UNTYP.           ASEG       84 
DPS                 ABS    CONST UNTYP.           ASEG       92 
EA                  ABS    CONST UNTYP.           ASEG       AF 
ENCCS               ABS    CONST UNTYP.           ASEG       B3 
ENCDI               ABS    CONST UNTYP.           ASEG       B1 
ENCDO               ABS    CONST UNTYP.           ASEG       B2 
ENCIE               ABS    CONST UNTYP.           ASEG       AC 
ENCIF_0             ABS    CONST UNTYP.           ASEG       98 
ENCIF_1             ABS    CONST UNTYP.           ASEG       99 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0x                 ABS    CONST UNTYP.           ASEG       D5 
F1                  ABS    CONST UNTYP.           ASEG       D1 
FADDRH              ABS    CONST UNTYP.           ASEG       AD 
FADDRL              ABS    CONST UNTYP.           ASEG       AC 
FCTL                ABS    CONST UNTYP.           ASEG       AE 
FWDATA              ABS    CONST UNTYP.           ASEG       AF 
FWT                 ABS    CONST UNTYP.           ASEG       AB 
IEN0                ABS    CONST UNTYP.           ASEG       A8 
IEN1                ABS    CONST UNTYP.           ASEG       B8 
IEN2                ABS    CONST UNTYP.           ASEG       9A 
IP0                 ABS    CONST UNTYP.           ASEG       A9 
IP1                 ABS    CONST UNTYP.           ASEG       B9 
IRCON               ABS    CONST UNTYP.           ASEG       C0 
IRCON2              ABS    CONST UNTYP.           ASEG       E8 
IT0                 ABS    CONST UNTYP.           ASEG       88 
IT1                 ABS    CONST UNTYP.           ASEG       8A 
MEMCTR              ABS    CONST UNTYP.           ASEG       C7 
MPAGE               ABS    CONST UNTYP.           ASEG       93 
OVFIM               ABS    CONST UNTYP.           ASEG       DE 
OVx                 ABS    CONST UNTYP.           ASEG       D2 
P0                  ABS    CONST UNTYP.           ASEG       80 
P0DIR               ABS    CONST UNTYP.           ASEG       FD 
P0IE                ABS    CONST UNTYP.           ASEG       BD 
P0IF                ABS    CONST UNTYP.           ASEG       C5 
P0IFG               ABS    CONST UNTYP.           ASEG       89 
P0INP               ABS    CONST UNTYP.           ASEG       8F 
P0SEL               ABS    CONST UNTYP.           ASEG       F3 
P0_0                ABS    CONST UNTYP.           ASEG       80 
P0_1                ABS    CONST UNTYP.           ASEG       81 
P0_2                ABS    CONST UNTYP.           ASEG       82 
P0_3                ABS    CONST UNTYP.           ASEG       83 
P0_4                ABS    CONST UNTYP.           ASEG       84 
P0_5                ABS    CONST UNTYP.           ASEG       85 
P0_6                ABS    CONST UNTYP.           ASEG       86 
P0_7                ABS    CONST UNTYP.           ASEG       87 
P1                  ABS    CONST UNTYP.           ASEG       90 
P1DIR               ABS    CONST UNTYP.           ASEG       FE 
P1IEN               ABS    CONST UNTYP.           ASEG       8D 
P1IF                ABS    CONST UNTYP.           ASEG       EB 
P1IFG               ABS    CONST UNTYP.           ASEG       8A 
P1INP               ABS    CONST UNTYP.           ASEG       F6 
P1SEL               ABS    CONST UNTYP.           ASEG       F4 
P1_0                ABS    CONST UNTYP.           ASEG       90 
P1_1                ABS    CONST UNTYP.           ASEG       91 
P1_2                ABS    CONST UNTYP.           ASEG       92 
P1_3                ABS    CONST UNTYP.           ASEG       93 
P1_4                ABS    CONST UNTYP.           ASEG       94 
P1_5                ABS    CONST UNTYP.           ASEG       95 
P1_6                ABS    CONST UNTYP.           ASEG       96 
P1_7                ABS    CONST UNTYP.           ASEG       97 
P2                  ABS    CONST UNTYP.           ASEG       A0 
P2DIR               ABS    CONST UNTYP.           ASEG       FF 
P2IF                ABS    CONST UNTYP.           ASEG       E8 
P2IFG               ABS    CONST UNTYP.           ASEG       8B 
P2INP               ABS    CONST UNTYP.           ASEG       F7 
P2SEL               ABS    CONST UNTYP.           ASEG       F5 
P2_0                ABS    CONST UNTYP.           ASEG       A0 
P2_1                ABS    CONST UNTYP.           ASEG       A1 
P2_2                ABS    CONST UNTYP.           ASEG       A2 
P2_3                ABS    CONST UNTYP.           ASEG       A3 
P2_4                ABS    CONST UNTYP.           ASEG       A4 
PCON                ABS    CONST UNTYP.           ASEG       87 
PERCFG              ABS    CONST UNTYP.           ASEG       F1 
PICTL               ABS    CONST UNTYP.           ASEG       8C 
PSWx                ABS    CONST UNTYP.           ASEG       D0 
Px                  ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RFD                 ABS    CONST UNTYP.           ASEG       D9 
RFIF                ABS    CONST UNTYP.           ASEG       E9 
RFIM                ABS    CONST UNTYP.           ASEG       91 
RFST                ABS    CONST UNTYP.           ASEG       E1 
RFTXRXIE            ABS    CONST UNTYP.           ASEG       A8 
RFTXRXIF            ABS    CONST UNTYP.           ASEG       89 
RNDH                ABS    CONST UNTYP.           ASEG       BD 
RNDL                ABS    CONST UNTYP.           ASEG       BC 
RS0x                ABS    CONST UNTYP.           ASEG       D3 
RS1x                ABS    CONST UNTYP.           ASEG       D4 
S0CON               ABS    CONST UNTYP.           ASEG       98 
S1CON               ABS    CONST UNTYP.           ASEG       9B 
SINT                ABS    CONST UNTYP.           ASEG       23 
SLEEP               ABS    CONST UNTYP.           ASEG       BE 
SPx                 ABS    CONST UNTYP.           ASEG       81 
STIE                ABS    CONST UNTYP.           ASEG       AD 
STIF                ABS    CONST UNTYP.           ASEG       C7 
T1CC0H              ABS    CONST UNTYP.           ASEG       DB 
T1CC0L              ABS    CONST UNTYP.           ASEG       DA 
T1CC1H              ABS    CONST UNTYP.           ASEG       DD 
T1CC1L              ABS    CONST UNTYP.           ASEG       DC 
T1CC2H              ABS    CONST UNTYP.           ASEG       DF 
T1CC2L              ABS    CONST UNTYP.           ASEG       DE 
T1CCTL0             ABS    CONST UNTYP.           ASEG       E5 
T1CCTL1             ABS    CONST UNTYP.           ASEG       E6 
T1CCTL2             ABS    CONST UNTYP.           ASEG       E7 
T1CNTH              ABS    CONST UNTYP.           ASEG       E3 
T1CNTL              ABS    CONST UNTYP.           ASEG       E2 
T1CTL               ABS    CONST UNTYP.           ASEG       E4 
T1IE                ABS    CONST UNTYP.           ASEG       B9 
T1IF                ABS    CONST UNTYP.           ASEG       C1 
T2CT                ABS    CONST UNTYP.           ASEG       9C 
T2CTL               ABS    CONST UNTYP.           ASEG       9E 
T2IE                ABS    CONST UNTYP.           ASEG       BA 
T2IF                ABS    CONST UNTYP.           ASEG       C2 
T2PR                ABS    CONST UNTYP.           ASEG       9D 
T3CC0               ABS    CONST UNTYP.           ASEG       CD 
T3CC1               ABS    CONST UNTYP.           ASEG       CF 
T3CCTL0             ABS    CONST UNTYP.           ASEG       CC 
T3CCTL1             ABS    CONST UNTYP.           ASEG       CE 
T3CH0IF             ABS    CONST UNTYP.           ASEG       D9 
T3CH1IF             ABS    CONST UNTYP.           ASEG       DA 
T3CNT               ABS    CONST UNTYP.           ASEG       CA 
T3CTL               ABS    CONST UNTYP.           ASEG       CB 
T3IE                ABS    CONST UNTYP.           ASEG       BB 
T3IF                ABS    CONST UNTYP.           ASEG       C3 
T3OVFIF             ABS    CONST UNTYP.           ASEG       D8 
T4CC0               ABS    CONST UNTYP.           ASEG       ED 
T4CC1               ABS    CONST UNTYP.           ASEG       EF 
T4CCTL0             ABS    CONST UNTYP.           ASEG       EC 
T4CCTL1             ABS    CONST UNTYP.           ASEG       EE 
T4CH0IF             ABS    CONST UNTYP.           ASEG       DC 
T4CH1IF             ABS    CONST UNTYP.           ASEG       DD 
T4CNT               ABS    CONST UNTYP.           ASEG       EA 
T4CTL               ABS    CONST UNTYP.           ASEG       EB 
T4IE                ABS    CONST UNTYP.           ASEG       BC 
T4IF                ABS    CONST UNTYP.           ASEG       C4 
T4OVFIF             ABS    CONST UNTYP.           ASEG       DB 
TCON                ABS    CONST UNTYP.           ASEG       88 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
TIMIF               ABS    CONST UNTYP.           ASEG       D8 
U0BAUD              ABS    CONST UNTYP.           ASEG       C2 
U0CSR               ABS    CONST UNTYP.           ASEG       86 
U0DBUF              ABS    CONST UNTYP.           ASEG       C1 
U0GCR               ABS    CONST UNTYP.           ASEG       C5 
U0UCR               ABS    CONST UNTYP.           ASEG       C4 
U1BAUD              ABS    CONST UNTYP.           ASEG       FA 
U1CSR               ABS    CONST UNTYP.           ASEG       F8 
U1DBUF              ABS    CONST UNTYP.           ASEG       F9 
U1GCR               ABS    CONST UNTYP.           ASEG       FC 
U1UCR               ABS    CONST UNTYP.           ASEG       FB 
URX0IE              ABS    CONST UNTYP.           ASEG       AA 
URX0IF              ABS    CONST UNTYP.           ASEG       8B 
URX1IE              ABS    CONST UNTYP.           ASEG       AB 
URX1IF              ABS    CONST UNTYP.           ASEG       8F 
UTX0IF              ABS    CONST UNTYP.           ASEG       E9 
UTX1IF              ABS    CONST UNTYP.           ASEG       EA 
WDCTL               ABS    CONST UNTYP.           ASEG       C9 
WDTIF               ABS    CONST UNTYP.           ASEG       EC 
WORCTL              ABS    CONST UNTYP.           ASEG       A2 
WOREVT0             ABS    CONST UNTYP.           ASEG       A3 
WOREVT1             ABS    CONST UNTYP.           ASEG       A4 
WORIRQ              ABS    CONST UNTYP.           ASEG       A1 
WORTIME0            ABS    CONST UNTYP.           ASEG       A5 
WORTIME1            ABS    CONST UNTYP.           ASEG       A6 
_IEN06              ABS    CONST UNTYP.           ASEG       AE 
_IEN16              ABS    CONST UNTYP.           ASEG       BE 
_IEN17              ABS    CONST UNTYP.           ASEG       BF 
_IRCON25            ABS    CONST UNTYP.           ASEG       ED 
_IRCON26            ABS    CONST UNTYP.           ASEG       EE 
_IRCON27            ABS    CONST UNTYP.           ASEG       EF 
_IRCON6             ABS    CONST UNTYP.           ASEG       C6 
_P2_5               ABS    CONST UNTYP.           ASEG       A5 
_P2_6               ABS    CONST UNTYP.           ASEG       A6 
_P2_7               ABS    CONST UNTYP.           ASEG       A7 
_SFR8E              ABS    CONST UNTYP.           ASEG       8E 
_SFR94              ABS    CONST UNTYP.           ASEG       94 
_SFR95              ABS    CONST UNTYP.           ASEG       95 
_SFR96              ABS    CONST UNTYP.           ASEG       96 
_SFR97              ABS    CONST UNTYP.           ASEG       97 
_SFR99              ABS    CONST UNTYP.           ASEG       99 
_SFR9F              ABS    CONST UNTYP.           ASEG       9F 
_SFRA7              ABS    CONST UNTYP.           ASEG       A7 
_SFRAA              ABS    CONST UNTYP.           ASEG       AA 
_SFRB0              ABS    CONST UNTYP.           ASEG       B0 
_SFRB7              ABS    CONST UNTYP.           ASEG       B7 
_SFRBF              ABS    CONST UNTYP.           ASEG       BF 
_SFRC3              ABS    CONST UNTYP.           ASEG       C3 
_SFRC8              ABS    CONST UNTYP.           ASEG       C8 
_TCON4              ABS    CONST UNTYP.           ASEG       8C 
_TCON6              ABS    CONST UNTYP.           ASEG       8E 
_TIMIF7             ABS    CONST UNTYP.           ASEG       DF 
__KEIL__            ABS    CONST UNTYP.           ASEG       Not solved 
waitForClearThePage REL    CONST PUB UNTYP.       CSTART     0 


##############################
#          CRC:BA38          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:32             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\cstartup_low_image.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\cstartup_low_image.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\cstartup_low_image.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    476    000000          
    477    000000              MODULE   ?cexit
    478    000000          
    479    000000                  PUBLIC   exit
    480    000000                  PUBLIC   ?C_EXIT
    481    000000              RSEG CSTART:CODE:NOROOT
    482    000000                  FUNCTION exit,0203H
    483    000000          
    484    000000          exit:
    485    000000          ?C_EXIT:
    486    000000                  PUBLIC  ?ROM_MONITOR_NOPS
    487    000000          
    488    000000          ?ROM_MONITOR_NOPS:
    489    000000 80FE             SJMP    ?C_EXIT
    490    000002          /*
    491    000002          #if defined( _LOW_IMAGE_ )
    492    000002              ASEGN CSTARTUP_COMPAT, 0x876
    493    000002                  DB      0x02    ; LJMP
    494    000002              DB  0x08
    495    000002                  DB  0x3F
    496    000002          #endif
    497    000002          #if defined( _HIGH_IMAGE_ )
    498    000002              ASEGN CSTARTUP_COMPAT, 0x6076
    499    000002                  DB      0x02    ; LJMP
    500    000002              DB  0x60
    501    000002                  DB  0x3F
    502    000002          #endif
    503    000002          */
    504    000002              ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
AC                   #define, value: ACx, line:      50:4      210:4    349:4
ACALL                MNEMONIC 
ACC                  #define, value: ACCx, line:      46:4      229:4      473
ADC_VECTOR           #define, value: VECT( 1, 0x0B ), line:      80:4  
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
ADDR                 #define, value: XREG( 0xDF05 ), line:     397:4  
AGCCTRL0             #define, value: XREG( 0xDF19 ), line:     417:4  
AGCCTRL1             #define, value: XREG( 0xDF18 ), line:     416:4  
AGCCTRL2             #define, value: XREG( 0xDF17 ), line:     415:4  
AGCTEST              #define, value: XREG( 0xDF22 ), line:     426:4  
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
B                    #define, value: Bx, line:      47:4      248:4
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BSCFG                #define, value: XREG( 0xDF16 ), line:     414:4  
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CHANNR               #define, value: XREG( 0xDF06 ), line:     398:4  
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   #define, value: CYx, line:      49:4      210:4    348:4
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DEVIATN              #define, value: XREG( 0xDF11 ), line:     409:4  
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DMA_VECTOR           #define, value: VECT( 8, 0x43 ), line:      87:4  
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
ENC_VECTOR           #define, value: VECT( 4, 0x23 ), line:      83:4  
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
F0                   #define, value: F0x, line:      51:4      210:4    350:4
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOCCFG               #define, value: XREG( 0xDF15 ), line:     413:4  
FOR                  DIRECTIVE 
FREND0               #define, value: XREG( 0xDF1B ), line:     419:4  
FREND1               #define, value: XREG( 0xDF1A ), line:     418:4  
FREQ0                #define, value: XREG( 0xDF0B ), line:     403:4  
FREQ1                #define, value: XREG( 0xDF0A ), line:     402:4  
FREQ2                #define, value: XREG( 0xDF09 ), line:     401:4  
FREQEST              #define, value: XREG( 0xDF38 ), line:     448:4  
FSCAL0               #define, value: XREG( 0xDF1F ), line:     423:4  
FSCAL1               #define, value: XREG( 0xDF1E ), line:     422:4  
FSCAL2               #define, value: XREG( 0xDF1D ), line:     421:4  
FSCAL3               #define, value: XREG( 0xDF1C ), line:     420:4  
FSCTRL0              #define, value: XREG( 0xDF08 ), line:     400:4  
FSCTRL1              #define, value: XREG( 0xDF07 ), line:     399:4  
FSTEST               #define, value: XREG( 0xDF20 ), line:     424:4  
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
I2SCFG0              #define, value: XREG( 0xDF40 ), line:     460:4  
I2SCFG1              #define, value: XREG( 0xDF41 ), line:     461:4  
I2SCLKF0             #define, value: XREG( 0xDF46 ), line:     466:4  
I2SCLKF1             #define, value: XREG( 0xDF47 ), line:     467:4  
I2SCLKF2             #define, value: XREG( 0xDF48 ), line:     468:4  
I2SDATH              #define, value: XREG( 0xDF43 ), line:     463:4  
I2SDATL              #define, value: XREG( 0xDF42 ), line:     462:4  
I2SRXIE              #define, value: URX1IE, line:     382:4  
I2SRXIF              #define, value: URX1IF, line:     384:4  
I2SRX_VECTOR         #define, value: URX1_VECTOR, line:     102:4  
I2SSTAT              #define, value: XREG( 0xDF45 ), line:     465:4  
I2STXIF              #define, value: UTX1IF, line:     385:4  
I2STX_VECTOR         #define, value: UTX1_VECTOR, line:     103:4  
I2SWCNT              #define, value: XREG( 0xDF44 ), line:     464:4  
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
IOCC2510_H           #define, value: , line:      10:4  
IOCFG0               #define, value: XREG( 0xDF31 ), line:     441:4  
IOCFG1               #define, value: XREG( 0xDF30 ), line:     440:4  
IOCFG2               #define, value: XREG( 0xDF2F ), line:     439:4  
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LQI                  #define, value: XREG( 0xDF39 ), line:     449:4  
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MARCSTATE            #define, value: XREG( 0xDF3B ), line:     451:4  
MCSM0                #define, value: XREG( 0xDF14 ), line:     412:4  
MCSM1                #define, value: XREG( 0xDF13 ), line:     411:4  
MCSM2                #define, value: XREG( 0xDF12 ), line:     410:4  
MDMCFG0              #define, value: XREG( 0xDF10 ), line:     408:4  
MDMCFG1              #define, value: XREG( 0xDF0F ), line:     407:4  
MDMCFG2              #define, value: XREG( 0xDF0E ), line:     406:4  
MDMCFG3              #define, value: XREG( 0xDF0D ), line:     405:4  
MDMCFG4              #define, value: XREG( 0xDF0C ), line:     404:4  
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
OV                   #define, value: OVx, line:      54:4      210:4    353:4
P                    #define, value: Px, line:      55:4      210:4    355:4
P0INT_VECTOR         #define, value: VECT( 13, 0x6B ), line:      92:4  
P1INT_VECTOR         #define, value: VECT( 15, 0x7B ), line:      94:4  
P2INT_VECTOR         #define, value: VECT( 6, 0x33 ), line:      85:4  
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PARTNUM              #define, value: XREG( 0xDF36 ), line:     446:4  
PA_TABLE0            #define, value: XREG( 0xDF2E ), line:     438:4  
PA_TABLE1            #define, value: XREG( 0xDF2D ), line:     437:4  
PA_TABLE2            #define, value: XREG( 0xDF2C ), line:     436:4  
PA_TABLE3            #define, value: XREG( 0xDF2B ), line:     435:4  
PA_TABLE4            #define, value: XREG( 0xDF2A ), line:     434:4  
PA_TABLE5            #define, value: XREG( 0xDF29 ), line:     433:4  
PA_TABLE6            #define, value: XREG( 0xDF28 ), line:     432:4  
PA_TABLE7            #define, value: XREG( 0xDF27 ), line:     431:4  
PC                   REGISTER 
PKTCTRL0             #define, value: XREG( 0xDF04 ), line:     396:4  
PKTCTRL1             #define, value: XREG( 0xDF03 ), line:     395:4  
PKTLEN               #define, value: XREG( 0xDF02 ), line:     394:4  
PKTSTATUS            #define, value: XREG( 0xDF3C ), line:     452:4  
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PSW                  #define, value: PSWx, line:      48:4      210:4
PTEST                #define, value: XREG( 0xDF21 ), line:     425:4  
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RFTXRX_VECTOR        #define, value: VECT( 0, 0x03 ), line:      79:4  
RF_VECTOR            #define, value: VECT( 16, 0x83 ), line:      95:4  
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RS0                  #define, value: RS0x, line:      53:4      210:4    352:4
RS1                  #define, value: RS1x, line:      52:4      210:4    351:4
RSEG                 DIRECTIVE 
RSSI                 #define, value: XREG( 0xDF3A ), line:     450:4  
RTMODEL              DIRECTIVE 
S                    PREFIX 
SBIT                 #define,            line:      41:4      274:4    275:4    276:4    277:4
                                                                    278:4    279:4    280:4    281:4
                                                                    284:4    285:4    286:4    287:4
                                                                    288:4    289:4    290:4    291:4
                                                                    294:4    295:4    296:4    297:4
                                                                    298:4    299:4    300:4    301:4
                                                                    304:4    305:4    308:4    309:4
                                                                    310:4    311:4    312:4    313:4
                                                                    314:4    315:4    318:4    319:4
                                                                    320:4    321:4    322:4    323:4
                                                                    324:4    325:4    328:4    329:4
                                                                    330:4    331:4    332:4    333:4
                                                                    334:4    335:4    338:4    339:4
                                                                    340:4    341:4    342:4    343:4
                                                                    344:4    345:4    348:4    349:4
                                                                    350:4    351:4    352:4    353:4
                                                                    354:4    355:4    358:4    359:4
                                                                    360:4    361:4    362:4    363:4
                                                                    364:4    365:4    368:4    369:4
                                                                    370:4    371:4    372:4    373:4
                                                                    374:4    375:4
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFR                  #define,            line:      39:4      113:4    114:4    115:4    116:4
                                                                    117:4    118:4    119:4    123:4
                                                                    124:4    125:4    126:4    127:4
                                                                    128:4    129:4    133:4    134:4
                                                                    135:4    136:4    137:4    138:4
                                                                    139:4    143:4    144:4    145:4
                                                                    146:4    147:4    148:4    149:4
                                                                    153:4    154:4    155:4    156:4
                                                                    157:4    158:4    159:4    163:4
                                                                    164:4    165:4    166:4    167:4
                                                                    168:4    169:4    171:4    172:4
                                                                    173:4    174:4    175:4    176:4
                                                                    177:4    178:4    182:4    183:4
                                                                    184:4    185:4    186:4    187:4
                                                                    188:4    192:4    193:4    194:4
                                                                    195:4    196:4    197:4    198:4
                                                                    200:4    201:4    202:4    203:4
                                                                    204:4    205:4    206:4    207:4
                                                                    211:4    212:4    213:4    214:4
                                                                    215:4    216:4    217:4    221:4
                                                                    222:4    223:4    224:4    225:4
                                                                    226:4    227:4    229:4    230:4
                                                                    231:4    232:4    233:4    234:4
                                                                    235:4    236:4    240:4    241:4
                                                                    242:4    243:4    244:4    245:4
                                                                    246:4    248:4    249:4    250:4
                                                                    251:4    252:4    253:4    254:4
                                                                    255:4    259:4    260:4    261:4
                                                                    262:4    263:4    264:4    265:4
SFRBIT               #define,            line:      40:4      112:4    122:4    132:4    142:4
                                                                    152:4    162:4    181:4    191:4
                                                                    210:4    220:4    239:4    258:4
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SP                   #define, value: SPx, line:      45:4      113:4
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
ST_VECTOR            #define, value: VECT( 5, 0x2B ), line:      84:4  
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
SYNC0                #define, value: XREG( 0xDF01 ), line:     393:4  
SYNC1                #define, value: XREG( 0xDF00 ), line:     392:4  
T1_VECTOR            #define, value: VECT( 9, 0x4B ), line:      88:4  
T2_VECTOR            #define, value: VECT( 10, 0x53 ), line:      89:4  
T3_VECTOR            #define, value: VECT( 11, 0x5B ), line:      90:4  
T4_VECTOR            #define, value: VECT( 12, 0x63 ), line:      91:4  
TEST0                #define, value: XREG( 0xDF25 ), line:     429:4  
TEST1                #define, value: XREG( 0xDF24 ), line:     428:4  
TEST2                #define, value: XREG( 0xDF23 ), line:     427:4  
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
URX0_VECTOR          #define, value: VECT( 2, 0x13 ), line:      81:4  
URX1_VECTOR          #define, value: VECT( 3, 0x1B ), line:      82:4  
UTX0_VECTOR          #define, value: VECT( 7, 0x3B ), line:      86:4  
UTX1_VECTOR          #define, value: VECT( 14, 0x73 ), line:      93:4  
VCO_VC_DAC           #define, value: XREG( 0xDF3D ), line:     453:4  
VECT                 #define,            line:      43:4  
VERSION              #define, value: XREG( 0xDF37 ), line:     447:4  
WDT_VECTOR           #define, value: VECT( 17, 0x8B ), line:      96:4  
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XREG                 #define,            line:      42:4  
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
X_ADCCFG             #define, value: XREG( 0xDFF2 ), line:     614:4  
X_ADCCON1            #define, value: XREG( 0xDFB4 ), line:     544:4  
X_ADCCON2            #define, value: XREG( 0xDFB5 ), line:     545:4  
X_ADCCON3            #define, value: XREG( 0xDFB6 ), line:     546:4  
X_ADCH               #define, value: XREG( 0xDFBB ), line:     552:4  
X_ADCL               #define, value: XREG( 0xDFBA ), line:     551:4  
X_CLKCON             #define, value: XREG( 0xDFC6 ), line:     564:4  
X_DMA0CFGH           #define, value: XREG( 0xDFD5 ), line:     581:4  
X_DMA0CFGL           #define, value: XREG( 0xDFD4 ), line:     580:4  
X_DMA1CFGH           #define, value: XREG( 0xDFD3 ), line:     579:4  
X_DMA1CFGL           #define, value: XREG( 0xDFD2 ), line:     578:4  
X_DMAARM             #define, value: XREG( 0xDFD6 ), line:     582:4  
X_DMAIRQ             #define, value: XREG( 0xDFD1 ), line:     577:4  
X_DMAREQ             #define, value: XREG( 0xDFD7 ), line:     583:4  
X_ENCCS              #define, value: XREG( 0xDFB3 ), line:     543:4  
X_ENCDI              #define, value: XREG( 0xDFB1 ), line:     541:4  
X_ENCDO              #define, value: XREG( 0xDFB2 ), line:     542:4  
X_FADDRH             #define, value: XREG( 0xDFAD ), line:     536:4  
X_FADDRL             #define, value: XREG( 0xDFAC ), line:     535:4  
X_FCTL               #define, value: XREG( 0xDFAE ), line:     537:4  
X_FWDATA             #define, value: XREG( 0xDFAF ), line:     538:4  
X_FWT                #define, value: XREG( 0xDFAB ), line:     534:4  
X_MEMCTR             #define, value: XREG( 0xDFC7 ), line:     565:4  
X_MPAGE              #define, value: XREG( 0xDF93 ), line:     507:4  
X_P0DIR              #define, value: XREG( 0xDFFD ), line:     626:4  
X_P0IFG              #define, value: XREG( 0xDF89 ), line:     496:4  
X_P0INP              #define, value: XREG( 0xDF8F ), line:     502:4  
X_P0SEL              #define, value: XREG( 0xDFF3 ), line:     615:4  
X_P1DIR              #define, value: XREG( 0xDFFE ), line:     627:4  
X_P1IEN              #define, value: XREG( 0xDF8D ), line:     500:4  
X_P1IFG              #define, value: XREG( 0xDF8A ), line:     497:4  
X_P1INP              #define, value: XREG( 0xDFF6 ), line:     618:4  
X_P1SEL              #define, value: XREG( 0xDFF4 ), line:     616:4  
X_P2DIR              #define, value: XREG( 0xDFFF ), line:     628:4  
X_P2IFG              #define, value: XREG( 0xDF8B ), line:     498:4  
X_P2INP              #define, value: XREG( 0xDFF7 ), line:     619:4  
X_P2SEL              #define, value: XREG( 0xDFF5 ), line:     617:4  
X_PERCFG             #define, value: XREG( 0xDFF1 ), line:     613:4  
X_PICTL              #define, value: XREG( 0xDF8C ), line:     499:4  
X_RFD                #define, value: XREG( 0xDFD9 ), line:     586:4  
X_RFIF               #define, value: XREG( 0xDFE9 ), line:     604:4  
X_RFIM               #define, value: XREG( 0xDF91 ), line:     505:4  
X_RFST               #define, value: XREG( 0xDFE1 ), line:     595:4  
X_RNDH               #define, value: XREG( 0xDFBD ), line:     554:4  
X_RNDL               #define, value: XREG( 0xDFBC ), line:     553:4  
X_SLEEP              #define, value: XREG( 0xDFBE ), line:     555:4  
X_T1CC0H             #define, value: XREG( 0xDFDB ), line:     588:4  
X_T1CC0L             #define, value: XREG( 0xDFDA ), line:     587:4  
X_T1CC1H             #define, value: XREG( 0xDFDD ), line:     590:4  
X_T1CC1L             #define, value: XREG( 0xDFDC ), line:     589:4  
X_T1CC2H             #define, value: XREG( 0xDFDF ), line:     592:4  
X_T1CC2L             #define, value: XREG( 0xDFDE ), line:     591:4  
X_T1CCTL0            #define, value: XREG( 0xDFE5 ), line:     599:4  
X_T1CCTL1            #define, value: XREG( 0xDFE6 ), line:     600:4  
X_T1CCTL2            #define, value: XREG( 0xDFE7 ), line:     601:4  
X_T1CNTH             #define, value: XREG( 0xDFE3 ), line:     597:4  
X_T1CNTL             #define, value: XREG( 0xDFE2 ), line:     596:4  
X_T1CTL              #define, value: XREG( 0xDFE4 ), line:     598:4  
X_T2CT               #define, value: XREG( 0xDF9C ), line:     517:4  
X_T2CTL              #define, value: XREG( 0xDF9E ), line:     519:4  
X_T2PR               #define, value: XREG( 0xDF9D ), line:     518:4  
X_T3CC0              #define, value: XREG( 0xDFCD ), line:     572:4  
X_T3CC1              #define, value: XREG( 0xDFCF ), line:     574:4  
X_T3CCTL0            #define, value: XREG( 0xDFCC ), line:     571:4  
X_T3CCTL1            #define, value: XREG( 0xDFCE ), line:     573:4  
X_T3CNT              #define, value: XREG( 0xDFCA ), line:     569:4  
X_T3CTL              #define, value: XREG( 0xDFCB ), line:     570:4  
X_T4CC0              #define, value: XREG( 0xDFED ), line:     608:4  
X_T4CC1              #define, value: XREG( 0xDFEF ), line:     610:4  
X_T4CCTL0            #define, value: XREG( 0xDFEC ), line:     607:4  
X_T4CCTL1            #define, value: XREG( 0xDFEE ), line:     609:4  
X_T4CNT              #define, value: XREG( 0xDFEA ), line:     605:4  
X_T4CTL              #define, value: XREG( 0xDFEB ), line:     606:4  
X_TIMIF              #define, value: XREG( 0xDFD8 ), line:     585:4  
X_U0BAUD             #define, value: XREG( 0xDFC2 ), line:     560:4  
X_U0CSR              #define, value: XREG( 0xDF86 ), line:     492:4  
X_U0DBUF             #define, value: XREG( 0xDFC1 ), line:     559:4  
X_U0GCR              #define, value: XREG( 0xDFC5 ), line:     563:4  
X_U0UCR              #define, value: XREG( 0xDFC4 ), line:     562:4  
X_U1BAUD             #define, value: XREG( 0xDFFA ), line:     623:4  
X_U1CSR              #define, value: XREG( 0xDFF8 ), line:     621:4  
X_U1DBUF             #define, value: XREG( 0xDFF9 ), line:     622:4  
X_U1GCR              #define, value: XREG( 0xDFFC ), line:     625:4  
X_U1UCR              #define, value: XREG( 0xDFFB ), line:     624:4  
X_WDCTL              #define, value: XREG( 0xDFC9 ), line:     568:4  
X_WORCTL             #define, value: XREG( 0xDFA2 ), line:     524:4  
X_WOREVT0            #define, value: XREG( 0xDFA3 ), line:     525:4  
X_WOREVT1            #define, value: XREG( 0xDFA4 ), line:     526:4  
X_WORIRQ             #define, value: XREG( 0xDFA1 ), line:     523:4  
X_WORTIME0           #define, value: XREG( 0xDFA5 ), line:     527:4  
X_WORTIME1           #define, value: XREG( 0xDFA6 ), line:     528:4  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
_NA_ACC              #define, value: XREG( 0xDFE0 ), line:     594:4  
_NA_B                #define, value: XREG( 0xDFF0 ), line:     612:4  
_NA_DPH0             #define, value: XREG( 0xDF83 ), line:     489:4  
_NA_DPH1             #define, value: XREG( 0xDF85 ), line:     491:4  
_NA_DPL0             #define, value: XREG( 0xDF82 ), line:     488:4  
_NA_DPL1             #define, value: XREG( 0xDF84 ), line:     490:4  
_NA_DPS              #define, value: XREG( 0xDF92 ), line:     506:4  
_NA_IEN0             #define, value: XREG( 0xDFA8 ), line:     531:4  
_NA_IEN1             #define, value: XREG( 0xDFB8 ), line:     549:4  
_NA_IEN2             #define, value: XREG( 0xDF9A ), line:     515:4  
_NA_IP0              #define, value: XREG( 0xDFA9 ), line:     532:4  
_NA_IP1              #define, value: XREG( 0xDFB9 ), line:     550:4  
_NA_IRCON            #define, value: XREG( 0xDFC0 ), line:     558:4  
_NA_IRCON2           #define, value: XREG( 0xDFE8 ), line:     603:4  
_NA_P0               #define, value: XREG( 0xDF80 ), line:     486:4  
_NA_P1               #define, value: XREG( 0xDF90 ), line:     504:4  
_NA_P2               #define, value: XREG( 0xDFA0 ), line:     522:4  
_NA_PCON             #define, value: XREG( 0xDF87 ), line:     493:4  
_NA_PSW              #define, value: XREG( 0xDFD0 ), line:     576:4  
_NA_S0CON            #define, value: XREG( 0xDF98 ), line:     513:4  
_NA_S1CON            #define, value: XREG( 0xDF9B ), line:     516:4  
_NA_SP               #define, value: XREG( 0xDF81 ), line:     487:4  
_NA_TCON             #define, value: XREG( 0xDF88 ), line:     495:4  
_XREGDF26            #define, value: XREG( 0xDF26 ), line:     430:4  
_XREGDF32            #define, value: XREG( 0xDF32 ), line:     442:4  
_XREGDF33            #define, value: XREG( 0xDF33 ), line:     443:4  
_XREGDF34            #define, value: XREG( 0xDF34 ), line:     444:4  
_XREGDF35            #define, value: XREG( 0xDF35 ), line:     445:4  
_X_SFR8E             #define, value: XREG( 0xDF8E ), line:     501:4  
_X_SFR94             #define, value: XREG( 0xDF94 ), line:     508:4  
_X_SFR95             #define, value: XREG( 0xDF95 ), line:     509:4  
_X_SFR96             #define, value: XREG( 0xDF96 ), line:     510:4  
_X_SFR97             #define, value: XREG( 0xDF97 ), line:     511:4  
_X_SFR99             #define, value: XREG( 0xDF99 ), line:     514:4  
_X_SFR9F             #define, value: XREG( 0xDF9F ), line:     520:4  
_X_SFRA7             #define, value: XREG( 0xDFA7 ), line:     529:4  
_X_SFRAA             #define, value: XREG( 0xDFAA ), line:     533:4  
_X_SFRB0             #define, value: XREG( 0xDFB0 ), line:     540:4  
_X_SFRB7             #define, value: XREG( 0xDFB7 ), line:     547:4  
_X_SFRBF             #define, value: XREG( 0xDFBF ), line:     556:4  
_X_SFRC3             #define, value: XREG( 0xDFC3 ), line:     561:4  
_X_SFRC8             #define, value: XREG( 0xDFC8 ), line:     567:4  
__A51__              Target symbol: 0 
__AX51__             Target symbol: 0 
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
__no_init            Target symbol: 0 
__sfr                Target symbol: 0 
__xdata              Target symbol: 0 
addr                 Target symbol: 0 
bit0                 Target symbol: 0 
bit1                 Target symbol: 0 
bit2                 Target symbol: 0 
bit3                 Target symbol: 0 
bit4                 Target symbol: 0 
bit5                 Target symbol: 0 
bit6                 Target symbol: 0 
bit7                 Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
char                 Target symbol: 0 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
num                  Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
sbit                 Target symbol: 0 
sfr                  Target symbol: 0 
struct               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
union                Target symbol: 0 
unsigned             Target symbol: 0 
volatile             Target symbol: 0 
xdata                Target symbol: 0 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
CSTART              CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?C_EXIT             REL    CONST PUB UNTYP.       CSTART     0 
?ROM_MONITOR_NOPS   REL    CONST PUB UNTYP.       CSTART     0 
ACCx                ABS    CONST UNTYP.           ASEG       E0 
ACx                 ABS    CONST UNTYP.           ASEG       D6 
ADCCFG              ABS    CONST UNTYP.           ASEG       F2 
ADCCON1             ABS    CONST UNTYP.           ASEG       B4 
ADCCON2             ABS    CONST UNTYP.           ASEG       B5 
ADCCON3             ABS    CONST UNTYP.           ASEG       B6 
ADCH                ABS    CONST UNTYP.           ASEG       BB 
ADCIE               ABS    CONST UNTYP.           ASEG       A9 
ADCIF               ABS    CONST UNTYP.           ASEG       8D 
ADCL                ABS    CONST UNTYP.           ASEG       BA 
Bx                  ABS    CONST UNTYP.           ASEG       F0 
CLKCON              ABS    CONST UNTYP.           ASEG       C6 
CYx                 ABS    CONST UNTYP.           ASEG       D7 
DMA0CFGH            ABS    CONST UNTYP.           ASEG       D5 
DMA0CFGL            ABS    CONST UNTYP.           ASEG       D4 
DMA1CFGH            ABS    CONST UNTYP.           ASEG       D3 
DMA1CFGL            ABS    CONST UNTYP.           ASEG       D2 
DMAARM              ABS    CONST UNTYP.           ASEG       D6 
DMAIE               ABS    CONST UNTYP.           ASEG       B8 
DMAIF               ABS    CONST UNTYP.           ASEG       C0 
DMAIRQ              ABS    CONST UNTYP.           ASEG       D1 
DMAREQ              ABS    CONST UNTYP.           ASEG       D7 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       83 
DPH1                ABS    CONST UNTYP.           ASEG       85 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       82 
DPL1                ABS    CONST UNTYP.           ASEG       84 
DPS                 ABS    CONST UNTYP.           ASEG       92 
EA                  ABS    CONST UNTYP.           ASEG       AF 
ENCCS               ABS    CONST UNTYP.           ASEG       B3 
ENCDI               ABS    CONST UNTYP.           ASEG       B1 
ENCDO               ABS    CONST UNTYP.           ASEG       B2 
ENCIE               ABS    CONST UNTYP.           ASEG       AC 
ENCIF_0             ABS    CONST UNTYP.           ASEG       98 
ENCIF_1             ABS    CONST UNTYP.           ASEG       99 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0x                 ABS    CONST UNTYP.           ASEG       D5 
F1                  ABS    CONST UNTYP.           ASEG       D1 
FADDRH              ABS    CONST UNTYP.           ASEG       AD 
FADDRL              ABS    CONST UNTYP.           ASEG       AC 
FCTL                ABS    CONST UNTYP.           ASEG       AE 
FWDATA              ABS    CONST UNTYP.           ASEG       AF 
FWT                 ABS    CONST UNTYP.           ASEG       AB 
IEN0                ABS    CONST UNTYP.           ASEG       A8 
IEN1                ABS    CONST UNTYP.           ASEG       B8 
IEN2                ABS    CONST UNTYP.           ASEG       9A 
IP0                 ABS    CONST UNTYP.           ASEG       A9 
IP1                 ABS    CONST UNTYP.           ASEG       B9 
IRCON               ABS    CONST UNTYP.           ASEG       C0 
IRCON2              ABS    CONST UNTYP.           ASEG       E8 
IT0                 ABS    CONST UNTYP.           ASEG       88 
IT1                 ABS    CONST UNTYP.           ASEG       8A 
MEMCTR              ABS    CONST UNTYP.           ASEG       C7 
MPAGE               ABS    CONST UNTYP.           ASEG       93 
OVFIM               ABS    CONST UNTYP.           ASEG       DE 
OVx                 ABS    CONST UNTYP.           ASEG       D2 
P0                  ABS    CONST UNTYP.           ASEG       80 
P0DIR               ABS    CONST UNTYP.           ASEG       FD 
P0IE                ABS    CONST UNTYP.           ASEG       BD 
P0IF                ABS    CONST UNTYP.           ASEG       C5 
P0IFG               ABS    CONST UNTYP.           ASEG       89 
P0INP               ABS    CONST UNTYP.           ASEG       8F 
P0SEL               ABS    CONST UNTYP.           ASEG       F3 
P0_0                ABS    CONST UNTYP.           ASEG       80 
P0_1                ABS    CONST UNTYP.           ASEG       81 
P0_2                ABS    CONST UNTYP.           ASEG       82 
P0_3                ABS    CONST UNTYP.           ASEG       83 
P0_4                ABS    CONST UNTYP.           ASEG       84 
P0_5                ABS    CONST UNTYP.           ASEG       85 
P0_6                ABS    CONST UNTYP.           ASEG       86 
P0_7                ABS    CONST UNTYP.           ASEG       87 
P1                  ABS    CONST UNTYP.           ASEG       90 
P1DIR               ABS    CONST UNTYP.           ASEG       FE 
P1IEN               ABS    CONST UNTYP.           ASEG       8D 
P1IF                ABS    CONST UNTYP.           ASEG       EB 
P1IFG               ABS    CONST UNTYP.           ASEG       8A 
P1INP               ABS    CONST UNTYP.           ASEG       F6 
P1SEL               ABS    CONST UNTYP.           ASEG       F4 
P1_0                ABS    CONST UNTYP.           ASEG       90 
P1_1                ABS    CONST UNTYP.           ASEG       91 
P1_2                ABS    CONST UNTYP.           ASEG       92 
P1_3                ABS    CONST UNTYP.           ASEG       93 
P1_4                ABS    CONST UNTYP.           ASEG       94 
P1_5                ABS    CONST UNTYP.           ASEG       95 
P1_6                ABS    CONST UNTYP.           ASEG       96 
P1_7                ABS    CONST UNTYP.           ASEG       97 
P2                  ABS    CONST UNTYP.           ASEG       A0 
P2DIR               ABS    CONST UNTYP.           ASEG       FF 
P2IF                ABS    CONST UNTYP.           ASEG       E8 
P2IFG               ABS    CONST UNTYP.           ASEG       8B 
P2INP               ABS    CONST UNTYP.           ASEG       F7 
P2SEL               ABS    CONST UNTYP.           ASEG       F5 
P2_0                ABS    CONST UNTYP.           ASEG       A0 
P2_1                ABS    CONST UNTYP.           ASEG       A1 
P2_2                ABS    CONST UNTYP.           ASEG       A2 
P2_3                ABS    CONST UNTYP.           ASEG       A3 
P2_4                ABS    CONST UNTYP.           ASEG       A4 
PCON                ABS    CONST UNTYP.           ASEG       87 
PERCFG              ABS    CONST UNTYP.           ASEG       F1 
PICTL               ABS    CONST UNTYP.           ASEG       8C 
PSWx                ABS    CONST UNTYP.           ASEG       D0 
Px                  ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RFD                 ABS    CONST UNTYP.           ASEG       D9 
RFIF                ABS    CONST UNTYP.           ASEG       E9 
RFIM                ABS    CONST UNTYP.           ASEG       91 
RFST                ABS    CONST UNTYP.           ASEG       E1 
RFTXRXIE            ABS    CONST UNTYP.           ASEG       A8 
RFTXRXIF            ABS    CONST UNTYP.           ASEG       89 
RNDH                ABS    CONST UNTYP.           ASEG       BD 
RNDL                ABS    CONST UNTYP.           ASEG       BC 
RS0x                ABS    CONST UNTYP.           ASEG       D3 
RS1x                ABS    CONST UNTYP.           ASEG       D4 
S0CON               ABS    CONST UNTYP.           ASEG       98 
S1CON               ABS    CONST UNTYP.           ASEG       9B 
SINT                ABS    CONST UNTYP.           ASEG       23 
SLEEP               ABS    CONST UNTYP.           ASEG       BE 
SPx                 ABS    CONST UNTYP.           ASEG       81 
STIE                ABS    CONST UNTYP.           ASEG       AD 
STIF                ABS    CONST UNTYP.           ASEG       C7 
T1CC0H              ABS    CONST UNTYP.           ASEG       DB 
T1CC0L              ABS    CONST UNTYP.           ASEG       DA 
T1CC1H              ABS    CONST UNTYP.           ASEG       DD 
T1CC1L              ABS    CONST UNTYP.           ASEG       DC 
T1CC2H              ABS    CONST UNTYP.           ASEG       DF 
T1CC2L              ABS    CONST UNTYP.           ASEG       DE 
T1CCTL0             ABS    CONST UNTYP.           ASEG       E5 
T1CCTL1             ABS    CONST UNTYP.           ASEG       E6 
T1CCTL2             ABS    CONST UNTYP.           ASEG       E7 
T1CNTH              ABS    CONST UNTYP.           ASEG       E3 
T1CNTL              ABS    CONST UNTYP.           ASEG       E2 
T1CTL               ABS    CONST UNTYP.           ASEG       E4 
T1IE                ABS    CONST UNTYP.           ASEG       B9 
T1IF                ABS    CONST UNTYP.           ASEG       C1 
T2CT                ABS    CONST UNTYP.           ASEG       9C 
T2CTL               ABS    CONST UNTYP.           ASEG       9E 
T2IE                ABS    CONST UNTYP.           ASEG       BA 
T2IF                ABS    CONST UNTYP.           ASEG       C2 
T2PR                ABS    CONST UNTYP.           ASEG       9D 
T3CC0               ABS    CONST UNTYP.           ASEG       CD 
T3CC1               ABS    CONST UNTYP.           ASEG       CF 
T3CCTL0             ABS    CONST UNTYP.           ASEG       CC 
T3CCTL1             ABS    CONST UNTYP.           ASEG       CE 
T3CH0IF             ABS    CONST UNTYP.           ASEG       D9 
T3CH1IF             ABS    CONST UNTYP.           ASEG       DA 
T3CNT               ABS    CONST UNTYP.           ASEG       CA 
T3CTL               ABS    CONST UNTYP.           ASEG       CB 
T3IE                ABS    CONST UNTYP.           ASEG       BB 
T3IF                ABS    CONST UNTYP.           ASEG       C3 
T3OVFIF             ABS    CONST UNTYP.           ASEG       D8 
T4CC0               ABS    CONST UNTYP.           ASEG       ED 
T4CC1               ABS    CONST UNTYP.           ASEG       EF 
T4CCTL0             ABS    CONST UNTYP.           ASEG       EC 
T4CCTL1             ABS    CONST UNTYP.           ASEG       EE 
T4CH0IF             ABS    CONST UNTYP.           ASEG       DC 
T4CH1IF             ABS    CONST UNTYP.           ASEG       DD 
T4CNT               ABS    CONST UNTYP.           ASEG       EA 
T4CTL               ABS    CONST UNTYP.           ASEG       EB 
T4IE                ABS    CONST UNTYP.           ASEG       BC 
T4IF                ABS    CONST UNTYP.           ASEG       C4 
T4OVFIF             ABS    CONST UNTYP.           ASEG       DB 
TCON                ABS    CONST UNTYP.           ASEG       88 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
TIMIF               ABS    CONST UNTYP.           ASEG       D8 
U0BAUD              ABS    CONST UNTYP.           ASEG       C2 
U0CSR               ABS    CONST UNTYP.           ASEG       86 
U0DBUF              ABS    CONST UNTYP.           ASEG       C1 
U0GCR               ABS    CONST UNTYP.           ASEG       C5 
U0UCR               ABS    CONST UNTYP.           ASEG       C4 
U1BAUD              ABS    CONST UNTYP.           ASEG       FA 
U1CSR               ABS    CONST UNTYP.           ASEG       F8 
U1DBUF              ABS    CONST UNTYP.           ASEG       F9 
U1GCR               ABS    CONST UNTYP.           ASEG       FC 
U1UCR               ABS    CONST UNTYP.           ASEG       FB 
URX0IE              ABS    CONST UNTYP.           ASEG       AA 
URX0IF              ABS    CONST UNTYP.           ASEG       8B 
URX1IE              ABS    CONST UNTYP.           ASEG       AB 
URX1IF              ABS    CONST UNTYP.           ASEG       8F 
UTX0IF              ABS    CONST UNTYP.           ASEG       E9 
UTX1IF              ABS    CONST UNTYP.           ASEG       EA 
WDCTL               ABS    CONST UNTYP.           ASEG       C9 
WDTIF               ABS    CONST UNTYP.           ASEG       EC 
WORCTL              ABS    CONST UNTYP.           ASEG       A2 
WOREVT0             ABS    CONST UNTYP.           ASEG       A3 
WOREVT1             ABS    CONST UNTYP.           ASEG       A4 
WORIRQ              ABS    CONST UNTYP.           ASEG       A1 
WORTIME0            ABS    CONST UNTYP.           ASEG       A5 
WORTIME1            ABS    CONST UNTYP.           ASEG       A6 
_IEN06              ABS    CONST UNTYP.           ASEG       AE 
_IEN16              ABS    CONST UNTYP.           ASEG       BE 
_IEN17              ABS    CONST UNTYP.           ASEG       BF 
_IRCON25            ABS    CONST UNTYP.           ASEG       ED 
_IRCON26            ABS    CONST UNTYP.           ASEG       EE 
_IRCON27            ABS    CONST UNTYP.           ASEG       EF 
_IRCON6             ABS    CONST UNTYP.           ASEG       C6 
_P2_5               ABS    CONST UNTYP.           ASEG       A5 
_P2_6               ABS    CONST UNTYP.           ASEG       A6 
_P2_7               ABS    CONST UNTYP.           ASEG       A7 
_SFR8E              ABS    CONST UNTYP.           ASEG       8E 
_SFR94              ABS    CONST UNTYP.           ASEG       94 
_SFR95              ABS    CONST UNTYP.           ASEG       95 
_SFR96              ABS    CONST UNTYP.           ASEG       96 
_SFR97              ABS    CONST UNTYP.           ASEG       97 
_SFR99              ABS    CONST UNTYP.           ASEG       99 
_SFR9F              ABS    CONST UNTYP.           ASEG       9F 
_SFRA7              ABS    CONST UNTYP.           ASEG       A7 
_SFRAA              ABS    CONST UNTYP.           ASEG       AA 
_SFRB0              ABS    CONST UNTYP.           ASEG       B0 
_SFRB7              ABS    CONST UNTYP.           ASEG       B7 
_SFRBF              ABS    CONST UNTYP.           ASEG       BF 
_SFRC3              ABS    CONST UNTYP.           ASEG       C3 
_SFRC8              ABS    CONST UNTYP.           ASEG       C8 
_TCON4              ABS    CONST UNTYP.           ASEG       8C 
_TCON6              ABS    CONST UNTYP.           ASEG       8E 
_TIMIF7             ABS    CONST UNTYP.           ASEG       DF 
__KEIL__            ABS    CONST UNTYP.           ASEG       Not solved 
exit                REL    CONST PUB UNTYP.       CSTART     0 


##############################
#          CRC:76BE          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 2          #
##############################





EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
AC                   #define, value: ACx, line:      50:4      210:4    349:4
ACALL                MNEMONIC 
ACC                  #define, value: ACCx, line:      46:4      229:4      473
ADC_VECTOR           #define, value: VECT( 1, 0x0B ), line:      80:4  
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
ADDR                 #define, value: XREG( 0xDF05 ), line:     397:4  
AGCCTRL0             #define, value: XREG( 0xDF19 ), line:     417:4  
AGCCTRL1             #define, value: XREG( 0xDF18 ), line:     416:4  
AGCCTRL2             #define, value: XREG( 0xDF17 ), line:     415:4  
AGCTEST              #define, value: XREG( 0xDF22 ), line:     426:4  
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
B                    #define, value: Bx, line:      47:4      248:4
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BSCFG                #define, value: XREG( 0xDF16 ), line:     414:4  
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CHANNR               #define, value: XREG( 0xDF06 ), line:     398:4  
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   #define, value: CYx, line:      49:4      210:4    348:4
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DEVIATN              #define, value: XREG( 0xDF11 ), line:     409:4  
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DMA_VECTOR           #define, value: VECT( 8, 0x43 ), line:      87:4  
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
ENC_VECTOR           #define, value: VECT( 4, 0x23 ), line:      83:4  
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
F0                   #define, value: F0x, line:      51:4      210:4    350:4
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOCCFG               #define, value: XREG( 0xDF15 ), line:     413:4  
FOR                  DIRECTIVE 
FREND0               #define, value: XREG( 0xDF1B ), line:     419:4  
FREND1               #define, value: XREG( 0xDF1A ), line:     418:4  
FREQ0                #define, value: XREG( 0xDF0B ), line:     403:4  
FREQ1                #define, value: XREG( 0xDF0A ), line:     402:4  
FREQ2                #define, value: XREG( 0xDF09 ), line:     401:4  
FREQEST              #define, value: XREG( 0xDF38 ), line:     448:4  
FSCAL0               #define, value: XREG( 0xDF1F ), line:     423:4  
FSCAL1               #define, value: XREG( 0xDF1E ), line:     422:4  
FSCAL2               #define, value: XREG( 0xDF1D ), line:     421:4  
FSCAL3               #define, value: XREG( 0xDF1C ), line:     420:4  
FSCTRL0              #define, value: XREG( 0xDF08 ), line:     400:4  
FSCTRL1              #define, value: XREG( 0xDF07 ), line:     399:4  
FSTEST               #define, value: XREG( 0xDF20 ), line:     424:4  
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
I2SCFG0              #define, value: XREG( 0xDF40 ), line:     460:4  
I2SCFG1              #define, value: XREG( 0xDF41 ), line:     461:4  
I2SCLKF0             #define, value: XREG( 0xDF46 ), line:     466:4  
I2SCLKF1             #define, value: XREG( 0xDF47 ), line:     467:4  
I2SCLKF2             #define, value: XREG( 0xDF48 ), line:     468:4  
I2SDATH              #define, value: XREG( 0xDF43 ), line:     463:4  
I2SDATL              #define, value: XREG( 0xDF42 ), line:     462:4  
I2SRXIE              #define, value: URX1IE, line:     382:4  
I2SRXIF              #define, value: URX1IF, line:     384:4  
I2SRX_VECTOR         #define, value: URX1_VECTOR, line:     102:4  
I2SSTAT              #define, value: XREG( 0xDF45 ), line:     465:4  
I2STXIF              #define, value: UTX1IF, line:     385:4  
I2STX_VECTOR         #define, value: UTX1_VECTOR, line:     103:4  
I2SWCNT              #define, value: XREG( 0xDF44 ), line:     464:4  
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
IOCC2510_H           #define, value: , line:      10:4  
IOCFG0               #define, value: XREG( 0xDF31 ), line:     441:4  
IOCFG1               #define, value: XREG( 0xDF30 ), line:     440:4  
IOCFG2               #define, value: XREG( 0xDF2F ), line:     439:4  
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LQI                  #define, value: XREG( 0xDF39 ), line:     449:4  
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MARCSTATE            #define, value: XREG( 0xDF3B ), line:     451:4  
MCSM0                #define, value: XREG( 0xDF14 ), line:     412:4  
MCSM1                #define, value: XREG( 0xDF13 ), line:     411:4  
MCSM2                #define, value: XREG( 0xDF12 ), line:     410:4  
MDMCFG0              #define, value: XREG( 0xDF10 ), line:     408:4  
MDMCFG1              #define, value: XREG( 0xDF0F ), line:     407:4  
MDMCFG2              #define, value: XREG( 0xDF0E ), line:     406:4  
MDMCFG3              #define, value: XREG( 0xDF0D ), line:     405:4  
MDMCFG4              #define, value: XREG( 0xDF0C ), line:     404:4  
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
OV                   #define, value: OVx, line:      54:4      210:4    353:4
P                    #define, value: Px, line:      55:4      210:4    355:4
P0INT_VECTOR         #define, value: VECT( 13, 0x6B ), line:      92:4  
P1INT_VECTOR         #define, value: VECT( 15, 0x7B ), line:      94:4  
P2INT_VECTOR         #define, value: VECT( 6, 0x33 ), line:      85:4  
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PARTNUM              #define, value: XREG( 0xDF36 ), line:     446:4  
PA_TABLE0            #define, value: XREG( 0xDF2E ), line:     438:4  
PA_TABLE1            #define, value: XREG( 0xDF2D ), line:     437:4  
PA_TABLE2            #define, value: XREG( 0xDF2C ), line:     436:4  
PA_TABLE3            #define, value: XREG( 0xDF2B ), line:     435:4  
PA_TABLE4            #define, value: XREG( 0xDF2A ), line:     434:4  
PA_TABLE5            #define, value: XREG( 0xDF29 ), line:     433:4  
PA_TABLE6            #define, value: XREG( 0xDF28 ), line:     432:4  
PA_TABLE7            #define, value: XREG( 0xDF27 ), line:     431:4  
PC                   REGISTER 
PKTCTRL0             #define, value: XREG( 0xDF04 ), line:     396:4  
PKTCTRL1             #define, value: XREG( 0xDF03 ), line:     395:4  
PKTLEN               #define, value: XREG( 0xDF02 ), line:     394:4  
PKTSTATUS            #define, value: XREG( 0xDF3C ), line:     452:4  
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PSW                  #define, value: PSWx, line:      48:4      210:4
PTEST                #define, value: XREG( 0xDF21 ), line:     425:4  
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RFTXRX_VECTOR        #define, value: VECT( 0, 0x03 ), line:      79:4  
RF_VECTOR            #define, value: VECT( 16, 0x83 ), line:      95:4  
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RS0                  #define, value: RS0x, line:      53:4      210:4    352:4
RS1                  #define, value: RS1x, line:      52:4      210:4    351:4
RSEG                 DIRECTIVE 
RSSI                 #define, value: XREG( 0xDF3A ), line:     450:4  
RTMODEL              DIRECTIVE 
S                    PREFIX 
SBIT                 #define,            line:      41:4      274:4    275:4    276:4    277:4
                                                                    278:4    279:4    280:4    281:4
                                                                    284:4    285:4    286:4    287:4
                                                                    288:4    289:4    290:4    291:4
                                                                    294:4    295:4    296:4    297:4
                                                                    298:4    299:4    300:4    301:4
                                                                    304:4    305:4    308:4    309:4
                                                                    310:4    311:4    312:4    313:4
                                                                    314:4    315:4    318:4    319:4
                                                                    320:4    321:4    322:4    323:4
                                                                    324:4    325:4    328:4    329:4
                                                                    330:4    331:4    332:4    333:4
                                                                    334:4    335:4    338:4    339:4
                                                                    340:4    341:4    342:4    343:4
                                                                    344:4    345:4    348:4    349:4
                                                                    350:4    351:4    352:4    353:4
                                                                    354:4    355:4    358:4    359:4
                                                                    360:4    361:4    362:4    363:4
                                                                    364:4    365:4    368:4    369:4
                                                                    370:4    371:4    372:4    373:4
                                                                    374:4    375:4
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFR                  #define,            line:      39:4      113:4    114:4    115:4    116:4
                                                                    117:4    118:4    119:4    123:4
                                                                    124:4    125:4    126:4    127:4
                                                                    128:4    129:4    133:4    134:4
                                                                    135:4    136:4    137:4    138:4
                                                                    139:4    143:4    144:4    145:4
                                                                    146:4    147:4    148:4    149:4
                                                                    153:4    154:4    155:4    156:4
                                                                    157:4    158:4    159:4    163:4
                                                                    164:4    165:4    166:4    167:4
                                                                    168:4    169:4    171:4    172:4
                                                                    173:4    174:4    175:4    176:4
                                                                    177:4    178:4    182:4    183:4
                                                                    184:4    185:4    186:4    187:4
                                                                    188:4    192:4    193:4    194:4
                                                                    195:4    196:4    197:4    198:4
                                                                    200:4    201:4    202:4    203:4
                                                                    204:4    205:4    206:4    207:4
                                                                    211:4    212:4    213:4    214:4
                                                                    215:4    216:4    217:4    221:4
                                                                    222:4    223:4    224:4    225:4
                                                                    226:4    227:4    229:4    230:4
                                                                    231:4    232:4    233:4    234:4
                                                                    235:4    236:4    240:4    241:4
                                                                    242:4    243:4    244:4    245:4
                                                                    246:4    248:4    249:4    250:4
                                                                    251:4    252:4    253:4    254:4
                                                                    255:4    259:4    260:4    261:4
                                                                    262:4    263:4    264:4    265:4
SFRBIT               #define,            line:      40:4      112:4    122:4    132:4    142:4
                                                                    152:4    162:4    181:4    191:4
                                                                    210:4    220:4    239:4    258:4
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SP                   #define, value: SPx, line:      45:4      113:4
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
START_INIT_IN_FAR    Target symbol: 0 
ST_VECTOR            #define, value: VECT( 5, 0x2B ), line:      84:4  
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
SYNC0                #define, value: XREG( 0xDF01 ), line:     393:4  
SYNC1                #define, value: XREG( 0xDF00 ), line:     392:4  
T1_VECTOR            #define, value: VECT( 9, 0x4B ), line:      88:4  
T2_VECTOR            #define, value: VECT( 10, 0x53 ), line:      89:4  
T3_VECTOR            #define, value: VECT( 11, 0x5B ), line:      90:4  
T4_VECTOR            #define, value: VECT( 12, 0x63 ), line:      91:4  
TEST0                #define, value: XREG( 0xDF25 ), line:     429:4  
TEST1                #define, value: XREG( 0xDF24 ), line:     428:4  
TEST2                #define, value: XREG( 0xDF23 ), line:     427:4  
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
URX0_VECTOR          #define, value: VECT( 2, 0x13 ), line:      81:4  
URX1_VECTOR          #define, value: VECT( 3, 0x1B ), line:      82:4  
UTX0_VECTOR          #define, value: VECT( 7, 0x3B ), line:      86:4  
UTX1_VECTOR          #define, value: VECT( 14, 0x73 ), line:      93:4  
VCO_VC_DAC           #define, value: XREG( 0xDF3D ), line:     453:4  
VECT                 #define,            line:      43:4  
VERSION              #define, value: XREG( 0xDF37 ), line:     447:4  
WDT_VECTOR           #define, value: VECT( 17, 0x8B ), line:      96:4  
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XREG                 #define,            line:      42:4  
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
X_ADCCFG             #define, value: XREG( 0xDFF2 ), line:     614:4  
X_ADCCON1            #define, value: XREG( 0xDFB4 ), line:     544:4  
X_ADCCON2            #define, value: XREG( 0xDFB5 ), line:     545:4  
X_ADCCON3            #define, value: XREG( 0xDFB6 ), line:     546:4  
X_ADCH               #define, value: XREG( 0xDFBB ), line:     552:4  
X_ADCL               #define, value: XREG( 0xDFBA ), line:     551:4  
X_CLKCON             #define, value: XREG( 0xDFC6 ), line:     564:4  
X_DMA0CFGH           #define, value: XREG( 0xDFD5 ), line:     581:4  
X_DMA0CFGL           #define, value: XREG( 0xDFD4 ), line:     580:4  
X_DMA1CFGH           #define, value: XREG( 0xDFD3 ), line:     579:4  
X_DMA1CFGL           #define, value: XREG( 0xDFD2 ), line:     578:4  
X_DMAARM             #define, value: XREG( 0xDFD6 ), line:     582:4  
X_DMAIRQ             #define, value: XREG( 0xDFD1 ), line:     577:4  
X_DMAREQ             #define, value: XREG( 0xDFD7 ), line:     583:4  
X_ENCCS              #define, value: XREG( 0xDFB3 ), line:     543:4  
X_ENCDI              #define, value: XREG( 0xDFB1 ), line:     541:4  
X_ENCDO              #define, value: XREG( 0xDFB2 ), line:     542:4  
X_FADDRH             #define, value: XREG( 0xDFAD ), line:     536:4  
X_FADDRL             #define, value: XREG( 0xDFAC ), line:     535:4  
X_FCTL               #define, value: XREG( 0xDFAE ), line:     537:4  
X_FWDATA             #define, value: XREG( 0xDFAF ), line:     538:4  
X_FWT                #define, value: XREG( 0xDFAB ), line:     534:4  
X_MEMCTR             #define, value: XREG( 0xDFC7 ), line:     565:4  
X_MPAGE              #define, value: XREG( 0xDF93 ), line:     507:4  
X_P0DIR              #define, value: XREG( 0xDFFD ), line:     626:4  
X_P0IFG              #define, value: XREG( 0xDF89 ), line:     496:4  
X_P0INP              #define, value: XREG( 0xDF8F ), line:     502:4  
X_P0SEL              #define, value: XREG( 0xDFF3 ), line:     615:4  
X_P1DIR              #define, value: XREG( 0xDFFE ), line:     627:4  
X_P1IEN              #define, value: XREG( 0xDF8D ), line:     500:4  
X_P1IFG              #define, value: XREG( 0xDF8A ), line:     497:4  
X_P1INP              #define, value: XREG( 0xDFF6 ), line:     618:4  
X_P1SEL              #define, value: XREG( 0xDFF4 ), line:     616:4  
X_P2DIR              #define, value: XREG( 0xDFFF ), line:     628:4  
X_P2IFG              #define, value: XREG( 0xDF8B ), line:     498:4  
X_P2INP              #define, value: XREG( 0xDFF7 ), line:     619:4  
X_P2SEL              #define, value: XREG( 0xDFF5 ), line:     617:4  
X_PERCFG             #define, value: XREG( 0xDFF1 ), line:     613:4  
X_PICTL              #define, value: XREG( 0xDF8C ), line:     499:4  
X_RFD                #define, value: XREG( 0xDFD9 ), line:     586:4  
X_RFIF               #define, value: XREG( 0xDFE9 ), line:     604:4  
X_RFIM               #define, value: XREG( 0xDF91 ), line:     505:4  
X_RFST               #define, value: XREG( 0xDFE1 ), line:     595:4  
X_RNDH               #define, value: XREG( 0xDFBD ), line:     554:4  
X_RNDL               #define, value: XREG( 0xDFBC ), line:     553:4  
X_SLEEP              #define, value: XREG( 0xDFBE ), line:     555:4  
X_T1CC0H             #define, value: XREG( 0xDFDB ), line:     588:4  
X_T1CC0L             #define, value: XREG( 0xDFDA ), line:     587:4  
X_T1CC1H             #define, value: XREG( 0xDFDD ), line:     590:4  
X_T1CC1L             #define, value: XREG( 0xDFDC ), line:     589:4  
X_T1CC2H             #define, value: XREG( 0xDFDF ), line:     592:4  
X_T1CC2L             #define, value: XREG( 0xDFDE ), line:     591:4  
X_T1CCTL0            #define, value: XREG( 0xDFE5 ), line:     599:4  
X_T1CCTL1            #define, value: XREG( 0xDFE6 ), line:     600:4  
X_T1CCTL2            #define, value: XREG( 0xDFE7 ), line:     601:4  
X_T1CNTH             #define, value: XREG( 0xDFE3 ), line:     597:4  
X_T1CNTL             #define, value: XREG( 0xDFE2 ), line:     596:4  
X_T1CTL              #define, value: XREG( 0xDFE4 ), line:     598:4  
X_T2CT               #define, value: XREG( 0xDF9C ), line:     517:4  
X_T2CTL              #define, value: XREG( 0xDF9E ), line:     519:4  
X_T2PR               #define, value: XREG( 0xDF9D ), line:     518:4  
X_T3CC0              #define, value: XREG( 0xDFCD ), line:     572:4  
X_T3CC1              #define, value: XREG( 0xDFCF ), line:     574:4  
X_T3CCTL0            #define, value: XREG( 0xDFCC ), line:     571:4  
X_T3CCTL1            #define, value: XREG( 0xDFCE ), line:     573:4  
X_T3CNT              #define, value: XREG( 0xDFCA ), line:     569:4  
X_T3CTL              #define, value: XREG( 0xDFCB ), line:     570:4  
X_T4CC0              #define, value: XREG( 0xDFED ), line:     608:4  
X_T4CC1              #define, value: XREG( 0xDFEF ), line:     610:4  
X_T4CCTL0            #define, value: XREG( 0xDFEC ), line:     607:4  
X_T4CCTL1            #define, value: XREG( 0xDFEE ), line:     609:4  
X_T4CNT              #define, value: XREG( 0xDFEA ), line:     605:4  
X_T4CTL              #define, value: XREG( 0xDFEB ), line:     606:4  
X_TIMIF              #define, value: XREG( 0xDFD8 ), line:     585:4  
X_U0BAUD             #define, value: XREG( 0xDFC2 ), line:     560:4  
X_U0CSR              #define, value: XREG( 0xDF86 ), line:     492:4  
X_U0DBUF             #define, value: XREG( 0xDFC1 ), line:     559:4  
X_U0GCR              #define, value: XREG( 0xDFC5 ), line:     563:4  
X_U0UCR              #define, value: XREG( 0xDFC4 ), line:     562:4  
X_U1BAUD             #define, value: XREG( 0xDFFA ), line:     623:4  
X_U1CSR              #define, value: XREG( 0xDFF8 ), line:     621:4  
X_U1DBUF             #define, value: XREG( 0xDFF9 ), line:     622:4  
X_U1GCR              #define, value: XREG( 0xDFFC ), line:     625:4  
X_U1UCR              #define, value: XREG( 0xDFFB ), line:     624:4  
X_WDCTL              #define, value: XREG( 0xDFC9 ), line:     568:4  
X_WORCTL             #define, value: XREG( 0xDFA2 ), line:     524:4  
X_WOREVT0            #define, value: XREG( 0xDFA3 ), line:     525:4  
X_WOREVT1            #define, value: XREG( 0xDFA4 ), line:     526:4  
X_WORIRQ             #define, value: XREG( 0xDFA1 ), line:     523:4  
X_WORTIME0           #define, value: XREG( 0xDFA5 ), line:     527:4  
X_WORTIME1           #define, value: XREG( 0xDFA6 ), line:     528:4  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
_NA_ACC              #define, value: XREG( 0xDFE0 ), line:     594:4  
_NA_B                #define, value: XREG( 0xDFF0 ), line:     612:4  
_NA_DPH0             #define, value: XREG( 0xDF83 ), line:     489:4  
_NA_DPH1             #define, value: XREG( 0xDF85 ), line:     491:4  
_NA_DPL0             #define, value: XREG( 0xDF82 ), line:     488:4  
_NA_DPL1             #define, value: XREG( 0xDF84 ), line:     490:4  
_NA_DPS              #define, value: XREG( 0xDF92 ), line:     506:4  
_NA_IEN0             #define, value: XREG( 0xDFA8 ), line:     531:4  
_NA_IEN1             #define, value: XREG( 0xDFB8 ), line:     549:4  
_NA_IEN2             #define, value: XREG( 0xDF9A ), line:     515:4  
_NA_IP0              #define, value: XREG( 0xDFA9 ), line:     532:4  
_NA_IP1              #define, value: XREG( 0xDFB9 ), line:     550:4  
_NA_IRCON            #define, value: XREG( 0xDFC0 ), line:     558:4  
_NA_IRCON2           #define, value: XREG( 0xDFE8 ), line:     603:4  
_NA_P0               #define, value: XREG( 0xDF80 ), line:     486:4  
_NA_P1               #define, value: XREG( 0xDF90 ), line:     504:4  
_NA_P2               #define, value: XREG( 0xDFA0 ), line:     522:4  
_NA_PCON             #define, value: XREG( 0xDF87 ), line:     493:4  
_NA_PSW              #define, value: XREG( 0xDFD0 ), line:     576:4  
_NA_S0CON            #define, value: XREG( 0xDF98 ), line:     513:4  
_NA_S1CON            #define, value: XREG( 0xDF9B ), line:     516:4  
_NA_SP               #define, value: XREG( 0xDF81 ), line:     487:4  
_NA_TCON             #define, value: XREG( 0xDF88 ), line:     495:4  
_XREGDF26            #define, value: XREG( 0xDF26 ), line:     430:4  
_XREGDF32            #define, value: XREG( 0xDF32 ), line:     442:4  
_XREGDF33            #define, value: XREG( 0xDF33 ), line:     443:4  
_XREGDF34            #define, value: XREG( 0xDF34 ), line:     444:4  
_XREGDF35            #define, value: XREG( 0xDF35 ), line:     445:4  
_X_SFR8E             #define, value: XREG( 0xDF8E ), line:     501:4  
_X_SFR94             #define, value: XREG( 0xDF94 ), line:     508:4  
_X_SFR95             #define, value: XREG( 0xDF95 ), line:     509:4  
_X_SFR96             #define, value: XREG( 0xDF96 ), line:     510:4  
_X_SFR97             #define, value: XREG( 0xDF97 ), line:     511:4  
_X_SFR99             #define, value: XREG( 0xDF99 ), line:     514:4  
_X_SFR9F             #define, value: XREG( 0xDF9F ), line:     520:4  
_X_SFRA7             #define, value: XREG( 0xDFA7 ), line:     529:4  
_X_SFRAA             #define, value: XREG( 0xDFAA ), line:     533:4  
_X_SFRB0             #define, value: XREG( 0xDFB0 ), line:     540:4  
_X_SFRB7             #define, value: XREG( 0xDFB7 ), line:     547:4  
_X_SFRBF             #define, value: XREG( 0xDFBF ), line:     556:4  
_X_SFRC3             #define, value: XREG( 0xDFC3 ), line:     561:4  
_X_SFRC8             #define, value: XREG( 0xDFC8 ), line:     567:4  
__A51__              Target symbol: 0 
__AX51__             Target symbol: 0 
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2        215
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2        215
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3      215
                                                                      215
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       31      270
__CORE_EXTENDED2__   #define, value: 3, line:      22:2         35      296
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       31       35
                                                                      270      296
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       23       27      252
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
__no_init            Target symbol: 0 
__sfr                Target symbol: 0 
__xdata              Target symbol: 0 
addr                 Target symbol: 0 
bit0                 Target symbol: 0 
bit1                 Target symbol: 0 
bit2                 Target symbol: 0 
bit3                 Target symbol: 0 
bit4                 Target symbol: 0 
bit5                 Target symbol: 0 
bit6                 Target symbol: 0 
bit7                 Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
char                 Target symbol: 0 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
num                  Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
sbit                 Target symbol: 0 
sfr                  Target symbol: 0 
struct               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
union                Target symbol: 0 
unsigned             Target symbol: 0 
volatile             Target symbol: 0 
xdata                Target symbol: 0 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
ACCx                ABS    CONST UNTYP.           ASEG       E0 
ACx                 ABS    CONST UNTYP.           ASEG       D6 
ADCCFG              ABS    CONST UNTYP.           ASEG       F2 
ADCCON1             ABS    CONST UNTYP.           ASEG       B4 
ADCCON2             ABS    CONST UNTYP.           ASEG       B5 
ADCCON3             ABS    CONST UNTYP.           ASEG       B6 
ADCH                ABS    CONST UNTYP.           ASEG       BB 
ADCIE               ABS    CONST UNTYP.           ASEG       A9 
ADCIF               ABS    CONST UNTYP.           ASEG       8D 
ADCL                ABS    CONST UNTYP.           ASEG       BA 
Bx                  ABS    CONST UNTYP.           ASEG       F0 
CLKCON              ABS    CONST UNTYP.           ASEG       C6 
CYx                 ABS    CONST UNTYP.           ASEG       D7 
DMA0CFGH            ABS    CONST UNTYP.           ASEG       D5 
DMA0CFGL            ABS    CONST UNTYP.           ASEG       D4 
DMA1CFGH            ABS    CONST UNTYP.           ASEG       D3 
DMA1CFGL            ABS    CONST UNTYP.           ASEG       D2 
DMAARM              ABS    CONST UNTYP.           ASEG       D6 
DMAIE               ABS    CONST UNTYP.           ASEG       B8 
DMAIF               ABS    CONST UNTYP.           ASEG       C0 
DMAIRQ              ABS    CONST UNTYP.           ASEG       D1 
DMAREQ              ABS    CONST UNTYP.           ASEG       D7 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       83 
DPH1                ABS    CONST UNTYP.           ASEG       85 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       82 
DPL1                ABS    CONST UNTYP.           ASEG       84 
DPS                 ABS    CONST UNTYP.           ASEG       92 
EA                  ABS    CONST UNTYP.           ASEG       AF 
ENCCS               ABS    CONST UNTYP.           ASEG       B3 
ENCDI               ABS    CONST UNTYP.           ASEG       B1 
ENCDO               ABS    CONST UNTYP.           ASEG       B2 
ENCIE               ABS    CONST UNTYP.           ASEG       AC 
ENCIF_0             ABS    CONST UNTYP.           ASEG       98 
ENCIF_1             ABS    CONST UNTYP.           ASEG       99 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0x                 ABS    CONST UNTYP.           ASEG       D5 
F1                  ABS    CONST UNTYP.           ASEG       D1 
FADDRH              ABS    CONST UNTYP.           ASEG       AD 
FADDRL              ABS    CONST UNTYP.           ASEG       AC 
FCTL                ABS    CONST UNTYP.           ASEG       AE 
FWDATA              ABS    CONST UNTYP.           ASEG       AF 
FWT                 ABS    CONST UNTYP.           ASEG       AB 
IEN0                ABS    CONST UNTYP.           ASEG       A8 
IEN1                ABS    CONST UNTYP.           ASEG       B8 
IEN2                ABS    CONST UNTYP.           ASEG       9A 
IP0                 ABS    CONST UNTYP.           ASEG       A9 
IP1                 ABS    CONST UNTYP.           ASEG       B9 
IRCON               ABS    CONST UNTYP.           ASEG       C0 
IRCON2              ABS    CONST UNTYP.           ASEG       E8 
IT0                 ABS    CONST UNTYP.           ASEG       88 
IT1                 ABS    CONST UNTYP.           ASEG       8A 
MEMCTR              ABS    CONST UNTYP.           ASEG       C7 
MPAGE               ABS    CONST UNTYP.           ASEG       93 
OVFIM               ABS    CONST UNTYP.           ASEG       DE 
OVx                 ABS    CONST UNTYP.           ASEG       D2 
P0                  ABS    CONST UNTYP.           ASEG       80 
P0DIR               ABS    CONST UNTYP.           ASEG       FD 
P0IE                ABS    CONST UNTYP.           ASEG       BD 
P0IF                ABS    CONST UNTYP.           ASEG       C5 
P0IFG               ABS    CONST UNTYP.           ASEG       89 
P0INP               ABS    CONST UNTYP.           ASEG       8F 
P0SEL               ABS    CONST UNTYP.           ASEG       F3 
P0_0                ABS    CONST UNTYP.           ASEG       80 
P0_1                ABS    CONST UNTYP.           ASEG       81 
P0_2                ABS    CONST UNTYP.           ASEG       82 
P0_3                ABS    CONST UNTYP.           ASEG       83 
P0_4                ABS    CONST UNTYP.           ASEG       84 
P0_5                ABS    CONST UNTYP.           ASEG       85 
P0_6                ABS    CONST UNTYP.           ASEG       86 
P0_7                ABS    CONST UNTYP.           ASEG       87 
P1                  ABS    CONST UNTYP.           ASEG       90 
P1DIR               ABS    CONST UNTYP.           ASEG       FE 
P1IEN               ABS    CONST UNTYP.           ASEG       8D 
P1IF                ABS    CONST UNTYP.           ASEG       EB 
P1IFG               ABS    CONST UNTYP.           ASEG       8A 
P1INP               ABS    CONST UNTYP.           ASEG       F6 
P1SEL               ABS    CONST UNTYP.           ASEG       F4 
P1_0                ABS    CONST UNTYP.           ASEG       90 
P1_1                ABS    CONST UNTYP.           ASEG       91 
P1_2                ABS    CONST UNTYP.           ASEG       92 
P1_3                ABS    CONST UNTYP.           ASEG       93 
P1_4                ABS    CONST UNTYP.           ASEG       94 
P1_5                ABS    CONST UNTYP.           ASEG       95 
P1_6                ABS    CONST UNTYP.           ASEG       96 
P1_7                ABS    CONST UNTYP.           ASEG       97 
P2                  ABS    CONST UNTYP.           ASEG       A0 
P2DIR               ABS    CONST UNTYP.           ASEG       FF 
P2IF                ABS    CONST UNTYP.           ASEG       E8 
P2IFG               ABS    CONST UNTYP.           ASEG       8B 
P2INP               ABS    CONST UNTYP.           ASEG       F7 
P2SEL               ABS    CONST UNTYP.           ASEG       F5 
P2_0                ABS    CONST UNTYP.           ASEG       A0 
P2_1                ABS    CONST UNTYP.           ASEG       A1 
P2_2                ABS    CONST UNTYP.           ASEG       A2 
P2_3                ABS    CONST UNTYP.           ASEG       A3 
P2_4                ABS    CONST UNTYP.           ASEG       A4 
PCON                ABS    CONST UNTYP.           ASEG       87 
PERCFG              ABS    CONST UNTYP.           ASEG       F1 
PICTL               ABS    CONST UNTYP.           ASEG       8C 
PSWx                ABS    CONST UNTYP.           ASEG       D0 
Px                  ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RFD                 ABS    CONST UNTYP.           ASEG       D9 
RFIF                ABS    CONST UNTYP.           ASEG       E9 
RFIM                ABS    CONST UNTYP.           ASEG       91 
RFST                ABS    CONST UNTYP.           ASEG       E1 
RFTXRXIE            ABS    CONST UNTYP.           ASEG       A8 
RFTXRXIF            ABS    CONST UNTYP.           ASEG       89 
RNDH                ABS    CONST UNTYP.           ASEG       BD 
RNDL                ABS    CONST UNTYP.           ASEG       BC 
RS0x                ABS    CONST UNTYP.           ASEG       D3 
RS1x                ABS    CONST UNTYP.           ASEG       D4 
S0CON               ABS    CONST UNTYP.           ASEG       98 
S1CON               ABS    CONST UNTYP.           ASEG       9B 
SINT                ABS    CONST UNTYP.           ASEG       23 
SLEEP               ABS    CONST UNTYP.           ASEG       BE 
SPx                 ABS    CONST UNTYP.           ASEG       81 
STIE                ABS    CONST UNTYP.           ASEG       AD 
STIF                ABS    CONST UNTYP.           ASEG       C7 
T1CC0H              ABS    CONST UNTYP.           ASEG       DB 
T1CC0L              ABS    CONST UNTYP.           ASEG       DA 
T1CC1H              ABS    CONST UNTYP.           ASEG       DD 
T1CC1L              ABS    CONST UNTYP.           ASEG       DC 
T1CC2H              ABS    CONST UNTYP.           ASEG       DF 
T1CC2L              ABS    CONST UNTYP.           ASEG       DE 
T1CCTL0             ABS    CONST UNTYP.           ASEG       E5 
T1CCTL1             ABS    CONST UNTYP.           ASEG       E6 
T1CCTL2             ABS    CONST UNTYP.           ASEG       E7 
T1CNTH              ABS    CONST UNTYP.           ASEG       E3 
T1CNTL              ABS    CONST UNTYP.           ASEG       E2 
T1CTL               ABS    CONST UNTYP.           ASEG       E4 
T1IE                ABS    CONST UNTYP.           ASEG       B9 
T1IF                ABS    CONST UNTYP.           ASEG       C1 
T2CT                ABS    CONST UNTYP.           ASEG       9C 
T2CTL               ABS    CONST UNTYP.           ASEG       9E 
T2IE                ABS    CONST UNTYP.           ASEG       BA 
T2IF                ABS    CONST UNTYP.           ASEG       C2 
T2PR                ABS    CONST UNTYP.           ASEG       9D 
T3CC0               ABS    CONST UNTYP.           ASEG       CD 
T3CC1               ABS    CONST UNTYP.           ASEG       CF 
T3CCTL0             ABS    CONST UNTYP.           ASEG       CC 
T3CCTL1             ABS    CONST UNTYP.           ASEG       CE 
T3CH0IF             ABS    CONST UNTYP.           ASEG       D9 
T3CH1IF             ABS    CONST UNTYP.           ASEG       DA 
T3CNT               ABS    CONST UNTYP.           ASEG       CA 
T3CTL               ABS    CONST UNTYP.           ASEG       CB 
T3IE                ABS    CONST UNTYP.           ASEG       BB 
T3IF                ABS    CONST UNTYP.           ASEG       C3 
T3OVFIF             ABS    CONST UNTYP.           ASEG       D8 
T4CC0               ABS    CONST UNTYP.           ASEG       ED 
T4CC1               ABS    CONST UNTYP.           ASEG       EF 
T4CCTL0             ABS    CONST UNTYP.           ASEG       EC 
T4CCTL1             ABS    CONST UNTYP.           ASEG       EE 
T4CH0IF             ABS    CONST UNTYP.           ASEG       DC 
T4CH1IF             ABS    CONST UNTYP.           ASEG       DD 
T4CNT               ABS    CONST UNTYP.           ASEG       EA 
T4CTL               ABS    CONST UNTYP.           ASEG       EB 
T4IE                ABS    CONST UNTYP.           ASEG       BC 
T4IF                ABS    CONST UNTYP.           ASEG       C4 
T4OVFIF             ABS    CONST UNTYP.           ASEG       DB 
TCON                ABS    CONST UNTYP.           ASEG       88 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
TIMIF               ABS    CONST UNTYP.           ASEG       D8 
U0BAUD              ABS    CONST UNTYP.           ASEG       C2 
U0CSR               ABS    CONST UNTYP.           ASEG       86 
U0DBUF              ABS    CONST UNTYP.           ASEG       C1 
U0GCR               ABS    CONST UNTYP.           ASEG       C5 
U0UCR               ABS    CONST UNTYP.           ASEG       C4 
U1BAUD              ABS    CONST UNTYP.           ASEG       FA 
U1CSR               ABS    CONST UNTYP.           ASEG       F8 
U1DBUF              ABS    CONST UNTYP.           ASEG       F9 
U1GCR               ABS    CONST UNTYP.           ASEG       FC 
U1UCR               ABS    CONST UNTYP.           ASEG       FB 
URX0IE              ABS    CONST UNTYP.           ASEG       AA 
URX0IF              ABS    CONST UNTYP.           ASEG       8B 
URX1IE              ABS    CONST UNTYP.           ASEG       AB 
URX1IF              ABS    CONST UNTYP.           ASEG       8F 
UTX0IF              ABS    CONST UNTYP.           ASEG       E9 
UTX1IF              ABS    CONST UNTYP.           ASEG       EA 
WDCTL               ABS    CONST UNTYP.           ASEG       C9 
WDTIF               ABS    CONST UNTYP.           ASEG       EC 
WORCTL              ABS    CONST UNTYP.           ASEG       A2 
WOREVT0             ABS    CONST UNTYP.           ASEG       A3 
WOREVT1             ABS    CONST UNTYP.           ASEG       A4 
WORIRQ              ABS    CONST UNTYP.           ASEG       A1 
WORTIME0            ABS    CONST UNTYP.           ASEG       A5 
WORTIME1            ABS    CONST UNTYP.           ASEG       A6 
_IEN06              ABS    CONST UNTYP.           ASEG       AE 
_IEN16              ABS    CONST UNTYP.           ASEG       BE 
_IEN17              ABS    CONST UNTYP.           ASEG       BF 
_IRCON25            ABS    CONST UNTYP.           ASEG       ED 
_IRCON26            ABS    CONST UNTYP.           ASEG       EE 
_IRCON27            ABS    CONST UNTYP.           ASEG       EF 
_IRCON6             ABS    CONST UNTYP.           ASEG       C6 
_P2_5               ABS    CONST UNTYP.           ASEG       A5 
_P2_6               ABS    CONST UNTYP.           ASEG       A6 
_P2_7               ABS    CONST UNTYP.           ASEG       A7 
_SFR8E              ABS    CONST UNTYP.           ASEG       8E 
_SFR94              ABS    CONST UNTYP.           ASEG       94 
_SFR95              ABS    CONST UNTYP.           ASEG       95 
_SFR96              ABS    CONST UNTYP.           ASEG       96 
_SFR97              ABS    CONST UNTYP.           ASEG       97 
_SFR99              ABS    CONST UNTYP.           ASEG       99 
_SFR9F              ABS    CONST UNTYP.           ASEG       9F 
_SFRA7              ABS    CONST UNTYP.           ASEG       A7 
_SFRAA              ABS    CONST UNTYP.           ASEG       AA 
_SFRB0              ABS    CONST UNTYP.           ASEG       B0 
_SFRB7              ABS    CONST UNTYP.           ASEG       B7 
_SFRBF              ABS    CONST UNTYP.           ASEG       BF 
_SFRC3              ABS    CONST UNTYP.           ASEG       C3 
_SFRC8              ABS    CONST UNTYP.           ASEG       C8 
_TCON4              ABS    CONST UNTYP.           ASEG       8C 
_TCON6              ABS    CONST UNTYP.           ASEG       8E 
_TIMIF7             ABS    CONST UNTYP.           ASEG       DF 
__KEIL__            ABS    CONST UNTYP.           ASEG       Not solved 


##############################
#          CRC:76BE          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 2          #
#     Modules:        9      #
#     Total errors:   0      #
#     Total warnings: 0      #
##############################



