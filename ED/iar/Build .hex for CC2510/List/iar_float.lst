###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

      1    000000          ;       TITL    '8051 - Floating point arithmetics'
      2    000000          ;---------------------------------------------------
                           --------------------------
      3    000000          ;
      4    000000          ;   Revision control system
      5    000000          ;       $Id: iar_float.s51 1.6 2007/06/07 09:21:48Z
                            larssu Exp $
      6    000000          ;
      7    000000          ;
      8    000000          ;       File:           L02.S03
      9    000000          ;
     10    000000          ;       Version:        5.20
     11    000000          ;
     12    000000          ;       Created:        01/Jan/90 IANR [4.00
                            modifications of IDAS original
     13    000000          ;                                       from
                            1986]
     14    000000          ;       Revised:        02/Oct/90 IMAF [Rewritten. 
                            Considerably faster
     15    000000          ;                                       version made
                            after IANB's model]
     16    000000          ;                       910621 IMAF [_R deleted]
     17    000000          ;                       920829 IMAF [Version
                            5.00]
     18    000000          ;
     19    000000          ;       Description:    This file contain the
                            floating point arithmetics
     20    000000          ;                       and cast operations.
                            
     21    000000          ;
     22    000000          ;       Entries:        ?F_MUL_L02
     23    000000          ;                       ?F_DIV_L02,?F_DIV_R_L02
     24    000000          ;                       ?F_ADD_L02
     25    000000          ;                       ?F_SUB_L02,?F_SUB_R_L02
     26    000000          ;                       ?SL_TO_FLT_L02,?SL_TO_FLT_R_
                           L02
     27    000000          ;                       ?UL_TO_FLT_L02,?UL_TO_FLT_R_
                           L02
     28    000000          ;                       ?FLT_TO_L_L02,?FLT_TO_L_R_L0
                           2
     29    000000          ;                       (?F_UNPACK_L02)         ;
                            Internal entry
     30    000000          ;                       (?F_PACK_L02)           ;
                            Internal entry
     31    000000          ;                       (?F_UNDERFLOW_L02)      ;
                            Internal entry
     32    000000          ;                       (?F_OVERFLOW_L02)       ;
                            Internal entry
     33    000000          ;
     34    000000          ;
     35    000000          ;---------------------------------------------------
                           --------------------------
     36    000000          
     37    000000          #include "iar_common.h"
     38    000000          
     39    000001          lcall_mode      DEFINE          1
     40    000000          
     41    000000          
     42    000000          ;---------------------------------------------------
                           --------------------------
     43    000000          ;
     44    000000          ;       Function(s):    Floating point Multiplicatio
                           n.
     45    000000          ;
     46    000000          ;       Description:    Multiplies two floating
                            point operands found in TOS
     47    000000          ;                       and NOS. The product is left
                            in TOS. The input 
     48    000000          ;                       variables must be in IEEE
                            format.
     49    000000          ;                       Zero-flag will be set if and
                            only if the result is 
     50    000000          ;                       zero.
     51    000000          ;
     52    000000          ;       Algorithm:
     53    000000          ;                       if ((NOSE==0) or (TOSE==0)
                            RESE = 0
     54    000000          ;                       else
     55    000000          ;                         RESE = (NOSE-127) +
                            (TOSE-127) + 127 
     56    000000          ;                         if RESE < 0 underflow RESE
                            = 0
     57    000000          ;                         else {
     58    000000          ;                           RESS = NOSS EOR
                            TOSS
     59    000000          ;                           RESM = NOSM * TOSM
     60    000000          ;                           if RESM overlflow
                            {
     61    000000          ;                             RESM = RESM >>
                            1
     62    000000          ;                             RESE = RESE +
                            1
     63    000000          ;                           }
     64    000000          ;                         }
     65    000000          ;                       round(RES)                  
                                  
     66    000000          ;
     67    000000          ;
     68    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
     69    000000          ;
     70    000000          ;
     71    000000          ;       Input:  R4:R7                   operand
     72    000000          ;               [SP+0:1]                return
                            address from float package
     73    000000          ;               R0:R3                   operand
     74    000000          ;               
     75    000000          ;       Output: R4:R7                   operand *
                            operand
     76    000000          ;               A                       Cleared when
                            result is zero, else set
     77    000000          ;        
     78    000000          ;---------------------------------------------------
                           --------------------------
     79    000000          
     80    000000          
     81    000000          
     82    000000                  MODULE  ?F_MUL_CLR_L02
     83    000000                  RSEG    RCODE:CODE:NOROOT
     84    000000                  PUBLIC  ?F_MUL_CLR_L02
     85    000000                  EXTERN  ?F_MUL_L02
     86    000000          ?F_MUL_CLR_L02:
     87    000000 E4               CLR     A
     88    000001 F8               MOV     R0,A
     89    000002 F9               MOV     R1,A
     90    000003                  IF      lcall_mode
     91    000003 02....           LJMP    ?F_MUL_L02
     92    000006                  ELSE
     93    000006                  AJMP    ?F_MUL_L02
     94    000006                  ENDIF
     95    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_CLR_L02      REL    CONST PUB UNTYP.       RCODE      0 
?F_MUL_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?RET                ABS    CONST UNTYP.           ASEG       Not solved 
?RET_EXT            ABS    CONST UNTYP.           ASEG       Not solved 
?RET_HIGH           ABS    CONST UNTYP.           ASEG       Not solved 
?RET_LOW            ABS    CONST UNTYP.           ASEG       Not solved 
?V_START            ABS    CONST UNTYP.           ASEG       Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BASEADDRESS         ABS    CONST UNTYP.           ASEG       Not solved 
Base                ABS    CONST UNTYP.           ASEG       Not solved 
CFA_PSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CFA_SP              ABS    CONST UNTYP.           ASEG       Not solved 
CFA_XSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CODEALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
COMMON              ABS    CONST UNTYP.           ASEG       Not solved 
CONCAT              ABS    CONST UNTYP.           ASEG       Not solved 
DATAALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       Not solved 
DPTR0               ABS    CONST UNTYP.           ASEG       Not solved 
ENDCOMMON           ABS    CONST UNTYP.           ASEG       Not solved 
ENDNAMES            ABS    CONST UNTYP.           ASEG       Not solved 
EXTENDS             ABS    CONST UNTYP.           ASEG       Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FRAMECELL           ABS    CONST UNTYP.           ASEG       Not solved 
Frame               ABS    CONST UNTYP.           ASEG       Not solved 
NAMES               ABS    CONST UNTYP.           ASEG       Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               ABS    CONST UNTYP.           ASEG       Not solved 
PSPH                ABS    CONST UNTYP.           ASEG       Not solved 
PSPL                ABS    CONST UNTYP.           ASEG       Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RETH_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETL_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETURNADDRESS       ABS    CONST UNTYP.           ASEG       Not solved 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
Resource            ABS    CONST UNTYP.           ASEG       Not solved 
ResourceParts       ABS    CONST UNTYP.           ASEG       Not solved 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SameValue           ABS    CONST UNTYP.           ASEG       Not solved 
StackFrame          ABS    CONST UNTYP.           ASEG       Not solved 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               ABS    CONST UNTYP.           ASEG       Not solved 
Undefined           ABS    CONST UNTYP.           ASEG       Not solved 
V0                  ABS    CONST UNTYP.           ASEG       Not solved 
V1                  ABS    CONST UNTYP.           ASEG       Not solved 
V10                 ABS    CONST UNTYP.           ASEG       Not solved 
V11                 ABS    CONST UNTYP.           ASEG       Not solved 
V12                 ABS    CONST UNTYP.           ASEG       Not solved 
V13                 ABS    CONST UNTYP.           ASEG       Not solved 
V14                 ABS    CONST UNTYP.           ASEG       Not solved 
V15                 ABS    CONST UNTYP.           ASEG       Not solved 
V16                 ABS    CONST UNTYP.           ASEG       Not solved 
V17                 ABS    CONST UNTYP.           ASEG       Not solved 
V18                 ABS    CONST UNTYP.           ASEG       Not solved 
V19                 ABS    CONST UNTYP.           ASEG       Not solved 
V2                  ABS    CONST UNTYP.           ASEG       Not solved 
V20                 ABS    CONST UNTYP.           ASEG       Not solved 
V21                 ABS    CONST UNTYP.           ASEG       Not solved 
V22                 ABS    CONST UNTYP.           ASEG       Not solved 
V23                 ABS    CONST UNTYP.           ASEG       Not solved 
V24                 ABS    CONST UNTYP.           ASEG       Not solved 
V25                 ABS    CONST UNTYP.           ASEG       Not solved 
V26                 ABS    CONST UNTYP.           ASEG       Not solved 
V27                 ABS    CONST UNTYP.           ASEG       Not solved 
V28                 ABS    CONST UNTYP.           ASEG       Not solved 
V29                 ABS    CONST UNTYP.           ASEG       Not solved 
V3                  ABS    CONST UNTYP.           ASEG       Not solved 
V30                 ABS    CONST UNTYP.           ASEG       Not solved 
V31                 ABS    CONST UNTYP.           ASEG       Not solved 
V4                  ABS    CONST UNTYP.           ASEG       Not solved 
V5                  ABS    CONST UNTYP.           ASEG       Not solved 
V6                  ABS    CONST UNTYP.           ASEG       Not solved 
V7                  ABS    CONST UNTYP.           ASEG       Not solved 
V8                  ABS    CONST UNTYP.           ASEG       Not solved 
V9                  ABS    CONST UNTYP.           ASEG       Not solved 
VB                  ABS    CONST UNTYP.           ASEG       Not solved 
VirtualResource     ABS    CONST UNTYP.           ASEG       Not solved 
XSP16               ABS    CONST UNTYP.           ASEG       Not solved 
XSPH                ABS    CONST UNTYP.           ASEG       Not solved 
XSPL                ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_common   ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_names    ABS    CONST UNTYP.           ASEG       Not solved 
cfi_common          ABS    CONST UNTYP.           ASEG       Not solved 
cfi_names           ABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_commonABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_namesABS    CONST UNTYP.           ASEG       Not solved 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 
samevalue           ABS    CONST UNTYP.           ASEG       Not solved 
sub                 ABS    CONST UNTYP.           ASEG       Not solved 
undefined           ABS    CONST UNTYP.           ASEG       Not solved 


##############################
#          CRC:621C          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

     96    000000          
     97    000000                  MODULE  ?F_MUL_R_CLR_L02
     98    000000                  RSEG    RCODE:CODE:NOROOT
     99    000000                  PUBLIC  ?F_MUL_R_CLR_L02
    100    000000                  EXTERN  ?F_MUL_L02
    101    000000          ?F_MUL_R_CLR_L02:
    102    000000 E4               CLR     A
    103    000001 FC               MOV     R4,A
    104    000002 FD               MOV     R5,A
    105    000003                  IF      lcall_mode
    106    000003 02....           LJMP    ?F_MUL_L02
    107    000006                  ELSE
    108    000006                  AJMP    ?F_MUL_L02
    109    000006                  ENDIF
    110    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_MUL_R_CLR_L02    REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:F528          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    111    000000          
    112    000000                  MODULE  ?F_MUL2_R0123_L02       
    113    000000                  RSEG    RCODE:CODE:NOROOT
    114    000000                  PUBLIC  ?F_MUL2_R0123_L02
    115    000000                  EXTERN  ?F_MUL_L02
    116    000000          
    117    000000          ?F_MUL2_R0123_L02:
    118    000000 E8               MOV     A,R0
    119    000001 FC               MOV     R4,A
    120    000002 E9               MOV     A,R1
    121    000003 FD               MOV     R5,A
    122    000004 EA               MOV     A,R2
    123    000005 FE               MOV     R6,A
    124    000006 EB               MOV     A,R3
    125    000007 FF               MOV     R7,A
    126    000008                  IF      lcall_mode
    127    000008 02....           LJMP    ?F_MUL_L02
    128    00000B                  ELSE
    129    00000B                  SJMP    ?F_MUL_L02
    130    00000B                  ENDIF
    131    00000B                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL2_R0123_L02   REL    CONST PUB UNTYP.       RCODE      0 
?F_MUL_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:191D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 11          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    132    000000          
    133    000000                  MODULE  ?F_MUL_L02              ; Can be
                            replaced
    134    000000                  RSEG    RCODE:CODE:NOROOT
    135    000000                  PUBLIC  ?F_MUL2_R4567_L02
    136    000000                  PUBLIC  ?F_MUL_L02
    137    000000                  EXTERN  ?F_UNPACK_L02
    138    000000                  EXTERN  ?F_PACK_L02
    139    000000                  EXTERN  ?F_ROUND_L02
    140    000000                  EXTERN  ?F_OVERFLOW_L02
    141    000000                  EXTERN  ?F_SHIFT_LEFT_L02
    142    000000          
    143    000000          ?F_MUL2_R4567_L02:
    144    000000 EC               MOV     A,R4
    145    000001 F8               MOV     R0,A
    146    000002 ED               MOV     A,R5
    147    000003 F9               MOV     R1,A
    148    000004 EE               MOV     A,R6
    149    000005 FA               MOV     R2,A
    150    000006 EF               MOV     A,R7
    151    000007 FB               MOV     R3,A
    152    000008          
    153    000008          ?F_MUL_L02:
    154    000008          ;
    155    000008          ;       First check if one of the operands is zero,
                            then the result
    156    000008          ;       must be zero. 
    157    000008          
    158    000008 EF               MOV     A,R7
    159    000009 4E               ORL     A,R6    
    160    00000A 7001             JNZ     TEST_ZERO       ; If NOS is zero
                                                            then return
    161    00000C 22               RET
    162    00000D          
    163    00000D          TEST_ZERO:
    164    00000D EB               MOV     A,R3
    165    00000E 4A               ORL     A,R2
    166    00000F 7005             JNZ     NO_ZERO         ; If TOS is zero
                                                            then zero TOS and
                                                            return
    167    000011          UNDERFLOW:
    168    000011 FF               MOV     R7,A
    169    000012          OVERFLOW_2:
    170    000012 FC               MOV     R4,A
    171    000013 FD               MOV     R5,A
    172    000014 FE               MOV     R6,A
    173    000015 22               RET
    174    000016          NO_ZERO:
    175    000016          ;
    176    000016          ;       OK no zero's this far, unpack the operands.
    177    000016          ;       
    178    000016          
    179    000016 12....           LCALL   ?F_UNPACK_L02
    180    000019          
    181    000019          ;
    182    000019          ;       Compute the result exp.
    183    000019          ;
    184    000019 947F             SUBB    A,#127                  ; NOSE -=
                                                                    127
    185    00001B 4009             JC      MAYBE_UNDERFLOW
    186    00001D 2B               ADD     A,R3                    ; NOSE +=
                                                                    TOSE, where
                                                                    NOSE is 0
                                                                    to
                                                                    80
    187    00001E 500C             JNC     EXP_OK
    188    000020 7F7F             MOV     R7,#127
    189    000022 74FF             MOV     A,#255
    190    000024 80EC             SJMP    OVERFLOW_2
    191    000026          
    192    000026          MAYBE_UNDERFLOW:                        ; NOSE is 81
                            to ff
    193    000026 2B               ADD     A,R3                    ; NOSE +=
                                                                    TOSE
    194    000027 4003             JC      EXP_OK
    195    000029 E4               CLR     A
    196    00002A 80E5             SJMP    UNDERFLOW
    197    00002C          EXP_OK:
    198    00002C C0E0             PUSH    ACC                     ; We push
                                                                    RESE
    199    00002E          ;
    200    00002E          ;       then compute new sign.
    201    00002E          ;
    202    00002E          
    203    00002E C0F0             PUSH    B                       ; We push
                                                                    RESS
    204    000030          ;
    205    000030          ;       We look if any mantissa is one, then the
                            result will be the other
    206    000030          ;
    207    000030          
    208    000030 E8               MOV     A,R0                    ; Check
                                                                    TOSM
    209    000031 49               ORL     A,R1
    210    000032 704E             JNZ     NOT_TOS
    211    000034 BA8009           CJNE    R2,#128,TOS_NOT_1
    212    000037          
    213    000037 D0E0     L55:    POP     ACC                     ; NOSM is
                                                                    the
                                                                    answer
    214    000039 F9               MOV     R1,A
    215    00003A D0E0             POP     ACC
    216    00003C F8               MOV     R0,A
    217    00003D                  IF      lcall_mode
    218    00003D 02....           LJMP    ?F_PACK_L02
    219    000040                  ELSE
    220    000040                  AJMP    ?F_PACK_L02
    221    000040                  ENDIF
    222    000040          
    223    000040          
    224    000040          TOS_NOT_1:
    225    000040 EC               MOV     A,R4                    ; Check if
                                                                    NOSML,NOSMM
                                                                    is
                                                                    zero
    226    000041 4D               ORL     A,R5
    227    000042 7018             JNZ     TOSMH_NOSM
    228    000044 BE8008           CJNE    R6,#128,NOSMH_TOSMH
    229    000047 E8       L66:    MOV     A,R0                    ; Return
                                                                    TOSM
    230    000048 FC               MOV     R4,A
    231    000049 E9               MOV     A,R1
    232    00004A FD               MOV     R5,A
    233    00004B EA               MOV     A,R2
    234    00004C FE               MOV     R6,A
    235    00004D 80E8             SJMP    L55
    236    00004F          NOSMH_TOSMH:
    237    00004F E4               CLR     A               ; We do NOSMH *
                                                            TOSMH
    238    000050 FB               MOV     R3,A
    239    000051 FF               MOV     R7,A
    240    000052 EA               MOV     A,R2
    241    000053 8EF0             MOV     B,R6
    242    000055 A4               MUL     AB
    243    000056 F8               MOV     R0,A            ; RESMM finished
    244    000057 E5F0             MOV     A,B             ; RESMH finished
    245    000059                  IF      lcall_mode
    246    000059 02....           LJMP    LOAD_RESM
    247    00005C                  ELSE
    248    00005C                  AJMP    LOAD_RESM
    249    00005C                  ENDIF
    250    00005C          TOSMH_NOSM:
    251    00005C EA               MOV     A,R2            ; We only need to do
                                                            TOSMH * NOSM
    252    00005D 8CF0             MOV     B,R4
    253    00005F A4               MUL     AB
    254    000060 FF               MOV     R7,A            ; RESM4 finished
    255    000061 ABF0             MOV     R3,B            ; Part of RESML in
                                                            R3
    256    000063 EA               MOV     A,R2
    257    000064 8DF0             MOV     B,R5
    258    000066 A4               MUL     AB
    259    000067 2B               ADD     A,R3
    260    000068 FB               MOV     R3,A            ; RESML finished
    261    000069 E4               CLR     A
    262    00006A 35F0             ADDC    A,B
    263    00006C F8               MOV     R0,A            ; Part of RESMM in
                                                            R0
    264    00006D EA               MOV     A,R2
    265    00006E 8EF0             MOV     B,R6
    266    000070 A4               MUL     AB
    267    000071 28               ADD     A,R0
    268    000072 F8               MOV     R0,A            ; RESMM finished
    269    000073 E4               CLR     A
    270    000074 35F0             ADDC    A,B
    271    000076                  IF      lcall_mode
    272    000076 02....           LJMP    LOAD_RESM
    273    000079                  ELSE
    274    000079                  AJMP    LOAD_RESM
    275    000079                  ENDIF
    276    000079          NOS_NOT_1:
    277    000079 EA               MOV     A,R2                    ; We have to
                                                                    do NOSMH *
                                                                    TOSM
    278    00007A CE               XCH     A,R6
    279    00007B FA               MOV     R2,A
    280    00007C E9               MOV     A,R1
    281    00007D FD               MOV     R5,A
    282    00007E E8               MOV     A,R0
    283    00007F FC               MOV     R4,A
    284    000080 80DA             SJMP    TOSMH_NOSM
    285    000082          
    286    000082          NOT_TOS:
    287    000082 EC               MOV     A,R4                    ; Check
                                                                    NOSM
    288    000083 4D               ORL     A,R5
    289    000084 7005             JNZ     NOT_NOS
    290    000086 BE80F0           CJNE    R6,#128,NOS_NOT_1
    291    000089 80BC             SJMP    L66             ; Return TOSM
    292    00008B          NOT_NOS:
    293    00008B          ;
    294    00008B          ;       Now it's time for multiplying the mantissas.
    295    00008B          ;
    296    00008B          ;       Look upon TOSM and NOSM as 3 bytes each.
                            
    297    00008B          ;       The following notation is used:
    298    00008B          ;       
    299    00008B          ;       TOSMH:TOSMM:TOSML                      
                            TOSM
    300    00008B          ;       NOSMH:NOSMM:NOSML                      
                            NOSM
    301    00008B          ;       RESMH:RESMM:RESML:RESM2:RESM3:RESM4     RESM
                            byte's
    302    00008B          ;
    303    00008B          ;       The multiplication could be seen this
                            way:
    304    00008B          ;
    305    00008B          ;                       TOSMH TOSMM TOSML
    306    00008B          ;                     * NOSMH NOSMM NOSML
    307    00008B          ;                     -------------------------
    308    00008B          ;                                   NOSML*TOSML
    309    00008B          ;                             NOSML*TOSMM
    310    00008B          ;                             NOSMM*TOSML
    311    00008B          ;                       NOSML*TOSMH
    312    00008B          ;                       NOSMM*TOSMM
    313    00008B          ;                       NOSMH*TOSML
    314    00008B          ;                 NOSMM*TOSMH
    315    00008B          ;                 NOSMH*TOSMM
    316    00008B          ;           NOSMH*TOSMH
    317    00008B          ;           -----------------------------------
    318    00008B          ;           RESMH RESMM RESML RESM2 RESM3 RESM4
                            
    319    00008B          ;
    320    00008B          ;
    321    00008B          ;       The algorithm above is used to compute the
                            multiplication:
    322    00008B          ;
    323    00008B          ;       If RESMH highest bit is set after computatio
                           n then an implicit left
    324    00008B          ;       shift has been made, so increment RESE. Else
                            shift RESM left, and all
    325    00008B          ;       is OK
    326    00008B          ;
    327    00008B          ;
    328    00008B          
    329    00008B EA               MOV     A,R2            ; Save TOSMH on
                                                            stack
    330    00008C C0E0             PUSH    ACC
    331    00008E          ;
    332    00008E          ;       NOSML * TOSML
    333    00008E          ;
    334    00008E          
    335    00008E EC               MOV     A,R4
    336    00008F 88F0             MOV     B,R0
    337    000091 A4               MUL     AB
    338    000092 FF               MOV     R7,A            ; RESM4 finished
    339    000093 ABF0             MOV     R3,B            ; Part of RESM3 in
                                                            R3
    340    000095          ;
    341    000095          ;       NOSMM * TOSML
    342    000095          ;
    343    000095          
    344    000095 ED               MOV     A,R5
    345    000096 88F0             MOV     B,R0
    346    000098 A4               MUL     AB
    347    000099 2B               ADD     A,R3
    348    00009A FB               MOV     R3,A            ; Part of RESM3 in
                                                            R3
    349    00009B E4               CLR     A
    350    00009C 35F0             ADDC    A,B
    351    00009E FA               MOV     R2,A            ; Part of RESM2 in
                                                            R2
    352    00009F          ;
    353    00009F          ;       NOSML * TOSMM
    354    00009F          ;
    355    00009F          
    356    00009F EC               MOV     A,R4
    357    0000A0 89F0             MOV     B,R1
    358    0000A2 A4               MUL     AB
    359    0000A3 2B               ADD     A,R3
    360    0000A4 4F               ORL     A,R7
    361    0000A5 FF               MOV     R7,A            ; R7 contains RESM3
                                                            | RESM4
    362    0000A6 E5F0             MOV     A,B
    363    0000A8 3A               ADDC    A,R2
    364    0000A9 FA               MOV     R2,A            ; Part of RESM2 in
                                                            R2 
    365    0000AA E4               CLR     A
    366    0000AB 33               RLC     A               
    367    0000AC FB               MOV     R3,A            ; and part of RESML
                                                            in R3      
                                                            
    368    0000AD          ;
    369    0000AD          ;       NOSMH * TOSML
    370    0000AD          ;
    371    0000AD          
    372    0000AD 88F0             MOV     B,R0            ; R0 free
    373    0000AF EE               MOV     A,R6
    374    0000B0 A4               MUL     AB
    375    0000B1 2A               ADD     A,R2
    376    0000B2 FA               MOV     R2,A            ; Part of RESM2 in
                                                            R2
    377    0000B3 E5F0             MOV     A,B
    378    0000B5 3B               ADDC    A,R3
    379    0000B6 FB               MOV     R3,A            ; Part of RESML in
                                                            R3
    380    0000B7          ;
    381    0000B7          ;       NOSMM * TOSMM
    382    0000B7          ;
    383    0000B7          
    384    0000B7 ED               MOV     A,R5
    385    0000B8 89F0             MOV     B,R1
    386    0000BA A4               MUL     AB
    387    0000BB 2A               ADD     A,R2
    388    0000BC FA               MOV     R2,A            ; Part of RESM2 in
                                                            R2
    389    0000BD E5F0             MOV     A,B
    390    0000BF 3B               ADDC    A,R3
    391    0000C0 FB               MOV     R3,A            ; Part of RESML in
                                                            R3
    392    0000C1 E4               CLR     A
    393    0000C2 33               RLC     A
    394    0000C3 F8               MOV     R0,A            ; Part of RESMM in
                                                            R0
    395    0000C4          ;
    396    0000C4          ;       NOSML * TOSMH
    397    0000C4          ;
    398    0000C4          
    399    0000C4 8CF0             MOV     B,R4
    400    0000C6 D0E0             POP     ACC             ; Bring down
                                                            TOSMH
    401    0000C8 FC               MOV     R4,A
    402    0000C9 A4               MUL     AB
    403    0000CA 2A               ADD     A,R2    
    404    0000CB C5F0             XCH     A,B
    405    0000CD 3B               ADDC    A,R3
    406    0000CE FB               MOV     R3,A            ; Part of RESML in
                                                            R3
    407    0000CF E4               CLR     A
    408    0000D0 38               ADDC    A,R0
    409    0000D1 F8               MOV     R0,A            ; Part of RESMM in
                                                            R0
    410    0000D2 EF               MOV     A,R7
    411    0000D3 6002             JZ      LL3
    412    0000D5 D2F0             SETB    B.0
    413    0000D7 AFF0     LL3:    MOV     R7,B            ; R7 contains RESM2
                                                            and bit 0 is set if
                                                            
    414    0000D9                                          ; (RESM3 | RESM4) !=
                            0
    415    0000D9                  
    416    0000D9          ;
    417    0000D9          ;       NOSMM * TOSMH
    418    0000D9          ;
    419    0000D9          
    420    0000D9 ED               MOV     A,R5
    421    0000DA 8CF0             MOV     B,R4
    422    0000DC A4               MUL     AB
    423    0000DD 2B               ADD     A,R3
    424    0000DE FB               MOV     R3,A            ; Part of RESML in
                                                            R3
    425    0000DF E5F0             MOV     A,B
    426    0000E1 38               ADDC    A,R0
    427    0000E2 F8               MOV     R0,A            ; Part of RESMM in
                                                            R0
    428    0000E3 E4               CLR     A
    429    0000E4 33               RLC     A
    430    0000E5 FA               MOV     R2,A            ; Part of RESMH in
                                                            R2
    431    0000E6          ;
    432    0000E6          ;       NOSMH * TOSMM
    433    0000E6          ;
    434    0000E6          
    435    0000E6 EE               MOV     A,R6
    436    0000E7 89F0             MOV     B,R1
    437    0000E9 A4               MUL     AB
    438    0000EA 2B               ADD     A,R3
    439    0000EB FB               MOV     R3,A            ; RESML finished
    440    0000EC E5F0             MOV     A,B
    441    0000EE 38               ADDC    A,R0
    442    0000EF F8               MOV     R0,A            ; Part of RESMM in
                                                            R0
    443    0000F0 E4               CLR     A
    444    0000F1 3A               ADDC    A,R2
    445    0000F2 FA               MOV     R2,A            ; Part of RESMH in
                                                            R2
    446    0000F3          ;
    447    0000F3          ;       NOSMH * TOSMH
    448    0000F3          ;
    449    0000F3          
    450    0000F3 EC               MOV     A,R4
    451    0000F4 8EF0             MOV     B,R6
    452    0000F6 A4               MUL     AB
    453    0000F7 28               ADD     A,R0
    454    0000F8 F8               MOV     R0,A            ; RESMM finished
    455    0000F9 E5F0             MOV     A,B
    456    0000FB 3A               ADDC    A,R2            ; RESMH finished
    457    0000FC          ;
    458    0000FC          ;       Load up RES into proper registers
    459    0000FC          ;
    460    0000FC          
    461    0000FC          LOAD_RESM:
    462    0000FC          
    463    0000FC F5F0             MOV     B,A
    464    0000FE FE               MOV     R6,A
    465    0000FF E8               MOV     A,R0
    466    000100 FD               MOV     R5,A
    467    000101 EB               MOV     A,R3
    468    000102 FC               MOV     R4,A            ; RESM in R6:R5:R4:R
                                                           7
    469    000103 D0E0             POP     ACC             ; RESS in R1
    470    000105 F9               MOV     R1,A
    471    000106 D0E0             POP     ACC             ; RESE in R0
    472    000108 F8               MOV     R0,A
    473    000109          ;
    474    000109          ;       If RESM highest bit is set, then we must
                            increment
    475    000109          ;       RESE. If not then we must make a leftshift
                            on RESM.
    476    000109          ;
    477    000109          
    478    000109 30F706           JNB     B.7,NO_INC
    479    00010C          
    480    00010C 08               INC     R0              ; RESE = RESE +
                                                            1
    481    00010D B80005           CJNE    R0,#0,EXIT_MUL
    482    000110 80..             SJMP    ?F_OVERFLOW_L02         ; Jump if
                                                                    overflow
    483    000112          
    484    000112          NO_INC:
    485    000112 12....           LCALL   ?F_SHIFT_LEFT_L02
    486    000115          EXIT_MUL:
    487    000115                  IF      lcall_mode
    488    000115 02....           LJMP    ?F_ROUND_L02
    489    000118                  ELSE
    490    000118                  SJMP    ?F_ROUND_L02
    491    000118                  ENDIF
    492    000118          
    493    000118                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL2_R4567_L02   REL    CONST PUB UNTYP.       RCODE      0 
?F_MUL_L02          REL    CONST PUB UNTYP.       RCODE      8 
?F_OVERFLOW_L02     ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
?F_PACK_L02         ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_ROUND_L02        ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?F_SHIFT_LEFT_L02   ABS    CONST EXT [004] UNTYP. __EXTERNS  Solved Extern 
?F_UNPACK_L02       ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXIT_MUL            REL    CONST UNTYP.           RCODE      115 
EXP_OK              REL    CONST UNTYP.           RCODE      2C 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
L55                 REL    CONST UNTYP.           RCODE      37 
L66                 REL    CONST UNTYP.           RCODE      47 
LL3                 REL    CONST UNTYP.           RCODE      D7 
LOAD_RESM           REL    CONST UNTYP.           RCODE      FC 
MAYBE_UNDERFLOW     REL    CONST UNTYP.           RCODE      26 
NOSMH_TOSMH         REL    CONST UNTYP.           RCODE      4F 
NOS_NOT_1           REL    CONST UNTYP.           RCODE      79 
NOT_NOS             REL    CONST UNTYP.           RCODE      8B 
NOT_TOS             REL    CONST UNTYP.           RCODE      82 
NO_INC              REL    CONST UNTYP.           RCODE      112 
NO_ZERO             REL    CONST UNTYP.           RCODE      16 
OV                  ABS    CONST UNTYP.           ASEG       D2 
OVERFLOW_2          REL    CONST UNTYP.           RCODE      12 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TEST_ZERO           REL    CONST UNTYP.           RCODE      D 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
TOSMH_NOSM          REL    CONST UNTYP.           RCODE      5C 
TOS_NOT_1           REL    CONST UNTYP.           RCODE      40 
UNDERFLOW           REL    CONST UNTYP.           RCODE      11 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:6909          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 280         #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    494    000000          
    495    000000          ;---------------------------------------------------
                           --------------------------
    496    000000          ;
    497    000000          ;       Function(s):    Rounds a floating point in
                            unpacked internal format
    498    000000          ;                       and packs it.
    499    000000          ;
    500    000000          ;       Description:    Round a floating point (in
                            unpacked internal format),
    501    000000          ;                       according to IEEE. The
                            calling procedure is 
    502    000000          ;                       responsible that "sticky
                            bit" (one of the least 
    503    000000          ;                       significant bits) is
                            set.
    504    000000          ;                       The following algorithm is
                            used:
    505    000000          ;                       
    506    000000          ;                       Round upwards if the
                            following condition is 
    507    000000          ;                       fullfilled:
    508    000000          ;                       
    509    000000          ;                       (G==1 & (L==1 | (mantissa &
                            0x07fffff) != 0) ) )
    510    000000          ;
    511    000000          ;                       Where G is the 25'th bit and
                            L is the 24'th bit
    512    000000          ;                       in the mantissa.
    513    000000          ;
    514    000000          ;                       If exponent is zero then
                            mantissa and sign will be
    515    000000          ;                       cleared.
    516    000000          ;
    517    000000          ;
    518    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
    519    000000          ;
    520    000000          ;       Input : R6:R5:R4:R7     RESM
    521    000000          ;               R0              RESE
    522    000000          ;               R1              RESS           
                            
    523    000000          ;
    524    000000          ;       Output: R4:R7           Result
    525    000000          ;               A               set after result
    526    000000          ;        
    527    000000          ;---------------------------------------------------
                           --------------------------
    528    000000          
    529    000000                  MODULE  ?F_ROUND_L02
    530    000000                  RSEG    RCODE:CODE:NOROOT
    531    000000                  PUBLIC  ?F_ROUND_L02
    532    000000                  PUBLIC  ?F_ROUND_2_L02
    533    000000                  PUBLIC  ?F_R_TEST_L02
    534    000000                  PUBLIC  ?F_UP_ROUND_L02
    535    000000                  PUBLIC  ?F_PACK_L02
    536    000000                  PUBLIC  ?F_EXIT_L02
    537    000000                  PUBLIC  ?F_OVERFLOW_L02
    538    000000                  PUBLIC  ?F_UNDERFLOW_L02
    539    000000          
    540    000000          ?F_ROUND_L02:
    541    000000          ;
    542    000000          ;       First check the G-bit (the 25th),
    543    000000          ;
    544    000000          
    545    000000 EF               MOV     A,R7
    546    000001 33               RLC     A
    547    000002 5017             JNC     ?F_PACK_L02     ; No rounding if
                                                            G-bit is cleared
    548    000004          ;
    549    000004          ;       then upround if the 24th bit is set or one
                            of the bits after is set.
    550    000004          ;
    551    000004          
    552    000004          ?F_ROUND_2_L02:
    553    000004 8CF0             MOV     B,R4
    554    000006 20F002           JB      B.0,?F_UP_ROUND_L02             ;
                                              Test if L-bit is set
    555    000009          ?F_R_TEST_L02:
    556    000009 6010             JZ      ?F_PACK_L02     ; No rounding if
                                                            rest is zero
    557    00000B          
    558    00000B          ?F_UP_ROUND_L02:
    559    00000B 0C               INC     R4
    560    00000C BC000C           CJNE    R4,#0,?F_PACK_L02
    561    00000F 0D               INC     R5
    562    000010 BD0008           CJNE    R5,#0,?F_PACK_L02
    563    000013 0E               INC     R6
    564    000014 BE0004           CJNE    R6,#0,?F_PACK_L02
    565    000017 08               INC     R0              ; We do not shift
                                                            down mantissa
                                                            due
    566    000018                                          ; to that the
                            mantissa is always
    567    000018                                          ; 8000000, and we
                            will set it so
    568    000018                                          ; later on
    569    000018 E8               MOV     A,R0
    570    000019 600D             JZ      ?F_OVERFLOW_L02
    571    00001B                  
    572    00001B          ?F_PACK_L02:
    573    00001B E9               MOV     A,R1
    574    00001C 33               RLC     A
    575    00001D E8               MOV     A,R0
    576    00001E 13               RRC     A
    577    00001F FF               MOV     R7,A
    578    000020 EE               MOV     A,R6
    579    000021 23               RL      A
    580    000022 13               RRC     A
    581    000023 FE               MOV     R6,A
    582    000024          
    583    000024          ?F_EXIT_L02:
    584    000024 4F               ORL     A,R7
    585    000025 4D               ORL     A,R5
    586    000026 4C               ORL     A,R4
    587    000027 22               RET
    588    000028          
    589    000028          ?F_OVERFLOW_L02:
    590    000028 7F7F             MOV     R7,#127
    591    00002A 74FF             MOV     A,#255
    592    00002C 8002             SJMP    LL1     
    593    00002E          ?F_UNDERFLOW_L02:
    594    00002E E4               CLR     A
    595    00002F FF               MOV     R7,A
    596    000030 FE       LL1:    MOV     R6,A
    597    000031 FD               MOV     R5,A
    598    000032 FC               MOV     R4,A
    599    000033 22               RET
    600    000034                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_EXIT_L02         REL    CONST PUB UNTYP.       RCODE      24 
?F_OVERFLOW_L02     REL    CONST PUB UNTYP.       RCODE      28 
?F_PACK_L02         REL    CONST PUB UNTYP.       RCODE      1B 
?F_ROUND_2_L02      REL    CONST PUB UNTYP.       RCODE      4 
?F_ROUND_L02        REL    CONST PUB UNTYP.       RCODE      0 
?F_R_TEST_L02       REL    CONST PUB UNTYP.       RCODE      9 
?F_UNDERFLOW_L02    REL    CONST PUB UNTYP.       RCODE      2E 
?F_UP_ROUND_L02     REL    CONST PUB UNTYP.       RCODE      B 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LL1                 REL    CONST UNTYP.           RCODE      30 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:E339          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 52          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    601    000000          
    602    000000          
    603    000000                  MODULE  ?F_SHIFT_LEFT_L02
    604    000000                  RSEG    RCODE:CODE:NOROOT
    605    000000                  PUBLIC  ?F_SHIFT_LEFT_L02
    606    000000                  PUBLIC  ?F_SHIFT_LEFT_2_L02
    607    000000          
    608    000000          ?F_SHIFT_LEFT_L02:
    609    000000 C3               CLR     C
    610    000001 EF               MOV     A,R7
    611    000002 33               RLC     A
    612    000003 FF               MOV     R7,A
    613    000004          ?F_SHIFT_LEFT_2_L02:
    614    000004 EC               MOV     A,R4
    615    000005 33               RLC     A
    616    000006 FC               MOV     R4,A
    617    000007 ED               MOV     A,R5
    618    000008 33               RLC     A
    619    000009 FD               MOV     R5,A
    620    00000A EE               MOV     A,R6
    621    00000B 33               RLC     A
    622    00000C FE               MOV     R6,A
    623    00000D 22               RET
    624    00000E                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_SHIFT_LEFT_2_L02 REL    CONST PUB UNTYP.       RCODE      4 
?F_SHIFT_LEFT_L02   REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:B6FE          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 14          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    625    000000          
    626    000000                  MODULE  ?F_SHIFT_RIGHT_L02
    627    000000                  RSEG    RCODE:CODE:NOROOT
    628    000000                  PUBLIC  ?F_SHIFT_RIGHT_L02
    629    000000                  PUBLIC  ?F_SHIFT_RIGHT_2_L02
    630    000000          
    631    000000          ?F_SHIFT_RIGHT_2_L02:
    632    000000 C3               CLR     C
    633    000001          ?F_SHIFT_RIGHT_L02:
    634    000001 EE               MOV     A,R6
    635    000002 13               RRC     A
    636    000003 FE               MOV     R6,A
    637    000004 ED               MOV     A,R5
    638    000005 13               RRC     A
    639    000006 FD               MOV     R5,A
    640    000007 EC               MOV     A,R4
    641    000008 13               RRC     A
    642    000009 FC               MOV     R4,A
    643    00000A EF               MOV     A,R7
    644    00000B 13               RRC     A
    645    00000C 5002             JNC     LL2
    646    00000E D2E0             SETB    ACC.0
    647    000010 FF       LL2:    MOV     R7,A
    648    000011 22               RET
    649    000012                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_SHIFT_RIGHT_2_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_SHIFT_RIGHT_L02  REL    CONST PUB UNTYP.       RCODE      1 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
LL2                 REL    CONST UNTYP.           RCODE      10 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:91E0          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 18          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    650    000000          
    651    000000                  MODULE  ?F_0_SUB_L02
    652    000000                  RSEG    RCODE:CODE:NOROOT
    653    000000                  PUBLIC  ?F_0_SUB_L02
    654    000000          
    655    000000          ?F_0_SUB_L02:
    656    000000 C3               CLR     C               ; Change sign of
                                                            TOSM
    657    000001 E4               CLR     A
    658    000002 9C               SUBB    A,R4
    659    000003 FC               MOV     R4,A
    660    000004 E4               CLR     A
    661    000005 9D               SUBB    A,R5
    662    000006 FD               MOV     R5,A
    663    000007 E4               CLR     A
    664    000008 9E               SUBB    A,R6
    665    000009 FE               MOV     R6,A
    666    00000A E4               CLR     A
    667    00000B 9F               SUBB    A,R7
    668    00000C FF               MOV     R7,A
    669    00000D 22               RET
    670    00000E                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_0_SUB_L02        REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:47EE          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 14          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    671    000000          
    672    000000          ;---------------------------------------------------
                           --------------------------
    673    000000          ;
    674    000000          ;       Function(s):    Floating point division.
    675    000000          ;
    676    000000          ;       Description:    Divides two floating point
                            operands found in TOS
    677    000000          ;                       and NOS. The Quotient is
                            left in TOS. The input 
    678    000000          ;                       variables must be in IEEE
                            format.
    679    000000          ;                       Zero-flag will be set if and
                            only if the result is
    680    000000          ;                       zero.
    681    000000          ;
    682    000000          ;                       "RES = NOS/TOS"
    683    000000          ;
    684    000000          ;                       RESS = NOSS EOR TOSS
    685    000000          ;                       if (NOSE == 0) RESE =
                            0
    686    000000          ;                       else if (TOSE == 0) RESE =
                            FF; RESM = 0xFFFFFF;
    687    000000          ;                       else
    688    000000          ;                         RESE = (NOSE-127) -
                            (TOSE-127) + 127 
    689    000000          ;                         if (RESE <= 0) RESE =
                            0
    690    000000          ;                         else {
    691    000000          ;                               divide mantissa
                            
    692    000000          ;                               normalize(RES)
    693    000000          ;                           }
    694    000000          ;                         }
    695    000000          ;                       round(RES)                  
                                  
    696    000000          ;
    697    000000          ;
    698    000000          ;
    699    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
    700    000000          ;
    701    000000          ;                       Normal
    702    000000          ;       Input:  R4:R7                   NOS
    703    000000          ;               [SP + 0:1]              Return
                            address from float package
    704    000000          ;               R0:R3                   TOS
    705    000000          ;               
    706    000000          ;                       Reversed
    707    000000          ;       Input:  R0:R3                   NOS
    708    000000          ;               [SP + 0:1]              Return
                            address from float package
    709    000000          ;               R4:R7                   TOS
    710    000000          ;               
    711    000000          ;
    712    000000          ;       Output: R4:R7                   NOS /
                            TOS
    713    000000          ;               A                       Cleared when
                            result is zero, else set
    714    000000          ;        
    715    000000          ;---------------------------------------------------
                           --------------------------
    716    000000          
    717    000000                  MODULE  ?F_DIV_CLR_L02
    718    000000                  RSEG    RCODE:CODE:NOROOT
    719    000000                  PUBLIC  ?F_DIV_CLR_L02
    720    000000                  EXTERN  ?F_DIV_L02
    721    000000          ?F_DIV_CLR_L02:
    722    000000 E4               CLR     A
    723    000001 F8               MOV     R0,A
    724    000002 F9               MOV     R1,A
    725    000003                  IF      lcall_mode
    726    000003 02....           LJMP    ?F_DIV_L02
    727    000006                  ELSE
    728    000006                  SJMP    ?F_DIV_L02
    729    000006                  ENDIF
    730    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_CLR_L02      REL    CONST PUB UNTYP.       RCODE      0 
?F_DIV_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:CCB7          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    731    000000          
    732    000000                  MODULE  ?F_DIV_L02              ; Can be
                            replaced
    733    000000                  RSEG    RCODE:CODE:NOROOT
    734    000000                  PUBLIC  ?F_DIV_R_CLR_L02
    735    000000                  PUBLIC  ?F_DIV_R_L02
    736    000000                  PUBLIC  ?F_DIV_L02
    737    000000                  EXTERN  ?F_UNPACK_L02
    738    000000                  EXTERN  ?F_PACK_L02
    739    000000                  EXTERN  ?F_UNDERFLOW_L02
    740    000000                  EXTERN  ?F_OVERFLOW_L02
    741    000000                  EXTERN  ?F_UP_ROUND_L02
    742    000000                  EXTERN  ?F_R_TEST_L02
    743    000000                  EXTERN  ?F_SHIFT_LEFT_2_L02
    744    000000          
    745    000000          ?F_DIV_R_CLR_L02:
    746    000000 E4               CLR     A
    747    000001 FC               MOV     R4,A
    748    000002 FD               MOV     R5,A
    749    000003          ?F_DIV_R_L02:
    750    000003          ;       We simply exchange the registers
    751    000003          
    752    000003 EF               MOV     A,R7
    753    000004 CB               XCH     A,R3
    754    000005 FF               MOV     R7,A
    755    000006 EE               MOV     A,R6
    756    000007 CA               XCH     A,R2
    757    000008 FE               MOV     R6,A
    758    000009 ED               MOV     A,R5
    759    00000A C9               XCH     A,R1
    760    00000B FD               MOV     R5,A
    761    00000C EC               MOV     A,R4
    762    00000D C8               XCH     A,R0
    763    00000E FC               MOV     R4,A
    764    00000F          
    765    00000F          ?F_DIV_L02:
    766    00000F          
    767    00000F          ;
    768    00000F          ;       Check if one of the operands is zero.
    769    00000F          ;
    770    00000F          ;       if (NOS == 0) then RES = 0;
    771    00000F          ;       if (TOS == 0) then RES = 0x7fffffff
    772    00000F          ;
    773    00000F          
    774    00000F EF               MOV     A,R7
    775    000010 4E               ORL     A,R6
    776    000011 60..             JZ      ?F_UNDERFLOW_L02        ; If NOS ==
                                                                    0 then
                                                                    return
                                                                    0
    777    000013          NOS_NOT_ZERO:
    778    000013 EB               MOV     A,R3
    779    000014 4A               ORL     A,R2
    780    000015 60..             JZ      ?F_OVERFLOW_L02         ; If TOS ==
                                                                    0 then
                                                                    return
                                                                    0x7FFFFFFF
    781    000017          TOS_NOT_ZERO:
    782    000017          ; Save workregisters and unpack operands.
    783    000017          ;
    784    000017                  
    785    000017 12....           LCALL   ?F_UNPACK_L02
    786    00001A          ;
    787    00001A          ;       Compute the result exp.
    788    00001A          ;
    789    00001A          
    790    00001A EB               MOV     A,R3
    791    00001B 947F             SUBB    A,#127                  ; TOSE -=
                                                                    127
    792    00001D CF               XCH     A,R7
    793    00001E 4006             JC      MAYBE_OVERFLOW
    794    000020 9F               SUBB    A,R7                    ; NOSE -=
                                                                    TOSE, where
                                                                    TOSE is 0
                                                                    to
                                                                    80
    795    000021 5007             JNC     EXP_OK
    796    000023                  IF      lcall_mode
    797    000023 02....           LJMP    ?F_UNDERFLOW_L02
    798    000026                  ELSE
    799    000026                  SJMP    ?F_UNDERFLOW_L02
    800    000026                  ENDIF
    801    000026          
    802    000026          MAYBE_OVERFLOW:                         ; TOSE is 81
                            to ff
    803    000026 C3               CLR     C
    804    000027 9F               SUBB    A,R7                    ; NOSE -=
                                                                    TOSE
    805    000028 50..             JNC     ?F_OVERFLOW_L02
    806    00002A          EXP_OK:
    807    00002A FB               MOV     R3,A                    ; Let RESE
                                                                    temporarily
                                                                    be in
                                                                    R0
    808    00002B          
    809    00002B          ;
    810    00002B          ;       We look if TOSM is one, then the result will
                            be NOSM
    811    00002B          ;
    812    00002B E8               MOV     A,R0                    ; Check
                                                                    TOSM
    813    00002C 49               ORL     A,R1
    814    00002D 700C             JNZ     NOT_TOS
    815    00002F EA               MOV     A,R2
    816    000030 9480             SUBB    A,#128
    817    000032 7007             JNZ     NOT_TOS
    818    000034 EB               MOV     A,R3                    ; NOSM is
                                                                    the
                                                                    answer
    819    000035 F8               MOV     R0,A
    820    000036 A9F0             MOV     R1,B
    821    000038                  IF      lcall_mode
    822    000038 02....           LJMP    ?F_PACK_L02
    823    00003B                  ELSE
    824    00003B                  AJMP    ?F_PACK_L02
    825    00003B                  ENDIF
    826    00003B          
    827    00003B          NOT_TOS:
    828    00003B          ;
    829    00003B          ;       then compute new sign.
    830    00003B          ;
    831    00003B          
    832    00003B C0F0             PUSH    B
    833    00003D          
    834    00003D          ;
    835    00003D          ;       Now it's time to compute the mantissa. The
                            princip is the "ordinary" 
    836    00003D          ;       one, based on the "manual" way of doing it.
                            Only 24 significant 
    837    00003D          ;       bits of RESM is computed. Therefor the '1'
                            is shifted in from 
    838    00003D          ;       bit 24 in RESM. 
    839    00003D          ;       
    840    00003D          ;       For the loop we use the registers for
                            storing loop_counter,
    841    00003D          ;       RESM and NOSM. This layout of the registers
                            is used:
    842    00003D          ;
    843    00003D          ;       TOSMH,TOSMM,TOSML                 
                            R1:R2:R3
    844    00003D          ;       NOSMH,NOSMM,NOSML,NOSM2         R4:R5:R6:R7
    845    00003D          ;       COUNT                           R0
    846    00003D          ;
    847    00003D          ;       Start with loading the registers
    848    00003D          ;
    849    00003D          
    850    00003D 7F00             MOV     R7,#0
    851    00003F          ;
    852    00003F          ;       NOSM -= TOSM
    853    00003F          ;
    854    00003F          
    855    00003F 12....           LCALL   NOSM_SUB_TOSM
    856    000042 501E             JNC     NO_DEC_EXP
    857    000044          ;
    858    000044          ;       If carry then normalize start-value and
                            adjust exponent
    859    000044          ;
    860    000044 EB               MOV     A,R3
    861    000045 6002             JZ      L99
    862    000047 DB05             DJNZ    R3,NO_UNDERFLOW  ; Adjust exponent,a
                                                            nd jump if not
                                                             underflow
    863    000049 D0F0     L99:    POP     B
    864    00004B                  IF      lcall_mode
    865    00004B 02....           LJMP    ?F_UNDERFLOW_L02
    866    00004E                  ELSE
    867    00004E                  AJMP    ?F_UNDERFLOW_L02
    868    00004E                  ENDIF
    869    00004E          NO_UNDERFLOW:
    870    00004E          ;
    871    00004E          ;       CY <- NOSM <- 0
    872    00004E          ;
    873    00004E          
    874    00004E C3               CLR     C
    875    00004F 12....           LCALL   ?F_SHIFT_LEFT_2_L02
    876    000052 EF               MOV     A,R7
    877    000053 33               RLC     A
    878    000054 FF               MOV     R7,A
    879    000055          ;
    880    000055          ;       NOSM += TOSM
    881    000055          ;
    882    000055          
    883    000055 EC               MOV     A,R4
    884    000056 28               ADD     A,R0
    885    000057 FC               MOV     R4,A
    886    000058 ED               MOV     A,R5
    887    000059 39               ADDC    A,R1
    888    00005A FD               MOV     R5,A
    889    00005B EE               MOV     A,R6
    890    00005C 3A               ADDC    A,R2
    891    00005D FE               MOV     R6,A
    892    00005E E4               CLR     A
    893    00005F 3F               ADDC    A,R7
    894    000060 FF               MOV     R7,A
    895    000061 D3               SETB    C
    896    000062          
    897    000062          NO_DEC_EXP:
    898    000062          ;
    899    000062          ;       Load loop-counter ( On on the stack counting
                            bytes and the other in
    900    000062          ;       B counting bits )
    901    000062          ;
    902    000062                  
    903    000062 EB               MOV     A,R3
    904    000063 C0E0             PUSH    ACC
    905    000065 75F008           MOV     B,#8
    906    000068 7403             MOV     A,#3
    907    00006A C0E0             PUSH    ACC
    908    00006C 7B00             MOV     R3,#0
    909    00006E 501C             JNC     NO_ADJ
    910    000070          ;
    911    000070          ;       Then start division !
    912    000070          ;
    913    000070          
    914    000070          DIV_LOOP:
    915    000070          ;
    916    000070          ;       NOSM -= TOSM
    917    000070          ;
    918    000070          
    919    000070 C3               CLR     C
    920    000071 EC               MOV     A,R4
    921    000072 98               SUBB    A,R0
    922    000073 FC               MOV     R4,A
    923    000074 ED               MOV     A,R5
    924    000075 99               SUBB    A,R1
    925    000076 FD               MOV     R5,A
    926    000077 EE               MOV     A,R6
    927    000078 9A               SUBB    A,R2
    928    000079 FE               MOV     R6,A
    929    00007A EF               MOV     A,R7
    930    00007B 9400             SUBB    A,#0
    931    00007D FF               MOV     R7,A
    932    00007E          
    933    00007E          ;
    934    00007E          ;       If no carry, we succeeded
    935    00007E          ;
    936    00007E          
    937    00007E 500C             JNC     NO_ADJ          
    938    000080          ;
    939    000080          ;       NOSM += TOSM
    940    000080          ;
    941    000080          
    942    000080 EC               MOV     A,R4
    943    000081 28               ADD     A,R0
    944    000082 FC               MOV     R4,A
    945    000083 ED               MOV     A,R5
    946    000084 39               ADDC    A,R1
    947    000085 FD               MOV     R5,A
    948    000086 EE               MOV     A,R6
    949    000087 3A               ADDC    A,R2
    950    000088 FE               MOV     R6,A
    951    000089 E4               CLR     A
    952    00008A 3F               ADDC    A,R7
    953    00008B FF               MOV     R7,A
    954    00008C          
    955    00008C          NO_ADJ: 
    956    00008C          ;
    957    00008C          ;       CY <- RESM <- CY
    958    00008C          ;
    959    00008C EB               MOV     A,R3            ; We cheat
                                                            here
    960    00008D 33               RLC     A
    961    00008E FB               MOV     R3,A
    962    00008F          ;
    963    00008F          ;       CY <- NOSM <- 0
    964    00008F          ;
    965    00008F          
    966    00008F EC               MOV     A,R4
    967    000090 33               RLC     A
    968    000091 FC               MOV     R4,A
    969    000092 ED               MOV     A,R5
    970    000093 33               RLC     A
    971    000094 FD               MOV     R5,A
    972    000095 EE               MOV     A,R6
    973    000096 33               RLC     A
    974    000097 FE               MOV     R6,A
    975    000098 EF               MOV     A,R7
    976    000099 33               RLC     A
    977    00009A FF               MOV     R7,A
    978    00009B                  
    979    00009B D5F012           DJNZ    B,L111
    980    00009E D0F0             POP     B
    981    0000A0 EB               MOV     A,R3
    982    0000A1 C0E0             PUSH    ACC
    983    0000A3 E5F0             MOV     A,B
    984    0000A5 14               DEC     A
    985    0000A6 6012             JZ      EXIT
    986    0000A8 C0E0             PUSH    ACC
    987    0000AA 75F008           MOV     B,#8
    988    0000AD 7B00             MOV     R3,#0
    989    0000AF EF               MOV     A,R7
    990    0000B0          L111:
    991    0000B0 20E0BD           JB      ACC.0,DIV_LOOP
    992    0000B3 EE               MOV     A,R6
    993    0000B4 D3               SETB    C
    994    0000B5 30E7D4           JNB     ACC.7,NO_ADJ
    995    0000B8 80B6             SJMP    DIV_LOOP
    996    0000BA          EXIT:   
    997    0000BA          ;
    998    0000BA          ;       Calculate G-bit
    999    0000BA          ;
   1000    0000BA          
   1001    0000BA          ;
   1002    0000BA          ;       NOSM -= TOSM
   1003    0000BA          ;
   1004    0000BA          
   1005    0000BA 12....           LCALL   NOSM_SUB_TOSM
   1006    0000BD 4E               ORL     A,R6
   1007    0000BE 4D               ORL     A,R5
   1008    0000BF 4C               ORL     A,R4
   1009    0000C0          
   1010    0000C0          ;
   1011    0000C0          ;       Adjust result +  RESM = ~RESM
   1012    0000C0          ;
   1013    0000C0          
   1014    0000C0 FB               MOV     R3,A
   1015    0000C1 D0E0             POP     ACC
   1016    0000C3 F4               CPL     A
   1017    0000C4 FC               MOV     R4,A
   1018    0000C5 D0E0             POP     ACC
   1019    0000C7 F4               CPL     A
   1020    0000C8 FD               MOV     R5,A
   1021    0000C9 D0E0             POP     ACC
   1022    0000CB F4               CPL     A
   1023    0000CC FE               MOV     R6,A
   1024    0000CD D0E0             POP     ACC
   1025    0000CF F8               MOV     R0,A
   1026    0000D0 D0E0             POP     ACC
   1027    0000D2 F9               MOV     R1,A
   1028    0000D3 EB               MOV     A,R3
   1029    0000D4          
   1030    0000D4          ;
   1031    0000D4          ;       Round RESM if G-bit is set.
   1032    0000D4          ;
   1033    0000D4          
   1034    0000D4 5003             JNC     L24
   1035    0000D6                  IF      lcall_mode
   1036    0000D6 02....           LJMP    ?F_PACK_L02
   1037    0000D9                  ELSE
   1038    0000D9                  AJMP    ?F_PACK_L02
   1039    0000D9                  ENDIF
   1040    0000D9          L24:
   1041    0000D9 6003             JZ      L25
   1042    0000DB                  IF      lcall_mode
   1043    0000DB 02....           LJMP    ?F_UP_ROUND_L02
   1044    0000DE                  ELSE
   1045    0000DE                  AJMP    ?F_UP_ROUND_L02
   1046    0000DE                  ENDIF
   1047    0000DE          L25:
   1048    0000DE EC               MOV     A,R4
   1049    0000DF 5401             ANL     A,#1
   1050    0000E1                  IF      lcall_mode
   1051    0000E1 02....           LJMP    ?F_R_TEST_L02
   1052    0000E4                  ELSE
   1053    0000E4                  AJMP    ?F_R_TEST_L02
   1054    0000E4                  ENDIF
   1055    0000E4          
   1056    0000E4          
   1057    0000E4          
   1058    0000E4          NOSM_SUB_TOSM:
   1059    0000E4 C3               CLR     C
   1060    0000E5 EC               MOV     A,R4
   1061    0000E6 98               SUBB    A,R0
   1062    0000E7 FC               MOV     R4,A
   1063    0000E8 ED               MOV     A,R5
   1064    0000E9 99               SUBB    A,R1
   1065    0000EA FD               MOV     R5,A
   1066    0000EB EE               MOV     A,R6
   1067    0000EC 9A               SUBB    A,R2
   1068    0000ED FE               MOV     R6,A
   1069    0000EE EF               MOV     A,R7
   1070    0000EF 9400             SUBB    A,#0
   1071    0000F1 FF               MOV     R7,A
   1072    0000F2 22               RET
   1073    0000F3                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_L02          REL    CONST PUB UNTYP.       RCODE      F 
?F_DIV_R_CLR_L02    REL    CONST PUB UNTYP.       RCODE      0 
?F_DIV_R_L02        REL    CONST PUB UNTYP.       RCODE      3 
?F_OVERFLOW_L02     ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
?F_PACK_L02         ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_R_TEST_L02       ABS    CONST EXT [005] UNTYP. __EXTERNS  Solved Extern 
?F_SHIFT_LEFT_2_L02 ABS    CONST EXT [006] UNTYP. __EXTERNS  Solved Extern 
?F_UNDERFLOW_L02    ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?F_UNPACK_L02       ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_UP_ROUND_L02     ABS    CONST EXT [004] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DIV_LOOP            REL    CONST UNTYP.           RCODE      70 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXIT                REL    CONST UNTYP.           RCODE      BA 
EXP_OK              REL    CONST UNTYP.           RCODE      2A 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
L111                REL    CONST UNTYP.           RCODE      B0 
L24                 REL    CONST UNTYP.           RCODE      D9 
L25                 REL    CONST UNTYP.           RCODE      DE 
L99                 REL    CONST UNTYP.           RCODE      49 
MAYBE_OVERFLOW      REL    CONST UNTYP.           RCODE      26 
NOSM_SUB_TOSM       REL    CONST UNTYP.           RCODE      E4 
NOS_NOT_ZERO        REL    CONST UNTYP.           RCODE      13 
NOT_TOS             REL    CONST UNTYP.           RCODE      3B 
NO_ADJ              REL    CONST UNTYP.           RCODE      8C 
NO_DEC_EXP          REL    CONST UNTYP.           RCODE      62 
NO_UNDERFLOW        REL    CONST UNTYP.           RCODE      4E 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
TOS_NOT_ZERO        REL    CONST UNTYP.           RCODE      17 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:780A          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 243         #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1074    000000          
   1075    000000          ;---------------------------------------------------
                           --------------------------
   1076    000000          ;
   1077    000000          ;       Function(s):    Unpacks floating points
                            operands and creates space
   1078    000000          ;                       for the result.
   1079    000000          ;
   1080    000000          ;       Description:    Unpacks two floating point
                            operands in IEEE standard,
   1081    000000          ;                       in sign, exponent and
                            mantissa.
   1082    000000          ;
   1083    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
   1084    000000          ;
   1085    000000          ;       Input:  R4:R7           NOS
   1086    000000          ;               [SP+2:3]        return address from
                            float package
   1087    000000          ;               [SP+0:1]        return address from
                            this routine
   1088    000000          ;               RO:R3           TOS
   1089    000000          ;
   1090    000000          ;       Output: R3              TOSE
   1091    000000          ;               R2              TOSMH
   1092    000000          ;               R1              TOSMM
   1093    000000          ;               R0              TOSML
   1094    000000          ;               R7              NOSE
   1095    000000          ;               R6              NOSMH
   1096    000000          ;               R5              NOSMM
   1097    000000          ;               R4              NOSML
   1098    000000          ;               A               NOSE
   1099    000000          ;               B.7             RESS = NOSS xor
                            TOSS
   1100    000000          ;               B.6             NOSS
   1101    000000          ;               B.5             TOSS
   1102    000000          ;               C               0
   1103    000000          ;               [SP + 0:1]      Return from float
                            package
   1104    000000          ;
   1105    000000          ;---------------------------------------------------
                           --------------------------
   1106    000000          
   1107    000000                  MODULE  ?F_UNPACK_L02
   1108    000000                  RSEG    RCODE:CODE:NOROOT
   1109    000000                  PUBLIC  ?F_UNPACK_L02
   1110    000000          
   1111    000000          ?F_UNPACK_L02:
   1112    000000 EA               MOV     A,R2
   1113    000001 A2E7             MOV     C,ACC.7         ; TOSE LSBit
   1114    000003 D2E7             SETB    ACC.7
   1115    000005 FA               MOV     R2,A    
   1116    000006 EB               MOV     A,R3
   1117    000007 33               RLC     A
   1118    000008 FB               MOV     R3,A            ; TOSE in R3
   1119    000009 13               RRC     A       
   1120    00000A F5F0             MOV     B,A             ; TOSS in B.7
   1121    00000C                  
   1122    00000C EE               MOV     A,R6
   1123    00000D A2E7             MOV     C,ACC.7         ; NOSE LSBit
   1124    00000F D2E7             SETB    ACC.7
   1125    000011 FE               MOV     R6,A    
   1126    000012 EF               MOV     A,R7
   1127    000013 33               RLC     A
   1128    000014 FF               MOV     R7,A            ; NOSE in R7
   1129    000015 C5F0             XCH     A,B
   1130    000017 13               RRC     A               ; TOSS in A.6 and
                                                            NOSS in A.7
   1131    000018 A2E7             MOV     C,ACC.7 
   1132    00001A 30E601           JNB     ACC.6,L0
   1133    00001D B3               CPL     C
   1134    00001E 13       L0:     RRC     A               
   1135    00001F C5F0             XCH     A,B             ; TOSS xor NOSS in
                                                            B.7, NOSS in
                                                            B.6,
   1136    000021                                          ; TOSS in B.5, NOSE
                            in A
   1137    000021 C3               CLR     C
   1138    000022 22               RET
   1139    000023                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_UNPACK_L02       REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
L0                  REL    CONST UNTYP.           RCODE      1E 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:4EA7          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 35          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1140    000000          
   1141    000000          ;---------------------------------------------------
                           --------------------------
   1142    000000          ;
   1143    000000          ;       Function(s):    Floating point addition/subt
                           raction.
   1144    000000          ;
   1145    000000          ;       Description:    Adds/subtracts two floating
                            point operands found in 
   1146    000000          ;                       TOS and NOS. The sum is left
                            in TOS. The input 
   1147    000000          ;                       variables must be in IEEE
                            format. Zero-flag will be 
   1148    000000          ;                       set if and only if the
                            result is zero.
   1149    000000          ;
   1150    000000          ;                       Algorithm:
   1151    000000          ;
   1152    000000          ;                       if (NOSE == 0) return(TOS)
   1153    000000          ;                       if (TOSE == 0) return(NOS)
   1154    000000          ;                       if  (abs(NOS) > abs(TOS))
                            swap(TOS,NOS)
   1155    000000          ;                       RESE = TOSE
   1156    000000          ;                       RESS = TOSS
   1157    000000          ;                       no_of_shift = TOSE -
                            NOSE
   1158    000000          ;                       if (no_of_shift >= 25) RES =
                            TOS
   1159    000000          ;                       else {
   1160    000000          ;                         RESM = NOSM >> no_of_shift
   1161    000000          ;                         if ((TOSS EOR NOSS) == 0)
                            do_add
   1162    000000          ;                         else do_sub
   1163    000000          ;                         Normalize(RES)
   1164    000000          ;                         if (RESM == 0) RESE =
                            0
   1165    000000          ;                       }
   1166    000000          ;                       Round(RES)
   1167    000000          ;
   1168    000000          ;
   1169    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
   1170    000000          ;
   1171    000000          ;                       Normal
   1172    000000          ;       Input:  R4:R7                   NOS
   1173    000000          ;               [SP + 0:1]              return
                            address
   1174    000000          ;               R0:R3                   TOS
   1175    000000          ;                       Reversed
   1176    000000          ;       Input:  R0:R3                   NOS
   1177    000000          ;               [SP + 0:1]              return
                            address
   1178    000000          ;               R4:R7                   TOS
   1179    000000          ;               
   1180    000000          ;       Output: R4:R7                   NOS +/-
                            TOS
   1181    000000          ;               A                       Cleared when
                            result is zero, else set
   1182    000000          ;        
   1183    000000          ;---------------------------------------------------
                           ---------------------------
   1184    000000                  MODULE  ?F_ADD_POST_R_L02
   1185    000000                  RSEG    RCODE:CODE:NOROOT       
   1186    000000                  PUBLIC  ?F_ADD_POST_R_L02
   1187    000000                  EXTERN  ?F_ADD_L02
   1188    000000          
   1189    000000          ?F_ADD_POST_R_L02:
   1190    000000 E8               MOV     A,R0
   1191    000001 FB               MOV     R3,A
   1192    000002 7A80             MOV     R2,#080H
   1193    000004 E4               CLR     A
   1194    000005 F9               MOV     R1,A
   1195    000006 F8               MOV     R0,A
   1196    000007                  IF      lcall_mode
   1197    000007 02....           LJMP    ?F_ADD_L02
   1198    00000A                  ELSE
   1199    00000A                  SJMP    ?F_ADD_L02
   1200    00000A                  ENDIF
   1201    00000A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_ADD_POST_R_L02   REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:9C7A          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 10          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1202    000000          
   1203    000000          
   1204    000000                  MODULE  ?F_ADD_POST_L02
   1205    000000                  RSEG    RCODE:CODE:NOROOT       
   1206    000000                  PUBLIC  ?F_ADD_POST_L02
   1207    000000                  EXTERN  ?F_ADD_L02
   1208    000000          
   1209    000000          ?F_ADD_POST_L02:
   1210    000000 EC               MOV     A,R4
   1211    000001 FF               MOV     R7,A
   1212    000002 7E80             MOV     R6,#080H
   1213    000004 E4               CLR     A
   1214    000005 FD               MOV     R5,A
   1215    000006 FC               MOV     R4,A
   1216    000007                  IF      lcall_mode
   1217    000007 02....           LJMP    ?F_ADD_L02
   1218    00000A                  ELSE
   1219    00000A                  SJMP    ?F_ADD_L02
   1220    00000A                  ENDIF
   1221    00000A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_ADD_POST_L02     REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:3D25          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 10          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1222    000000          
   1223    000000          
   1224    000000                  MODULE  ?F_ADD2_R0123_L02
   1225    000000                  RSEG    RCODE:CODE:NOROOT
   1226    000000                  PUBLIC  ?F_ADD2_R0123_L02
   1227    000000                  EXTERN  ?F_ADD_L02
   1228    000000          
   1229    000000          ?F_ADD2_R0123_L02:
   1230    000000 E8               MOV     A,R0
   1231    000001 FC               MOV     R4,A
   1232    000002 E9               MOV     A,R1
   1233    000003 FD               MOV     R5,A
   1234    000004 EA               MOV     A,R2
   1235    000005 FE               MOV     R6,A
   1236    000006 EB               MOV     A,R3
   1237    000007 FF               MOV     R7,A
   1238    000008                  IF      lcall_mode
   1239    000008 02....           LJMP    ?F_ADD_L02
   1240    00000B                  ELSE
   1241    00000B                  SJMP    ?F_ADD_L02
   1242    00000B                  ENDIF
   1243    00000B                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD2_R0123_L02   REL    CONST PUB UNTYP.       RCODE      0 
?F_ADD_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:6DC8          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 11          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1244    000000          
   1245    000000                  MODULE  ?F_ADD2_R4567_L02
   1246    000000                  RSEG    RCODE:CODE:NOROOT
   1247    000000                  PUBLIC  ?F_ADD2_R4567_L02
   1248    000000                  EXTERN  ?F_ADD_L02
   1249    000000          
   1250    000000          ?F_ADD2_R4567_L02:
   1251    000000 EC               MOV     A,R4
   1252    000001 F8               MOV     R0,A
   1253    000002 ED               MOV     A,R5
   1254    000003 F9               MOV     R1,A
   1255    000004 EE               MOV     A,R6
   1256    000005 FA               MOV     R2,A
   1257    000006 EF               MOV     A,R7
   1258    000007 FB               MOV     R3,A
   1259    000008                  IF      lcall_mode
   1260    000008 02....           LJMP    ?F_ADD_L02
   1261    00000B                  ELSE
   1262    00000B                  SJMP    ?F_ADD_L02
   1263    00000B                  ENDIF
   1264    00000B                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD2_R4567_L02   REL    CONST PUB UNTYP.       RCODE      0 
?F_ADD_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:B623          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 11          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1265    000000          
   1266    000000                  MODULE  ?F_ADD_CLR_L02
   1267    000000                  RSEG    RCODE:CODE:NOROOT
   1268    000000                  PUBLIC  ?F_ADD_CLR_L02
   1269    000000                  EXTERN  ?F_ADD_L02
   1270    000000          ?F_ADD_CLR_L02:
   1271    000000 E4               CLR     A
   1272    000001 F8               MOV     R0,A
   1273    000002 F9               MOV     R1,A
   1274    000003                  IF      lcall_mode
   1275    000003 80..             SJMP    ?F_ADD_L02
   1276    000005                  ELSE
   1277    000005                  SJMP    ?F_ADD_L02
   1278    000005                  ENDIF
   1279    000005                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_CLR_L02      REL    CONST PUB UNTYP.       RCODE      0 
?F_ADD_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:7ABA          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 5          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1280    000000          
   1281    000000                  MODULE  ?F_ADD_R_CLR_L02
   1282    000000                  RSEG    RCODE:CODE:NOROOT
   1283    000000                  PUBLIC  ?F_ADD_R_CLR_L02
   1284    000000                  EXTERN  ?F_ADD_L02
   1285    000000          ?F_ADD_R_CLR_L02:
   1286    000000 E4               CLR     A
   1287    000001 FC               MOV     R4,A
   1288    000002 FD               MOV     R5,A
   1289    000003                  IF      lcall_mode
   1290    000003 02....           LJMP    ?F_ADD_L02
   1291    000006                  ELSE
   1292    000006                  SJMP    ?F_ADD_L02
   1293    000006                  ENDIF
   1294    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_ADD_R_CLR_L02    REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:7300          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1295    000000          
   1296    000000                  MODULE  ?F_SUB_CLR_L02
   1297    000000                  RSEG    RCODE:CODE:NOROOT
   1298    000000                  PUBLIC  ?F_SUB_CLR_L02
   1299    000000                  EXTERN  ?F_SUB_L02
   1300    000000          ?F_SUB_CLR_L02:
   1301    000000 E4               CLR     A
   1302    000001 F8               MOV     R0,A
   1303    000002 F9               MOV     R1,A
   1304    000003                  IF      lcall_mode
   1305    000003 02....           LJMP    ?F_SUB_L02
   1306    000006                  ELSE
   1307    000006                  SJMP    ?F_SUB_L02
   1308    000006                  ENDIF
   1309    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_SUB_CLR_L02      REL    CONST PUB UNTYP.       RCODE      0 
?F_SUB_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:59A1          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1310    000000          
   1311    000000                  MODULE  ?F_ADDSUB_L02           ; Can be
                            replaced
   1312    000000                  RSEG    RCODE:CODE:NOROOT
   1313    000000                  PUBLIC  ?F_SUB_R_CLR_L02
   1314    000000                  PUBLIC  ?F_SUB_R_L02
   1315    000000                  PUBLIC  ?F_SUB_L02
   1316    000000                  PUBLIC  ?F_ADD_L02
   1317    000000                  EXTERN  ?F_UNPACK_L02
   1318    000000                  EXTERN  ?F_PACK_L02
   1319    000000                  EXTERN  ?F_ROUND_L02
   1320    000000                  EXTERN  ?F_UNDERFLOW_L02
   1321    000000                  EXTERN  ?F_OVERFLOW_L02
   1322    000000                  EXTERN  ?F_SHIFT_LEFT_L02
   1323    000000                  EXTERN  ?F_SHIFT_RIGHT_L02
   1324    000000          
   1325    000000          
   1326    000000          ?F_SUB_R_CLR_L02:
   1327    000000 E4               CLR     A
   1328    000001 FC               MOV     R4,A
   1329    000002 FD               MOV     R5,A
   1330    000003          ?F_SUB_R_L02:
   1331    000003          ;       We simply exchange the registers
   1332    000003          
   1333    000003 EF               MOV     A,R7
   1334    000004 CB               XCH     A,R3
   1335    000005 FF               MOV     R7,A
   1336    000006 EE               MOV     A,R6
   1337    000007 CA               XCH     A,R2
   1338    000008 FE               MOV     R6,A
   1339    000009 ED               MOV     A,R5
   1340    00000A C9               XCH     A,R1
   1341    00000B FD               MOV     R5,A
   1342    00000C EC               MOV     A,R4
   1343    00000D C8               XCH     A,R0
   1344    00000E FC               MOV     R4,A
   1345    00000F          ?F_SUB_L02:             
   1346    00000F EB               MOV     A,R3                    ; If TOS is
                                                                    zero return
                                                                    NOS
   1347    000010 4A               ORL     A,R2
   1348    000011 7003             JNZ     TOS_NOT_ZERO2
   1349    000013 EF               MOV     A,R7
   1350    000014 4E               ORL     A,R6
   1351    000015 22               RET                             ; Return
                                                                    NOS
   1352    000016          
   1353    000016          TOS_NOT_ZERO2:
   1354    000016 EB               MOV     A,R3
   1355    000017 6480             XRL     A,#128          ; Change sign of
                                                            TOS
   1356    000019 FB               MOV     R3,A
   1357    00001A 8007             SJMP    TOS_NOT_ZERO
   1358    00001C          
   1359    00001C          
   1360    00001C          ?F_ADD_L02:  
   1361    00001C          ;
   1362    00001C          ;       First check for zeros
   1363    00001C          ;
   1364    00001C          
   1365    00001C EB               MOV     A,R3                    ; If TOS is
                                                                    zero return
                                                                    NOS
   1366    00001D 4A               ORL     A,R2
   1367    00001E 7003             JNZ     TOS_NOT_ZERO
   1368    000020 EF               MOV     A,R7
   1369    000021 4E               ORL     A,R6
   1370    000022 22               RET                             ; Return
                                                                    NOS
   1371    000023          
   1372    000023          TOS_NOT_ZERO:
   1373    000023 EF               MOV     A,R7                    ; If NOS is
                                                                    zero return
                                                                    TOS
   1374    000024 4E               ORL     A,R6
   1375    000025 700B             JNZ     NOS_NOT_ZERO
   1376    000027 EB               MOV     A,R3                    ; Return
                                                                    TOS
   1377    000028 FF               MOV     R7,A
   1378    000029 EA               MOV     A,R2
   1379    00002A FE               MOV     R6,A
   1380    00002B E9               MOV     A,R1
   1381    00002C FD               MOV     R5,A
   1382    00002D E8               MOV     A,R0
   1383    00002E FC               MOV     R4,A
   1384    00002F 7401             MOV     A,#1
   1385    000031 22               RET
   1386    000032          NOS_NOT_ZERO:
   1387    000032          
   1388    000032          ;
   1389    000032          ;       First swap NOS and TOS if the absolute value
                            of TOS is 
   1390    000032          ;       higher than NOS
   1391    000032          ;
   1392    000032          
   1393    000032 C3               CLR     C
   1394    000033 EC               MOV     A,R4            ; abs(NOS) -
                                                            abs(TOS)
   1395    000034 98               SUBB    A,R0
   1396    000035 ED               MOV     A,R5
   1397    000036 99               SUBB    A,R1
   1398    000037 EE               MOV     A,R6
   1399    000038 9A               SUBB    A,R2
   1400    000039 EB               MOV     A,R3
   1401    00003A C2E7             CLR     ACC.7
   1402    00003C F5F0             MOV     B,A
   1403    00003E EF               MOV     A,R7
   1404    00003F C2E7             CLR     ACC.7
   1405    000041 95F0             SUBB    A,B
   1406    000043 500E             JNC     NO_SWAP         ; Jump if abs(NOS)
                                                            >= abs(TOS)
   1407    000045 600C             JZ      NO_SWAP
   1408    000047          
   1409    000047 EB               MOV     A,R3            ; Swap NOS with
                                                            TOS
   1410    000048 CF               XCH     A,R7
   1411    000049 FB               MOV     R3,A
   1412    00004A EA               MOV     A,R2
   1413    00004B CE               XCH     A,R6
   1414    00004C FA               MOV     R2,A
   1415    00004D E9               MOV     A,R1
   1416    00004E CD               XCH     A,R5
   1417    00004F F9               MOV     R1,A
   1418    000050 E8               MOV     A,R0
   1419    000051 CC               XCH     A,R4
   1420    000052 F8               MOV     R0,A
   1421    000053          
   1422    000053          NO_SWAP:
   1423    000053          ;
   1424    000053          ;       Now we have the knowledge that abs(NOS) >=
                            abs(TOS) !!!
   1425    000053          ;
   1426    000053          
   1427    000053 12....           LCALL   ?F_UNPACK_L02           ; Unpack the
                                                                    incoming
                                                                    operands
   1428    000056          ;
   1429    000056          ;       Let RESE = NOSE, RESS = NOSS, RESM2 = NOSS ^
                            TOSS
   1430    000056          ;
   1431    000056                  
   1432    000056 C0E0             PUSH    ACC
   1433    000058 C0F0             PUSH    B
   1434    00005A 7F00             MOV     R7,#0
   1435    00005C          
   1436    00005C          ;       Compute the number of shifts to be done
                            before internal add or sub.
   1437    00005C          ;
   1438    00005C          ;       Use register R3 for saving no_of_shift
   1439    00005C          ;
   1440    00005C                  
   1441    00005C C3               CLR     C
   1442    00005D 9B               SUBB    A,R3                    ; R0 = NOSE
                                                                    -
                                                                    TOSE
   1443    00005E FB               MOV     R3,A
   1444    00005F 605B             JZ      CHOSE_ADD_OR_SUB        ; Jump if no
                                                                    shifting
   1445    000061          ;
   1446    000061          ;       Under special circumstances we know that the
                            result shall
   1447    000061          ;       be equal to NOS, namely:
   1448    000061          ;
   1449    000061          ;       TOS == 0 (checked out already!)
   1450    000061          ;       no_shift >= 25          
   1451    000061          ;
   1452    000061          ;       So if one of above conditions exist then let
                            RESM = NOSM and exit
   1453    000061          ;
   1454    000061          
   1455    000061 9418             SUBB    A,#24
   1456    000063 600C             JZ      L20
   1457    000065 401A             JC      L21
   1458    000067          
   1459    000067 D0E0             POP     ACC                     ; Load
                                                                    RESE,RESS
   1460    000069 23               RL      A
   1461    00006A F9               MOV     R1,A
   1462    00006B D0E0             POP     ACC
   1463    00006D F8               MOV     R0,A
   1464    00006E                  IF      lcall_mode
   1465    00006E 02....           LJMP    ?F_PACK_L02
   1466    000071                  ELSE
   1467    000071                  AJMP    ?F_PACK_L02
   1468    000071                  ENDIF
   1469    000071          ;
   1470    000071          ;       Now we have to compute the mantissa result.
                            To do this we have
   1471    000071          ;       a knowledge of how many potenses it's differ
                            between NOS and TOS,
   1472    000071          ;       If we shifts TOS that number to the right
                            (in RESM, 4-bytes) a 
   1473    000071          ;       simple add or sub between NOSM and RESM can
                            be done:
   1474    000071          ;
   1475    000071          ;       Use the following registers for RESM
                            R1:R2:R3:R4
   1476    000071          ;
   1477    000071          
   1478    000071          L20:
   1479    000071          ;
   1480    000071          ;       24 bit shift. Special case!!!
   1481    000071          ;
   1482    000071          
   1483    000071 8AF0             MOV     B,R2
   1484    000073 E9               MOV     A,R1
   1485    000074 48               ORL     A,R0
   1486    000075 6003             JZ      L200
   1487    000077 D2F0             SETB    B.0
   1488    000079 E4               CLR     A
   1489    00007A          L200:   
   1490    00007A AFF0             MOV     R7,B
   1491    00007C FA               MOV     R2,A
   1492    00007D F9               MOV     R1,A
   1493    00007E F8               MOV     R0,A
   1494    00007F 803B             SJMP    CHOSE_ADD_OR_SUB
   1495    000081          
   1496    000081          L21:
   1497    000081 EB               MOV     A,R3
   1498    000082 30E40D           JNB     ACC.4,L22
   1499    000085          ;
   1500    000085          ;       16 bit shift
   1501    000085          ;
   1502    000085          
   1503    000085 89F0             MOV     B,R1
   1504    000087 EA               MOV     A,R2
   1505    000088 6003             JZ      L210
   1506    00008A D2F0             SETB    B.0
   1507    00008C E4               CLR     A
   1508    00008D          L210:
   1509    00008D AFF0             MOV     R7,B
   1510    00008F F9               MOV     R1,A
   1511    000090 CA               XCH     A,R2
   1512    000091 F8               MOV     R0,A
   1513    000092          
   1514    000092          L22:
   1515    000092 EB               MOV     A,R3
   1516    000093 30E30D           JNB     ACC.3,L23
   1517    000096          ;
   1518    000096          ;       8 bit shift
   1519    000096          ;
   1520    000096          
   1521    000096 88F0             MOV     B,R0
   1522    000098 EF               MOV     A,R7
   1523    000099 6002             JZ      L220
   1524    00009B D2F0             SETB    B.0
   1525    00009D          L220:
   1526    00009D AFF0             MOV     R7,B
   1527    00009F E4               CLR     A
   1528    0000A0 CA               XCH     A,R2
   1529    0000A1 C9               XCH     A,R1
   1530    0000A2 F8               MOV     R0,A
   1531    0000A3          
   1532    0000A3          L23:
   1533    0000A3 EB               MOV     A,R3
   1534    0000A4 5407             ANL     A,#7
   1535    0000A6 6014             JZ      CHOSE_ADD_OR_SUB
   1536    0000A8 FB               MOV     R3,A
   1537    0000A9          ;
   1538    0000A9          ;       TOSM >> X
   1539    0000A9          ;
   1540    0000A9          
   1541    0000A9          SHIFT_LOOP:
   1542    0000A9 C3               CLR     C
   1543    0000AA EA               MOV     A,R2
   1544    0000AB 13               RRC     A
   1545    0000AC FA               MOV     R2,A
   1546    0000AD E9               MOV     A,R1
   1547    0000AE 13               RRC     A
   1548    0000AF F9               MOV     R1,A
   1549    0000B0 E8               MOV     A,R0
   1550    0000B1 13               RRC     A
   1551    0000B2 F8               MOV     R0,A
   1552    0000B3 EF               MOV     A,R7
   1553    0000B4 13               RRC     A
   1554    0000B5 5002             JNC     L24
   1555    0000B7 D2E0             SETB    ACC.0
   1556    0000B9 FF       L24:    MOV     R7,A
   1557    0000BA DBED             DJNZ    R3,SHIFT_LOOP
   1558    0000BC          ;
   1559    0000BC          ;       Now we have loaded RESM in registers with
                            NOSM in right place.
   1560    0000BC          ;       If TOSS == NOSS then an internal add is to
                            be done, else sub !
   1561    0000BC          ;
   1562    0000BC          
   1563    0000BC          CHOSE_ADD_OR_SUB:
   1564    0000BC D0E0             POP     ACC                     ; Get NOSS
                                                                    xor
                                                                    TOSS
   1565    0000BE C0E0             PUSH    ACC
   1566    0000C0 30E734           JNB     ACC.7,DO_ADD            ; If equal
                                                                    do an
                                                                    add
   1567    0000C3          ;
   1568    0000C3          ; Do the subtraction
   1569    0000C3          ;
   1570    0000C3          
   1571    0000C3 C3               CLR     C
   1572    0000C4 E4               CLR     A
   1573    0000C5 9F               SUBB    A,R7
   1574    0000C6 FF               MOV     R7,A
   1575    0000C7 F5F0             MOV     B,A
   1576    0000C9 EC               MOV     A,R4
   1577    0000CA 98               SUBB    A,R0
   1578    0000CB FC               MOV     R4,A
   1579    0000CC 42F0             ORL     B,A
   1580    0000CE ED               MOV     A,R5
   1581    0000CF 99               SUBB    A,R1
   1582    0000D0 FD               MOV     R5,A
   1583    0000D1 42F0             ORL     B,A
   1584    0000D3 EE               MOV     A,R6
   1585    0000D4 9A               SUBB    A,R2
   1586    0000D5 FE               MOV     R6,A
   1587    0000D6 42F0             ORL     B,A
   1588    0000D8          
   1589    0000D8 D0E0             POP     ACC                     ; Get
                                                                    RESS
   1590    0000DA F9               MOV     R1,A
   1591    0000DB D0E0             POP     ACC                     ; Get
                                                                    RESE
   1592    0000DD F8               MOV     R0,A
   1593    0000DE E5F0             MOV     A,B
   1594    0000E0          
   1595    0000E0 7001             JNZ     SUB_ADJ
   1596    0000E2 22               RET                             ; Return
                                                                    zero
   1597    0000E3          SUB_ADJ:
   1598    0000E3 E9               MOV     A,R1                    ; Get
                                                                    correct
                                                                    sign in
                                                                    R1.7
   1599    0000E4 23               RL      A
   1600    0000E5 F9               MOV     R1,A
   1601    0000E6          
   1602    0000E6 EE               MOV     A,R6
   1603    0000E7          LLL:
   1604    0000E7 30E703           JNB     ACC.7,LL
   1605    0000EA                  IF      lcall_mode
   1606    0000EA 02....           LJMP    ?F_ROUND_L02            ; Jump if no
                                                                    change in
                                                                    RESE
   1607    0000ED                  ELSE
   1608    0000ED                  AJMP    ?F_ROUND_L02            ; Jump if no
                            change in RESE
   1609    0000ED                  ENDIF
   1610    0000ED          LL:
   1611    0000ED D803             DJNZ    R0,SUB_SHIFT            ; RESE--
   1612    0000EF                  IF      lcall_mode
   1613    0000EF 02....           LJMP    ?F_UNDERFLOW_L02
   1614    0000F2                  ELSE
   1615    0000F2                  AJMP    ?F_UNDERFLOW_L02
   1616    0000F2                  ENDIF
   1617    0000F2          
   1618    0000F2          SUB_SHIFT:
   1619    0000F2 12....           LCALL   ?F_SHIFT_LEFT_L02
   1620    0000F5 80F0             SJMP    LLL
   1621    0000F7          ;
   1622    0000F7          ; Do the addition
   1623    0000F7          ;
   1624    0000F7          
   1625    0000F7          DO_ADD: 
   1626    0000F7 EC               MOV     A,R4
   1627    0000F8 28               ADD     A,R0
   1628    0000F9 FC               MOV     R4,A
   1629    0000FA ED               MOV     A,R5
   1630    0000FB 39               ADDC    A,R1
   1631    0000FC FD               MOV     R5,A
   1632    0000FD EE               MOV     A,R6
   1633    0000FE 3A               ADDC    A,R2
   1634    0000FF FE               MOV     R6,A
   1635    000100          
   1636    000100 D0E0             POP     ACC                     ; Get
                                                                    RESS
   1637    000102 23               RL      A
   1638    000103 F9               MOV     R1,A
   1639    000104 D0E0             POP     ACC                     ; Get
                                                                    RESE
   1640    000106 F8               MOV     R0,A
   1641    000107 4003             JC      ADD_SHIFT
   1642    000109                  IF      lcall_mode
   1643    000109 02....           LJMP    ?F_ROUND_L02            ; Jump if no
                                                                    change in
                                                                    RESE
   1644    00010C                  ELSE
   1645    00010C                  AJMP    ?F_ROUND_L02            ; Jump if no
                            change in RESE
   1646    00010C                  ENDIF
   1647    00010C          
   1648    00010C          ADD_SHIFT:
   1649    00010C 12....           LCALL   ?F_SHIFT_RIGHT_L02
   1650    00010F 08               INC     R0                      ; RESE++
   1651    000110 B80003           CJNE    R0,#0,ADD_EXIT
   1652    000113                  IF      lcall_mode
   1653    000113 02....           LJMP    ?F_OVERFLOW_L02         ; Overflow
                                                                    !!!
   1654    000116                  ELSE
   1655    000116                  AJMP    ?F_OVERFLOW_L02         ; Overflow
                            !!!
   1656    000116                  ENDIF
   1657    000116          ;
   1658    000116          ;       That's all. Round, pack and exit !!
   1659    000116          ;
   1660    000116          
   1661    000116          ADD_EXIT:
   1662    000116                  IF      lcall_mode
   1663    000116 02....           LJMP    ?F_ROUND_L02
   1664    000119                  ELSE
   1665    000119                  AJMP    ?F_ROUND_L02
   1666    000119                  ENDIF
   1667    000119                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_L02          REL    CONST PUB UNTYP.       RCODE      1C 
?F_OVERFLOW_L02     ABS    CONST EXT [004] UNTYP. __EXTERNS  Solved Extern 
?F_PACK_L02         ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_ROUND_L02        ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?F_SHIFT_LEFT_L02   ABS    CONST EXT [005] UNTYP. __EXTERNS  Solved Extern 
?F_SHIFT_RIGHT_L02  ABS    CONST EXT [006] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_L02          REL    CONST PUB UNTYP.       RCODE      F 
?F_SUB_R_CLR_L02    REL    CONST PUB UNTYP.       RCODE      0 
?F_SUB_R_L02        REL    CONST PUB UNTYP.       RCODE      3 
?F_UNDERFLOW_L02    ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
?F_UNPACK_L02       ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
ADD_EXIT            REL    CONST UNTYP.           RCODE      116 
ADD_SHIFT           REL    CONST UNTYP.           RCODE      10C 
B                   ABS    CONST UNTYP.           ASEG       F0 
CHOSE_ADD_OR_SUB    REL    CONST UNTYP.           RCODE      BC 
DO_ADD              REL    CONST UNTYP.           RCODE      F7 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
L20                 REL    CONST UNTYP.           RCODE      71 
L200                REL    CONST UNTYP.           RCODE      7A 
L21                 REL    CONST UNTYP.           RCODE      81 
L210                REL    CONST UNTYP.           RCODE      8D 
L22                 REL    CONST UNTYP.           RCODE      92 
L220                REL    CONST UNTYP.           RCODE      9D 
L23                 REL    CONST UNTYP.           RCODE      A3 
L24                 REL    CONST UNTYP.           RCODE      B9 
LL                  REL    CONST UNTYP.           RCODE      ED 
LLL                 REL    CONST UNTYP.           RCODE      E7 
NOS_NOT_ZERO        REL    CONST UNTYP.           RCODE      32 
NO_SWAP             REL    CONST UNTYP.           RCODE      53 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SHIFT_LOOP          REL    CONST UNTYP.           RCODE      A9 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SUB_ADJ             REL    CONST UNTYP.           RCODE      E3 
SUB_SHIFT           REL    CONST UNTYP.           RCODE      F2 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
TOS_NOT_ZERO        REL    CONST UNTYP.           RCODE      23 
TOS_NOT_ZERO2       REL    CONST UNTYP.           RCODE      16 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:B483          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 281         #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1668    000000          
   1669    000000          ;---------------------------------------------------
                           --------------------------
   1670    000000          ;
   1671    000000          ;       Function(s):    Cast a floating point
                            operand to a signed or unsigned
   1672    000000          ;                       long integer.
   1673    000000          ;
   1674    000000          ;       Description:    Cast a floating point
                            operand to a signed or unsigned
   1675    000000          ;                       long integer. The result is
                            left in TOS. The input 
   1676    000000          ;                       variable must be in IEEE
                            format.
   1677    000000          ;                       Zero-flag will be set if and
                            only if the result is 
   1678    000000          ;                       zero.
   1679    000000          ;
   1680    000000          ;
   1681    000000          ;       Algorithm:      if (TOSE < 0x7f) goto
                            return(result mantissa = 0)
   1682    000000          ;                       exp = exp - 31     
                            
   1683    000000          ;                       if (exp > 0x7f)  goto
                            return(result mantissa=7FFFFFFF)
   1684    000000          ;                       Shift right(mantissa) (0x7f-
                            exp) step
   1685    000000          ;
   1686    000000          ;               return: if (sign == '-') two_complem
                           ent(result mantissa)
   1687    000000          ;
   1688    000000          ;
   1689    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
   1690    000000          ;
   1691    000000          ;       Input:  R4:R7                   TOS
                            
   1692    000000          ;
   1693    000000          ;               
   1694    000000          ;       Output: R4:R7                   Casted
                            TOS
   1695    000000          ;               A                       Cleared when
                            result is zero, else set
   1696    000000          ;        
   1697    000000          ;---------------------------------------------------
                           ------------------------
   1698    000000          
   1699    000000                  MODULE  ?FLT_TO_LONG_L02                ;
                            Can be replaced
   1700    000000                  RSEG    RCODE:CODE:NOROOT
   1701    000000                  PUBLIC  ?R4567_FLT_TO_LONG_L02
   1702    000000                  EXTERN  ?F_UNDERFLOW_L02
   1703    000000                  EXTERN  ?F_OVERFLOW_L02
   1704    000000                  EXTERN  ?F_SHIFT_RIGHT_2_L02
   1705    000000                  EXTERN  ?F_0_SUB_L02
   1706    000000                  EXTERN  ?F_EXIT_L02
   1707    000000          
   1708    000000          ?R4567_FLT_TO_LONG_L02:
   1709    000000 EF               MOV     A,R7            ; Check if
                                                            zero
   1710    000001 4E               ORL     A,R6
   1711    000002 7003             JNZ     NO_ZERO
   1712    000004 FD               MOV     R5,A
   1713    000005 FC               MOV     R4,A
   1714    000006 22               RET
   1715    000007          NO_ZERO:
   1716    000007 EE               MOV     A,R6            ;(C) = LSB BIT OF
                                                            TOSE (= R6-MSB)
   1717    000008 A2E7             MOV     C,ACC.7  
   1718    00000A          
   1719    00000A D2E7             SETB    ACC.7           ; MSB of TOSM =
                                                            1.
   1720    00000C FE               MOV     R6,A    
   1721    00000D          
   1722    00000D E4               CLR     A
   1723    00000E CF               XCH     A,R7            ; ACC = TOSE, (C) =
                                                            TOSS.
   1724    00000F 33               RLC     A       
   1725    000010                  
   1726    000010 92D5             MOV     F0,C            ; F0 (PSW.5) =
                                                            TOSS.
   1727    000012          
   1728    000012 C3               CLR     C               ; If TOSE >= 127(=
                                                            no underflow) then
                                                            goto LL1
   1729    000013 947F             SUBB    A,#127          ; A = TOSE -
                                                            127
   1730    000015 5003             JNC     LL1     
   1731    000017                  IF      lcall_mode
   1732    000017 02....           LJMP    ?F_UNDERFLOW_L02
   1733    00001A                  ELSE
   1734    00001A                  AJMP    ?F_UNDERFLOW_L02
   1735    00001A                  ENDIF
   1736    00001A          
   1737    00001A F5F0     LL1:    MOV     B,A
   1738    00001C 941F             SUBB    A,#31           ; Compare exp with
                                                            31
   1739    00001E 4005             JC      L3              ; continue if exp <
                                                            31
   1740    000020 6011             JZ      SIGN
   1741    000022                  IF      lcall_mode
   1742    000022 02....           LJMP    ?F_OVERFLOW_L02
   1743    000025                  ELSE
   1744    000025                  AJMP    ?F_OVERFLOW_L02
   1745    000025                  ENDIF
   1746    000025          L3:
   1747    000025 F4               CPL     A               ; B = 31 -
                                                            EXP.
   1748    000026 04               INC     A
   1749    000027 F5F0             MOV     B,A     
   1750    000029                  
   1751    000029 EF       L1:     MOV     A,R7
   1752    00002A 54FE             ANL     A,#0FEH
   1753    00002C FF               MOV     R7,A
   1754    00002D 12....           LCALL   ?F_SHIFT_RIGHT_2_L02    ; Shift TOSM
                                                                    DPH steps
                                                                    to the
                                                                    right
   1755    000030 D5F0F6           DJNZ    B,L1    
   1756    000033          
   1757    000033          SIGN:
   1758    000033 EF               MOV     A,R7            ; First put it
                                                            correctly
   1759    000034 CC               XCH     A,R4
   1760    000035 CD               XCH     A,R5
   1761    000036 CE               XCH     A,R6
   1762    000037 CF               XCH     A,R7
   1763    000038          
   1764    000038 30D503           JNB     F0,EXIT         ; Jump to exit if
                                                            result is
                                                            positive.
   1765    00003B 12....           LCALL   ?F_0_SUB_L02    ; Else change sign
                                                            of tosm
   1766    00003E          
   1767    00003E EE       EXIT:   MOV     A,R6
   1768    00003F                  IF      lcall_mode
   1769    00003F 02....           LJMP    ?F_EXIT_L02
   1770    000042                  ELSE
   1771    000042                  AJMP    ?F_EXIT_L02
   1772    000042                  ENDIF
   1773    000042                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_0_SUB_L02        ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
?F_EXIT_L02         ABS    CONST EXT [004] UNTYP. __EXTERNS  Solved Extern 
?F_OVERFLOW_L02     ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_SHIFT_RIGHT_2_L02ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?F_UNDERFLOW_L02    ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?R4567_FLT_TO_LONG_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXIT                REL    CONST UNTYP.           RCODE      3E 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
L1                  REL    CONST UNTYP.           RCODE      29 
L3                  REL    CONST UNTYP.           RCODE      25 
LL1                 REL    CONST UNTYP.           RCODE      1A 
NO_ZERO             REL    CONST UNTYP.           RCODE      7 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SIGN                REL    CONST UNTYP.           RCODE      33 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:BA66          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 66          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1774    000000          
   1775    000000          ;---------------------------------------------------
                           --------------------------
   1776    000000          ;
   1777    000000          ;       Function(s):    Cast a floating point
                            operand to a signed or unsigned
   1778    000000          ;                       long integer.
   1779    000000          ;
   1780    000000          ;       Description:    Cast a floating point
                            operand to a signed or unsigned
   1781    000000          ;                       long integer. The result is
                            left in TOS. The input 
   1782    000000          ;                       variable must be in IEEE
                            format.
   1783    000000          ;                       Zero-flag will be set if and
                            only if the result is 
   1784    000000          ;                       zero.
   1785    000000          ;
   1786    000000          ;
   1787    000000          ;       Algorithm:      if (TOSE < 0x7f) goto
                            return(result mantissa = 0)
   1788    000000          ;                       exp = exp - 31     
                            
   1789    000000          ;                       if (exp > 0x7f)  goto
                            return(result mantissa=7FFFFFFF)
   1790    000000          ;                       Shift right(mantissa) (0x7f-
                            exp) step
   1791    000000          ;
   1792    000000          ;               return: if (sign == '-') two_complem
                           ent(result mantissa)
   1793    000000          ;
   1794    000000          ;
   1795    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
   1796    000000          ;
   1797    000000          ;       Input:  R0:R3                   TOS
                            
   1798    000000          ;
   1799    000000          ;               
   1800    000000          ;       Output: R0:R3                   Casted
                            TOS
   1801    000000          ;               A                       Cleared when
                            result is zero, else set
   1802    000000          ;        
   1803    000000          ;---------------------------------------------------
                           ------------------------
   1804    000000          
   1805    000000                  MODULE  ?FLT_TO_LONG_R_L02              ;
                            Can be replaced
   1806    000000                  RSEG    RCODE:CODE:NOROOT
   1807    000000                  PUBLIC  ?R0123_FLT_TO_LONG_L02
   1808    000000          
   1809    000000          ?R0123_FLT_TO_LONG_L02:
   1810    000000 EB               MOV     A,R3            ; Check if
                                                            zero
   1811    000001 4A               ORL     A,R2
   1812    000002 7003             JNZ     NO_ZERO
   1813    000004 F9               MOV     R1,A
   1814    000005 F8               MOV     R0,A
   1815    000006 22               RET
   1816    000007          NO_ZERO:
   1817    000007 EA               MOV     A,R2            ;(C) = LSB BIT OF
                                                            TOSE (= R6-MSB)
   1818    000008 A2E7             MOV     C,ACC.7  
   1819    00000A          
   1820    00000A D2E7             SETB    ACC.7           ; MSB of TOSM =
                                                            1.
   1821    00000C FA               MOV     R2,A    
   1822    00000D          
   1823    00000D E4               CLR     A
   1824    00000E CB               XCH     A,R3            ; ACC = TOSE, (C) =
                                                            TOSS.
   1825    00000F 33               RLC     A       
   1826    000010                  
   1827    000010 92D5             MOV     F0,C            ; F0 (PSW.5) =
                                                            TOSS.
   1828    000012          
   1829    000012 C3               CLR     C               ; If TOSE >= 127(=
                                                            no underflow) then
                                                            goto LL1
   1830    000013 947F             SUBB    A,#127          ; A = TOSE -
                                                            127
   1831    000015 5006             JNC     LL1
   1832    000017 E4               CLR     A
   1833    000018 FB               MOV     R3,A
   1834    000019 FA       OUT:    MOV     R2,A
   1835    00001A F9               MOV     R1,A
   1836    00001B F8               MOV     R0,A
   1837    00001C 22               RET
   1838    00001D          
   1839    00001D F5F0     LL1:    MOV     B,A
   1840    00001F 941F             SUBB    A,#31           ; Compare exp with
                                                            31
   1841    000021 4008             JC      L3              ; continue if exp <
                                                            31
   1842    000023 601A             JZ      SIGN
   1843    000025 7B7F             MOV     R3,#127
   1844    000027 74FF             MOV     A,#255
   1845    000029 80EE             SJMP    OUT
   1846    00002B          L3:
   1847    00002B F4               CPL     A               ; B = 31 -
                                                            EXP.
   1848    00002C 04               INC     A
   1849    00002D F5F0             MOV     B,A     
   1850    00002F                  
   1851    00002F C3       L1:     CLR     C               ; Shift TOSM DPH
                                                            steps to the
                                                            right
   1852    000030 EA               MOV     A,R2
   1853    000031 13               RRC     A
   1854    000032 FA               MOV     R2,A
   1855    000033 E9               MOV     A,R1
   1856    000034 13               RRC     A
   1857    000035 F9               MOV     R1,A
   1858    000036 E8               MOV     A,R0
   1859    000037 13               RRC     A
   1860    000038 F8               MOV     R0,A
   1861    000039 EB               MOV     A,R3
   1862    00003A 13               RRC     A
   1863    00003B FB               MOV     R3,A
   1864    00003C D5F0F0           DJNZ    B,L1    
   1865    00003F          
   1866    00003F          SIGN:
   1867    00003F EB               MOV     A,R3            ; First put it
                                                            correctly
   1868    000040 C8               XCH     A,R0
   1869    000041 C9               XCH     A,R1
   1870    000042 CA               XCH     A,R2
   1871    000043 CB               XCH     A,R3
   1872    000044          
   1873    000044 30D50D           JNB     F0,EXIT         ; Jump to exit if
                                                            result is
                                                            positive.
   1874    000047 C3               CLR     C       ; Else change sign of
                                                    tosm
   1875    000048 E4               CLR     A
   1876    000049 98               SUBB    A,R0
   1877    00004A F8               MOV     R0,A
   1878    00004B E4               CLR     A
   1879    00004C 99               SUBB    A,R1
   1880    00004D F9               MOV     R1,A
   1881    00004E E4               CLR     A
   1882    00004F 9A               SUBB    A,R2
   1883    000050 FA               MOV     R2,A
   1884    000051 E4               CLR     A
   1885    000052 9B               SUBB    A,R3
   1886    000053 FB               MOV     R3,A
   1887    000054          
   1888    000054 EA       EXIT:   MOV     A,R2
   1889    000055 48               ORL     A,R0
   1890    000056 49               ORL     A,R1
   1891    000057 4B               ORL     A,R3
   1892    000058 22               RET
   1893    000059                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?R0123_FLT_TO_LONG_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXIT                REL    CONST UNTYP.           RCODE      54 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
L1                  REL    CONST UNTYP.           RCODE      2F 
L3                  REL    CONST UNTYP.           RCODE      2B 
LL1                 REL    CONST UNTYP.           RCODE      1D 
NO_ZERO             REL    CONST UNTYP.           RCODE      7 
OUT                 REL    CONST UNTYP.           RCODE      19 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SIGN                REL    CONST UNTYP.           RCODE      3F 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:3554          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 89          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1894    000000          
   1895    000000          ;---------------------------------------------------
                           --------------------------
   1896    000000          ;
   1897    000000          ;       Function(s):    Cast a signed or unsigned
                            long integer operand to a 
   1898    000000          ;                       floating point number.
   1899    000000          ;
   1900    000000          ;       Description:    Cast a signed or unsigned
                            long integer operand to a 
   1901    000000          ;                       floating point number in
                            IEEE format. The result is 
   1902    000000          ;                       left in TOS.
   1903    000000          ;                       Zero-flag will be set if and
                            only if the result is 
   1904    000000          ;                       zero.
   1905    000000          ;
   1906    000000          ;       Algoritm:       SL_TO_FLOAT:
   1907    000000          ;                               result mantissa =
                            TOS mantissa
   1908    000000          ;                               RESS = TOSS
   1909    000000          ;                               if (TOSS == '-')
                            two_complement(TOS)
   1910    000000          ;                               JMP CAST
   1911    000000          ;
   1912    000000          ;                       UL_TO_FLOAT:
   1913    000000          ;                               result mantissa =
                            TOS mantissa
   1914    000000          ;                               RESS = 0            
                               ; '+'
   1915    000000          ;
   1916    000000          ;                       CAST:
   1917    000000          ;                               if (TOS == 0)
                            return(+0)
   1918    000000          ;                               result exp = #$7F +
                            31
   1919    000000          ;                               while ((res man &
                            #$80000000) == 0) {
   1920    000000          ;                                       Shift
                            left(result mantissa)
   1921    000000          ;                                       decrement
                            result exp
   1922    000000          ;                               }
   1923    000000          ;
   1924    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
   1925    000000          ;
   1926    000000          ;       Input : R4:R7                   Longword you
                            want to cast (TOS).
   1927    000000          ;               
   1928    000000          ;       Output: R4:R7                   Casted
                            TOS
   1929    000000          ;               A                       Ceared when
                            result is zero, else set
   1930    000000          ;        
   1931    000000          ;---------------------------------------------------
                           ------------------------
   1932    000000          
   1933    000000                  MODULE  ?UCHAR_TO_FLT_L02
   1934    000000                  RSEG    RCODE:CODE:NOROOT
   1935    000000                  PUBLIC  ?R4567_UCHAR_TO_FLT_L02
   1936    000000                  EXTERN  ?R4567_ULONG_TO_FLT_L02
   1937    000000          ?R4567_UCHAR_TO_FLT_L02:
   1938    000000 FC               MOV     R4,A
   1939    000001 E4               CLR     A
   1940    000002 FD               MOV     R5,A
   1941    000003 FE               MOV     R6,A
   1942    000004 FF               MOV     R7,A
   1943    000005                  IF      lcall_mode
   1944    000005 02....           LJMP    ?R4567_ULONG_TO_FLT_L02
   1945    000008                  ELSE
   1946    000008                  SJMP    ?R4567_ULONG_TO_FLT_L02
   1947    000008                  ENDIF
   1948    000008                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?R4567_UCHAR_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      0 
?R4567_ULONG_TO_FLT_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:34C1          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 8          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1949    000000          
   1950    000000                  MODULE  ?UINT_TO_FLT_L02
   1951    000000                  RSEG    RCODE:CODE:NOROOT
   1952    000000                  PUBLIC  ?R4567_UINT_TO_FLT_L02
   1953    000000                  EXTERN  ?R4567_ULONG_TO_FLT_L02
   1954    000000          ?R4567_UINT_TO_FLT_L02:
   1955    000000 E4               CLR     A
   1956    000001 FE               MOV     R6,A
   1957    000002 FF               MOV     R7,A
   1958    000003                  IF      lcall_mode
   1959    000003 02....           LJMP    ?R4567_ULONG_TO_FLT_L02
   1960    000006                  ELSE
   1961    000006                  SJMP    ?R4567_ULONG_TO_FLT_L02
   1962    000006                  ENDIF
   1963    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?R4567_UINT_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      0 
?R4567_ULONG_TO_FLT_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:59FB          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1964    000000          
   1965    000000                  MODULE  ?CHAR_TO_FLT_L02
   1966    000000                  RSEG    RCODE:CODE:NOROOT
   1967    000000                  PUBLIC  ?R4567_CHAR_TO_FLT_L02
   1968    000000                  EXTERN  ?R4567_LONG_TO_FLT_L02
   1969    000000          ?R4567_CHAR_TO_FLT_L02:
   1970    000000 FC               MOV     R4,A
   1971    000001 33               RLC     A
   1972    000002 95E0             SUBB    A,ACC
   1973    000004 FD               MOV     R5,A
   1974    000005 FE               MOV     R6,A
   1975    000006 FF               MOV     R7,A
   1976    000007                  IF      lcall_mode
   1977    000007 02....           LJMP    ?R4567_LONG_TO_FLT_L02
   1978    00000A                  ELSE
   1979    00000A                  SJMP    ?R4567_LONG_TO_FLT_L02
   1980    00000A                  ENDIF
   1981    00000A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?R4567_CHAR_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      0 
?R4567_LONG_TO_FLT_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:AD4D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 10          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1982    000000          
   1983    000000                  MODULE  ?LONG_TO_FLT_L02                ;
                            Can be replaced
   1984    000000                  RSEG    RCODE:CODE:NOROOT
   1985    000000                  PUBLIC  ?R4567_INT_TO_FLT_L02
   1986    000000                  PUBLIC  ?R4567_LONG_TO_FLT_L02
   1987    000000                  PUBLIC  ?R4567_ULONG_TO_FLT_L02
   1988    000000                  EXTERN  ?F_SHIFT_LEFT_L02
   1989    000000                  EXTERN  ?F_0_SUB_L02
   1990    000000          
   1991    000000          ?R4567_INT_TO_FLT_L02:
   1992    000000 ED               MOV     A,R5
   1993    000001 33               RLC     A
   1994    000002 95E0             SUBB    A,ACC
   1995    000004 FE               MOV     R6,A
   1996    000005 FF               MOV     R7,A
   1997    000006          ?R4567_LONG_TO_FLT_L02:
   1998    000006 EF               MOV     A,R7            ; If not TOS is
                                                            negative goto
                                                            unsigned
   1999    000007 30E707           JNB     ACC.7,?R4567_ULONG_TO_FLT_L02
   2000    00000A          
   2001    00000A D2D5             SETB    F0              ; else change sign
                                                            of TOS. (signbit =
                                                            1)
   2002    00000C 12....           LCALL   ?F_0_SUB_L02
   2003    00000F 8002             SJMP    CAST
   2004    000011          
   2005    000011          ?R4567_ULONG_TO_FLT_L02:
   2006    000011 C2D5             CLR     F0              ; B.0 (signbit) is
                                                            assumed to be
                                                            zero.
   2007    000013          ;
   2008    000013          ; Cast TOS to float
   2009    000013          ;
   2010    000013          
   2011    000013          CAST:
   2012    000013 EF               MOV     A,R7            ; If TOS is zero
                                                            then return.
   2013    000014 4E               ORL     A,R6
   2014    000015 4D               ORL     A,R5
   2015    000016 4C               ORL     A,R4
   2016    000017 7001             JNZ     NOZERO
   2017    000019 22               RET     
   2018    00001A          
   2019    00001A          NOZERO:
   2020    00001A 75F096           MOV     B,#(127 + 23)           ; Startvalue
                                                                    for Exp (
                                                                    7FH + 17H
                                                                    )
   2021    00001D EF               MOV     A,R7
   2022    00001E 700E             JNZ     SHIFT_RIGHT             ; High byte
                                                                    is not
                                                                    zero,
                                                                    shift
   2023    000020                                                  ; right it
                            is
   2024    000020 EE               MOV     A,R6
   2025    000021 20E71C           JB      ACC.7,FIX_EXP           ; Oh, it is
                                                                    already
                                                                    OK!
   2026    000024          ;
   2027    000024          ; Shift mantissa left until bit 23 = 1
   2028    000024          ;
   2029    000024          
   2030    000024          SHIFT_LEFT:
   2031    000024 15F0             DEC     B                       ; Decrement
                                                                    exponent
   2032    000026 12....           LCALL   ?F_SHIFT_LEFT_L02
   2033    000029 30E7F8           JNB     ACC.7,SHIFT_LEFT
   2034    00002C 8012             SJMP    FIX_EXP
   2035    00002E          ;
   2036    00002E          ; Shift mantissa right until bit (24 - 31) =
                            0
   2037    00002E          ;
   2038    00002E          
   2039    00002E          SHIFT_RIGHT:
   2040    00002E EF               MOV     A,R7
   2041    00002F          SHIFT_RIGHT2:
   2042    00002F 05F0             INC     B
   2043    000031 C3               CLR     C
   2044    000032 13               RRC     A
   2045    000033 FF               MOV     R7,A
   2046    000034 EE               MOV     A,R6
   2047    000035 13               RRC     A
   2048    000036 FE               MOV     R6,A
   2049    000037 ED               MOV     A,R5
   2050    000038 13               RRC     A
   2051    000039 FD               MOV     R5,A
   2052    00003A EC               MOV     A,R4
   2053    00003B 13               RRC     A
   2054    00003C FC               MOV     R4,A
   2055    00003D EF               MOV     A,R7
   2056    00003E 70EF             JNZ     SHIFT_RIGHT2
   2057    000040          
   2058    000040          FIX_EXP:
   2059    000040 A2D5             MOV     C,F0                    ; Sign into
                                                                    C
   2060    000042 E5F0             MOV     A,B
   2061    000044 13               RRC     A
   2062    000045 FF               MOV     R7,A
   2063    000046 EE               MOV     A,R6
   2064    000047 92E7             MOV     ACC.7,C
   2065    000049 FE               MOV     R6,A
   2066    00004A 4401             ORL     A,#1                    ; We know
                                                                    that it is
                                                                    not
                                                                    zero
   2067    00004C 22               RET
   2068    00004D          
   2069    00004D                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_0_SUB_L02        ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_SHIFT_LEFT_L02   ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?R4567_INT_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      0 
?R4567_LONG_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      6 
?R4567_ULONG_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      11 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CAST                REL    CONST UNTYP.           RCODE      13 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FIX_EXP             REL    CONST UNTYP.           RCODE      40 
NOZERO              REL    CONST UNTYP.           RCODE      1A 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SHIFT_LEFT          REL    CONST UNTYP.           RCODE      24 
SHIFT_RIGHT         REL    CONST UNTYP.           RCODE      2E 
SHIFT_RIGHT2        REL    CONST UNTYP.           RCODE      2F 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:5D76          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 77          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2070    000000          
   2071    000000          ;---------------------------------------------------
                           --------------------------
   2072    000000          ;
   2073    000000          ;       Function(s):    Cast a signed or unsigned
                            long integer operand to a 
   2074    000000          ;                       floating point number.
   2075    000000          ;
   2076    000000          ;       Description:    Cast a signed or unsigned
                            long integer operand to a 
   2077    000000          ;                       floating point number in
                            IEEE format. The result is 
   2078    000000          ;                       left in TOS.
   2079    000000          ;                       Zero-flag will be set if and
                            only if the result is 
   2080    000000          ;                       zero.
   2081    000000          ;
   2082    000000          ;       Algoritm:       SL_TO_FLOAT:
   2083    000000          ;                               result mantissa =
                            TOS mantissa
   2084    000000          ;                               RESS = TOSS
   2085    000000          ;                               if (TOSS == '-')
                            two_complement(TOS)
   2086    000000          ;                               JMP CAST
   2087    000000          ;
   2088    000000          ;                       UL_TO_FLOAT:
   2089    000000          ;                               result mantissa =
                            TOS mantissa
   2090    000000          ;                               RESS = 0            
                               ; '+'
   2091    000000          ;
   2092    000000          ;                       CAST:
   2093    000000          ;                               if (TOS == 0)
                            return(+0)
   2094    000000          ;                               result exp = #$7F +
                            31
   2095    000000          ;                               while ((res man &
                            #$80000000) == 0) {
   2096    000000          ;                                       Shift
                            left(result mantissa)
   2097    000000          ;                                       decrement
                            result exp
   2098    000000          ;                               }
   2099    000000          ;
   2100    000000          ;       Created:        21/Sep/90       IMAF   
                            [Rewritten]
   2101    000000          ;
   2102    000000          ;       Input : R0:R3                   Longword you
                            want to cast (TOS).
   2103    000000          ;               
   2104    000000          ;       Output: R0:R3                   Casted
                            TOS
   2105    000000          ;               A                       Ceared when
                            result is zero, else set
   2106    000000          ;        
   2107    000000          ;---------------------------------------------------
                           ------------------------
   2108    000000          
   2109    000000                  MODULE  ?UCHAR_TO_FLT_R_L02
   2110    000000                  RSEG    RCODE:CODE:NOROOT
   2111    000000                  PUBLIC  ?R0123_UCHAR_TO_FLT_L02
   2112    000000                  EXTERN  ?R0123_ULONG_TO_FLT_L02
   2113    000000          ?R0123_UCHAR_TO_FLT_L02:
   2114    000000 F8               MOV     R0,A
   2115    000001 E4               CLR     A
   2116    000002 F9               MOV     R1,A
   2117    000003 FA               MOV     R2,A
   2118    000004 FB               MOV     R3,A
   2119    000005                  IF      lcall_mode
   2120    000005 02....           LJMP    ?R0123_ULONG_TO_FLT_L02
   2121    000008                  ELSE
   2122    000008                  SJMP    ?R0123_ULONG_TO_FLT_L02
   2123    000008                  ENDIF
   2124    000008                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?R0123_UCHAR_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      0 
?R0123_ULONG_TO_FLT_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:F473          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 8          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2125    000000          
   2126    000000                  MODULE  ?UINT_TO_FLT_R_L02
   2127    000000                  RSEG    RCODE:CODE:NOROOT
   2128    000000                  PUBLIC  ?R0123_UINT_TO_FLT_L02
   2129    000000                  EXTERN  ?R0123_ULONG_TO_FLT_L02
   2130    000000          ?R0123_UINT_TO_FLT_L02:
   2131    000000 E4               CLR     A
   2132    000001 FA               MOV     R2,A
   2133    000002 FB               MOV     R3,A
   2134    000003                  IF      lcall_mode
   2135    000003 02....           LJMP    ?R0123_ULONG_TO_FLT_L02
   2136    000006                  ELSE
   2137    000006                  SJMP    ?R0123_ULONG_TO_FLT_L02
   2138    000006                  ENDIF
   2139    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?R0123_UINT_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      0 
?R0123_ULONG_TO_FLT_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:DF97          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2140    000000          
   2141    000000                  MODULE  ?CHAR_TO_FLT_R_L02
   2142    000000                  RSEG    RCODE:CODE:NOROOT
   2143    000000                  PUBLIC  ?R0123_CHAR_TO_FLT_L02
   2144    000000                  EXTERN  ?R0123_LONG_TO_FLT_L02
   2145    000000          ?R0123_CHAR_TO_FLT_L02:
   2146    000000 F8               MOV     R0,A
   2147    000001 33               RLC     A
   2148    000002 95E0             SUBB    A,ACC
   2149    000004 F9               MOV     R1,A
   2150    000005 FA               MOV     R2,A
   2151    000006 FB               MOV     R3,A
   2152    000007                  IF      lcall_mode
   2153    000007 02....           LJMP    ?R0123_LONG_TO_FLT_L02
   2154    00000A                  ELSE
   2155    00000A                  SJMP    ?R0123_LONG_TO_FLT_L02
   2156    00000A                  ENDIF
   2157    00000A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?R0123_CHAR_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      0 
?R0123_LONG_TO_FLT_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:B07C          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 10          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2158    000000          
   2159    000000                  MODULE  ?LONG_TO_FLT_R_L02              ;
                            Can be replaced
   2160    000000                  RSEG    RCODE:CODE:NOROOT
   2161    000000                  PUBLIC  ?R0123_INT_TO_FLT_L02
   2162    000000                  PUBLIC  ?R0123_LONG_TO_FLT_L02
   2163    000000                  PUBLIC  ?R0123_ULONG_TO_FLT_L02
   2164    000000          
   2165    000000          ?R0123_INT_TO_FLT_L02:
   2166    000000 E9               MOV     A,R1
   2167    000001 33               RLC     A
   2168    000002 95E0             SUBB    A,ACC
   2169    000004 FA               MOV     R2,A
   2170    000005 FB               MOV     R3,A
   2171    000006          ?R0123_LONG_TO_FLT_L02:
   2172    000006 EB               MOV     A,R3            ; If not TOS is
                                                            negative goto
                                                            unsigned
   2173    000007 30E711           JNB     ACC.7,?R0123_ULONG_TO_FLT_L02
   2174    00000A          
   2175    00000A D2D5             SETB    F0              ; else change sign
                                                            of TOS. (signbit =
                                                            1)
   2176    00000C C3               CLR     C
   2177    00000D E4               CLR     A
   2178    00000E 98               SUBB    A,R0
   2179    00000F F8               MOV     R0,A
   2180    000010 E4               CLR     A
   2181    000011 99               SUBB    A,R1
   2182    000012 F9               MOV     R1,A
   2183    000013 E4               CLR     A
   2184    000014 9A               SUBB    A,R2
   2185    000015 FA               MOV     R2,A
   2186    000016 E4               CLR     A
   2187    000017 9B               SUBB    A,R3
   2188    000018 FB               MOV     R3,A
   2189    000019 8002             SJMP    CAST
   2190    00001B          
   2191    00001B          ?R0123_ULONG_TO_FLT_L02:
   2192    00001B C2D5             CLR     F0              ; B.0 (signbit) is
                                                            assumed to be
                                                            zero.
   2193    00001D          ;
   2194    00001D          ; Cast TOS to float
   2195    00001D          ;
   2196    00001D          
   2197    00001D          CAST:
   2198    00001D EB               MOV     A,R3            ; If TOS is zero
                                                            then return.
   2199    00001E 4A               ORL     A,R2
   2200    00001F 49               ORL     A,R1
   2201    000020 48               ORL     A,R0
   2202    000021 7001             JNZ     NOZERO
   2203    000023 22               RET     
   2204    000024          
   2205    000024          NOZERO:
   2206    000024 75F096           MOV     B,#(127 + 23)           ; Startvalue
                                                                    for Exp (
                                                                    7FH + 17H
                                                                    )
   2207    000027 EB               MOV     A,R3
   2208    000028 7018             JNZ     SHIFT_RIGHT             ; High byte
                                                                    is not
                                                                    zero,
                                                                    shift
   2209    00002A                                                  ; right it
                            is
   2210    00002A EA               MOV     A,R2
   2211    00002B 20E726           JB      ACC.7,FIX_EXP           ; Oh, it is
                                                                    already
                                                                    OK!
   2212    00002E          ;
   2213    00002E          ; Shift mantissa left until bit 23 = 1
   2214    00002E          ;
   2215    00002E          
   2216    00002E          SHIFT_LEFT:
   2217    00002E 15F0             DEC     B                       ; Decrement
                                                                    exponent
   2218    000030 C3               CLR     C
   2219    000031 EB               MOV     A,R3
   2220    000032 33               RLC     A
   2221    000033 FB               MOV     R3,A
   2222    000034 E8               MOV     A,R0
   2223    000035 33               RLC     A
   2224    000036 F8               MOV     R0,A
   2225    000037 E9               MOV     A,R1
   2226    000038 33               RLC     A
   2227    000039 F9               MOV     R1,A
   2228    00003A EA               MOV     A,R2
   2229    00003B 33               RLC     A
   2230    00003C FA               MOV     R2,A
   2231    00003D 30E7EE           JNB     ACC.7,SHIFT_LEFT
   2232    000040 8012             SJMP    FIX_EXP
   2233    000042          ;
   2234    000042          ; Shift mantissa right until bit (24 - 31) =
                            0
   2235    000042          ;
   2236    000042          
   2237    000042          SHIFT_RIGHT:
   2238    000042 EB               MOV     A,R3
   2239    000043          SHIFT_RIGHT2:
   2240    000043 05F0             INC     B
   2241    000045 C3               CLR     C
   2242    000046 13               RRC     A
   2243    000047 FB               MOV     R3,A
   2244    000048 EA               MOV     A,R2
   2245    000049 13               RRC     A
   2246    00004A FA               MOV     R2,A
   2247    00004B E9               MOV     A,R1
   2248    00004C 13               RRC     A
   2249    00004D F9               MOV     R1,A
   2250    00004E E8               MOV     A,R0
   2251    00004F 13               RRC     A
   2252    000050 F8               MOV     R0,A
   2253    000051 EB               MOV     A,R3
   2254    000052 70EF             JNZ     SHIFT_RIGHT2
   2255    000054          
   2256    000054          FIX_EXP:
   2257    000054 A2D5             MOV     C,F0                    ; Sign into
                                                                    C
   2258    000056 E5F0             MOV     A,B
   2259    000058 13               RRC     A
   2260    000059 FB               MOV     R3,A
   2261    00005A EA               MOV     A,R2
   2262    00005B 92E7             MOV     ACC.7,C
   2263    00005D FA               MOV     R2,A
   2264    00005E 4401             ORL     A,#1                    ; We know
                                                                    that it is
                                                                    not
                                                                    zero
   2265    000060 22               RET
   2266    000061          
   2267    000061                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?R0123_INT_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      0 
?R0123_LONG_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      6 
?R0123_ULONG_TO_FLT_L02REL    CONST PUB UNTYP.       RCODE      1B 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
CAST                REL    CONST UNTYP.           RCODE      1D 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FIX_EXP             REL    CONST UNTYP.           RCODE      54 
NOZERO              REL    CONST UNTYP.           RCODE      24 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SHIFT_LEFT          REL    CONST UNTYP.           RCODE      2E 
SHIFT_RIGHT         REL    CONST UNTYP.           RCODE      42 
SHIFT_RIGHT2        REL    CONST UNTYP.           RCODE      43 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:89F1          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 97          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2268    000000          
   2269    000000          ;---------------------------------------------------
                           --------------------------
   2270    000000          ;
   2271    000000          ;       Function:       Float compare
   2272    000000          ;
   2273    000000          ;       Created:        07/Jun/90 IANR
   2274    000000          ;       Revised:        02/Oct/90 IANR [Bug fix in
                            != and ==]
   2275    000000          ;
   2276    000000          ;
   2277    000000          ;       Input:  R4:R7           32 bit IEEE
                            NOS
   2278    000000          ;               R0:R3           32 bit IEEE
                            TOS
   2279    000000          ;               ACC             Operation code:
   2280    000000          ;
   2281    000000          ;                               ACC.1 = Look on
                            carry
   2282    000000          ;                               ACC.2 = Look on
                            zero
   2283    000000          ;                               ACC.3 = Reverse
                            condition
   2284    000000          ;
   2285    000000          ;                               >   1110
   2286    000000          ;                               >=  1010
   2287    000000          ;                               ==  0100
   2288    000000          ;                               !=  1100
   2289    000000          ;                               <   0010
   2290    000000          ;                               <=  0110
   2291    000000          ;               
   2292    000000          ;               ACC             1 if NOS op TOS,
                            otherwise 0
   2293    000000          ;
   2294    000000          ;       Description:    This routine performs
                            'float' relational tests.
   2295    000000          ;
   2296    000000          ;---------------------------------------------------
                           --------------------------
   2297    000000          
   2298    000000                  MODULE  ?F_CMP_CLR_L02
   2299    000000                  RSEG    RCODE:CODE:NOROOT
   2300    000000                  PUBLIC  ?F_CMP_CLR_L02
   2301    000000                  EXTERN  ?F_CMP_L02
   2302    000000          ?F_CMP_CLR_L02:
   2303    000000 7800             MOV     R0,#0
   2304    000002 7900             MOV     R1,#0
   2305    000004                  IF      lcall_mode
   2306    000004 02....           LJMP    ?F_CMP_L02
   2307    000007                  ELSE
   2308    000007                  SJMP    ?F_CMP_L02
   2309    000007                  ENDIF
   2310    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_CMP_CLR_L02      REL    CONST PUB UNTYP.       RCODE      0 
?F_CMP_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:5E66          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2311    000000          
   2312    000000                  MODULE  ?F_CMP_L02
   2313    000000                  PUBLIC  ?F_CMP_R_CLR_L02
   2314    000000                  PUBLIC  ?F_CMP_L02
   2315    000000                  RSEG    RCODE:CODE:NOROOT
   2316    000000          
   2317    000000          ?F_CMP_R_CLR_L02:
   2318    000000 7C00             MOV     R4,#0
   2319    000002 7D00             MOV     R5,#0
   2320    000004          POS_TOS:
   2321    000004          
   2322    000004          NEG_TOS:
   2323    000004          
   2324    000004          ?F_CMP_L02:
   2325    000004 F5F0             MOV     B,A
   2326    000006 C3               CLR     C
   2327    000007 EF               MOV     A,R7
   2328    000008 20E706           JB      ACC.7,NOT_POS_TOS
   2329    00000B EB               MOV     A,R3
   2330    00000C 30E714           JNB     ACC.7,POS_TOS_NOS
   2331    00000F 8034             SJMP    SET_DIRECT
   2332    000011          NOT_POS_TOS:
   2333    000011 EB               MOV     A,R3
   2334    000012 20E704           JB      ACC.7,NOT_NEG_TOS
   2335    000015 F4               CPL     A
   2336    000016 D3               SETB    C
   2337    000017 802C             SJMP    SET_DIRECT
   2338    000019          NOT_NEG_TOS:
   2339    000019 30F103           JNB     B.1,NOT_MAGNITUDE
   2340    00001C 63F00C           XRL     B,#1100B        ; Both negative -
                                                            Clear MSB's and
                                                            reverse op
   2341    00001F          NOT_MAGNITUDE:
   2342    00001F EB               MOV     A,R3
   2343    000020 547F             ANL     A,#7FH
   2344    000022 FB               MOV     R3,A
   2345    000023          POS_TOS_NOS:
   2346    000023                                          ; Here is a fix for
                            4.21
   2347    000023 EF               MOV     A,R7            ; Check if first
                                                            float is zero
   2348    000024 4E               ORL     A,R6
   2349    000025 7002             JNZ     L1
   2350    000027 FC               MOV     R4,A
   2351    000028 FD               MOV     R5,A
   2352    000029 EB       L1:     MOV     A,R3            ; Check if second
                                                            float is zero
   2353    00002A 4A               ORL     A,R2
   2354    00002B 7002             JNZ     L2
   2355    00002D F8               MOV     R0,A
   2356    00002E F9               MOV     R1,A
   2357    00002F EC       L2:     MOV     A,R4
   2358    000030 98               SUBB    A,R0
   2359    000031 A8F0             MOV     R0,B
   2360    000033 F5F0             MOV     B,A
   2361    000035 ED               MOV     A,R5
   2362    000036 99               SUBB    A,R1
   2363    000037 42F0             ORL     B,A
   2364    000039 EE               MOV     A,R6
   2365    00003A 9A               SUBB    A,R2
   2366    00003B 42F0             ORL     B,A
   2367    00003D EF               MOV     A,R7
   2368    00003E 547F             ANL     A,#7FH
   2369    000040 9B               SUBB    A,R3
   2370    000041 45F0             ORL     A,B
   2371    000043 88F0             MOV     B,R0
   2372    000045          SET_DIRECT:
   2373    000045 82F1             ANL     C,B.1           ; If carry is
                                                            important PRESERVE
                                                            else CLEAR
   2374    000047 30F203           JNB     B.2,NO_ZERO_CHECK
   2375    00004A 7001             JNZ     NO_ZERO_CHECK
   2376    00004C D3               SETB    C
   2377    00004D          NO_ZERO_CHECK:
   2378    00004D 30F301           JNB     B.3,NO_REVERSE
   2379    000050 B3               CPL     C
   2380    000051          NO_REVERSE:
   2381    000051 E4               CLR     A
   2382    000052 33               RLC     A
   2383    000053          
   2384    000053 22               RET
   2385    000054          
   2386    000054                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_CMP_L02          REL    CONST PUB UNTYP.       RCODE      4 
?F_CMP_R_CLR_L02    REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
L1                  REL    CONST UNTYP.           RCODE      29 
L2                  REL    CONST UNTYP.           RCODE      2F 
NEG_TOS             REL    CONST UNTYP.           RCODE      4 
NOT_MAGNITUDE       REL    CONST UNTYP.           RCODE      1F 
NOT_NEG_TOS         REL    CONST UNTYP.           RCODE      19 
NOT_POS_TOS         REL    CONST UNTYP.           RCODE      11 
NO_REVERSE          REL    CONST UNTYP.           RCODE      51 
NO_ZERO_CHECK       REL    CONST UNTYP.           RCODE      4D 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
POS_TOS             REL    CONST UNTYP.           RCODE      4 
POS_TOS_NOS         REL    CONST UNTYP.           RCODE      23 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SET_DIRECT          REL    CONST UNTYP.           RCODE      45 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:F142          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 84          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2387    000000          
   2388    000000          
   2389    000000                  MODULE  ?F_ADD_ASG_R123_R4567_L02       ;
                            Input: R123, R4567
   2390    000000                  RSEG    RCODE:CODE:NOROOT       
   2391    000000                  PUBLIC  ?F_ADD_ASG_R123_R4567_L02
   2392    000000                  EXTERN  ?F_OPERATION_R123_L02
   2393    000000          
   2394    000000          ?F_ADD_ASG_R123_R4567_L02:
   2395    000000 75F000           MOV     B,#00H
   2396    000003                  IF      lcall_mode
   2397    000003 02....           LJMP    ?F_OPERATION_R123_L02
   2398    000006                  ELSE
   2399    000006                  SJMP    ?F_OPERATION_R123_L02
   2400    000006                  ENDIF
   2401    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_R123_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:9FD2          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2402    000000          
   2403    000000                  MODULE  ?F_SUB_ASG_R123_R4567_L02
   2404    000000                  RSEG    RCODE:CODE:NOROOT       
   2405    000000                  PUBLIC  ?F_SUB_ASG_R123_R4567_L02
   2406    000000                  EXTERN  ?F_OPERATION_R123_L02
   2407    000000          
   2408    000000          ?F_SUB_ASG_R123_R4567_L02:
   2409    000000 75F010           MOV     B,#010H
   2410    000003                  IF      lcall_mode
   2411    000003 02....           LJMP    ?F_OPERATION_R123_L02
   2412    000006                  ELSE
   2413    000006                  SJMP    ?F_OPERATION_R123_L02
   2414    000006                  ENDIF
   2415    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_R123_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_R123_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:BD73          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2416    000000          
   2417    000000                  MODULE  ?F_MUL_ASG_R123_R4567_L02
   2418    000000                  RSEG    RCODE:CODE:NOROOT       
   2419    000000                  PUBLIC  ?F_MUL_ASG_R123_R4567_L02
   2420    000000                  EXTERN  ?F_OPERATION_R123_L02
   2421    000000          
   2422    000000          ?F_MUL_ASG_R123_R4567_L02:
   2423    000000 75F020           MOV     B,#020H
   2424    000003                  IF      lcall_mode
   2425    000003 02....           LJMP    ?F_OPERATION_R123_L02
   2426    000006                  ELSE
   2427    000006                  SJMP    ?F_OPERATION_R123_L02
   2428    000006                  ENDIF
   2429    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_R123_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:8A6B          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2430    000000          
   2431    000000                  MODULE  ?F_DIV_ASG_R123_R4567_L02
   2432    000000                  RSEG    RCODE:CODE:NOROOT       
   2433    000000                  PUBLIC  ?F_DIV_ASG_R123_R4567_L02
   2434    000000                  EXTERN  ?F_OPERATION_R123_L02
   2435    000000          
   2436    000000          ?F_DIV_ASG_R123_R4567_L02:
   2437    000000 75F030           MOV     B,#030H
   2438    000003                  IF      lcall_mode
   2439    000003 02....           LJMP    ?F_OPERATION_R123_L02
   2440    000006                  ELSE
   2441    000006                  SJMP    ?F_OPERATION_R123_L02
   2442    000006                  ENDIF
   2443    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_R123_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:34A8          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2444    000000          
   2445    000000                  MODULE  ?F_ADD_POST_R123_R4567_L02
   2446    000000                  RSEG    RCODE:CODE:NOROOT       
   2447    000000                  PUBLIC  ?F_ADD_POST_R123_R4567_L02
   2448    000000                  EXTERN  ?F_OPERATION_R123_L02
   2449    000000          
   2450    000000          ?F_ADD_POST_R123_R4567_L02:
   2451    000000 75F048           MOV     B,#048H
   2452    000003 FC               MOV     R4,A
   2453    000004                  IF      lcall_mode
   2454    000004 02....           LJMP    ?F_OPERATION_R123_L02
   2455    000007                  ELSE
   2456    000007                  SJMP    ?F_OPERATION_R123_L02
   2457    000007                  ENDIF
   2458    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R123_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:49DA          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2459    000000          
   2460    000000                  MODULE  ?F_OPERATION_R123_L02           ;
                            Input: R123, R4567, B
   2461    000000                  RSEG    RCODE:CODE:NOROOT       
   2462    000000                  PUBLIC  ?F_NEG_ASG_R123_R4567_L02
   2463    000000                  PUBLIC  ?F_OPERATION_R123_L02
   2464    000000                  EXTERN  ?F_OPERATION_L02
   2465    000000                  EXTERN  ?F_OPERATION_R1_L02
   2466    000000                  EXTERN  ?F_OPERATION_DPTR1_L02
   2467    000000                  EXTERN  ?F_OPERATION_PR1_L02
   2468    000000          
   2469    000000          ?F_NEG_ASG_R123_R4567_L02:
   2470    000000 75F050           MOV     B,#050H
   2471    000003          ?F_OPERATION_R123_L02:
   2472    000003 BB0006           CJNE    R3,#0,NOT_IDATA
   2473    000006 43F001           ORL     B,#1
   2474    000009                  IF      lcall_mode
   2475    000009 02....           LJMP    ?F_OPERATION_R1_L02
   2476    00000C                  ELSE
   2477    00000C                  AJMP    ?F_OPERATION_R1_L02
   2478    00000C                  ENDIF
   2479    00000C          NOT_IDATA:
   2480    00000C BB010A           CJNE    R3,#1,NOT_XDATA
   2481    00000F 43F004           ORL     B,#4
   2482    000012 8982             MOV     DPL,R1
   2483    000014 8A83             MOV     DPH,R2
   2484    000016                  IF      lcall_mode
   2485    000016 02....           LJMP    ?F_OPERATION_DPTR1_L02
   2486    000019                  ELSE
   2487    000019                  AJMP    ?F_OPERATION_DPTR1_L02
   2488    000019                  ENDIF
   2489    000019          NOT_XDATA:
   2490    000019 43F002           ORL     B,#2            ; We assume
                                                            PDATA
   2491    00001C                  IF      lcall_mode
   2492    00001C 02....           LJMP    ?F_OPERATION_PR1_L02
   2493    00001F                  ELSE
   2494    00001F                  AJMP    ?F_OPERATION_PR1_L02
   2495    00001F                  ENDIF
   2496    00001F                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_NEG_ASG_R123_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR1_L02ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_L02    ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_PR1_L02ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_R123_L02REL    CONST PUB UNTYP.       RCODE      3 
?F_OPERATION_R1_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOT_IDATA           REL    CONST UNTYP.           RCODE      C 
NOT_XDATA           REL    CONST UNTYP.           RCODE      19 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:5C25          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 31          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2497    000000          
   2498    000000          
   2499    000000                  MODULE  ?F_ADD_ASG_R123_R4567_DISP_L02  ;
                            Input: R123+DPTR,R4567
   2500    000000                  RSEG    RCODE:CODE:NOROOT       
   2501    000000                  PUBLIC  ?F_ADD_ASG_R123_R4567_DISP_L02
   2502    000000                  EXTERN  ?F_OPERATION_R123_DISP_L02
   2503    000000          
   2504    000000          ?F_ADD_ASG_R123_R4567_DISP_L02:
   2505    000000 75F000           MOV     B,#00H
   2506    000003                  IF      lcall_mode
   2507    000003 02....           LJMP    ?F_OPERATION_R123_DISP_L02
   2508    000006                  ELSE
   2509    000006                  SJMP    ?F_OPERATION_R123_DISP_L02
   2510    000006                  ENDIF
   2511    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_R123_R4567_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:559C          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2512    000000          
   2513    000000                  MODULE  ?F_SUB_ASG_R123_R4567_DISP_L02
   2514    000000                  RSEG    RCODE:CODE:NOROOT       
   2515    000000                  PUBLIC  ?F_SUB_ASG_R123_R4567_DISP_L02
   2516    000000                  EXTERN  ?F_OPERATION_R123_DISP_L02
   2517    000000          
   2518    000000          ?F_SUB_ASG_R123_R4567_DISP_L02:
   2519    000000 75F010           MOV     B,#010H
   2520    000003                  IF      lcall_mode
   2521    000003 02....           LJMP    ?F_OPERATION_R123_DISP_L02
   2522    000006                  ELSE
   2523    000006                  SJMP    ?F_OPERATION_R123_DISP_L02
   2524    000006                  ENDIF
   2525    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_R123_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_R123_R4567_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:79C1          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2526    000000          
   2527    000000                  MODULE  ?F_MUL_ASG_R123_R4567_DISP_L02
   2528    000000                  RSEG    RCODE:CODE:NOROOT       
   2529    000000                  PUBLIC  ?F_MUL_ASG_R123_R4567_DISP_L02
   2530    000000                  EXTERN  ?F_OPERATION_R123_DISP_L02
   2531    000000          
   2532    000000          ?F_MUL_ASG_R123_R4567_DISP_L02:
   2533    000000 75F020           MOV     B,#020H
   2534    000003                  IF      lcall_mode
   2535    000003 02....           LJMP    ?F_OPERATION_R123_DISP_L02
   2536    000006                  ELSE
   2537    000006                  SJMP    ?F_OPERATION_R123_DISP_L02
   2538    000006                  ENDIF
   2539    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_R123_R4567_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:B4B8          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2540    000000          
   2541    000000                  MODULE  ?F_DIV_ASG_R123_R4567_DISP_L02
   2542    000000                  RSEG    RCODE:CODE:NOROOT       
   2543    000000                  PUBLIC  ?F_DIV_ASG_R123_R4567_DISP_L02
   2544    000000                  EXTERN  ?F_OPERATION_R123_DISP_L02
   2545    000000          
   2546    000000          ?F_DIV_ASG_R123_R4567_DISP_L02:
   2547    000000 75F030           MOV     B,#030H
   2548    000003                  IF      lcall_mode
   2549    000003 02....           LJMP    ?F_OPERATION_R123_DISP_L02
   2550    000006                  ELSE
   2551    000006                  SJMP    ?F_OPERATION_R123_DISP_L02
   2552    000006                  ENDIF
   2553    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_R123_R4567_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:C4D3          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2554    000000          
   2555    000000                  MODULE  ?F_ADD_POST_R123_R4567_DISP_L02
   2556    000000                  RSEG    RCODE:CODE:NOROOT       
   2557    000000                  PUBLIC  ?F_ADD_POST_R123_R4567_DISP_L02
   2558    000000                  EXTERN  ?F_OPERATION_R123_DISP_L02
   2559    000000          
   2560    000000          ?F_ADD_POST_R123_R4567_DISP_L02:
   2561    000000 75F048           MOV     B,#048H
   2562    000003 FC               MOV     R4,A
   2563    000004                  IF      lcall_mode
   2564    000004 02....           LJMP    ?F_OPERATION_R123_DISP_L02
   2565    000007                  ELSE
   2566    000007                  SJMP    ?F_OPERATION_R123_DISP_L02
   2567    000007                  ENDIF
   2568    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R123_R4567_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:2B63          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2569    000000          
   2570    000000                  MODULE  ?F_OPERATION_R123_DISP_L02      ;
                            Input: R123+DPTR, R4567,B
   2571    000000                  RSEG    RCODE:CODE:NOROOT       
   2572    000000                  PUBLIC  ?F_NEG_ASG_R123_R4567_DISP_L02
   2573    000000                  PUBLIC  ?F_OPERATION_R123_DISP_L02
   2574    000000                  EXTERN  ?F_OPERATION_L02
   2575    000000                  EXTERN  ?F_OPERATION_R0_L02
   2576    000000                  EXTERN  ?F_OPERATION_DPTR1_L02
   2577    000000                  EXTERN  ?F_OPERATION_PR0_L02
   2578    000000          
   2579    000000          ?F_NEG_ASG_R123_R4567_DISP_L02:
   2580    000000 75F050           MOV     B,#050H
   2581    000003          ?F_OPERATION_R123_DISP_L02:
   2582    000003 BB000A           CJNE    R3,#0,NOT_IDATA
   2583    000006 E9               MOV     A,R1
   2584    000007 2582             ADD     A,DPL
   2585    000009 F8               MOV     R0,A
   2586    00000A 43F001           ORL     B,#1
   2587    00000D                  IF      lcall_mode
   2588    00000D 02....           LJMP    ?F_OPERATION_R0_L02
   2589    000010                  ELSE
   2590    000010                  AJMP    ?F_OPERATION_R0_L02
   2591    000010                  ENDIF
   2592    000010          NOT_IDATA:
   2593    000010 BB0110           CJNE    R3,#1,NOT_XDATA
   2594    000013 43F004           ORL     B,#4
   2595    000016 E9               MOV     A,R1
   2596    000017 2582             ADD     A,DPL
   2597    000019 F582             MOV     DPL,A
   2598    00001B EA               MOV     A,R2
   2599    00001C 3583             ADDC    A,DPH
   2600    00001E F583             MOV     DPH,A
   2601    000020                  IF      lcall_mode
   2602    000020 02....           LJMP    ?F_OPERATION_DPTR1_L02
   2603    000023                  ELSE
   2604    000023                  AJMP    ?F_OPERATION_DPTR1_L02
   2605    000023                  ENDIF
   2606    000023          NOT_XDATA:
   2607    000023 43F002           ORL     B,#2            ; We assume
                                                            PDATA
   2608    000026 E9               MOV     A,R1
   2609    000027 2582             ADD     A,DPL
   2610    000029 F8               MOV     R0,A
   2611    00002A                  IF      lcall_mode
   2612    00002A 02....           LJMP    ?F_OPERATION_PR0_L02
   2613    00002D                  ELSE
   2614    00002D                  AJMP    ?F_OPERATION_PR0_L02
   2615    00002D                  ENDIF
   2616    00002D                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_NEG_ASG_R123_R4567_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR1_L02ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_L02    ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_PR0_L02ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_R0_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_R123_DISP_L02REL    CONST PUB UNTYP.       RCODE      3 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOT_IDATA           REL    CONST UNTYP.           RCODE      10 
NOT_XDATA           REL    CONST UNTYP.           RCODE      23 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:EB41          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 45          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2617    000000          
   2618    000000          
   2619    000000                  MODULE  ?F_ADD_ASG_R567_R0123_L02       ;
                            Input: R567, R0123
   2620    000000                  RSEG    RCODE:CODE:NOROOT       
   2621    000000                  PUBLIC  ?F_ADD_ASG_R567_R0123_L02
   2622    000000                  EXTERN  ?F_OPERATION_R567_L02
   2623    000000          
   2624    000000          ?F_ADD_ASG_R567_R0123_L02:
   2625    000000 75F004           MOV     B,#04H
   2626    000003                  IF      lcall_mode
   2627    000003 02....           LJMP    ?F_OPERATION_R567_L02
   2628    000006                  ELSE
   2629    000006                  SJMP    ?F_OPERATION_R567_L02
   2630    000006                  ENDIF
   2631    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_R567_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R567_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:F3CF          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2632    000000          
   2633    000000                  MODULE  ?F_SUB_ASG_R567_R0123_L02
   2634    000000                  RSEG    RCODE:CODE:NOROOT       
   2635    000000                  PUBLIC  ?F_SUB_ASG_R567_R0123_L02
   2636    000000                  EXTERN  ?F_OPERATION_R567_L02
   2637    000000          
   2638    000000          ?F_SUB_ASG_R567_R0123_L02:
   2639    000000 75F010           MOV     B,#010H
   2640    000003                  IF      lcall_mode
   2641    000003 02....           LJMP    ?F_OPERATION_R567_L02
   2642    000006                  ELSE
   2643    000006                  SJMP    ?F_OPERATION_R567_L02
   2644    000006                  ENDIF
   2645    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_R567_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_R567_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:534E          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2646    000000          
   2647    000000                  MODULE  ?F_MUL_ASG_R567_R0123_L02
   2648    000000                  RSEG    RCODE:CODE:NOROOT       
   2649    000000                  PUBLIC  ?F_MUL_ASG_R567_R0123_L02
   2650    000000                  EXTERN  ?F_OPERATION_R567_L02
   2651    000000          
   2652    000000          ?F_MUL_ASG_R567_R0123_L02:
   2653    000000 75F020           MOV     B,#020H
   2654    000003                  IF      lcall_mode
   2655    000003 02....           LJMP    ?F_OPERATION_R567_L02
   2656    000006                  ELSE
   2657    000006                  SJMP    ?F_OPERATION_R567_L02
   2658    000006                  ENDIF
   2659    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_R567_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R567_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:75C8          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2660    000000          
   2661    000000                  MODULE  ?F_DIV_ASG_R567_R0123_L02
   2662    000000                  RSEG    RCODE:CODE:NOROOT       
   2663    000000                  PUBLIC  ?F_DIV_ASG_R567_R0123_L02
   2664    000000                  EXTERN  ?F_OPERATION_R567_L02
   2665    000000          
   2666    000000          ?F_DIV_ASG_R567_R0123_L02:
   2667    000000 75F030           MOV     B,#030H
   2668    000003                  IF      lcall_mode
   2669    000003 02....           LJMP    ?F_OPERATION_R567_L02
   2670    000006                  ELSE
   2671    000006                  SJMP    ?F_OPERATION_R567_L02
   2672    000006                  ENDIF
   2673    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_R567_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R567_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:DA95          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2674    000000          
   2675    000000                  MODULE  ?F_ADD_POST_R567_R0123_L02
   2676    000000                  RSEG    RCODE:CODE:NOROOT       
   2677    000000                  PUBLIC  ?F_ADD_POST_R567_R0123_L02
   2678    000000                  EXTERN  ?F_OPERATION_R567_L02
   2679    000000          
   2680    000000          ?F_ADD_POST_R567_R0123_L02:
   2681    000000 75F048           MOV     B,#048H
   2682    000003 F8               MOV     R0,A
   2683    000004                  IF      lcall_mode
   2684    000004 02....           LJMP    ?F_OPERATION_R567_L02
   2685    000007                  ELSE
   2686    000007                  SJMP    ?F_OPERATION_R567_L02
   2687    000007                  ENDIF
   2688    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R567_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R567_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:BA72          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2689    000000          
   2690    000000                  MODULE  ?F_OPERATION_R567_L02           ;
                            Input R567, R0123, B
   2691    000000                  RSEG    RCODE:CODE:NOROOT       
   2692    000000                  PUBLIC  ?F_NEG_ASG_R567_R0123_L02
   2693    000000                  PUBLIC  ?F_OPERATION_R567_L02
   2694    000000                  EXTERN  ?F_OPERATION_R123_L02
   2695    000000                  EXTERN  ?F_OPERATION_L02
   2696    000000                  EXTERN  ?EXCHANGE_L01
   2697    000000          
   2698    000000          ?F_NEG_ASG_R567_R0123_L02:
   2699    000000 75F050           MOV     B,#050H
   2700    000003          ?F_OPERATION_R567_L02:
   2701    000003 12....           LCALL   ?EXCHANGE_L01
   2702    000006 12....           LCALL   ?F_OPERATION_R123_L02
   2703    000009 F5F0             MOV     B,A
   2704    00000B 12....           LCALL   ?EXCHANGE_L01
   2705    00000E E5F0             MOV     A,B
   2706    000010 22               RET
   2707    000011                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?EXCHANGE_L01       ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_NEG_ASG_R567_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_L02    ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_R123_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_R567_L02REL    CONST PUB UNTYP.       RCODE      3 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:B35A          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 17          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2708    000000          
   2709    000000          
   2710    000000          
   2711    000000                  MODULE  ?F_ADD_ASG_R567_R0123_DISP_L02  ;
                            Input: R567+DPTR, R0123
   2712    000000                  RSEG    RCODE:CODE:NOROOT       
   2713    000000                  PUBLIC  ?F_ADD_ASG_R567_R0123_DISP_L02
   2714    000000                  EXTERN  ?F_OPERATION_R567_DISP_L02
   2715    000000          
   2716    000000          ?F_ADD_ASG_R567_R0123_DISP_L02:
   2717    000000 75F004           MOV     B,#04H
   2718    000003                  IF      lcall_mode
   2719    000003 02....           LJMP    ?F_OPERATION_R567_DISP_L02
   2720    000006                  ELSE
   2721    000006                  SJMP    ?F_OPERATION_R567_DISP_L02
   2722    000006                  ENDIF
   2723    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_R567_R0123_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R567_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:64C2          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2724    000000          
   2725    000000                  MODULE  ?F_SUB_ASG_R567_R0123_DISP_L02
   2726    000000                  RSEG    RCODE:CODE:NOROOT       
   2727    000000                  PUBLIC  ?F_SUB_ASG_R567_R0123_DISP_L02
   2728    000000                  EXTERN  ?F_OPERATION_R567_DISP_L02
   2729    000000          
   2730    000000          ?F_SUB_ASG_R567_R0123_DISP_L02:
   2731    000000 75F010           MOV     B,#010H
   2732    000003                  IF      lcall_mode
   2733    000003 02....           LJMP    ?F_OPERATION_R567_DISP_L02
   2734    000006                  ELSE
   2735    000006                  SJMP    ?F_OPERATION_R567_DISP_L02
   2736    000006                  ENDIF
   2737    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_R567_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_R567_R0123_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:98FA          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2738    000000          
   2739    000000                  MODULE  ?F_MUL_ASG_R567_R0123_DISP_L02
   2740    000000                  RSEG    RCODE:CODE:NOROOT       
   2741    000000                  PUBLIC  ?F_MUL_ASG_R567_R0123_DISP_L02
   2742    000000                  EXTERN  ?F_OPERATION_R567_DISP_L02
   2743    000000          
   2744    000000          ?F_MUL_ASG_R567_R0123_DISP_L02:
   2745    000000 75F020           MOV     B,#020H
   2746    000003                  IF      lcall_mode
   2747    000003 02....           LJMP    ?F_OPERATION_R567_DISP_L02
   2748    000006                  ELSE
   2749    000006                  SJMP    ?F_OPERATION_R567_DISP_L02
   2750    000006                  ENDIF
   2751    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_R567_R0123_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R567_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:85A0          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2752    000000          
   2753    000000                  MODULE  ?F_DIV_ASG_R567_R0123_DISP_L02
   2754    000000                  RSEG    RCODE:CODE:NOROOT       
   2755    000000                  PUBLIC  ?F_DIV_ASG_R567_R0123_DISP_L02
   2756    000000                  EXTERN  ?F_OPERATION_R567_DISP_L02
   2757    000000          
   2758    000000          ?F_DIV_ASG_R567_R0123_DISP_L02:
   2759    000000 75F030           MOV     B,#030H
   2760    000003                  IF      lcall_mode
   2761    000003 02....           LJMP    ?F_OPERATION_R567_DISP_L02
   2762    000006                  ELSE
   2763    000006                  SJMP    ?F_OPERATION_R567_DISP_L02
   2764    000006                  ENDIF
   2765    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_R567_R0123_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R567_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:8DD0          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2766    000000          
   2767    000000                  MODULE  ?F_ADD_POST_R567_R0123_DISP_L02
   2768    000000                  RSEG    RCODE:CODE:NOROOT       
   2769    000000                  PUBLIC  ?F_ADD_POST_R567_R0123_DISP_L02
   2770    000000                  EXTERN  ?F_OPERATION_R567_DISP_L02
   2771    000000          
   2772    000000          ?F_ADD_POST_R567_R0123_DISP_L02:
   2773    000000 75F048           MOV     B,#048H
   2774    000003 F8               MOV     R0,A
   2775    000004                  IF      lcall_mode
   2776    000004 02....           LJMP    ?F_OPERATION_R567_DISP_L02
   2777    000007                  ELSE
   2778    000007                  SJMP    ?F_OPERATION_R567_DISP_L02
   2779    000007                  ENDIF
   2780    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R567_R0123_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R567_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:1F80          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2781    000000          
   2782    000000                  MODULE  ?F_OPERATION_R567_DISP_L02      ;
                            Input: R567+DPTR, R0123
   2783    000000                  RSEG    RCODE:CODE:NOROOT       
   2784    000000                  PUBLIC  ?F_NEG_ASG_R567_R0123_DISP_L02
   2785    000000                  PUBLIC  ?F_OPERATION_R567_DISP_L02
   2786    000000                  EXTERN  ?F_OPERATION_R123_DISP_L02
   2787    000000                  EXTERN  ?EXCHANGE_L01
   2788    000000          
   2789    000000          ?F_NEG_ASG_R567_R0123_DISP_L02:
   2790    000000 75F050           MOV     B,#050H
   2791    000003          ?F_OPERATION_R567_DISP_L02:
   2792    000003 12....           LCALL   ?EXCHANGE_L01
   2793    000006 12....           LCALL   ?F_OPERATION_R123_DISP_L02
   2794    000009 F5F0             MOV     B,A
   2795    00000B 12....           LCALL   ?EXCHANGE_L01
   2796    00000E E5F0             MOV     A,B
   2797    000010 22               RET
   2798    000011                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?EXCHANGE_L01       ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_NEG_ASG_R567_R0123_DISP_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_DISP_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_R567_DISP_L02REL    CONST PUB UNTYP.       RCODE      3 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:CBFE          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 17          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2799    000000          
   2800    000000          
   2801    000000                  MODULE  ?F_ADD_ASG_PR1_R4567_L02        ;
                            Input: R1, R4567
   2802    000000                  RSEG    RCODE:CODE:NOROOT       
   2803    000000                  PUBLIC  ?F_ADD_ASG_PR1_R4567_L02
   2804    000000                  EXTERN  ?F_OPERATION_PR1_L02
   2805    000000          
   2806    000000          ?F_ADD_ASG_PR1_R4567_L02:
   2807    000000 75F002           MOV     B,#002H
   2808    000003                  IF      lcall_mode
   2809    000003 02....           LJMP    ?F_OPERATION_PR1_L02
   2810    000006                  ELSE
   2811    000006                  SJMP    ?F_OPERATION_PR1_L02
   2812    000006                  ENDIF
   2813    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_PR1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:6A1A          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2814    000000          
   2815    000000                  MODULE  ?F_SUB_ASG_PR1_R4567_L02
   2816    000000                  RSEG    RCODE:CODE:NOROOT       
   2817    000000                  PUBLIC  ?F_SUB_ASG_PR1_R4567_L02
   2818    000000                  EXTERN  ?F_OPERATION_PR1_L02
   2819    000000          
   2820    000000          ?F_SUB_ASG_PR1_R4567_L02:
   2821    000000 75F012           MOV     B,#012H
   2822    000003                  IF      lcall_mode
   2823    000003 02....           LJMP    ?F_OPERATION_PR1_L02
   2824    000006                  ELSE
   2825    000006                  SJMP    ?F_OPERATION_PR1_L02
   2826    000006                  ENDIF
   2827    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_PR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_PR1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:41B5          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2828    000000          
   2829    000000                  MODULE  ?F_MUL_ASG_PR1_R4567_L02
   2830    000000                  RSEG    RCODE:CODE:NOROOT       
   2831    000000                  PUBLIC  ?F_MUL_ASG_PR1_R4567_L02
   2832    000000                  EXTERN  ?F_OPERATION_PR1_L02
   2833    000000          
   2834    000000          ?F_MUL_ASG_PR1_R4567_L02:
   2835    000000 75F022           MOV     B,#022H
   2836    000003                  IF      lcall_mode
   2837    000003 02....           LJMP    ?F_OPERATION_PR1_L02
   2838    000006                  ELSE
   2839    000006                  SJMP    ?F_OPERATION_PR1_L02
   2840    000006                  ENDIF
   2841    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_PR1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:D75B          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2842    000000          
   2843    000000                  MODULE  ?F_DIV_ASG_PR1_R4567_L02
   2844    000000                  RSEG    RCODE:CODE:NOROOT       
   2845    000000                  PUBLIC  ?F_DIV_ASG_PR1_R4567_L02
   2846    000000                  EXTERN  ?F_OPERATION_PR1_L02
   2847    000000          
   2848    000000          ?F_DIV_ASG_PR1_R4567_L02:
   2849    000000 75F032           MOV     B,#032H
   2850    000003                  IF      lcall_mode
   2851    000003 02....           LJMP    ?F_OPERATION_PR1_L02
   2852    000006                  ELSE
   2853    000006                  SJMP    ?F_OPERATION_PR1_L02
   2854    000006                  ENDIF
   2855    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_PR1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:FB73          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2856    000000          
   2857    000000                  MODULE  ?F_NEG_ASG_PR1_R4567_L02
   2858    000000                  RSEG    RCODE:CODE:NOROOT       
   2859    000000                  PUBLIC  ?F_NEG_ASG_PR1_R4567_L02
   2860    000000                  EXTERN  ?F_OPERATION_PR1_L02
   2861    000000          
   2862    000000          ?F_NEG_ASG_PR1_R4567_L02:
   2863    000000 75F052           MOV     B,#052H
   2864    000003                  IF      lcall_mode
   2865    000003 02....           LJMP    ?F_OPERATION_PR1_L02
   2866    000006                  ELSE
   2867    000006                  SJMP    ?F_OPERATION_PR1_L02
   2868    000006                  ENDIF
   2869    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_NEG_ASG_PR1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:AF1A          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2870    000000          
   2871    000000                  MODULE  ?F_OPERATION_PR1_L02            ;
                            Input: B,R1,R4567
   2872    000000                  RSEG    RCODE:CODE:NOROOT       
   2873    000000                  PUBLIC  ?F_ADD_POST_PR1_R4567_L02
   2874    000000                  PUBLIC  ?F_OPERATION_PR1_L02
   2875    000000                  EXTERN  ?F_OPERATION_PR_L02
   2876    000000          
   2877    000000          ?F_ADD_POST_PR1_R4567_L02:
   2878    000000 75F04A           MOV     B,#04AH
   2879    000003 FC               MOV     R4,A
   2880    000004          ?F_OPERATION_PR1_L02:
   2881    000004 EB               MOV     A,R3
   2882    000005 C0E0             PUSH    ACC
   2883    000007 EA               MOV     A,R2
   2884    000008 C0E0             PUSH    ACC
   2885    00000A E9               MOV     A,R1
   2886    00000B C0E0             PUSH    ACC
   2887    00000D E8               MOV     A,R0
   2888    00000E C0E0             PUSH    ACC
   2889    000010 E9               MOV     A,R1
   2890    000011 F8               MOV     R0,A
   2891    000012                  IF      lcall_mode
   2892    000012 02....           LJMP    ?F_OPERATION_PR_L02
   2893    000015                  ELSE
   2894    000015                  SJMP    ?F_OPERATION_PR_L02
   2895    000015                  ENDIF
   2896    000015                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_PR1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR1_L02REL    CONST PUB UNTYP.       RCODE      4 
?F_OPERATION_PR_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:547F          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 21          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2897    000000          
   2898    000000          
   2899    000000                  MODULE  ?F_ADD_ASG_PR0_R4567_L02        ;
                            Input: R0, A/R4567
   2900    000000                  RSEG    RCODE:CODE:NOROOT       
   2901    000000                  PUBLIC  ?F_ADD_ASG_PR0_R4567_L02
   2902    000000                  EXTERN  ?F_OPERATION_PR0_L02
   2903    000000          
   2904    000000          ?F_ADD_ASG_PR0_R4567_L02:
   2905    000000 75F002           MOV     B,#002H
   2906    000003                  IF      lcall_mode
   2907    000003 02....           LJMP    ?F_OPERATION_PR0_L02
   2908    000006                  ELSE
   2909    000006                  SJMP    ?F_OPERATION_PR0_L02
   2910    000006                  ENDIF
   2911    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_PR0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR0_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:4CD1          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2912    000000          
   2913    000000                  MODULE  ?F_SUB_ASG_PR0_R4567_L02
   2914    000000                  RSEG    RCODE:CODE:NOROOT       
   2915    000000                  PUBLIC  ?F_SUB_ASG_PR0_R4567_L02
   2916    000000                  EXTERN  ?F_OPERATION_PR0_L02
   2917    000000          
   2918    000000          ?F_SUB_ASG_PR0_R4567_L02:
   2919    000000 75F012           MOV     B,#012H
   2920    000003                  IF      lcall_mode
   2921    000003 02....           LJMP    ?F_OPERATION_PR0_L02
   2922    000006                  ELSE
   2923    000006                  SJMP    ?F_OPERATION_PR0_L02
   2924    000006                  ENDIF
   2925    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_PR0_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_PR0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:454D          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2926    000000          
   2927    000000                  MODULE  ?F_MUL_ASG_PR0_R4567_L02
   2928    000000                  RSEG    RCODE:CODE:NOROOT       
   2929    000000                  PUBLIC  ?F_MUL_ASG_PR0_R4567_L02
   2930    000000                  EXTERN  ?F_OPERATION_PR0_L02
   2931    000000          
   2932    000000          ?F_MUL_ASG_PR0_R4567_L02:
   2933    000000 75F022           MOV     B,#022H
   2934    000003                  IF      lcall_mode
   2935    000003 02....           LJMP    ?F_OPERATION_PR0_L02
   2936    000006                  ELSE
   2937    000006                  SJMP    ?F_OPERATION_PR0_L02
   2938    000006                  ENDIF
   2939    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_PR0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR0_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:D3A3          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2940    000000          
   2941    000000                  MODULE  ?F_DIV_ASG_PR0_R4567_L02
   2942    000000                  RSEG    RCODE:CODE:NOROOT       
   2943    000000                  PUBLIC  ?F_DIV_ASG_PR0_R4567_L02
   2944    000000                  EXTERN  ?F_OPERATION_PR0_L02
   2945    000000          
   2946    000000          ?F_DIV_ASG_PR0_R4567_L02:
   2947    000000 75F032           MOV     B,#032H
   2948    000003                  IF      lcall_mode
   2949    000003 02....           LJMP    ?F_OPERATION_PR0_L02
   2950    000006                  ELSE
   2951    000006                  SJMP    ?F_OPERATION_PR0_L02
   2952    000006                  ENDIF
   2953    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_PR0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR0_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:93FD          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2954    000000          
   2955    000000                  MODULE  ?F_NEG_ASG_PR0_R4567_L02
   2956    000000                  RSEG    RCODE:CODE:NOROOT       
   2957    000000                  PUBLIC  ?F_NEG_ASG_PR0_R4567_L02
   2958    000000                  EXTERN  ?F_OPERATION_PR0_L02
   2959    000000          
   2960    000000          ?F_NEG_ASG_PR0_R4567_L02:
   2961    000000 75F052           MOV     B,#052H
   2962    000003                  IF      lcall_mode
   2963    000003 02....           LJMP    ?F_OPERATION_PR0_L02
   2964    000006                  ELSE
   2965    000006                  SJMP    ?F_OPERATION_PR0_L02
   2966    000006                  ENDIF
   2967    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_NEG_ASG_PR0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR0_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:17C3          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   2968    000000          
   2969    000000                  MODULE  ?F_OPERATION_PR_L02             ;
                            Input: B,R0,R4567
   2970    000000                  RSEG    RCODE:CODE:NOROOT                   
                                       ; Load R0123 through R0,
   2971    000000                  PUBLIC  ?F_ADD_POST_PR0_R4567_L02
   2972    000000                  PUBLIC  ?F_OPERATION_PR0_L02
   2973    000000                  PUBLIC  ?F_OPERATION_PR_L02             ;
  optionally save R0123,
   2974    000000                  EXTERN  ?F_OPERATION_L02                ;
  Save R0, do it
   2975    000000          
   2976    000000          ?F_ADD_POST_PR0_R4567_L02:
   2977    000000 75F04A           MOV     B,#04AH
   2978    000003 FC               MOV     R4,A
   2979    000004          ?F_OPERATION_PR0_L02:
   2980    000004 EB               MOV     A,R3
   2981    000005 C0E0             PUSH    ACC
   2982    000007 EA               MOV     A,R2
   2983    000008 C0E0             PUSH    ACC
   2984    00000A E9               MOV     A,R1
   2985    00000B C0E0             PUSH    ACC
   2986    00000D E8               MOV     A,R0
   2987    00000E C0E0             PUSH    ACC
   2988    000010          ?F_OPERATION_PR_L02:
   2989    000010 E2               MOVX    A,@R0
   2990    000011 FB               MOV     R3,A
   2991    000012 08               INC     R0
   2992    000013 E2               MOVX    A,@R0
   2993    000014 FA               MOV     R2,A
   2994    000015 08               INC     R0
   2995    000016 E2               MOVX    A,@R0
   2996    000017 F9               MOV     R1,A
   2997    000018 08               INC     R0
   2998    000019 E2               MOVX    A,@R0
   2999    00001A C8               XCH     A,R0
   3000    00001B 30F310           JNB     B.3,OUT
   3001    00001E C8               XCH     A,R0
   3002    00001F C0E0             PUSH    ACC
   3003    000021 C8               XCH     A,R0
   3004    000022 C9               XCH     A,R1
   3005    000023 C0E0             PUSH    ACC
   3006    000025 C9               XCH     A,R1
   3007    000026 CA               XCH     A,R2
   3008    000027 C0E0             PUSH    ACC
   3009    000029 CA               XCH     A,R2
   3010    00002A CB               XCH     A,R3
   3011    00002B C0E0             PUSH    ACC
   3012    00002D CB               XCH     A,R3
   3013    00002E C0E0     OUT:    PUSH    ACC
   3014    000030                  IF      lcall_mode
   3015    000030 02....           LJMP    ?F_OPERATION_L02
   3016    000033                  ELSE
   3017    000033                  AJMP    ?F_OPERATION_L02
   3018    000033                  ENDIF
   3019    000033                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_PR0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_L02    ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_PR0_L02REL    CONST PUB UNTYP.       RCODE      4 
?F_OPERATION_PR_L02 REL    CONST PUB UNTYP.       RCODE      10 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OUT                 REL    CONST UNTYP.           RCODE      2E 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:B469          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 51          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3020    000000          
   3021    000000          
   3022    000000          
   3023    000000                  MODULE  ?F_ADD_ASG_ST_DPTR_R0123_L02    ;
                            Input: DPTR-offset, R0123
   3024    000000                  RSEG    RCODE:CODE:NOROOT       
   3025    000000                  PUBLIC  ?F_ADD_ASG_ST_DPTR_R0123_L02
   3026    000000                  EXTERN  ?F_OPERATION_ST_DPTR2_L02
   3027    000000          
   3028    000000          ?F_ADD_ASG_ST_DPTR_R0123_L02:
   3029    000000 75F064           MOV     B,#064H
   3030    000003                  IF      lcall_mode
   3031    000003 02....           LJMP    ?F_OPERATION_ST_DPTR2_L02
   3032    000006                  ELSE
   3033    000006                  SJMP    ?F_OPERATION_ST_DPTR2_L02
   3034    000006                  ENDIF
   3035    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_ST_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_ST_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:A547          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3036    000000          
   3037    000000                  MODULE  ?F_SUB_ASG_ST_DPTR_R0123_L02
   3038    000000                  RSEG    RCODE:CODE:NOROOT       
   3039    000000                  PUBLIC  ?F_SUB_ASG_ST_DPTR_R0123_L02
   3040    000000                  EXTERN  ?F_OPERATION_ST_DPTR2_L02
   3041    000000          
   3042    000000          ?F_SUB_ASG_ST_DPTR_R0123_L02:
   3043    000000 75F074           MOV     B,#074H
   3044    000003                  IF      lcall_mode
   3045    000003 02....           LJMP    ?F_OPERATION_ST_DPTR2_L02
   3046    000006                  ELSE
   3047    000006                  SJMP    ?F_OPERATION_ST_DPTR2_L02
   3048    000006                  ENDIF
   3049    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_ST_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_ST_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:8D98          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3050    000000          
   3051    000000                  MODULE  ?F_MUL_ASG_ST_DPTR_R0123_L02
   3052    000000                  RSEG    RCODE:CODE:NOROOT       
   3053    000000                  PUBLIC  ?F_MUL_ASG_ST_DPTR_R0123_L02
   3054    000000                  EXTERN  ?F_OPERATION_ST_DPTR2_L02
   3055    000000          
   3056    000000          ?F_MUL_ASG_ST_DPTR_R0123_L02:
   3057    000000 75F084           MOV     B,#084H
   3058    000003                  IF      lcall_mode
   3059    000003 02....           LJMP    ?F_OPERATION_ST_DPTR2_L02
   3060    000006                  ELSE
   3061    000006                  SJMP    ?F_OPERATION_ST_DPTR2_L02
   3062    000006                  ENDIF
   3063    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_ST_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_ST_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:A285          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3064    000000          
   3065    000000                  MODULE  ?F_DIV_ASG_ST_DPTR_R0123_L02
   3066    000000                  RSEG    RCODE:CODE:NOROOT       
   3067    000000                  PUBLIC  ?F_DIV_ASG_ST_DPTR_R0123_L02
   3068    000000                  EXTERN  ?F_OPERATION_ST_DPTR2_L02
   3069    000000          
   3070    000000          ?F_DIV_ASG_ST_DPTR_R0123_L02:
   3071    000000 75F094           MOV     B,#094H
   3072    000003                  IF      lcall_mode
   3073    000003 02....           LJMP    ?F_OPERATION_ST_DPTR2_L02
   3074    000006                  ELSE
   3075    000006                  SJMP    ?F_OPERATION_ST_DPTR2_L02
   3076    000006                  ENDIF
   3077    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_ST_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_ST_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:44DD          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3078    000000          
   3079    000000                  MODULE  ?F_ADD_POST_ST_DPTR_R0123_L02
   3080    000000                  RSEG    RCODE:CODE:NOROOT       
   3081    000000                  PUBLIC  ?F_ADD_POST_ST_DPTR_R0123_L02
   3082    000000                  EXTERN  ?F_OPERATION_ST_DPTR2_L02
   3083    000000          
   3084    000000          ?F_ADD_POST_ST_DPTR_R0123_L02:
   3085    000000 75F0AC           MOV     B,#0ACH
   3086    000003 F8               MOV     R0,A
   3087    000004                  IF      lcall_mode
   3088    000004 02....           LJMP    ?F_OPERATION_ST_DPTR2_L02
   3089    000007                  ELSE
   3090    000007                  SJMP    ?F_OPERATION_ST_DPTR2_L02
   3091    000007                  ENDIF
   3092    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_ST_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_ST_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:EEBA          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3093    000000          
   3094    000000                  MODULE  ?F_OPERATION_ST_DPTR2_L02       ;
                            Input: B, DPTR-offset,R0123
   3095    000000                  RSEG    RCODE:CODE:NOROOT                   
                                       ; Save R4567, Load stack-
   3096    000000                  PUBLIC  ?F_NEG_ASG_ST_DPTR_R0123_L02
   3097    000000                  PUBLIC  ?F_OPERATION_ST_DPTR2_L02       ;
  address into DPTR
   3098    000000                  EXTERN  ?F_OPERATION_DPTR2_R_L02
   3099    000000                  EXTERN  ?SETUP_STACK_DPTR_L17
   3100    000000                  EXTERN  ?EXCHANGE_L01                
                                                                          
   3101    000000          
   3102    000000          ?F_NEG_ASG_ST_DPTR_R0123_L02:
   3103    000000 75F0B4           MOV     B,#0B4H
   3104    000003          ?F_OPERATION_ST_DPTR2_L02:
   3105    000003 74..             MOV     A,#LOW(?EXCHANGE_L01)
   3106    000005 C0E0             PUSH    ACC
   3107    000007 74..             MOV     A,#HIGH(?EXCHANGE_L01)
   3108    000009 C0E0             PUSH    ACC
   3109    00000B EF               MOV     A,R7
   3110    00000C C0E0             PUSH    ACC
   3111    00000E EE               MOV     A,R6
   3112    00000F C0E0             PUSH    ACC
   3113    000011 ED               MOV     A,R5
   3114    000012 C0E0             PUSH    ACC
   3115    000014 EC               MOV     A,R4
   3116    000015 C0E0             PUSH    ACC
   3117    000017 12....           LCALL   ?SETUP_STACK_DPTR_L17
   3118    00001A                  IF      lcall_mode
   3119    00001A 02....           LJMP    ?F_OPERATION_DPTR2_R_L02
   3120    00001D                  ELSE
   3121    00001D                  SJMP    ?F_OPERATION_DPTR2_R_L02
   3122    00001D                  ENDIF
   3123    00001D                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?EXCHANGE_L01       ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?F_NEG_ASG_ST_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR2_R_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_ST_DPTR2_L02REL    CONST PUB UNTYP.       RCODE      3 
?SETUP_STACK_DPTR_L17ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:B128          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 29          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3124    000000          
   3125    000000          
   3126    000000                  MODULE  ?F_ADD_ASG_DPTR_R0123_L02       ;
                            Input: DPTR,A/R0123
   3127    000000                  RSEG    RCODE:CODE:NOROOT       
   3128    000000                  PUBLIC  ?F_ADD_ASG_DPTR_R0123_L02
   3129    000000                  EXTERN  ?F_OPERATION_DPTR2_L02
   3130    000000          
   3131    000000          ?F_ADD_ASG_DPTR_R0123_L02:
   3132    000000 75F064           MOV     B,#064H
   3133    000003                  IF      lcall_mode
   3134    000003 02....           LJMP    ?F_OPERATION_DPTR2_L02
   3135    000006                  ELSE
   3136    000006                  SJMP    ?F_OPERATION_DPTR2_L02
   3137    000006                  ENDIF
   3138    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:E3CA          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3139    000000          
   3140    000000                  MODULE  ?F_SUB_ASG_DPTR_R0123_L02
   3141    000000                  RSEG    RCODE:CODE:NOROOT       
   3142    000000                  PUBLIC  ?F_SUB_ASG_DPTR_R0123_L02
   3143    000000                  EXTERN  ?F_OPERATION_DPTR2_L02
   3144    000000          
   3145    000000          ?F_SUB_ASG_DPTR_R0123_L02:
   3146    000000 75F074           MOV     B,#074H
   3147    000003                  IF      lcall_mode
   3148    000003 02....           LJMP    ?F_OPERATION_DPTR2_L02
   3149    000006                  ELSE
   3150    000006                  SJMP    ?F_OPERATION_DPTR2_L02
   3151    000006                  ENDIF
   3152    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:2197          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3153    000000          
   3154    000000                  MODULE  ?F_MUL_ASG_DPTR_R0123_L02
   3155    000000                  RSEG    RCODE:CODE:NOROOT       
   3156    000000                  PUBLIC  ?F_MUL_ASG_DPTR_R0123_L02
   3157    000000                  EXTERN  ?F_OPERATION_DPTR2_L02
   3158    000000          
   3159    000000          ?F_MUL_ASG_DPTR_R0123_L02:
   3160    000000 75F084           MOV     B,#084H
   3161    000003                  IF      lcall_mode
   3162    000003 02....           LJMP    ?F_OPERATION_DPTR2_L02
   3163    000006                  ELSE
   3164    000006                  SJMP    ?F_OPERATION_DPTR2_L02
   3165    000006                  ENDIF
   3166    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:497F          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3167    000000          
   3168    000000                  MODULE  ?F_DIV_ASG_DPTR_R0123_L02
   3169    000000                  RSEG    RCODE:CODE:NOROOT       
   3170    000000                  PUBLIC  ?F_DIV_ASG_DPTR_R0123_L02
   3171    000000                  EXTERN  ?F_OPERATION_DPTR2_L02
   3172    000000          
   3173    000000          ?F_DIV_ASG_DPTR_R0123_L02:
   3174    000000 75F094           MOV     B,#094H
   3175    000003                  IF      lcall_mode
   3176    000003 02....           LJMP    ?F_OPERATION_DPTR2_L02
   3177    000006                  ELSE
   3178    000006                  SJMP    ?F_OPERATION_DPTR2_L02
   3179    000006                  ENDIF
   3180    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:903D          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3181    000000          
   3182    000000                  MODULE  ?F_ADD_POST_DPTR_R0123_L02
   3183    000000                  RSEG    RCODE:CODE:NOROOT       
   3184    000000                  PUBLIC  ?F_ADD_POST_DPTR_R0123_L02
   3185    000000                  EXTERN  ?F_OPERATION_DPTR2_L02
   3186    000000          
   3187    000000          ?F_ADD_POST_DPTR_R0123_L02:
   3188    000000 75F0AC           MOV     B,#0ACH
   3189    000003 F8               MOV     R0,A
   3190    000004                  IF      lcall_mode
   3191    000004 02....           LJMP    ?F_OPERATION_DPTR2_L02
   3192    000007                  ELSE
   3193    000007                  SJMP    ?F_OPERATION_DPTR2_L02
   3194    000007                  ENDIF
   3195    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR2_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:3B4C          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3196    000000          
   3197    000000                  MODULE  ?F_OPERATION_DPTR2_R_L02        ;
                            Input: B, DPTR, R0123
   3198    000000                  RSEG    RCODE:CODE:NOROOT                   
                                       ; Load R4567 through DPTR,
   3199    000000                  PUBLIC  ?F_NEG_ASG_DPTR_R0123_L02
   3200    000000                  PUBLIC  ?F_OPERATION_DPTR2_L02
   3201    000000                  PUBLIC  ?F_OPERATION_DPTR2_R_L02        ;
  optionally save R4567,
   3202    000000                  EXTERN  ?F_OPERATION_L02                ;
  Restore DPTR and push it,
   3203    000000                  EXTERN  ?EXCHANGE_L01                
                                                                          
   3204    000000                                                          ; Do
                            the operation
   3205    000000          
   3206    000000          ?F_NEG_ASG_DPTR_R0123_L02:
   3207    000000 75F0B4           MOV     B,#0B4H
   3208    000003          ?F_OPERATION_DPTR2_L02:
   3209    000003 74..             MOV     A,#LOW(?EXCHANGE_L01)
   3210    000005 C0E0             PUSH    ACC
   3211    000007 74..             MOV     A,#HIGH(?EXCHANGE_L01)
   3212    000009 C0E0             PUSH    ACC
   3213    00000B EF               MOV     A,R7
   3214    00000C C0E0             PUSH    ACC
   3215    00000E EE               MOV     A,R6
   3216    00000F C0E0             PUSH    ACC
   3217    000011 ED               MOV     A,R5
   3218    000012 C0E0             PUSH    ACC
   3219    000014 EC               MOV     A,R4
   3220    000015 C0E0             PUSH    ACC
   3221    000017          ?F_OPERATION_DPTR2_R_L02:
   3222    000017 E0               MOVX    A,@DPTR
   3223    000018 FF               MOV     R7,A
   3224    000019 A3               INC     DPTR
   3225    00001A E0               MOVX    A,@DPTR
   3226    00001B FE               MOV     R6,A
   3227    00001C A3               INC     DPTR
   3228    00001D E0               MOVX    A,@DPTR
   3229    00001E FD               MOV     R5,A
   3230    00001F A3               INC     DPTR
   3231    000020 E0               MOVX    A,@DPTR
   3232    000021 FC               MOV     R4,A
   3233    000022 30F30C           JNB     B.3,OUT
   3234    000025 EC               MOV     A,R4
   3235    000026 C0E0             PUSH    ACC
   3236    000028 ED               MOV     A,R5
   3237    000029 C0E0             PUSH    ACC
   3238    00002B EE               MOV     A,R6
   3239    00002C C0E0             PUSH    ACC
   3240    00002E EF               MOV     A,R7
   3241    00002F C0E0             PUSH    ACC
   3242    000031 E582     OUT:    MOV     A,DPL
   3243    000033 24FD             ADD     A,#0FDH
   3244    000035 C0E0             PUSH    ACC
   3245    000037 E583             MOV     A,DPH
   3246    000039 34FF             ADDC    A,#0FFH
   3247    00003B C0E0             PUSH    ACC
   3248    00003D                  IF      lcall_mode
   3249    00003D 02....           LJMP    ?F_OPERATION_L02
   3250    000040                  ELSE
   3251    000040                  AJMP    ?F_OPERATION_L02
   3252    000040                  ENDIF
   3253    000040                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?EXCHANGE_L01       ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_NEG_ASG_DPTR_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR2_L02REL    CONST PUB UNTYP.       RCODE      3 
?F_OPERATION_DPTR2_R_L02REL    CONST PUB UNTYP.       RCODE      17 
?F_OPERATION_L02    ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OUT                 REL    CONST UNTYP.           RCODE      31 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:FE33          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 64          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3254    000000          
   3255    000000          
   3256    000000          
   3257    000000                  MODULE  ?F_ADD_ASG_ST_DPTR_R4567_L02    ;
                            Input: DPTR-offset, A/R4567
   3258    000000                  RSEG    RCODE:CODE:NOROOT       
   3259    000000                  PUBLIC  ?F_ADD_ASG_ST_DPTR_R4567_L02
   3260    000000                  EXTERN  ?F_OPERATION_ST_DPTR1_L02
   3261    000000          
   3262    000000          ?F_ADD_ASG_ST_DPTR_R4567_L02:
   3263    000000 75F004           MOV     B,#04H
   3264    000003                  IF      lcall_mode
   3265    000003 02....           LJMP    ?F_OPERATION_ST_DPTR1_L02
   3266    000006                  ELSE
   3267    000006                  SJMP    ?F_OPERATION_ST_DPTR1_L02
   3268    000006                  ENDIF
   3269    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_ST_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_ST_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:A0A0          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3270    000000          
   3271    000000                  MODULE  ?F_SUB_ASG_ST_DPTR_R4567_L02
   3272    000000                  RSEG    RCODE:CODE:NOROOT       
   3273    000000                  PUBLIC  ?F_SUB_ASG_ST_DPTR_R4567_L02
   3274    000000                  EXTERN  ?F_OPERATION_ST_DPTR1_L02
   3275    000000          
   3276    000000          ?F_SUB_ASG_ST_DPTR_R4567_L02:
   3277    000000 75F014           MOV     B,#014H
   3278    000003                  IF      lcall_mode
   3279    000003 02....           LJMP    ?F_OPERATION_ST_DPTR1_L02
   3280    000006                  ELSE
   3281    000006                  SJMP    ?F_OPERATION_ST_DPTR1_L02
   3282    000006                  ENDIF
   3283    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_ST_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_ST_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:A978          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3284    000000          
   3285    000000                  MODULE  ?F_MUL_ASG_ST_DPTR_R4567_L02
   3286    000000                  RSEG    RCODE:CODE:NOROOT       
   3287    000000                  PUBLIC  ?F_MUL_ASG_ST_DPTR_R4567_L02
   3288    000000                  EXTERN  ?F_OPERATION_ST_DPTR1_L02
   3289    000000          
   3290    000000          ?F_MUL_ASG_ST_DPTR_R4567_L02:
   3291    000000 75F024           MOV     B,#024H
   3292    000003                  IF      lcall_mode
   3293    000003 02....           LJMP    ?F_OPERATION_ST_DPTR1_L02
   3294    000006                  ELSE
   3295    000006                  SJMP    ?F_OPERATION_ST_DPTR1_L02
   3296    000006                  ENDIF
   3297    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_ST_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_ST_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:D823          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3298    000000          
   3299    000000                  MODULE  ?F_DIV_ASG_ST_DPTR_R4567_L02
   3300    000000                  RSEG    RCODE:CODE:NOROOT       
   3301    000000                  PUBLIC  ?F_DIV_ASG_ST_DPTR_R4567_L02
   3302    000000                  EXTERN  ?F_OPERATION_ST_DPTR1_L02
   3303    000000          
   3304    000000          ?F_DIV_ASG_ST_DPTR_R4567_L02:
   3305    000000 75F034           MOV     B,#034H
   3306    000003                  IF      lcall_mode
   3307    000003 02....           LJMP    ?F_OPERATION_ST_DPTR1_L02
   3308    000006                  ELSE
   3309    000006                  SJMP    ?F_OPERATION_ST_DPTR1_L02
   3310    000006                  ENDIF
   3311    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_ST_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_ST_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:801A          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3312    000000          
   3313    000000                  MODULE  ?F_ADD_POST_ST_DPTR_R4567_L02
   3314    000000                  RSEG    RCODE:CODE:NOROOT       
   3315    000000                  PUBLIC  ?F_ADD_POST_ST_DPTR_R4567_L02
   3316    000000                  EXTERN  ?F_OPERATION_ST_DPTR1_L02
   3317    000000          
   3318    000000          ?F_ADD_POST_ST_DPTR_R4567_L02:
   3319    000000 75F04C           MOV     B,#04CH
   3320    000003 FC               MOV     R4,A
   3321    000004                  IF      lcall_mode
   3322    000004 02....           LJMP    ?F_OPERATION_ST_DPTR1_L02
   3323    000007                  ELSE
   3324    000007                  SJMP    ?F_OPERATION_ST_DPTR1_L02
   3325    000007                  ENDIF
   3326    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_ST_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_ST_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:D825          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3327    000000          
   3328    000000                  MODULE  ?F_OPERATION_ST_DPTR_L02        ;
                            Input: B, DPTR-offset,
   3329    000000                  RSEG    RCODE:CODE:NOROOT                   
                                       ;        R4567
   3330    000000                  PUBLIC  ?F_NEG_ASG_ST_DPTR_R4567_L02
   3331    000000                  PUBLIC  ?F_OPERATION_ST_DPTR1_L02       ;
  Save R0123, Load stack-
   3332    000000                  EXTERN  ?F_OPERATION_DPTR_L02           ;
  address into DPTR
   3333    000000                  EXTERN  ?SETUP_STACK_DPTR_L17
   3334    000000          
   3335    000000          ?F_NEG_ASG_ST_DPTR_R4567_L02:
   3336    000000 75F054           MOV     B,#054H
   3337    000003          ?F_OPERATION_ST_DPTR1_L02:
   3338    000003 EB               MOV     A,R3
   3339    000004 C0E0             PUSH    ACC
   3340    000006 EA               MOV     A,R2
   3341    000007 C0E0             PUSH    ACC
   3342    000009 E9               MOV     A,R1
   3343    00000A C0E0             PUSH    ACC
   3344    00000C E8               MOV     A,R0
   3345    00000D C0E0             PUSH    ACC
   3346    00000F 12....           LCALL   ?SETUP_STACK_DPTR_L17
   3347    000012                  IF      lcall_mode
   3348    000012 02....           LJMP    ?F_OPERATION_DPTR_L02
   3349    000015                  ELSE
   3350    000015                  SJMP    ?F_OPERATION_DPTR_L02
   3351    000015                  ENDIF
   3352    000015                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_NEG_ASG_ST_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_ST_DPTR1_L02REL    CONST PUB UNTYP.       RCODE      3 
?SETUP_STACK_DPTR_L17ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:BD3D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 21          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3353    000000          
   3354    000000          
   3355    000000                  MODULE  ?F_ADD_ASG_DPTR_R4567_L02       ;
                            Input DPTR, R4567
   3356    000000                  RSEG    RCODE:CODE:NOROOT       
   3357    000000                  PUBLIC  ?F_ADD_ASG_DPTR_R4567_L02
   3358    000000                  EXTERN  ?F_OPERATION_DPTR1_L02
   3359    000000          
   3360    000000          ?F_ADD_ASG_DPTR_R4567_L02:
   3361    000000 75F004           MOV     B,#04H
   3362    000003                  IF      lcall_mode
   3363    000003 02....           LJMP    ?F_OPERATION_DPTR1_L02
   3364    000006                  ELSE
   3365    000006                  SJMP    ?F_OPERATION_DPTR1_L02
   3366    000006                  ENDIF
   3367    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:790C          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3368    000000          
   3369    000000                  MODULE  ?F_SUB_ASG_DPTR_R4567_L02
   3370    000000                  RSEG    RCODE:CODE:NOROOT       
   3371    000000                  PUBLIC  ?F_SUB_ASG_DPTR_R4567_L02
   3372    000000                  EXTERN  ?F_OPERATION_DPTR1_L02
   3373    000000          
   3374    000000          ?F_SUB_ASG_DPTR_R4567_L02:
   3375    000000 75F014           MOV     B,#014H
   3376    000003                  IF      lcall_mode
   3377    000003 02....           LJMP    ?F_OPERATION_DPTR1_L02
   3378    000006                  ELSE
   3379    000006                  SJMP    ?F_OPERATION_DPTR1_L02
   3380    000006                  ENDIF
   3381    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:AE61          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3382    000000          
   3383    000000                  MODULE  ?F_MUL_ASG_DPTR_R4567_L02
   3384    000000                  RSEG    RCODE:CODE:NOROOT       
   3385    000000                  PUBLIC  ?F_MUL_ASG_DPTR_R4567_L02
   3386    000000                  EXTERN  ?F_OPERATION_DPTR1_L02
   3387    000000          
   3388    000000          ?F_MUL_ASG_DPTR_R4567_L02:
   3389    000000 75F024           MOV     B,#024H
   3390    000003                  IF      lcall_mode
   3391    000003 02....           LJMP    ?F_OPERATION_DPTR1_L02
   3392    000006                  ELSE
   3393    000006                  SJMP    ?F_OPERATION_DPTR1_L02
   3394    000006                  ENDIF
   3395    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:9E44          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3396    000000          
   3397    000000                  MODULE  ?F_DIV_ASG_DPTR_R4567_L02
   3398    000000                  RSEG    RCODE:CODE:NOROOT       
   3399    000000                  PUBLIC  ?F_DIV_ASG_DPTR_R4567_L02
   3400    000000                  EXTERN  ?F_OPERATION_DPTR1_L02
   3401    000000          
   3402    000000          ?F_DIV_ASG_DPTR_R4567_L02:
   3403    000000 75F034           MOV     B,#034H
   3404    000003                  IF      lcall_mode
   3405    000003 02....           LJMP    ?F_OPERATION_DPTR1_L02
   3406    000006                  ELSE
   3407    000006                  SJMP    ?F_OPERATION_DPTR1_L02
   3408    000006                  ENDIF
   3409    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:BDF0          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3410    000000          
   3411    000000                  MODULE  ?F_ADD_POST_DPTR_R4567_L02
   3412    000000                  RSEG    RCODE:CODE:NOROOT       
   3413    000000                  PUBLIC  ?F_ADD_POST_DPTR_R4567_L02
   3414    000000                  EXTERN  ?F_OPERATION_DPTR1_L02
   3415    000000          
   3416    000000          ?F_ADD_POST_DPTR_R4567_L02:
   3417    000000 75F04C           MOV     B,#04CH
   3418    000003 FC               MOV     R4,A
   3419    000004                  IF      lcall_mode
   3420    000004 02....           LJMP    ?F_OPERATION_DPTR1_L02
   3421    000007                  ELSE
   3422    000007                  SJMP    ?F_OPERATION_DPTR1_L02
   3423    000007                  ENDIF
   3424    000007                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:BA13          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 7          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3425    000000          
   3426    000000                  MODULE  ?F_OPERATION_DPTR_R_L02         ;
                            Input: B, DPTR, R4567
   3427    000000                  RSEG    RCODE:CODE:NOROOT                   
                                       ; Load R0123 through DPTR
   3428    000000                  PUBLIC  ?F_NEG_ASG_DPTR_R4567_L02
   3429    000000                  PUBLIC  ?F_OPERATION_DPTR1_L02
   3430    000000                  PUBLIC  ?F_OPERATION_DPTR_L02           ;
  optionally push R0123,
   3431    000000                  EXTERN  ?F_OPERATION_L02                ;
  restore DPTR and push
   3432    000000                                                          ; do
                            it.
   3433    000000          ?F_NEG_ASG_DPTR_R4567_L02:
   3434    000000 75F054           MOV     B,#054H
   3435    000003          ?F_OPERATION_DPTR1_L02:
   3436    000003 EB               MOV     A,R3
   3437    000004 C0E0             PUSH    ACC
   3438    000006 EA               MOV     A,R2
   3439    000007 C0E0             PUSH    ACC
   3440    000009 E9               MOV     A,R1
   3441    00000A C0E0             PUSH    ACC
   3442    00000C E8               MOV     A,R0
   3443    00000D C0E0             PUSH    ACC
   3444    00000F          ?F_OPERATION_DPTR_L02:
   3445    00000F E0               MOVX    A,@DPTR
   3446    000010 FB               MOV     R3,A
   3447    000011 A3               INC     DPTR
   3448    000012 E0               MOVX    A,@DPTR
   3449    000013 FA               MOV     R2,A
   3450    000014 A3               INC     DPTR
   3451    000015 E0               MOVX    A,@DPTR
   3452    000016 F9               MOV     R1,A
   3453    000017 A3               INC     DPTR
   3454    000018 E0               MOVX    A,@DPTR
   3455    000019 F8               MOV     R0,A
   3456    00001A 30F30C           JNB     B.3,OUT
   3457    00001D E8               MOV     A,R0
   3458    00001E C0E0             PUSH    ACC
   3459    000020 E9               MOV     A,R1
   3460    000021 C0E0             PUSH    ACC
   3461    000023 EA               MOV     A,R2
   3462    000024 C0E0             PUSH    ACC
   3463    000026 EB               MOV     A,R3
   3464    000027 C0E0             PUSH    ACC
   3465    000029 E582     OUT:    MOV     A,DPL
   3466    00002B 24FD             ADD     A,#0FDH
   3467    00002D C0E0             PUSH    ACC
   3468    00002F E583             MOV     A,DPH
   3469    000031 34FF             ADDC    A,#0FFH
   3470    000033 C0E0             PUSH    ACC
   3471    000035                  IF      lcall_mode
   3472    000035 02....           LJMP    ?F_OPERATION_L02
   3473    000038                  ELSE
   3474    000038                  SJMP    ?F_OPERATION_L02
   3475    000038                  ENDIF
   3476    000038                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_NEG_ASG_DPTR_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_DPTR1_L02REL    CONST PUB UNTYP.       RCODE      3 
?F_OPERATION_DPTR_L02REL    CONST PUB UNTYP.       RCODE      F 
?F_OPERATION_L02    ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OUT                 REL    CONST UNTYP.           RCODE      29 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:957           #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 56          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3477    000000          
   3478    000000          
   3479    000000                  MODULE  ?F_ADD_ASG_R1_R4567_L02         ;
                            Input: R1, A/R4567
   3480    000000                  RSEG    RCODE:CODE:NOROOT       
   3481    000000                  PUBLIC  ?F_ADD_ASG_R1_R4567_L02
   3482    000000                  EXTERN  ?F_OPERATION_R1_L02
   3483    000000          
   3484    000000          ?F_ADD_ASG_R1_R4567_L02:
   3485    000000 75F001           MOV     B,#001H
   3486    000003                  IF      lcall_mode
   3487    000003 02....           LJMP    ?F_OPERATION_R1_L02
   3488    000006                  ELSE
   3489    000006                  SJMP    ?F_OPERATION_R1_L02
   3490    000006                  ENDIF
   3491    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_R1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R1_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:527E          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3492    000000          
   3493    000000                  MODULE  ?F_SUB_ASG_R1_R4567_L02
   3494    000000                  RSEG    RCODE:CODE:NOROOT       
   3495    000000                  PUBLIC  ?F_SUB_ASG_R1_R4567_L02
   3496    000000                  EXTERN  ?F_OPERATION_R1_L02
   3497    000000          
   3498    000000          ?F_SUB_ASG_R1_R4567_L02:
   3499    000000 75F011           MOV     B,#011H
   3500    000003                  IF      lcall_mode
   3501    000003 02....           LJMP    ?F_OPERATION_R1_L02
   3502    000006                  ELSE
   3503    000006                  SJMP    ?F_OPERATION_R1_L02
   3504    000006                  ENDIF
   3505    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_R1_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_R1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:86F4          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3506    000000          
   3507    000000                  MODULE  ?F_MUL_ASG_R1_R4567_L02
   3508    000000                  RSEG    RCODE:CODE:NOROOT       
   3509    000000                  PUBLIC  ?F_MUL_ASG_R1_R4567_L02
   3510    000000                  EXTERN  ?F_OPERATION_R1_L02
   3511    000000          
   3512    000000          ?F_MUL_ASG_R1_R4567_L02:
   3513    000000 75F021           MOV     B,#021H
   3514    000003                  IF      lcall_mode
   3515    000003 02....           LJMP    ?F_OPERATION_R1_L02
   3516    000006                  ELSE
   3517    000006                  SJMP    ?F_OPERATION_R1_L02
   3518    000006                  ENDIF
   3519    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_R1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R1_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:C366          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3520    000000          
   3521    000000                  MODULE  ?F_DIV_ASG_R1_R4567_L02
   3522    000000                  RSEG    RCODE:CODE:NOROOT       
   3523    000000                  PUBLIC  ?F_DIV_ASG_R1_R4567_L02
   3524    000000                  EXTERN  ?F_OPERATION_R1_L02
   3525    000000          
   3526    000000          ?F_DIV_ASG_R1_R4567_L02:
   3527    000000 75F031           MOV     B,#031H
   3528    000003                  IF      lcall_mode
   3529    000003 02....           LJMP    ?F_OPERATION_R1_L02
   3530    000006                  ELSE
   3531    000006                  SJMP    ?F_OPERATION_R1_L02
   3532    000006                  ENDIF
   3533    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_R1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R1_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:68FA          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3534    000000          
   3535    000000                  MODULE  ?F_NEG_ASG_R1_R4567_L02
   3536    000000                  RSEG    RCODE:CODE:NOROOT       
   3537    000000                  PUBLIC  ?F_NEG_ASG_R1_R4567_L02
   3538    000000                  EXTERN  ?F_OPERATION_R1_L02
   3539    000000          
   3540    000000          ?F_NEG_ASG_R1_R4567_L02:
   3541    000000 75F051           MOV     B,#051H
   3542    000003                  IF      lcall_mode
   3543    000003 02....           LJMP    ?F_OPERATION_R1_L02
   3544    000006                  ELSE
   3545    000006                  SJMP    ?F_OPERATION_R1_L02
   3546    000006                  ENDIF
   3547    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_NEG_ASG_R1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R1_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:38A0          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3548    000000          
   3549    000000                  MODULE  ?F_OPERATION_R1_L02             ;
                            Input: R1, A/R4567
   3550    000000                  RSEG    RCODE:CODE:NOROOT       
   3551    000000                  PUBLIC  ?F_ADD_POST_R1_R4567_L02
   3552    000000                  PUBLIC  ?F_OPERATION_R1_L02
   3553    000000                  EXTERN  ?F_OPERATION_R_L02
   3554    000000          
   3555    000000          ?F_ADD_POST_R1_R4567_L02:
   3556    000000 75F049           MOV     B,#049H
   3557    000003 FC               MOV     R4,A
   3558    000004          ?F_OPERATION_R1_L02:
   3559    000004 EB               MOV     A,R3
   3560    000005 C0E0             PUSH    ACC
   3561    000007 EA               MOV     A,R2
   3562    000008 C0E0             PUSH    ACC
   3563    00000A E9               MOV     A,R1
   3564    00000B C0E0             PUSH    ACC
   3565    00000D E8               MOV     A,R0
   3566    00000E C0E0             PUSH    ACC
   3567    000010 E9               MOV     A,R1
   3568    000011 F8               MOV     R0,A
   3569    000012                  IF      lcall_mode
   3570    000012 02....           LJMP    ?F_OPERATION_R_L02
   3571    000015                  ELSE
   3572    000015                  SJMP    ?F_OPERATION_R_L02
   3573    000015                  ENDIF
   3574    000015                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R1_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R1_L02 REL    CONST PUB UNTYP.       RCODE      4 
?F_OPERATION_R_L02  ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:32C9          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 21          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3575    000000          
   3576    000000          
   3577    000000          
   3578    000000                  MODULE  ?F_ADD_ASG_R0_R4567_L02         ;
                            Input: R0, A/R4567
   3579    000000                  RSEG    RCODE:CODE:NOROOT                   
                                  
   3580    000000                  PUBLIC  ?F_ADD_ASG_R0_R4567_L02
   3581    000000                  EXTERN  ?F_OPERATION_R0_L02
   3582    000000          
   3583    000000          ?F_ADD_ASG_R0_R4567_L02:
   3584    000000 75F001           MOV     B,#001H
   3585    000003                  IF      lcall_mode
   3586    000003 02....           LJMP    ?F_OPERATION_R0_L02
   3587    000006                  ELSE
   3588    000006                  SJMP    ?F_OPERATION_R0_L02
   3589    000006                  ENDIF
   3590    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_ASG_R0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R0_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:2F5           #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3591    000000          
   3592    000000                  MODULE  ?F_SUB_ASG_R0_R4567_L02
   3593    000000                  RSEG    RCODE:CODE:NOROOT       
   3594    000000                  PUBLIC  ?F_SUB_ASG_R0_R4567_L02
   3595    000000                  EXTERN  ?F_OPERATION_R0_L02
   3596    000000          
   3597    000000          ?F_SUB_ASG_R0_R4567_L02:
   3598    000000 75F011           MOV     B,#011H
   3599    000003                  IF      lcall_mode
   3600    000003 02....           LJMP    ?F_OPERATION_R0_L02
   3601    000006                  ELSE
   3602    000006                  SJMP    ?F_OPERATION_R0_L02
   3603    000006                  ENDIF
   3604    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_OPERATION_R0_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_ASG_R0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:136C          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3605    000000          
   3606    000000                  MODULE  ?F_MUL_ASG_R0_R4567_L02
   3607    000000                  RSEG    RCODE:CODE:NOROOT       
   3608    000000                  PUBLIC  ?F_MUL_ASG_R0_R4567_L02
   3609    000000                  EXTERN  ?F_OPERATION_R0_L02
   3610    000000          
   3611    000000          ?F_MUL_ASG_R0_R4567_L02:
   3612    000000 75F021           MOV     B,#021H
   3613    000003                  IF      lcall_mode
   3614    000003 02....           LJMP    ?F_OPERATION_R0_L02
   3615    000006                  ELSE
   3616    000006                  SJMP    ?F_OPERATION_R0_L02
   3617    000006                  ENDIF
   3618    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_MUL_ASG_R0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R0_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:56FE          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3619    000000          
   3620    000000                  MODULE  ?F_DIV_ASG_R0_R4567_L02
   3621    000000                  RSEG    RCODE:CODE:NOROOT       
   3622    000000                  PUBLIC  ?F_DIV_ASG_R0_R4567_L02
   3623    000000                  EXTERN  ?F_OPERATION_R0_L02
   3624    000000          
   3625    000000          ?F_DIV_ASG_R0_R4567_L02:
   3626    000000 75F031           MOV     B,#031H
   3627    000003                  IF      lcall_mode
   3628    000003 02....           LJMP    ?F_OPERATION_R0_L02
   3629    000006                  ELSE
   3630    000006                  SJMP    ?F_OPERATION_R0_L02
   3631    000006                  ENDIF
   3632    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_DIV_ASG_R0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R0_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:FD62          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3633    000000          
   3634    000000                  MODULE  ?F_NEG_ASG_R0_R4567_L02
   3635    000000                  RSEG    RCODE:CODE:NOROOT       
   3636    000000                  PUBLIC  ?F_NEG_ASG_R0_R4567_L02
   3637    000000                  EXTERN  ?F_OPERATION_R0_L02
   3638    000000          
   3639    000000          ?F_NEG_ASG_R0_R4567_L02:
   3640    000000 75F051           MOV     B,#051H
   3641    000003                  IF      lcall_mode
   3642    000003 02....           LJMP    ?F_OPERATION_R0_L02
   3643    000006                  ELSE
   3644    000006                  SJMP    ?F_OPERATION_R0_L02
   3645    000006                  ENDIF
   3646    000006                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_NEG_ASG_R0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R0_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:AD38          #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 6          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3647    000000          
   3648    000000                  MODULE  ?F_OPERATION_R0_L02     ; Input
                            R0,B,R4567
   3649    000000                  RSEG    RCODE:CODE:NOROOT                   
                               ; Save R0123
   3650    000000                  PUBLIC  ?F_ADD_POST_R0_R4567_L02
   3651    000000                  PUBLIC  ?F_OPERATION_R0_L02
   3652    000000                  EXTERN  ?F_OPERATION_R_L02
   3653    000000          
   3654    000000          ?F_ADD_POST_R0_R4567_L02:
   3655    000000 75F049           MOV     B,#049H
   3656    000003 FC               MOV     R4,A
   3657    000004          ?F_OPERATION_R0_L02:
   3658    000004 EB               MOV     A,R3
   3659    000005 C0E0             PUSH    ACC
   3660    000007 EA               MOV     A,R2
   3661    000008 C0E0             PUSH    ACC
   3662    00000A E9               MOV     A,R1
   3663    00000B C0E0             PUSH    ACC
   3664    00000D E8               MOV     A,R0
   3665    00000E C0E0             PUSH    ACC
   3666    000010                  IF      lcall_mode
   3667    000010 02....           LJMP    ?F_OPERATION_R_L02
   3668    000013                  ELSE
   3669    000013                  SJMP    ?F_OPERATION_R_L02
   3670    000013                  ENDIF
   3671    000013                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R0_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R0_L02 REL    CONST PUB UNTYP.       RCODE      4 
?F_OPERATION_R_L02  ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:AA59          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 19          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3672    000000          
   3673    000000          
   3674    000000                  MODULE  ?F_OPERATION_L02  ; Input: R0123 and
                            R4567 are operands
   3675    000000                  RSEG    RCODE:CODE:NOROOT                 ; 
                                  B contains flags
   3676    000000                  PUBLIC  ?F_OPERATION_R_L02      ;       
                                                                    R4567 is
                                                                    operand
   3677    000000                  PUBLIC  ?F_OPERATION_L02  ;          high
                                                              nibble is
                                                              operation to
                                                              do
   3678    000000                  EXTERN  ?F_ADD_L02        ;           0 ADD,
                                                              1 SUB_R, 2 MUL, 3
                                                              DIV_R,
   3679    000000                  EXTERN  ?F_SUB_L02        ;           4
                                                              ADD_POST, 5 NEG,
                                                              6 ADD, 7
                                                              SUB,
   3680    000000                  EXTERN  ?F_SUB_R_L02      ;           8 MUL,
                                                              9 DIV, A
                                                              ADD_POST_R,
   3681    000000                  EXTERN  ?F_MUL_L02        ;           B
                                                              NEG_R
   3682    000000                  EXTERN  ?F_DIV_R_L02      ;          B.0 if
                                                              idata-pointer (on
                                                              TOS)
   3683    000000                  EXTERN  ?F_DIV_L02        ;          B.2 if
                                                              xdata-pointer (on
                                                              TOS)
   3684    000000                  EXTERN  ?F_ADD_POST_L02   ;          B.3 if
                                                              to restore R4567
                                                              from 
   3685    000000                  EXTERN  ?F_ADD_POST_R_L02 ;             
                                                              stack (post-opera
                                                             tion)
   3686    000000                  EXTERN  ?NEG_L02          ;          B.1 if
                                                              pdata-pointer (on
                                                              TOS)
   3687    000000                                            ; Make operation,
                            save result through
   3688    000000                                            ; pointer,
                            optionally pop old value. 
   3689    000000          ?F_OPERATION_R_L02:
   3690    000000 E6               MOV     A,@R0
   3691    000001 FB               MOV     R3,A
   3692    000002 08               INC     R0
   3693    000003 E6               MOV     A,@R0
   3694    000004 FA               MOV     R2,A
   3695    000005 08               INC     R0
   3696    000006 E6               MOV     A,@R0
   3697    000007 F9               MOV     R1,A
   3698    000008 08               INC     R0
   3699    000009 E6               MOV     A,@R0
   3700    00000A C8               XCH     A,R0
   3701    00000B 30F310           JNB     B.3,OUT0
   3702    00000E C8               XCH     A,R0
   3703    00000F C0E0             PUSH    ACC
   3704    000011 C8               XCH     A,R0
   3705    000012 C9               XCH     A,R1
   3706    000013 C0E0             PUSH    ACC
   3707    000015 C9               XCH     A,R1
   3708    000016 CA               XCH     A,R2
   3709    000017 C0E0             PUSH    ACC
   3710    000019 CA               XCH     A,R2
   3711    00001A CB               XCH     A,R3
   3712    00001B C0E0             PUSH    ACC
   3713    00001D CB               XCH     A,R3
   3714    00001E C0E0     OUT0:   PUSH    ACC
   3715    000020          ?F_OPERATION_L02:
   3716    000020 C0F0             PUSH    B
   3717    000022 E5F0             MOV     A,B
   3718    000024 C4               SWAP    A
   3719    000025 540F             ANL     A,#0FH
   3720    000027 75F005           MOV     B,#5
   3721    00002A A4               MUL     AB
   3722    00002B 7582..           MOV     DPL,#LOW TABLE
   3723    00002E 7583..           MOV     DPH,#HIGH TABLE
   3724    000031 73               JMP     @A+DPTR
   3725    000032 12....   TABLE:  LCALL   ?F_ADD_L02
   3726    000035 803A             SJMP    END_PART
   3727    000037 12....           LCALL   ?F_SUB_R_L02
   3728    00003A 8035             SJMP    END_PART
   3729    00003C 12....           LCALL   ?F_MUL_L02
   3730    00003F 8030             SJMP    END_PART
   3731    000041 12....           LCALL   ?F_DIV_R_L02
   3732    000044 802B             SJMP    END_PART
   3733    000046 12....           LCALL   ?F_ADD_POST_L02
   3734    000049 8026             SJMP    END_PART
   3735    00004B 12....           LCALL   ?NEG_L02
   3736    00004E 8021             SJMP    END_PART
   3737    000050          
   3738    000050 12....           LCALL   ?F_ADD_L02      ;Reversed variants
   3739    000053 801C             SJMP    END_PART
   3740    000055 12....           LCALL   ?F_SUB_L02
   3741    000058 8017             SJMP    END_PART
   3742    00005A 12....           LCALL   ?F_MUL_L02
   3743    00005D 8012             SJMP    END_PART
   3744    00005F 12....           LCALL   ?F_DIV_L02
   3745    000062 800D             SJMP    END_PART
   3746    000064 12....           LCALL   ?F_ADD_POST_R_L02
   3747    000067 8008             SJMP    END_PART
   3748    000069 EF               MOV     A,R7            ; NEG
   3749    00006A 4E               ORL     A,R6
   3750    00006B 6004             JZ      END_PART
   3751    00006D EF               MOV     A,R7
   3752    00006E B2E7             CPL     ACC.7
   3753    000070 FF               MOV     R7,A
   3754    000071          END_PART:
   3755    000071 D0F0             POP     B
   3756    000073 FB               MOV     R3,A
   3757    000074 30F010           JNB     B.0,NOT_IDATA
   3758    000077 D0E0             POP     ACC
   3759    000079 F8               MOV     R0,A
   3760    00007A EC               MOV     A,R4
   3761    00007B F6               MOV     @R0,A
   3762    00007C 18               DEC     R0
   3763    00007D ED               MOV     A,R5
   3764    00007E F6               MOV     @R0,A
   3765    00007F 18               DEC     R0
   3766    000080 EE               MOV     A,R6
   3767    000081 F6               MOV     @R0,A
   3768    000082 18               DEC     R0
   3769    000083 EF               MOV     A,R7
   3770    000084 F6               MOV     @R0,A
   3771    000085 802E             SJMP    ENDIT
   3772    000087          NOT_IDATA:
   3773    000087 30F21D           JNB     B.2,NOT_XDATA
   3774    00008A D083             POP     DPH
   3775    00008C D082             POP     DPL
   3776    00008E EF               MOV     A,R7
   3777    00008F F0               MOVX    @DPTR,A
   3778    000090 A3               INC     DPTR
   3779    000091 EE               MOV     A,R6
   3780    000092 F0               MOVX    @DPTR,A
   3781    000093 A3               INC     DPTR
   3782    000094 ED               MOV     A,R5
   3783    000095 F0               MOVX    @DPTR,A
   3784    000096 A3               INC     DPTR
   3785    000097 EC               MOV     A,R4
   3786    000098 F0               MOVX    @DPTR,A
   3787    000099 E582             MOV     A,DPL
   3788    00009B 24FD             ADD     A,#0FDH
   3789    00009D F582             MOV     DPL,A
   3790    00009F E583             MOV     A,DPH
   3791    0000A1 34FF             ADDC    A,#0FFH
   3792    0000A3 F583             MOV     DPH,A
   3793    0000A5 800E             SJMP    ENDIT
   3794    0000A7          NOT_XDATA:
   3795    0000A7 D0E0             POP     ACC
   3796    0000A9 F8               MOV     R0,A
   3797    0000AA EC               MOV     A,R4
   3798    0000AB F2               MOVX    @R0,A
   3799    0000AC 18               DEC     R0
   3800    0000AD ED               MOV     A,R5
   3801    0000AE F2               MOVX    @R0,A
   3802    0000AF 18               DEC     R0
   3803    0000B0 EE               MOV     A,R6
   3804    0000B1 F2               MOVX    @R0,A
   3805    0000B2 18               DEC     R0
   3806    0000B3 EF               MOV     A,R7
   3807    0000B4 F2               MOVX    @R0,A
   3808    0000B5 30F30C   ENDIT:  JNB     B.3,OUT
   3809    0000B8 D0E0             POP     ACC
   3810    0000BA FF               MOV     R7,A
   3811    0000BB D0E0             POP     ACC
   3812    0000BD FE               MOV     R6,A
   3813    0000BE D0E0             POP     ACC
   3814    0000C0 FD               MOV     R5,A
   3815    0000C1 D0E0             POP     ACC
   3816    0000C3 FC               MOV     R4,A
   3817    0000C4 D0E0     OUT:    POP     ACC
   3818    0000C6 F8               MOV     R0,A
   3819    0000C7 D0E0             POP     ACC
   3820    0000C9 F9               MOV     R1,A
   3821    0000CA D0E0             POP     ACC
   3822    0000CC FA               MOV     R2,A
   3823    0000CD D0E0             POP     ACC
   3824    0000CF CB               XCH     A,R3
   3825    0000D0 22               RET
   3826    0000D1                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_L02          ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?F_ADD_POST_L02     ABS    CONST EXT [006] UNTYP. __EXTERNS  Solved Extern 
?F_ADD_POST_R_L02   ABS    CONST EXT [007] UNTYP. __EXTERNS  Solved Extern 
?F_DIV_L02          ABS    CONST EXT [005] UNTYP. __EXTERNS  Solved Extern 
?F_DIV_R_L02        ABS    CONST EXT [004] UNTYP. __EXTERNS  Solved Extern 
?F_MUL_L02          ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
?F_OPERATION_L02    REL    CONST PUB UNTYP.       RCODE      20 
?F_OPERATION_R_L02  REL    CONST PUB UNTYP.       RCODE      0 
?F_SUB_L02          ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?F_SUB_R_L02        ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?NEG_L02            ABS    CONST EXT [008] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDIT               REL    CONST UNTYP.           RCODE      B5 
END_PART            REL    CONST UNTYP.           RCODE      71 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOT_IDATA           REL    CONST UNTYP.           RCODE      87 
NOT_XDATA           REL    CONST UNTYP.           RCODE      A7 
OUT                 REL    CONST UNTYP.           RCODE      C4 
OUT0                REL    CONST UNTYP.           RCODE      1E 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TABLE               REL    CONST UNTYP.           RCODE      32 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:343C          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 209         #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3827    000000          
   3828    000000                  
   3829    000000                  MODULE  ?NEG_L02
   3830    000000                  RSEG    RCODE:CODE:NOROOT
   3831    000000                  PUBLIC  ?NEG_L02
   3832    000000                  
   3833    000000          ?NEG_L02:
   3834    000000 E8               MOV     A,R0            ; NEG
   3835    000001 FC               MOV     R4,A
   3836    000002 E9               MOV     A,R1
   3837    000003 FD               MOV     R5,A
   3838    000004 EA               MOV     A,R2
   3839    000005 FE               MOV     R6,A
   3840    000006 EB               MOV     A,R3
   3841    000007 FF               MOV     R7,A
   3842    000008 4E               ORL     A,R6
   3843    000009 6004             JZ      END_PART
   3844    00000B EF               MOV     A,R7
   3845    00000C B2E7             CPL     ACC.7
   3846    00000E FF               MOV     R7,A
   3847    00000F          END_PART:
   3848    00000F 22               RET
   3849    000010                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?NEG_L02            REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
END_PART            REL    CONST UNTYP.           RCODE      F 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:1C3A          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 16          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3850    000000          
   3851    000000          ;@@@@@@@@@@@@@@@@@@@@@@
   3852    000000          
   3853    000000                  MODULE  ?F_ADD_POST_R0_R0123_L02
   3854    000000                  RSEG    RCODE:CODE:NOROOT       
   3855    000000                  PUBLIC ?F_ADD_POST_R0_R0123_L02
   3856    000000                  EXTERN  ?F_OPERATION_R0_L02
   3857    000000          ?F_ADD_POST_R0_R0123_L02:
   3858    000000 75F041           MOV     B,#041H
   3859    000003 CC               XCH     A,R4
   3860    000004 C0E0             PUSH    ACC
   3861    000006 ED               MOV     A,R5
   3862    000007 C0E0             PUSH    ACC
   3863    000009 EE               MOV     A,R6
   3864    00000A C0E0             PUSH    ACC
   3865    00000C EF               MOV     A,R7
   3866    00000D C0E0             PUSH    ACC
   3867    00000F 12....           LCALL   ?F_OPERATION_R0_L02
   3868    000012 CC               XCH     A,R4
   3869    000013 F8               MOV     R0,A
   3870    000014 ED               MOV     A,R5
   3871    000015 F9               MOV     R1,A
   3872    000016 EE               MOV     A,R6
   3873    000017 FA               MOV     R2,A
   3874    000018 EF               MOV     A,R7
   3875    000019 FB               MOV     R3,A
   3876    00001A D0E0             POP     ACC
   3877    00001C FF               MOV     R7,A
   3878    00001D D0E0             POP     ACC
   3879    00001F FE               MOV     R6,A
   3880    000020 D0E0             POP     ACC
   3881    000022 FD               MOV     R5,A
   3882    000023 D0E0             POP     ACC
   3883    000025 CC               XCH     A,R4
   3884    000026 22               RET
   3885    000027                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R0_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R0_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:3348          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 39          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3886    000000          
   3887    000000                  MODULE  ?F_ADD_POST_R1_R0123_L02
   3888    000000                  RSEG    RCODE:CODE:NOROOT       
   3889    000000                  PUBLIC ?F_ADD_POST_R1_R0123_L02
   3890    000000                  EXTERN  ?F_OPERATION_R1_L02
   3891    000000          ?F_ADD_POST_R1_R0123_L02:
   3892    000000 75F041           MOV     B,#041H
   3893    000003 CC               XCH     A,R4
   3894    000004 C0E0             PUSH    ACC
   3895    000006 ED               MOV     A,R5
   3896    000007 C0E0             PUSH    ACC
   3897    000009 EE               MOV     A,R6
   3898    00000A C0E0             PUSH    ACC
   3899    00000C EF               MOV     A,R7
   3900    00000D C0E0             PUSH    ACC
   3901    00000F 12....           LCALL   ?F_OPERATION_R1_L02
   3902    000012 CC               XCH     A,R4
   3903    000013 F8               MOV     R0,A
   3904    000014 ED               MOV     A,R5
   3905    000015 F9               MOV     R1,A
   3906    000016 EE               MOV     A,R6
   3907    000017 FA               MOV     R2,A
   3908    000018 EF               MOV     A,R7
   3909    000019 FB               MOV     R3,A
   3910    00001A D0E0             POP     ACC
   3911    00001C FF               MOV     R7,A
   3912    00001D D0E0             POP     ACC
   3913    00001F FE               MOV     R6,A
   3914    000020 D0E0             POP     ACC
   3915    000022 FD               MOV     R5,A
   3916    000023 D0E0             POP     ACC
   3917    000025 CC               XCH     A,R4
   3918    000026 22               RET
   3919    000027                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R1_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R1_L02 ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:8D20          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 39          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3920    000000          
   3921    000000                  MODULE  ?F_ADD_POST_PR0_R0123_L02
   3922    000000                  RSEG    RCODE:CODE:NOROOT       
   3923    000000                  PUBLIC ?F_ADD_POST_PR0_R0123_L02
   3924    000000                  EXTERN  ?F_OPERATION_PR0_L02
   3925    000000          ?F_ADD_POST_PR0_R0123_L02:
   3926    000000 75F041           MOV     B,#041H
   3927    000003 CC               XCH     A,R4
   3928    000004 C0E0             PUSH    ACC
   3929    000006 ED               MOV     A,R5
   3930    000007 C0E0             PUSH    ACC
   3931    000009 EE               MOV     A,R6
   3932    00000A C0E0             PUSH    ACC
   3933    00000C EF               MOV     A,R7
   3934    00000D C0E0             PUSH    ACC
   3935    00000F 12....           LCALL   ?F_OPERATION_PR0_L02
   3936    000012 CC               XCH     A,R4
   3937    000013 F8               MOV     R0,A
   3938    000014 ED               MOV     A,R5
   3939    000015 F9               MOV     R1,A
   3940    000016 EE               MOV     A,R6
   3941    000017 FA               MOV     R2,A
   3942    000018 EF               MOV     A,R7
   3943    000019 FB               MOV     R3,A
   3944    00001A D0E0             POP     ACC
   3945    00001C FF               MOV     R7,A
   3946    00001D D0E0             POP     ACC
   3947    00001F FE               MOV     R6,A
   3948    000020 D0E0             POP     ACC
   3949    000022 FD               MOV     R5,A
   3950    000023 D0E0             POP     ACC
   3951    000025 CC               XCH     A,R4
   3952    000026 22               RET
   3953    000027                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_PR0_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR0_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:A467          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 39          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3954    000000          
   3955    000000                  MODULE  ?F_ADD_POST_PR1_R0123_L02
   3956    000000                  RSEG    RCODE:CODE:NOROOT       
   3957    000000                  PUBLIC ?F_ADD_POST_PR1_R0123_L02
   3958    000000                  EXTERN  ?F_OPERATION_PR1_L02
   3959    000000          ?F_ADD_POST_PR1_R0123_L02:
   3960    000000 75F041           MOV     B,#041H
   3961    000003 CC               XCH     A,R4
   3962    000004 C0E0             PUSH    ACC
   3963    000006 ED               MOV     A,R5
   3964    000007 C0E0             PUSH    ACC
   3965    000009 EE               MOV     A,R6
   3966    00000A C0E0             PUSH    ACC
   3967    00000C EF               MOV     A,R7
   3968    00000D C0E0             PUSH    ACC
   3969    00000F 12....           LCALL   ?F_OPERATION_PR1_L02
   3970    000012 CC               XCH     A,R4
   3971    000013 F8               MOV     R0,A
   3972    000014 ED               MOV     A,R5
   3973    000015 F9               MOV     R1,A
   3974    000016 EE               MOV     A,R6
   3975    000017 FA               MOV     R2,A
   3976    000018 EF               MOV     A,R7
   3977    000019 FB               MOV     R3,A
   3978    00001A D0E0             POP     ACC
   3979    00001C FF               MOV     R7,A
   3980    00001D D0E0             POP     ACC
   3981    00001F FE               MOV     R6,A
   3982    000020 D0E0             POP     ACC
   3983    000022 FD               MOV     R5,A
   3984    000023 D0E0             POP     ACC
   3985    000025 CC               XCH     A,R4
   3986    000026 22               RET
   3987    000027                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_PR1_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_PR1_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:2375          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 39          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   3988    000000          
   3989    000000                  MODULE  ?F_ADD_POST_R123_R0123_L02
   3990    000000                  RSEG    RCODE:CODE:NOROOT       
   3991    000000                  PUBLIC ?F_ADD_POST_R123_R0123_L02
   3992    000000                  EXTERN  ?F_OPERATION_R123_L02
   3993    000000          ?F_ADD_POST_R123_R0123_L02:
   3994    000000 75F048           MOV     B,#048H
   3995    000003 CC               XCH     A,R4
   3996    000004 C0E0             PUSH    ACC
   3997    000006 ED               MOV     A,R5
   3998    000007 C0E0             PUSH    ACC
   3999    000009 EE               MOV     A,R6
   4000    00000A C0E0             PUSH    ACC
   4001    00000C EF               MOV     A,R7
   4002    00000D C0E0             PUSH    ACC
   4003    00000F 12....           LCALL   ?F_OPERATION_R123_L02
   4004    000012 CC               XCH     A,R4
   4005    000013 F8               MOV     R0,A
   4006    000014 ED               MOV     A,R5
   4007    000015 F9               MOV     R1,A
   4008    000016 EE               MOV     A,R6
   4009    000017 FA               MOV     R2,A
   4010    000018 EF               MOV     A,R7
   4011    000019 FB               MOV     R3,A
   4012    00001A D0E0             POP     ACC
   4013    00001C FF               MOV     R7,A
   4014    00001D D0E0             POP     ACC
   4015    00001F FE               MOV     R6,A
   4016    000020 D0E0             POP     ACC
   4017    000022 FD               MOV     R5,A
   4018    000023 D0E0             POP     ACC
   4019    000025 CC               XCH     A,R4
   4020    000026 22               RET
   4021    000027                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R123_R0123_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:ACAF          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 39          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:33             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_float.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_float.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_float.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   4022    000000          
   4023    000000                  MODULE  ?F_ADD_POST_R567_R4567_L02
   4024    000000                  RSEG    RCODE:CODE:NOROOT       
   4025    000000                  PUBLIC ?F_ADD_POST_R567_R4567_L02
   4026    000000                  EXTERN  ?F_OPERATION_R123_L02
   4027    000000          ?F_ADD_POST_R567_R4567_L02:
   4028    000000 75F048           MOV     B,#048H
   4029    000003 FC               MOV     R4,A
   4030    000004 E8               MOV     A,R0
   4031    000005 C0E0             PUSH    ACC
   4032    000007 E9               MOV     A,R1
   4033    000008 C0E0             PUSH    ACC
   4034    00000A EA               MOV     A,R2
   4035    00000B C0E0             PUSH    ACC
   4036    00000D EB               MOV     A,R3
   4037    00000E C0E0             PUSH    ACC
   4038    000010 ED               MOV     A,R5
   4039    000011 F9               MOV     R1,A
   4040    000012 EE               MOV     A,R6
   4041    000013 FA               MOV     R2,A
   4042    000014 EF               MOV     A,R7
   4043    000015 FB               MOV     R3,A
   4044    000016 12....           LCALL   ?F_OPERATION_R123_L02
   4045    000019 F8               MOV     R0,A
   4046    00001A D0E0             POP     ACC
   4047    00001C FB               MOV     R3,A
   4048    00001D D0E0             POP     ACC
   4049    00001F FA               MOV     R2,A
   4050    000020 D0E0             POP     ACC
   4051    000022 F9               MOV     R1,A
   4052    000023 D0E0             POP     ACC
   4053    000025 C8               XCH     A,R0
   4054    000026 22               RET
   4055    000027                  END


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?F_ADD_POST_R567_R4567_L02REL    CONST PUB UNTYP.       RCODE      0 
?F_OPERATION_R123_L02ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
lcall_mode          ABS    CONST UNTYP.           ASEG       1 


##############################
#          CRC:6F01          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 39          #
#    Modules:        111     #
#     Total errors:   0      #
#     Total warnings: 0      #
##############################



