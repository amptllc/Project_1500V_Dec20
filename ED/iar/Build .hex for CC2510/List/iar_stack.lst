###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

      1    000000          ;---------------------------------------------------
                           --------------------------
      2    000000          ;
      3    000000          ;       File:           iar_stack.s51
      4    000000          ;
      5    000000          ;       Version:        6.10
      6    000000          ;
      7    000000          ;       Created:        12/Mar/02 IANB
      8    000000          ;       Revised:
      9    000000          ;
     10    000000          ;
     11    000000          ;       Description:    This file contain functions
                            to get stackpointers
     12    000000          ;                       with offset, functions to
                            allocate stack.
     13    000000          ;
     14    000000          ;                       
     15    000000          ;       REVISON INFORMATION
     16    000000          ;                                                   
                                   
     17    000000          ;                                                   
                                   
     18    000000          ;       Log information is available at the end of
                            this file
     19    000000          ;---------------------------------------------------
                           --------------------------
     20    000000          
     21    000000          #include "iar_common.h"
     22    000000          
     23    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
     24    000000          ;
     25    000000          ;       Function: ?ALLOC_EXT_STACK8
     26    000000          ;
     27    000000          ;       Description:
     28    000000          ;               Allocate an area of size 1 to 256
                            bytes on the extended stack.
     29    000000          ;
     30    000000          ;
     31    000000          ;              3FF
     32    000000          ;               :
     33    000000          ;               +------+
     34    000000          ;               | xxxx | <-- post ESP
     35    000000          ;               + - - -+
     36    000000          ;               |   :  | - - - - - - - - 
     37    000000          ;               |   :  |                 |
     38    000000          ;               |   :  |                 |
     39    000000          ;               |   :  | <-- pre ESP     |
     40    000000          ;               + - - -+                 | To be
                            deallocated
     41    000000          ;               | RetX |                 |
     42    000000          ;               + - - -+                 |
     43    000000          ;               | RetH |                 |
     44    000000          ;               + - - -+                 |
     45    000000          ;               | RetL | - - - - - - - - 
     46    000000          ;               +------+
     47    000000          ;               :
     48    000000          ;               0
     49    000000          ;
     50    000000          ;
     51    000000          ;       Register input:
     52    000000          ;               A      : Number of bytes to
                            allocate.
     53    000000          ;
     54    000000          ;       Register output:
     55    000000          ;               ESP    = ESP + A
     56    000000          ;               DPTR0  = Ret addr
     57    000000          ;               A      = Undefined.
     58    000000          ;               R0      = Undefined.
     59    000000          ;               CY     = Undefined.
     60    000000          ;
     61    000000          ;       Multiple DPTR
     62    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
     63    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
     64    000000          ;
     65    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
     66    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
     67    000000          ;
     68    000000          ;       Stack usage: 3
     69    000000          ;
     70    000000          ;---------------------------------------------------
                           --------------------------
     71    000000                  MODULE  ?ALLOC_EXT_STACK8
     72    000000                  RSEG    RCODE:CODE:NOROOT
     73    000000                  PUBLIC  ?ALLOC_EXT_STACK8
     74    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
     74.1  000000          #ifdef __EXTENDED_DPTR__
     74.2  000000          #endif ; __EXTENDED_DPTR__
     74.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
     74.4  000000          #ifdef __DPTR_SEPARATE__
     74.5  000000          #ifdef __EXTENDED_DPTR__
     74.6  000000          #endif ; __EXTENDED_DPTR__
     74.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
     74.8  000000          #ifdef __EXTENDED_DPTR__
     74.9  000000          #endif ; __EXTENDED_DPTR__
     74.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
     74.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
     74.12 000000          #ifdef __EXTENDED_DPTR__
     74.13 000000          #endif ; __EXTENDED_DPTR__
     74.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
     74.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
     74.16 000000          #ifdef __EXTENDED_DPTR__
     74.17 000000          #endif ; __EXTENDED_DPTR__
     74.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
     74.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
     74.20 000000          #ifdef __EXTENDED_DPTR__
     74.21 000000          #endif ; __EXTENDED_DPTR__
     74.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
     74.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
     74.24 000000          #ifdef __EXTENDED_DPTR__
     74.25 000000          #endif ; __EXTENDED_DPTR__
     74.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
     74.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
     74.28 000000          #ifdef __EXTENDED_DPTR__
     74.29 000000          #endif ; __EXTENDED_DPTR__
     74.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
     74.31 000000          #endif ; __DPTR_SEPARATE__
     74.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
     74.33 000000                  ENDM
     75    000000                  EXTERN  ?ESP
     76    000000          
     77    000000              cfi BLOCK ?ALLOC_EXT_STACK8 USING cfi_common
     78    000000              cfi NOFUNCTION
     79    000000          
     80    000000          ?ALLOC_EXT_STACK8:
     81    000000          ?ALLOC_EXT_STACK8_CFI_INVALID_BEGINS:
     82    000000              cfi invalid
     83    000000          #if (__CORE__ == __CORE_EXTENDED1__)
     87    000000          #elif defined(__EXTENDED_DPTR__)
     89    000000          #endif
     90    000000 D083             POP     DPH
     91    000002              cfi CFA_MACHINE MACHINE_SP - 1
     92    000002              cfi ?RET_HIGH DPH0
     93    000002 D082             POP     DPL             ; DPTR0 = Ret
                                                            addr
     94    000004              cfi CFA_MACHINE MACHINE_SP - 0
     95    000004              cfi ?RET_LOW DPL0
     96    000004          
     97    000004 2581             ADD     A,SP
     98    000006 A8A8             MOV     R0,0xA8 /* IE */      ; Preserve the
                                                                  Interrupt
                                                                  Enable
                                                                  register
     99    000008 C2AF             CLR     0xA8.7 /* IE.EA */    ; Disable all
                                                                  interrupts
                                                                  for max 8
                                                                  cycles
    100    00000A F581             MOV     SP,A
    101    00000C 5002             JNC     NoBorrow
    102    00000E 05..             INC     ?ESP
    103    000010          NoBorrow:
    104    000010 88A8             MOV     0xA8 /* IE */,R0
    105    000012          
    106    000012 E4               CLR     A
    107    000013 73               JMP     @A+DPTR
    108    000014          
    109    000014          ?ALLOC_EXT_STACK8_CFI_INVALID_ENDS:
    110    000014              cfi valid
    111    000014              cfi ENDBLOCK ?ALLOC_EXT_STACK8
    112    000014                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ALLOC_EXT_STACK8   REL    CONST PUB UNTYP.       RCODE      0 
?ALLOC_EXT_STACK8_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?ALLOC_EXT_STACK8_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      14 
?ESP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?RET                ABS    CONST UNTYP.           ASEG       Not solved 
?RET_EXT            ABS    CONST UNTYP.           ASEG       Not solved 
?RET_HIGH           ABS    CONST UNTYP.           ASEG       Not solved 
?RET_LOW            ABS    CONST UNTYP.           ASEG       Not solved 
?V_START            ABS    CONST UNTYP.           ASEG       Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BASEADDRESS         ABS    CONST UNTYP.           ASEG       Not solved 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
Base                ABS    CONST UNTYP.           ASEG       Not solved 
CFA_PSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CFA_SP              ABS    CONST UNTYP.           ASEG       Not solved 
CFA_XSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CODEALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
COMMON              ABS    CONST UNTYP.           ASEG       Not solved 
CONCAT              ABS    CONST UNTYP.           ASEG       Not solved 
DATAALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       Not solved 
DPTR0               ABS    CONST UNTYP.           ASEG       Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
ENDCOMMON           ABS    CONST UNTYP.           ASEG       Not solved 
ENDNAMES            ABS    CONST UNTYP.           ASEG       Not solved 
EXTENDS             ABS    CONST UNTYP.           ASEG       Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FRAMECELL           ABS    CONST UNTYP.           ASEG       Not solved 
Frame               ABS    CONST UNTYP.           ASEG       Not solved 
NAMES               ABS    CONST UNTYP.           ASEG       Not solved 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
NoBorrow            REL    CONST UNTYP.           RCODE      10 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               ABS    CONST UNTYP.           ASEG       Not solved 
PSPH                ABS    CONST UNTYP.           ASEG       Not solved 
PSPL                ABS    CONST UNTYP.           ASEG       Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RETH_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETL_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETURNADDRESS       ABS    CONST UNTYP.           ASEG       Not solved 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
Resource            ABS    CONST UNTYP.           ASEG       Not solved 
ResourceParts       ABS    CONST UNTYP.           ASEG       Not solved 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SameValue           ABS    CONST UNTYP.           ASEG       Not solved 
StackFrame          ABS    CONST UNTYP.           ASEG       Not solved 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               ABS    CONST UNTYP.           ASEG       Not solved 
Undefined           ABS    CONST UNTYP.           ASEG       Not solved 
V0                  ABS    CONST UNTYP.           ASEG       Not solved 
V1                  ABS    CONST UNTYP.           ASEG       Not solved 
V10                 ABS    CONST UNTYP.           ASEG       Not solved 
V11                 ABS    CONST UNTYP.           ASEG       Not solved 
V12                 ABS    CONST UNTYP.           ASEG       Not solved 
V13                 ABS    CONST UNTYP.           ASEG       Not solved 
V14                 ABS    CONST UNTYP.           ASEG       Not solved 
V15                 ABS    CONST UNTYP.           ASEG       Not solved 
V16                 ABS    CONST UNTYP.           ASEG       Not solved 
V17                 ABS    CONST UNTYP.           ASEG       Not solved 
V18                 ABS    CONST UNTYP.           ASEG       Not solved 
V19                 ABS    CONST UNTYP.           ASEG       Not solved 
V2                  ABS    CONST UNTYP.           ASEG       Not solved 
V20                 ABS    CONST UNTYP.           ASEG       Not solved 
V21                 ABS    CONST UNTYP.           ASEG       Not solved 
V22                 ABS    CONST UNTYP.           ASEG       Not solved 
V23                 ABS    CONST UNTYP.           ASEG       Not solved 
V24                 ABS    CONST UNTYP.           ASEG       Not solved 
V25                 ABS    CONST UNTYP.           ASEG       Not solved 
V26                 ABS    CONST UNTYP.           ASEG       Not solved 
V27                 ABS    CONST UNTYP.           ASEG       Not solved 
V28                 ABS    CONST UNTYP.           ASEG       Not solved 
V29                 ABS    CONST UNTYP.           ASEG       Not solved 
V3                  ABS    CONST UNTYP.           ASEG       Not solved 
V30                 ABS    CONST UNTYP.           ASEG       Not solved 
V31                 ABS    CONST UNTYP.           ASEG       Not solved 
V4                  ABS    CONST UNTYP.           ASEG       Not solved 
V5                  ABS    CONST UNTYP.           ASEG       Not solved 
V6                  ABS    CONST UNTYP.           ASEG       Not solved 
V7                  ABS    CONST UNTYP.           ASEG       Not solved 
V8                  ABS    CONST UNTYP.           ASEG       Not solved 
V9                  ABS    CONST UNTYP.           ASEG       Not solved 
VB                  ABS    CONST UNTYP.           ASEG       Not solved 
VirtualResource     ABS    CONST UNTYP.           ASEG       Not solved 
XSP16               ABS    CONST UNTYP.           ASEG       Not solved 
XSPH                ABS    CONST UNTYP.           ASEG       Not solved 
XSPL                ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_common   ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_names    ABS    CONST UNTYP.           ASEG       Not solved 
cfi_common          ABS    CONST UNTYP.           ASEG       Not solved 
cfi_names           ABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_commonABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_namesABS    CONST UNTYP.           ASEG       Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
samevalue           ABS    CONST UNTYP.           ASEG       Not solved 
sub                 ABS    CONST UNTYP.           ASEG       Not solved 
undefined           ABS    CONST UNTYP.           ASEG       Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:6978          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 20          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    113    000000          
    114    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
    115    000000          ;
    116    000000          ;       Function: ?ALLOC_EXT_STACK16
    117    000000          ;
    118    000000          ;       Description:
    119    000000          ;               Allocate an area of size 1 to 0xFFFF
                            bytes on the extended stack.
    120    000000          ;
    121    000000          ;       Register input:
    122    000000          ;               A      : Number of bytes to allocate
                            (Low byte).
    123    000000          ;               R0     : Number of bytes to allocate
                            (High byte).
    124    000000          ;
    125    000000          ;       Register output:
    126    000000          ;               ESP    = ESP + R0:A
    127    000000          ;               DPTR0  = Ret addr
    128    000000          ;               A      = Undefined.
    129    000000          ;               R0     = Undefined.
    130    000000          ;               B      = Undefined.
    131    000000          ;               CY     = Undefined.
    132    000000          ;
    133    000000          ;       Multiple DPTR
    134    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
    135    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    136    000000          ;
    137    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
    138    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    139    000000          ;
    140    000000          ;       Stack usage: 3
    141    000000          ;
    142    000000          ;---------------------------------------------------
                           --------------------------
    143    000000                  MODULE  ?ALLOC_EXT_STACK16
    144    000000                  RSEG    RCODE:CODE:NOROOT
    145    000000                  PUBLIC  ?ALLOC_EXT_STACK16
    146    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    146.1  000000          #ifdef __EXTENDED_DPTR__
    146.2  000000          #endif ; __EXTENDED_DPTR__
    146.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    146.4  000000          #ifdef __DPTR_SEPARATE__
    146.5  000000          #ifdef __EXTENDED_DPTR__
    146.6  000000          #endif ; __EXTENDED_DPTR__
    146.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    146.8  000000          #ifdef __EXTENDED_DPTR__
    146.9  000000          #endif ; __EXTENDED_DPTR__
    146.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    146.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    146.12 000000          #ifdef __EXTENDED_DPTR__
    146.13 000000          #endif ; __EXTENDED_DPTR__
    146.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    146.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    146.16 000000          #ifdef __EXTENDED_DPTR__
    146.17 000000          #endif ; __EXTENDED_DPTR__
    146.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    146.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    146.20 000000          #ifdef __EXTENDED_DPTR__
    146.21 000000          #endif ; __EXTENDED_DPTR__
    146.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    146.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    146.24 000000          #ifdef __EXTENDED_DPTR__
    146.25 000000          #endif ; __EXTENDED_DPTR__
    146.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    146.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    146.28 000000          #ifdef __EXTENDED_DPTR__
    146.29 000000          #endif ; __EXTENDED_DPTR__
    146.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    146.31 000000          #endif ; __DPTR_SEPARATE__
    146.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    146.33 000000                  ENDM
    147    000000                  EXTERN  ?ESP
    148    000000          
    149    000000              cfi BLOCK ?ALLOC_EXT_STACK16 USING cfi_common
    150    000000              cfi NOFUNCTION
    151    000000          
    152    000000          ?ALLOC_EXT_STACK16:
    153    000000          ?ALLOC_EXT_STACK16_CFI_INVALID_BEGINS:
    154    000000              cfi invalid
    155    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    159    000000          #elif defined(__EXTENDED_DPTR__)
    161    000000          #endif
    162    000000 D083             POP     DPH
    163    000002              cfi CFA_MACHINE MACHINE_SP - 1
    164    000002              cfi ?RET_HIGH DPH0
    165    000002 D082             POP     DPL             ; DPTR0 = Ret
                                                            addr
    166    000004              cfi CFA_MACHINE MACHINE_SP - 0
    167    000004              cfi ?RET_LOW DPL0
    168    000004          
    169    000004 2581             ADD     A,SP
    170    000006 85A8F0           MOV     B,0xA8 /* IE */    ; Preserve the
                                                               Interrupt Enable
                                                               register
    171    000009 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts
    172    00000B F581             MOV     SP,A
    173    00000D E8               MOV     A,R0
    174    00000E 35..             ADDC    A,?ESP
    175    000010 F5..             MOV     ?ESP,A
    176    000012 85F0A8           MOV     0xA8 /* IE */,B    ; Enable
                                                               interrupts
    177    000015          
    178    000015 E4               CLR     A
    179    000016 73               JMP     @A+DPTR
    180    000017          ?ALLOC_EXT_STACK16_CFI_INVALID_ENDS:
    181    000017              cfi valid
    182    000017              cfi ENDBLOCK ?ALLOC_EXT_STACK16
    183    000017                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ALLOC_EXT_STACK16  REL    CONST PUB UNTYP.       RCODE      0 
?ALLOC_EXT_STACK16_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?ALLOC_EXT_STACK16_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      17 
?ESP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:5BF9          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 23          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    184    000000          
    185    000000          
    186    000000          ;---------------------------------------------------
                           --------------------------
    187    000000          ;
    188    000000          ;       Function: ?DEALLOC_EXT_STACK8
    189    000000          ;
    190    000000          ;       Description:
    191    000000          ;               Deallocate an area of size 1 to 255
                            bytes on the extended stack.
    192    000000          ;
    193    000000          ;              3FF
    194    000000          ;               :
    195    000000          ;               +------+
    196    000000          ;               | xxxx | <-- pre ESP
    197    000000          ;               + - - -+
    198    000000          ;               | RetX |
    199    000000          ;               + - - -+
    200    000000          ;               | RetH |
    201    000000          ;               + - - -+
    202    000000          ;               | RetL |
    203    000000          ;               + - - -+ -
    204    000000          ;               |   :  |  |
    205    000000          ;               |   :  |  | To be deallocated
    206    000000          ;               |   :  |  |
    207    000000          ;               |   :  |  |
    208    000000          ;               + - - -+ -
    209    000000          ;               | xxxx | <-- post ESP
    210    000000          ;               +------+
    211    000000          ;               :
    212    000000          ;               0
    213    000000          ;
    214    000000          ;       Register input:
    215    000000          ;               A      : -(Number of bytes to
                            allocate)
    216    000000          ;
    217    000000          ;       Register output:
    218    000000          ;               ESP    = ESP - A
    219    000000          ;               DPTR0  = Ret addr
    220    000000          ;               A      = Undefined
    221    000000          ;               R0     = Undefined
    222    000000          ;               B.0    = Undefined
    223    000000          ;
    224    000000          ;       Multiple DPTR
    225    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
    226    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    227    000000          ;
    228    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
    229    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    230    000000          ;
    231    000000          ;       Stack usage: 3
    232    000000          ;
    233    000000          ;---------------------------------------------------
                           --------------------------
    234    000000                  MODULE  ?DEALLOC_EXT_STACK8
    235    000000                  RSEG    RCODE:CODE:NOROOT
    236    000000                  PUBLIC  ?DEALLOC_EXT_STACK8
    237    000000                  EXTERN  ?ESP
    238    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    238.1  000000          #ifdef __EXTENDED_DPTR__
    238.2  000000          #endif ; __EXTENDED_DPTR__
    238.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    238.4  000000          #ifdef __DPTR_SEPARATE__
    238.5  000000          #ifdef __EXTENDED_DPTR__
    238.6  000000          #endif ; __EXTENDED_DPTR__
    238.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    238.8  000000          #ifdef __EXTENDED_DPTR__
    238.9  000000          #endif ; __EXTENDED_DPTR__
    238.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    238.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    238.12 000000          #ifdef __EXTENDED_DPTR__
    238.13 000000          #endif ; __EXTENDED_DPTR__
    238.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    238.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    238.16 000000          #ifdef __EXTENDED_DPTR__
    238.17 000000          #endif ; __EXTENDED_DPTR__
    238.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    238.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    238.20 000000          #ifdef __EXTENDED_DPTR__
    238.21 000000          #endif ; __EXTENDED_DPTR__
    238.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    238.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    238.24 000000          #ifdef __EXTENDED_DPTR__
    238.25 000000          #endif ; __EXTENDED_DPTR__
    238.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    238.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    238.28 000000          #ifdef __EXTENDED_DPTR__
    238.29 000000          #endif ; __EXTENDED_DPTR__
    238.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    238.31 000000          #endif ; __DPTR_SEPARATE__
    238.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    238.33 000000                  ENDM
    239    000000          
    240    000000              cfi BLOCK ?DEALLOC_EXT_STACK8 USING cfi_common
    241    000000              cfi NOFUNCTION
    242    000000          
    243    000000          ?DEALLOC_EXT_STACK8:
    244    000000          ?DEALLOC_EXT_STACK8_CFI_INVALID_BEGINS:
    245    000000              cfi invalid
    246    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    250    000000          #elif defined(__EXTENDED_DPTR__)
    252    000000          #endif
    253    000000 D083             POP     DPH
    254    000002              cfi CFA_MACHINE MACHINE_SP - 1
    255    000002              cfi ?RET_HIGH DPH0
    256    000002 D082             POP     DPL             ; DPTR0 = Ret
                                                            addr
    257    000004              cfi CFA_MACHINE MACHINE_SP - 0
    258    000004              cfi ?RET_LOW DPL0
    259    000004          
    260    000004 92F0             MOV     B.0,C              ; Preserve carry
                                                               flag.
    261    000006 A8A8             MOV     R0,0xA8 /* IE */   ; Preserve the
                                                               Interrupt Enable
                                                               register
    262    000008 2581             ADD     A,SP
    263    00000A C2AF             CLR     0xA8.7 /* IE.EA */ ; Disable all
                                                               interrupts for
                                                               max 8 cycles
    264    00000C F581             MOV     SP,A
    265    00000E 4002             JC      NoBorrow
    266    000010 15..             DEC     ?ESP
    267    000012          NoBorrow:
    268    000012 88A8             MOV     0xA8 /* IE */,R0
    269    000014 A2F0             MOV     C,B.0
    270    000016          
    271    000016 E4               CLR     A
    272    000017 73               JMP     @A+DPTR
    273    000018          ?DEALLOC_EXT_STACK8_CFI_INVALID_ENDS:
    274    000018              cfi valid
    275    000018              cfi ENDBLOCK ?DEALLOC_EXT_STACK8
    276    000018                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DEALLOC_EXT_STACK8 REL    CONST PUB UNTYP.       RCODE      0 
?DEALLOC_EXT_STACK8_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?DEALLOC_EXT_STACK8_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      18 
?ESP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
NoBorrow            REL    CONST UNTYP.           RCODE      12 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:C88D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 24          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    277    000000          
    278    000000          ;---------------------------------------------------
                           --------------------------
    279    000000          ;
    280    000000          ;       Function: ?DEALLOC_EXT_STACK16
    281    000000          ;
    282    000000          ;       Description:
    283    000000          ;               Deallocate an area of size 1 to
                            0xFFFF bytes on the extended stack.
    284    000000          ;
    285    000000          ;       Register input:
    286    000000          ;               A      : -(Number of bytes to
                            allocate) (Low byte).
    287    000000          ;               R0     : -(Number of bytes to
                            allocate) (High byte).
    288    000000          ;
    289    000000          ;       Register output:
    290    000000          ;               ESP    = ESP - R0:A
    291    000000          ;               DPTR   = Ret addr
    292    000000          ;               A      = Undefined
    293    000000          ;               R0     = Undefined
    294    000000          ;               B      = Undefined
    295    000000          ;
    296    000000          ;       Multiple DPTR:
    297    000000          ;               Shadowed:       Requires DPTR: DPTRx
                               Requires DPS: DPTRx
    298    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    299    000000          ;
    300    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
    301    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: 0
    302    000000          ;
    303    000000          ;       Stack usage: 3
    304    000000          ;
    305    000000          ;---------------------------------------------------
                           --------------------------
    306    000000                  MODULE  ?DEALLOC_EXT_STACK16
    307    000000                  RSEG    RCODE:CODE:NOROOT
    308    000000                  PUBLIC  ?DEALLOC_EXT_STACK16
    309    000000                  EXTERN  ?ESP
    310    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    310.1  000000          #ifdef __EXTENDED_DPTR__
    310.2  000000          #endif ; __EXTENDED_DPTR__
    310.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    310.4  000000          #ifdef __DPTR_SEPARATE__
    310.5  000000          #ifdef __EXTENDED_DPTR__
    310.6  000000          #endif ; __EXTENDED_DPTR__
    310.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    310.8  000000          #ifdef __EXTENDED_DPTR__
    310.9  000000          #endif ; __EXTENDED_DPTR__
    310.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    310.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    310.12 000000          #ifdef __EXTENDED_DPTR__
    310.13 000000          #endif ; __EXTENDED_DPTR__
    310.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    310.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    310.16 000000          #ifdef __EXTENDED_DPTR__
    310.17 000000          #endif ; __EXTENDED_DPTR__
    310.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    310.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    310.20 000000          #ifdef __EXTENDED_DPTR__
    310.21 000000          #endif ; __EXTENDED_DPTR__
    310.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    310.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    310.24 000000          #ifdef __EXTENDED_DPTR__
    310.25 000000          #endif ; __EXTENDED_DPTR__
    310.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    310.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    310.28 000000          #ifdef __EXTENDED_DPTR__
    310.29 000000          #endif ; __EXTENDED_DPTR__
    310.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    310.31 000000          #endif ; __DPTR_SEPARATE__
    310.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    310.33 000000                  ENDM
    311    000000          
    312    000000              cfi BLOCK ?DEALLOC_EXT_STACK16 USING cfi_common
    313    000000              cfi NOFUNCTION
    314    000000          
    315    000000          ?DEALLOC_EXT_STACK16:
    316    000000          ?DEALLOC_EXT_STACK16_CFI_INVALID_BEGINS:
    317    000000              cfi invalid
    318    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    322    000000          #elif defined(__EXTENDED_DPTR__)
    324    000000          #endif
    325    000000 D083             POP     DPH
    326    000002              cfi CFA_MACHINE MACHINE_SP - 1
    327    000002              cfi ?RET_HIGH DPH0
    328    000002 D082             POP     DPL                  ; DPTR = Ret
                                                                 addr
    329    000004              cfi CFA_MACHINE MACHINE_SP - 0
    330    000004              cfi ?RET_LOW DPL0
    331    000004          
    332    000004 85A8F0           MOV     B,0xA8 /* IE */     ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
    333    000007 C2AF             CLR     0xA8.7 /* IE.EA */   ; Disable all
                                                                 interrupts
    334    000009 92A8             MOV     0xA8.0,C             ; Preserve
                                                                 carry
                                                                 flag.
    335    00000B 2581             ADD     A,SP
    336    00000D F581             MOV     SP,A
    337    00000F E8               MOV     A,R0
    338    000010 35..             ADDC    A,?ESP
    339    000012 F5..             MOV     ?ESP,A
    340    000014 A2A8             MOV     C,0xA8.0             ; Restore carry
                                                                 flag
    341    000016 85F0A8           MOV     0xA8 /* IE */,B     ; Enables
                                                                interrupt
    342    000019          
    343    000019 E4               CLR     A
    344    00001A 73               JMP     @A+DPTR
    345    00001B          ?DEALLOC_EXT_STACK16_CFI_INVALID_ENDS:
    346    00001B              cfi valid
    347    00001B              cfi ENDBLOCK ?DEALLOC_EXT_STACK16
    348    00001B                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DEALLOC_EXT_STACK16REL    CONST PUB UNTYP.       RCODE      0 
?DEALLOC_EXT_STACK16_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?DEALLOC_EXT_STACK16_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      1B 
?ESP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:4688          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 27          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    349    000000          
    350    000000          ;---------------------------------------------------
                           --------------------------
    351    000000          ;
    352    000000          ;       Functions: ?EXT_STACK_DISP8
    353    000000          ;
    354    000000          ;       Description:
    355    000000          ;               Get a pointer to a specific object
                            on the stack at offset X.
    356    000000          ;
    357    000000          ;              3FF
    358    000000          ;               :
    359    000000          ;               +------+
    360    000000          ;               | xxxx | <-- ESP
    361    000000          ;               + - - -+
    362    000000          ;               | RetX | -
    363    000000          ;               + - - -+  |
    364    000000          ;               | RetH |  |
    365    000000          ;               + - - -+  |
    366    000000          ;               | RetL |  | Displacement (A)
    367    000000          ;               + - - -+  |
    368    000000          ;               |   :  |  |
    369    000000          ;               |   :  | -  <-- DPTR
    370    000000          ;               +------+
    371    000000          ;               :
    372    000000          ;               0
    373    000000          ;
    374    000000          ;       Register input:
    375    000000          ;               A     = 8-bit offset from ESP -
                            3.
    376    000000          ;
    377    000000          ;       Register output:
    378    000000          ;               DPTRx  = EXT_STACK + 0000(A)
    379    000000          ;               A      = DPH
    380    000000          ;
    381    000000          ;       Multiple DPTR:
    382    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: DPTRx
    383    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    384    000000          ;
    385    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
    386    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: none
    387    000000          ;
    388    000000          ;       Stack usage: 2
    389    000000          ;
    390    000000          ;---------------------------------------------------
                           --------------------------
    391    000000                  MODULE  ?EXT_STACK_DISP8
    392    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    392.1  000000          #ifdef __EXTENDED_DPTR__
    392.2  000000          #endif ; __EXTENDED_DPTR__
    392.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    392.4  000000          #ifdef __DPTR_SEPARATE__
    392.5  000000          #ifdef __EXTENDED_DPTR__
    392.6  000000          #endif ; __EXTENDED_DPTR__
    392.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    392.8  000000          #ifdef __EXTENDED_DPTR__
    392.9  000000          #endif ; __EXTENDED_DPTR__
    392.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    392.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    392.12 000000          #ifdef __EXTENDED_DPTR__
    392.13 000000          #endif ; __EXTENDED_DPTR__
    392.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    392.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    392.16 000000          #ifdef __EXTENDED_DPTR__
    392.17 000000          #endif ; __EXTENDED_DPTR__
    392.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    392.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    392.20 000000          #ifdef __EXTENDED_DPTR__
    392.21 000000          #endif ; __EXTENDED_DPTR__
    392.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    392.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    392.24 000000          #ifdef __EXTENDED_DPTR__
    392.25 000000          #endif ; __EXTENDED_DPTR__
    392.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    392.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    392.28 000000          #ifdef __EXTENDED_DPTR__
    392.29 000000          #endif ; __EXTENDED_DPTR__
    392.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    392.31 000000          #endif ; __DPTR_SEPARATE__
    392.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    392.33 000000                  ENDM
    393    000000                  EXTERN  ?ESP
    394    000000                  PUBLIC  ?EXT_STACK_DISP0_8
    395    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    397    000000          #endif
    398    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    400    000000          #endif
    401    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    403    000000          #endif
    404    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    406    000000          #endif
    407    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    409    000000          #endif
    410    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    412    000000          #endif
    413    000000          #if (__NUMBER_OF_DPTRS__ > 7)
    415    000000          #endif
    416    000000                  RSEG    EXT_STACK:NOROOT:XDATA
    417    000000                  RSEG    RCODE:CODE:NOROOT
    418    000000              cfi BLOCK ?EXT_STACK_DISP8 USING cfi_common
    419    000000              cfi NOFUNCTION
    420    000000          
    421    000000          #if ( (__NUMBER_OF_DPTRS__ == 1) || ((__NUMBER_OF_DP
                           TRS__ > 1) && (defined ( __DPTR_SHADOWED__
                            ))))
    422    000000          ?EXT_STACK_DISP0_8:
    423    000000          ?EXT_STACK_DISP1_8:
    424    000000          ?EXT_STACK_DISP2_8:
    425    000000          ?EXT_STACK_DISP3_8:
    426    000000          ?EXT_STACK_DISP4_8:
    427    000000          ?EXT_STACK_DISP5_8:
    428    000000          ?EXT_STACK_DISP6_8:
    429    000000          ?EXT_STACK_DISP7_8:
    430    000000 2581             ADD     A,SP
    431    000002 F582             MOV     DPL,A
    432    000004 E4               CLR     A
    433    000005 35..             ADDC    A,?ESP
    434    000007 5403             ANL     A,#0x03         ; Maks out relevant
                                                            ESP bits.
    435    000009 44..             ORL     A,#(HIGH(sfb(EXT_STACK)) &
                                              0xFC)
    436    00000B F583             MOV     DPH,A
    437    00000D          #ifdef __EXTENDED_DPTR__
    439    00000D          #endif
    440    00000D 22               RET
    441    00000E          
    442    00000E          #elif __DPTR_SEPARATE__
    452    00000E          #ifdef __EXTENDED_DPTR__
    454    00000E          #endif
    465    00000E          #ifdef __EXTENDED_DPTR__
    467    00000E          #endif
    472    00000E          #if (__NUMBER_OF_DPTRS__ > 1)
    475    00000E          #endif
    476    00000E          #if (__NUMBER_OF_DPTRS__ > 2)
    479    00000E          #endif
    480    00000E          #if (__NUMBER_OF_DPTRS__ > 3)
    483    00000E          #endif
    484    00000E          #if (__NUMBER_OF_DPTRS__ > 4)
    487    00000E          #endif
    488    00000E          #if (__NUMBER_OF_DPTRS__ > 5)
    491    00000E          #endif
    492    00000E          #if (__NUMBER_OF_DPTRS__ > 6)
    495    00000E          #endif
    496    00000E          #if (__NUMBER_OF_DPTRS__ > 7)
    499    00000E          #endif
    501    00000E          #else
    502    00000E          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
    503    00000E          #endif
    504    00000E          
    505    00000E              cfi ENDBLOCK ?EXT_STACK_DISP8
    506    00000E                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
EXT_STACK           XDATA  	REL 
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ESP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?EXT_STACK_DISP0_8  REL    CONST PUB UNTYP.       RCODE      0 
?EXT_STACK_DISP1_8  REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP2_8  REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP3_8  REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP4_8  REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP5_8  REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP6_8  REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP7_8  REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP8    REL    CONST UNTYP.           RCODE      Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:81E4          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 14          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    507    000000          
    508    000000          ;---------------------------------------------------
                           --------------------------
    509    000000          ;
    510    000000          ;       Function: ?EXT_STACK_DISP16
    511    000000          ;
    512    000000          ;       Description:
    513    000000          ;               Get a pointer to a specific object
                            on the stack at offset X.
    514    000000          ;
    515    000000          ;              3FF
    516    000000          ;               :
    517    000000          ;               +------+
    518    000000          ;               | xxxx | <-- ESP
    519    000000          ;               + - - -+
    520    000000          ;               | RetX | -
    521    000000          ;               + - - -+  |
    522    000000          ;               | RetH |  |
    523    000000          ;               + - - -+  |
    524    000000          ;               | RetL |  | Displacement (DPTR)
    525    000000          ;               + - - -+  |
    526    000000          ;               |   :  |  |
    527    000000          ;               |   :  | -  <-- DPTR
    528    000000          ;               +------+
    529    000000          ;               :
    530    000000          ;               0
    531    000000          ;
    532    000000          ;       Register input:
    533    000000          ;               DPTRx = 10-bit offset from ESP -
                            3
    534    000000          ;
    535    000000          ;       Register output:
    536    000000          ;               DPTRx = ESP - DPTRx
    537    000000          ;
    538    000000          ;       Multiple DPTR
    539    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: DPTRx
    540    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    541    000000          ;
    542    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
    543    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: none
    544    000000          ;
    545    000000          ;       Stack usage: 2
    546    000000          ;
    547    000000          ;---------------------------------------------------
                           --------------------------
    548    000000                  MODULE  ?EXT_STACK_DISP16
    549    000000                  RSEG    EXT_STACK:NOROOT:XDATA
    550    000000                  RSEG    RCODE:CODE:NOROOT
    551    000000                  PUBLIC  ?EXT_STACK_DISP0_16
    552    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    554    000000          #endif
    555    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    557    000000          #endif
    558    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    560    000000          #endif
    561    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    563    000000          #endif
    564    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    566    000000          #endif
    567    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    569    000000          #endif
    570    000000          #if (__NUMBER_OF_DPTRS__ > 7)
    572    000000          #endif
    573    000000                  EXTERN  ?ESP
    574    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    574.1  000000          #ifdef __EXTENDED_DPTR__
    574.2  000000          #endif ; __EXTENDED_DPTR__
    574.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    574.4  000000          #ifdef __DPTR_SEPARATE__
    574.5  000000          #ifdef __EXTENDED_DPTR__
    574.6  000000          #endif ; __EXTENDED_DPTR__
    574.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    574.8  000000          #ifdef __EXTENDED_DPTR__
    574.9  000000          #endif ; __EXTENDED_DPTR__
    574.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    574.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    574.12 000000          #ifdef __EXTENDED_DPTR__
    574.13 000000          #endif ; __EXTENDED_DPTR__
    574.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    574.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    574.16 000000          #ifdef __EXTENDED_DPTR__
    574.17 000000          #endif ; __EXTENDED_DPTR__
    574.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    574.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    574.20 000000          #ifdef __EXTENDED_DPTR__
    574.21 000000          #endif ; __EXTENDED_DPTR__
    574.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    574.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    574.24 000000          #ifdef __EXTENDED_DPTR__
    574.25 000000          #endif ; __EXTENDED_DPTR__
    574.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    574.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    574.28 000000          #ifdef __EXTENDED_DPTR__
    574.29 000000          #endif ; __EXTENDED_DPTR__
    574.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    574.31 000000          #endif ; __DPTR_SEPARATE__
    574.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    574.33 000000                  ENDM
    575    000000          
    576    000000              cfi BLOCK ?EXT_STACK_DISP16 USING cfi_common
    577    000000              cfi NOFUNCTION
    578    000000          
    579    000000          #if ( (__NUMBER_OF_DPTRS__ == 1) || ((__NUMBER_OF_DP
                           TRS__ > 1) && (defined ( __DPTR_SHADOWED__
                            ))))
    580    000000          ?EXT_STACK_DISP0_16:
    581    000000          ?EXT_STACK_DISP1_16:
    582    000000          ?EXT_STACK_DISP2_16:
    583    000000          ?EXT_STACK_DISP3_16:
    584    000000          ?EXT_STACK_DISP4_16:
    585    000000          ?EXT_STACK_DISP5_16:
    586    000000          ?EXT_STACK_DISP6_16:
    587    000000          ?EXT_STACK_DISP7_16:
    588    000000 C582             XCH     A,DPL
    589    000002 2581             ADD     A,SP
    590    000004 C582             XCH     A,DPL
    591    000006 C583             XCH     A,DPH
    592    000008 35..             ADDC    A,?ESP
    593    00000A 5403             ANL     A,#0x03         ; Maks out relevant
                                                            ESP bits.
    594    00000C 44..             ORL     A,#(HIGH(sfb(EXT_STACK)) &
                                              0xFC)
    595    00000E C583             XCH     A,DPH
    596    000010          #ifdef __EXTENDED_DPTR__
    598    000010          #endif
    599    000010 22               RET
    600    000011          
    601    000011          #elif __DPTR_SEPARATE__
    612    000011          #ifdef __EXTENDED_DPTR__
    614    000011          #endif
    626    000011          #ifdef __EXTENDED_DPTR__
    628    000011          #endif
    632    000011          #if (__NUMBER_OF_DPTRS__ > 1)
    635    000011          #endif
    636    000011          #if (__NUMBER_OF_DPTRS__ > 2)
    639    000011          #endif
    640    000011          #if (__NUMBER_OF_DPTRS__ > 3)
    643    000011          #endif
    644    000011          #if (__NUMBER_OF_DPTRS__ > 4)
    647    000011          #endif
    648    000011          #if (__NUMBER_OF_DPTRS__ > 5)
    651    000011          #endif
    652    000011          #if (__NUMBER_OF_DPTRS__ > 6)
    655    000011          #endif
    656    000011          #if (__NUMBER_OF_DPTRS__ > 7)
    659    000011          #endif
    661    000011          #else
    662    000011          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
    663    000011          #endif
    664    000011          
    665    000011              cfi ENDBLOCK ?EXT_STACK_DISP16
    666    000011                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
EXT_STACK           XDATA  	REL 
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ESP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?EXT_STACK_DISP0_16 REL    CONST PUB UNTYP.       RCODE      0 
?EXT_STACK_DISP16   REL    CONST UNTYP.           RCODE      Not solved 
?EXT_STACK_DISP1_16 REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP2_16 REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP3_16 REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP4_16 REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP5_16 REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP6_16 REL    CONST UNTYP.           RCODE      0 
?EXT_STACK_DISP7_16 REL    CONST UNTYP.           RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:A9F7          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 17          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    667    000000          
    668    000000          
    669    000000          ;---------------------------------------------------
                           --------------------------
    670    000000          ;
    671    000000          ;       Functions: Allocate and de-allocate memory
                            on the XDATA stack
    672    000000          ;
    673    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
    674    000000          ;
    675    000000          ;       Function: ?ALLOC_XSTACK8
    676    000000          ;
    677    000000          ;       Description:
    678    000000          ;               Allocate an area of size 1 to 256
                            bytes on the XDATA stack.
    679    000000          ;
    680    000000          ;               +--------+
    681    000000          ;               | -FF(A) |
    682    000000          ;               +--------+ <-- XSTACK
    683    000000          ;
    684    000000          ;
    685    000000          ;       Register input:
    686    000000          ;               A  -(Size of the wanted xstack
                            area)
    687    000000          ;
    688    000000          ;       Register output:
    689    000000          ;               XSTACK = XSTACK + FF(A)
    690    000000          ;               A      = XSP_L
    691    000000          ;               CY       Undefined.
    692    000000          ;
    693    000000          ;       NOTE:
    694    000000          ;               DPTR/DPS: unchanged
    695    000000          ;
    696    000000          ;       Stack usage: 3
    697    000000          ;
    698    000000          ;---------------------------------------------------
                           --------------------------
    699    000000                  MODULE  ?ALLOC_XSTACK8
    700    000000                  RSEG    RCODE:CODE:NOROOT
    701    000000                  PUBLIC  ?ALLOC_XSTACK8
    702    000000                  EXTERN  ?XSP
    703    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    703.1  000000          #ifdef __EXTENDED_DPTR__
    703.2  000000          #endif ; __EXTENDED_DPTR__
    703.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    703.4  000000          #ifdef __DPTR_SEPARATE__
    703.5  000000          #ifdef __EXTENDED_DPTR__
    703.6  000000          #endif ; __EXTENDED_DPTR__
    703.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    703.8  000000          #ifdef __EXTENDED_DPTR__
    703.9  000000          #endif ; __EXTENDED_DPTR__
    703.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    703.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    703.12 000000          #ifdef __EXTENDED_DPTR__
    703.13 000000          #endif ; __EXTENDED_DPTR__
    703.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    703.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    703.16 000000          #ifdef __EXTENDED_DPTR__
    703.17 000000          #endif ; __EXTENDED_DPTR__
    703.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    703.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    703.20 000000          #ifdef __EXTENDED_DPTR__
    703.21 000000          #endif ; __EXTENDED_DPTR__
    703.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    703.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    703.24 000000          #ifdef __EXTENDED_DPTR__
    703.25 000000          #endif ; __EXTENDED_DPTR__
    703.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    703.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    703.28 000000          #ifdef __EXTENDED_DPTR__
    703.29 000000          #endif ; __EXTENDED_DPTR__
    703.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    703.31 000000          #endif ; __DPTR_SEPARATE__
    703.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    703.33 000000                  ENDM
    704    000000          
    705    000000              cfi BLOCK ?ALLOC_XSTACK8 USING cfi_common
    706    000000              cfi NOFUNCTION
    707    000000              cfi CFA_SPX sub(SPX,sub(256,A))
    708    000000          ?ALLOC_XSTACK8
    709    000000          ?ALLOC_XSTACK8_CFI_INVALID_BEGINS:
    710    000000              cfi invalid
    711    000000 25..             ADD     A,XSP_L
    712    000002 C0A8             PUSH    0xA8 /* IE */           ; Preserve
                                                                    the
                                                                    Interrupt
                                                                    Enable
                                                                    register
    713    000004              cfi CFA_MACHINE MACHINE_SP - 3
    714    000004 C2AF             CLR     0xA8.7  /* IE.EA */     ; Disable
                                                                    all
                                                                    interrupts
                                                                    for max 8
                                                                    cycles
    715    000006 4002             JC      NoBorrow
    716    000008 15..             DEC     XSP_H
    717    00000A          
    718    00000A          NoBorrow:
    719    00000A F5..             MOV     XSP_L,A
    720    00000C              cfi CFA_SPX SPX
    721    00000C D0A8             POP     0xA8 /* IE */
    722    00000E              cfi CFA_MACHINE MACHINE_SP - 2
    723    00000E 22               RET
    724    00000F          ?ALLOC_XSTACK8_CFI_INVALID_ENDS:
    725    00000F              cfi valid
    726    00000F          
    727    00000F              cfi ENDBLOCK ?ALLOC_XSTACK8
    728    00000F                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716
XSP_L                #define, value: ?XSP, line:      23:1        711      719
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ALLOC_XSTACK8      REL    CONST PUB UNTYP.       RCODE      0 
?ALLOC_XSTACK8_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?ALLOC_XSTACK8_CFI_INVALID_ENDSREL    CONST UNTYP.           RCODE      F 
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
CFA_XSP16           REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
NoBorrow            REL    CONST UNTYP.           RCODE      A 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
XSP16               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
sub                 REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:9F7F          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 15          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    729    000000          
    730    000000          ;---------------------------------------------------
                           --------------------------
    731    000000          ;
    732    000000          ;       Function: ?DEALLOC_XSTACK8
    733    000000          ;
    734    000000          ;       Description:
    735    000000          ;               Deallocate an area of size 1 to 255
                            bytes on the XDATA stack.
    736    000000          ;
    737    000000          ;               +--------+
    738    000000          ;               |  00(A) |
    739    000000          ;               +--------+ <-- XSTACK
    740    000000          ;
    741    000000          ;
    742    000000          ;       Register input:
    743    000000          ;               A  Size of the xstack area to
                            deallocate
    744    000000          ;
    745    000000          ;       Register output:
    746    000000          ;               XSTACK = XSTACK + 00(A)
    747    000000          ;               A      = XSP_L
    748    000000          ;
    749    000000          ;       NOTE:
    750    000000          ;               DPTR/DPS: unchanged
    751    000000          ;
    752    000000          ;       Stack usage: 3
    753    000000          ;
    754    000000          ;---------------------------------------------------
                           --------------------------
    755    000000                  MODULE  ?DEALLOC_XSTACK8
    756    000000                  RSEG    RCODE:CODE:NOROOT
    757    000000                  PUBLIC  ?DEALLOC_XSTACK8
    758    000000                  EXTERN  ?XSP
    759    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    759.1  000000          #ifdef __EXTENDED_DPTR__
    759.2  000000          #endif ; __EXTENDED_DPTR__
    759.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    759.4  000000          #ifdef __DPTR_SEPARATE__
    759.5  000000          #ifdef __EXTENDED_DPTR__
    759.6  000000          #endif ; __EXTENDED_DPTR__
    759.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    759.8  000000          #ifdef __EXTENDED_DPTR__
    759.9  000000          #endif ; __EXTENDED_DPTR__
    759.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    759.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    759.12 000000          #ifdef __EXTENDED_DPTR__
    759.13 000000          #endif ; __EXTENDED_DPTR__
    759.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    759.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    759.16 000000          #ifdef __EXTENDED_DPTR__
    759.17 000000          #endif ; __EXTENDED_DPTR__
    759.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    759.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    759.20 000000          #ifdef __EXTENDED_DPTR__
    759.21 000000          #endif ; __EXTENDED_DPTR__
    759.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    759.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    759.24 000000          #ifdef __EXTENDED_DPTR__
    759.25 000000          #endif ; __EXTENDED_DPTR__
    759.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    759.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    759.28 000000          #ifdef __EXTENDED_DPTR__
    759.29 000000          #endif ; __EXTENDED_DPTR__
    759.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    759.31 000000          #endif ; __DPTR_SEPARATE__
    759.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    759.33 000000                  ENDM
    760    000000          
    761    000000              cfi BLOCK ?DEALLOC_XSTACK8 USING cfi_common
    762    000000              cfi NOFUNCTION
    763    000000          
    764    000000          ?DEALLOC_XSTACK8:
    765    000000          ?DEALLOC_XSTACK8_CFI_INVALID_BEGINS:
    766    000000              cfi invalid
    767    000000 C0D0             PUSH    PSW                 ; Preserve
                                                                carry
    768    000002              cfi CFA_MACHINE MACHINE_SP - 3
    769    000002 25..             ADD     A,XSP_L
    770    000004 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
    771    000006              cfi CFA_MACHINE MACHINE_SP - 4
    772    000006 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 8
                                                                cycles
    773    000008 5002             JNC     NoBorrow
    774    00000A          
    775    00000A 05..             INC     XSP_H
    776    00000C          NoBorrow:
    777    00000C F5..             MOV     XSP_L,A
    778    00000E D0A8             POP     0xA8 /* IE */
    779    000010              cfi CFA_MACHINE MACHINE_SP - 3
    780    000010 D0D0             POP     PSW
    781    000012              cfi CFA_MACHINE MACHINE_SP - 2
    782    000012          
    783    000012 22               RET
    784    000013          ?DEALLOC_XSTACK8_CFI_INVALID_ENDS:
    785    000013              cfi valid
    786    000013              cfi ENDBLOCK ?DEALLOC_XSTACK8
    787    000013                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DEALLOC_XSTACK8    REL    CONST PUB UNTYP.       RCODE      0 
?DEALLOC_XSTACK8_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?DEALLOC_XSTACK8_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      13 
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
NoBorrow            REL    CONST UNTYP.           RCODE      C 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:204D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 19          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    788    000000          
    789    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
    790    000000          ;
    791    000000          ;       Function: ?ADD_XSTACK_DISP8
    792    000000          ;
    793    000000          ;       Description:
    794    000000          ;              Allocates an area of max 256 bytes
                            and return the tos in DPTR
    795    000000          ;
    796    000000          ;              FFFF
    797    000000          ;               :
    798    000000          ;               +------+
    799    000000          ;               | xxxx | <-- pre XSP
    800    000000          ;               |   :  | -
    801    000000          ;               |   :  |  |
    802    000000          ;               |   :  |  | -A
    803    000000          ;               |   :  |  |
    804    000000          ;               |   :  | -  <-- post XSP, post
                            DPTR
    805    000000          ;               +------+
    806    000000          ;               :
    807    000000          ;               0
    808    000000          ;
    809    000000          ;       Register input:
    810    000000          ;               A      = -(Size of the wanted xstack
                            area)
    811    000000          ;
    812    000000          ;       Register output:
    813    000000          ;               XSTACK = XSP + A (note A is
                            negative)
    814    000000          ;               DPTR   = XSP (new)
    815    000000          ;               A      = XSP_L
    816    000000          ;               CY       Undefined.
    817    000000          ;
    818    000000          ;       Multiple DPTR
    819    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: DPTRx
    820    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    821    000000          ;
    822    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: none
    823    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: none
    824    000000          ;
    825    000000          ;       Stack usage: 3
    826    000000          ;
    827    000000          ;---------------------------------------------------
                           --------------------------
    828    000000                  MODULE  ?ADD_XSTACK_DISP8
    829    000000                  RSEG    XSTACK:NOROOT:XDATA
    830    000000                  RSEG    RCODE:CODE:NOROOT
    831    000000                  PUBLIC  ?ADD_XSTACK_DISP0_8
    832    000000                  EXTERN  ?XSP
    833    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    833.1  000000          #ifdef __EXTENDED_DPTR__
    833.2  000000          #endif ; __EXTENDED_DPTR__
    833.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    833.4  000000          #ifdef __DPTR_SEPARATE__
    833.5  000000          #ifdef __EXTENDED_DPTR__
    833.6  000000          #endif ; __EXTENDED_DPTR__
    833.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    833.8  000000          #ifdef __EXTENDED_DPTR__
    833.9  000000          #endif ; __EXTENDED_DPTR__
    833.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    833.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    833.12 000000          #ifdef __EXTENDED_DPTR__
    833.13 000000          #endif ; __EXTENDED_DPTR__
    833.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    833.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    833.16 000000          #ifdef __EXTENDED_DPTR__
    833.17 000000          #endif ; __EXTENDED_DPTR__
    833.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    833.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    833.20 000000          #ifdef __EXTENDED_DPTR__
    833.21 000000          #endif ; __EXTENDED_DPTR__
    833.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    833.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    833.24 000000          #ifdef __EXTENDED_DPTR__
    833.25 000000          #endif ; __EXTENDED_DPTR__
    833.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    833.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    833.28 000000          #ifdef __EXTENDED_DPTR__
    833.29 000000          #endif ; __EXTENDED_DPTR__
    833.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    833.31 000000          #endif ; __DPTR_SEPARATE__
    833.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    833.33 000000                  ENDM
    834    000000          
    835    000000              cfi BLOCK ?ADD_XSTACK_DISP8 USING cfi_common
    836    000000              cfi NOFUNCTION
    837    000000          
    838    000000          ?ADD_XSTACK_DISP0_8:
    839    000000          ?ADD_XSTACK_DISP0_8_CFI_INVALID_BEGINS:
    840    000000              cfi invalid
    841    000000 25..             ADD     A,XSP_L
    842    000002 F582             MOV     DPL,A
    843    000004 C0A8             PUSH    0xA8 /* IE */       ; Preserve the
                                                                Interrupt
                                                                Enable
                                                                register
    844    000006              cfi CFA_MACHINE MACHINE_SP - 3
    845    000006 C2AF             CLR     0xA8.7 /* IE.EA */  ; Disable all
                                                                interrupts for
                                                                max 8
                                                                cycles
    846    000008 4002             JC      NoBorrow
    847    00000A 15..             DEC     XSP_H
    848    00000C          
    849    00000C          NoBorrow:
    850    00000C F5..             MOV     XSP_L,A
    851    00000E D0A8             POP     0xA8 /* IE */
    852    000010              cfi CFA_MACHINE MACHINE_SP - 2
    853    000010 85..83           MOV     DPH,XSP_H
    854    000013          #if (defined (__EXTENDED_DPTR__ ))
    856    000013          #endif
    857    000013 22               RET
    858    000014          ?ADD_XSTACK_DISP0_8_CFI_INVALID_ENDS:
    859    000014              cfi valid
    860    000014          
    861    000014              cfi ENDBLOCK ?ADD_XSTACK_DISP8
    862    000014                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
                                                                      844      852
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781      844      852
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775      847      853
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
                                                                      841      850
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759      833
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ADD_XSTACK_DISP0_8 REL    CONST PUB UNTYP.       RCODE      0 
?ADD_XSTACK_DISP0_8_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?ADD_XSTACK_DISP0_8_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      14 
?ADD_XSTACK_DISP8   REL    CONST UNTYP.           RCODE      Not solved 
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
NoBorrow            REL    CONST UNTYP.           RCODE      C 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:565E          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 20          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    863    000000          
    864    000000          ;---------------------------------------------------
                           --------------------------
    865    000000          ;
    866    000000          ;       Function: ?ADD_XSTACK_DISP16
    867    000000          ;
    868    000000          ;       Description:
    869    000000          ;               Add a 16-bit value to the XDATA
                            stack-pointer.
    870    000000          ;               Can be used for allocating or
                            deallocating stack.
    871    000000          ;
    872    000000          ;               +--------+
    873    000000          ;               |  DPTR  |
    874    000000          ;               +--------+ <-- XSTACK
    875    000000          ;
    876    000000          ;
    877    000000          ;       Register input:
    878    000000          ;               DPTR  Size of the xstack area to
                            allocate/deallocate
    879    000000          ;
    880    000000          ;       Register output:
    881    000000          ;               XSTACK = XSTACK + DPTR
    882    000000          ;               DPTR   = XSTACK
    883    000000          ;               CY       Undefined.
    884    000000          ;
    885    000000          ;       Multiple DPTR
    886    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: DPTRx
    887    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    888    000000          ;
    889    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: none
    890    000000          ;                               Modifies DPTR: 0    
                               Returns  DPS: none
    891    000000          ;
    892    000000          ;       Stack usage: 3
    893    000000          ;
    894    000000          ;---------------------------------------------------
                           --------------------------
    895    000000                  MODULE  ?ADD_XSTACK_DISP16
    896    000000              RSEG        XSTACK:NOROOT:XDATA
    897    000000                  RSEG    RCODE:CODE:NOROOT
    898    000000                  PUBLIC  ?ADD_XSTACK_DISP0_16
    899    000000                  EXTERN  ?XSP
    900    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    900.1  000000          #ifdef __EXTENDED_DPTR__
    900.2  000000          #endif ; __EXTENDED_DPTR__
    900.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    900.4  000000          #ifdef __DPTR_SEPARATE__
    900.5  000000          #ifdef __EXTENDED_DPTR__
    900.6  000000          #endif ; __EXTENDED_DPTR__
    900.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    900.8  000000          #ifdef __EXTENDED_DPTR__
    900.9  000000          #endif ; __EXTENDED_DPTR__
    900.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    900.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    900.12 000000          #ifdef __EXTENDED_DPTR__
    900.13 000000          #endif ; __EXTENDED_DPTR__
    900.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    900.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    900.16 000000          #ifdef __EXTENDED_DPTR__
    900.17 000000          #endif ; __EXTENDED_DPTR__
    900.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    900.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    900.20 000000          #ifdef __EXTENDED_DPTR__
    900.21 000000          #endif ; __EXTENDED_DPTR__
    900.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    900.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    900.24 000000          #ifdef __EXTENDED_DPTR__
    900.25 000000          #endif ; __EXTENDED_DPTR__
    900.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    900.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    900.28 000000          #ifdef __EXTENDED_DPTR__
    900.29 000000          #endif ; __EXTENDED_DPTR__
    900.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    900.31 000000          #endif ; __DPTR_SEPARATE__
    900.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    900.33 000000                  ENDM
    901    000000          
    902    000000              cfi BLOCK ?ADD_XSTACK_DISP16 Using cfi_common
    903    000000              cfi NOFUNCTION
    904    000000          
    905    000000          ?ADD_XSTACK_DISP0_16
    906    000000          ?ADD_XSTACK_DISP0_16_CFI_INVALID_BEGINS:
    907    000000              cfi invalid
    908    000000 C582             XCH     A,DPL
    909    000002 25..             ADD     A,XSP_L
    910    000004 C582             XCH     A,DPL
    911    000006 C583             XCH     A,DPH
    912    000008 35..             ADDC    A,XSP_H
    913    00000A C0A8             PUSH    0xA8 /* IE */        ; Preserve the
                                                                 Interrupt
                                                                 Enable
                                                                 register
    914    00000C              cfi CFA_MACHINE MACHINE_SP - 3
    915    00000C C2AF             CLR     0xA8.7  /* IE.EA */  ; Disable all
                                                                 interrupts for
                                                                 max 6
                                                                 cycles
    916    00000E F5..             MOV     XSP_H,A
    917    000010 8582..           MOV     XSP_L,DPL
    918    000013 D0A8             POP     0xA8 /* IE */
    919    000015              cfi CFA_MACHINE MACHINE_SP - 2
    920    000015 C583             XCH     A,DPH
    921    000017          #if (defined (__EXTENDED_DPTR__ ))
    923    000017          #endif
    924    000017 22               RET
    925    000018          ?ADD_XSTACK_DISP0_16_CFI_INVALID_ENDS:
    926    000018              cfi valid
    927    000018              cfi ENDBLOCK ?ADD_XSTACK_DISP16
    928    000018                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
                                                                      844      852      914      919
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781      844      852      914
                                                                      919
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775      847      853
                                                                      912      916
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
                                                                      841      850      909      917
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759      833
                                                                      900
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ADD_XSTACK_DISP0_16REL    CONST PUB UNTYP.       RCODE      0 
?ADD_XSTACK_DISP0_16_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?ADD_XSTACK_DISP0_16_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      18 
?ADD_XSTACK_DISP16  REL    CONST UNTYP.           RCODE      Not solved 
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
Using               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:629B          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 24          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    929    000000          
    930    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
    931    000000          ;
    932    000000          ;       Function: ?XSTACK_DISP8
    933    000000          ;
    934    000000          ;       Description:
    935    000000          ;              Get a pointer to a specific object on
                            the stack at offset X.
    936    000000          ;
    937    000000          ;              FFFF
    938    000000          ;               :
    939    000000          ;               +------+
    940    000000          ;               | xxxx | <-- DPTRnr
    941    000000          ;               |   :  | -
    942    000000          ;               |   :  |  |
    943    000000          ;               |   :  |  | Displacement (A)
    944    000000          ;               |   :  |  |
    945    000000          ;               |   :  | -  <-- XSP
    946    000000          ;               +------+
    947    000000          ;               :
    948    000000          ;               0
    949    000000          ;
    950    000000          ;       Register input:
    951    000000          ;               A     = 8-bit positive offset
    952    000000          ;               DPSEL = DPTRx (where x same as entry
                            nr, only for shadowed)
    953    000000          ;
    954    000000          ;       Register output:
    955    000000          ;               DPTRx = XSP + A
    956    000000          ;               DPSEL  = Same as input
    957    000000          ;               A      = DPH
    958    000000          ;
    959    000000          ;       Multiple DPTR
    960    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: DPTRx
    961    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
    962    000000          ;
    963    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
    964    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: none
    965    000000          ;
    966    000000          ;       Stack usage: 2
    967    000000          ;
    968    000000          ;---------------------------------------------------
                           --------------------------
    969    000000                  MODULE  ?XSTACK_DISP8
    970    000000              RSEG        XSTACK:NOROOT:XDATA
    971    000000                  RSEG    RCODE:CODE:NOROOT
    972    000000                  EXTERN  ?XSP
    973    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
    973.1  000000          #ifdef __EXTENDED_DPTR__
    973.2  000000          #endif ; __EXTENDED_DPTR__
    973.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
    973.4  000000          #ifdef __DPTR_SEPARATE__
    973.5  000000          #ifdef __EXTENDED_DPTR__
    973.6  000000          #endif ; __EXTENDED_DPTR__
    973.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
    973.8  000000          #ifdef __EXTENDED_DPTR__
    973.9  000000          #endif ; __EXTENDED_DPTR__
    973.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
    973.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
    973.12 000000          #ifdef __EXTENDED_DPTR__
    973.13 000000          #endif ; __EXTENDED_DPTR__
    973.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
    973.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
    973.16 000000          #ifdef __EXTENDED_DPTR__
    973.17 000000          #endif ; __EXTENDED_DPTR__
    973.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
    973.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
    973.20 000000          #ifdef __EXTENDED_DPTR__
    973.21 000000          #endif ; __EXTENDED_DPTR__
    973.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
    973.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
    973.24 000000          #ifdef __EXTENDED_DPTR__
    973.25 000000          #endif ; __EXTENDED_DPTR__
    973.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
    973.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
    973.28 000000          #ifdef __EXTENDED_DPTR__
    973.29 000000          #endif ; __EXTENDED_DPTR__
    973.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
    973.31 000000          #endif ; __DPTR_SEPARATE__
    973.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
    973.33 000000                  ENDM
    974    000000          
    975    000000                  PUBLIC  ?XSTACK_DISP0_8
    976    000000          #if (__NUMBER_OF_DPTRS__ > 1)
    978    000000          #endif
    979    000000          #if (__NUMBER_OF_DPTRS__ > 2)
    981    000000          #endif
    982    000000          #if (__NUMBER_OF_DPTRS__ > 3)
    984    000000          #endif
    985    000000          #if (__NUMBER_OF_DPTRS__ > 4)
    987    000000          #endif
    988    000000          #if (__NUMBER_OF_DPTRS__ > 5)
    990    000000          #endif
    991    000000          #if (__NUMBER_OF_DPTRS__ > 6)
    993    000000          #endif
    994    000000          #if (__NUMBER_OF_DPTRS__ > 7)
    996    000000          #endif
    997    000000              cfi BLOCK ?XSTACK_DISP8 USING cfi_common
    998    000000              cfi NOFUNCTION
    999    000000          
   1000    000000          #if ( (__NUMBER_OF_DPTRS__ == 1) || ((__NUMBER_OF_DP
                           TRS__ > 1) && (defined ( __DPTR_SHADOWED__
                            ))))
   1001    000000          ?XSTACK_DISP0_8:
   1002    000000          ?XSTACK_DISP1_8:
   1003    000000          ?XSTACK_DISP2_8:
   1004    000000          ?XSTACK_DISP3_8:
   1005    000000          ?XSTACK_DISP4_8:
   1006    000000          ?XSTACK_DISP5_8:
   1007    000000          ?XSTACK_DISP6_8:
   1008    000000          ?XSTACK_DISP7_8:
   1009    000000 25..             ADD     A,XSP_L
   1010    000002 F582             MOV     DPL,A
   1011    000004 E4               CLR     A
   1012    000005 35..             ADDC    A,XSP_H
   1013    000007 F583             MOV     DPH,A
   1014    000009          #if (defined (__EXTENDED_DPTR__ ))
   1016    000009          #endif
   1017    000009 22               RET
   1018    00000A          
   1019    00000A          #elif __DPTR_SEPARATE__
   1027    00000A          #if (defined (__EXTENDED_DPTR__ ))
   1029    00000A          #endif
   1032    00000A          #if (__NUMBER_OF_DPTRS__ > 1)
   1039    00000A          #if (defined (__EXTENDED_DPTR__ ))
   1041    00000A          #endif
   1043    00000A          #endif
   1045    00000A          #if (__NUMBER_OF_DPTRS__ > 2)
   1052    00000A          #if (defined (__EXTENDED_DPTR__ ))
   1054    00000A          #endif
   1056    00000A          #endif
   1058    00000A          #if (__NUMBER_OF_DPTRS__ > 3)
   1065    00000A          #if (defined (__EXTENDED_DPTR__ ))
   1067    00000A          #endif
   1069    00000A          #endif
   1071    00000A          #if (__NUMBER_OF_DPTRS__ > 4)
   1078    00000A          #if (defined (__EXTENDED_DPTR__ ))
   1080    00000A          #endif
   1082    00000A          #endif
   1084    00000A          #if (__NUMBER_OF_DPTRS__ > 5)
   1091    00000A          #if (defined (__EXTENDED_DPTR__ ))
   1093    00000A          #endif
   1095    00000A          #endif
   1097    00000A          #if (__NUMBER_OF_DPTRS__ > 6)
   1104    00000A          #if (defined (__EXTENDED_DPTR__ ))
   1106    00000A          #endif
   1108    00000A          #endif
   1110    00000A          #if (__NUMBER_OF_DPTRS__ > 7)
   1117    00000A          #if (defined (__EXTENDED_DPTR__ ))
   1119    00000A          #endif
   1121    00000A          #endif
   1123    00000A          #else
   1124    00000A          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
   1125    00000A          #endif
   1126    00000A          
   1127    00000A              cfi ENDBLOCK ?XSTACK_DISP8
   1128    00000A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
                                                                      844      852      914      919
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781      844      852      914
                                                                      919
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775      847      853
                                                                      912      916     1012
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
                                                                      841      850      909      917
                                                                     1009
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_DPTR__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759      833
                                                                      900      973      976      979
                                                                      982      985      988      991
                                                                      994     1000     1000
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?XSTACK_DISP0_8     REL    CONST PUB UNTYP.       RCODE      0 
?XSTACK_DISP1_8     REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP2_8     REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP3_8     REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP4_8     REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP5_8     REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP6_8     REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP7_8     REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP8       REL    CONST UNTYP.           RCODE      Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:95DE          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 10          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1129    000000          
   1130    000000          ;---------------------------------------------------
                           --------------------------
   1131    000000          ;
   1132    000000          ;       Function: ?XSTACK_DISP16
   1133    000000          ;
   1134    000000          ;       Description:
   1135    000000          ;              Get a pointer to a specific object on
                            the stack at offset X.
   1136    000000          ;
   1137    000000          ;              FFFF
   1138    000000          ;               :
   1139    000000          ;               +------+
   1140    000000          ;               | xxxx | <-- post DPTRnr
   1141    000000          ;               |   :  | -
   1142    000000          ;               |   :  |  |
   1143    000000          ;               |   :  |  | pre DPTRnr
   1144    000000          ;               |   :  |  |
   1145    000000          ;               |   :  | -  <-- XSP
   1146    000000          ;               +------+
   1147    000000          ;               :
   1148    000000          ;               0
   1149    000000          ;
   1150    000000          ;       Register input:
   1151    000000          ;               DPTRnr = 16-bit positive offset
   1152    000000          ;               DPSEL  = DPTRnr (where number same
                            as entry nr, only for shadowed)
   1153    000000          ;
   1154    000000          ;       Register output:
   1155    000000          ;               DPTRnr = XSP + DPTRnr (pre)
   1156    000000          ;               DPSEL  = Same as input
   1157    000000          ;
   1158    000000          ;       Multiple DPTR
   1159    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: DPTRx
   1160    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: DPTRx
   1161    000000          ;
   1162    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   1163    000000          ;                               Modifies DPTR: DPTRx
                               Returns  DPS: none
   1164    000000          ;
   1165    000000          ;       Stack usage: 2
   1166    000000          ;
   1167    000000          ;---------------------------------------------------
                           --------------------------
   1168    000000                  MODULE  ?XSTACK_DISP16
   1169    000000                  RSEG    XSTACK:NOROOT:XDATA
   1170    000000                  RSEG    RCODE:CODE:NOROOT
   1171    000000                  EXTERN  ?XSP
   1172    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1172.1  000000          #ifdef __EXTENDED_DPTR__
   1172.2  000000          #endif ; __EXTENDED_DPTR__
   1172.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1172.4  000000          #ifdef __DPTR_SEPARATE__
   1172.5  000000          #ifdef __EXTENDED_DPTR__
   1172.6  000000          #endif ; __EXTENDED_DPTR__
   1172.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1172.8  000000          #ifdef __EXTENDED_DPTR__
   1172.9  000000          #endif ; __EXTENDED_DPTR__
   1172.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1172.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1172.12 000000          #ifdef __EXTENDED_DPTR__
   1172.13 000000          #endif ; __EXTENDED_DPTR__
   1172.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1172.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1172.16 000000          #ifdef __EXTENDED_DPTR__
   1172.17 000000          #endif ; __EXTENDED_DPTR__
   1172.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1172.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1172.20 000000          #ifdef __EXTENDED_DPTR__
   1172.21 000000          #endif ; __EXTENDED_DPTR__
   1172.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1172.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1172.24 000000          #ifdef __EXTENDED_DPTR__
   1172.25 000000          #endif ; __EXTENDED_DPTR__
   1172.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1172.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1172.28 000000          #ifdef __EXTENDED_DPTR__
   1172.29 000000          #endif ; __EXTENDED_DPTR__
   1172.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1172.31 000000          #endif ; __DPTR_SEPARATE__
   1172.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1172.33 000000                  ENDM
   1173    000000                  PUBLIC  ?XSTACK_DISP0_16
   1174    000000          
   1175    000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1177    000000          #endif
   1178    000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1180    000000          #endif
   1181    000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1183    000000          #endif
   1184    000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1186    000000          #endif
   1187    000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1189    000000          #endif
   1190    000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1192    000000          #endif
   1193    000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1195    000000          #endif
   1196    000000          
   1197    000000              cfi BLOCK ?XSTACK_DISP16 USING cfi_common
   1198    000000              cfi NOFUNCTION
   1199    000000          
   1200    000000          #if ( (__NUMBER_OF_DPTRS__ == 1) || ((__NUMBER_OF_DP
                           TRS__ > 1) && (defined ( __DPTR_SHADOWED__
                            ))))
   1201    000000          ?XSTACK_DISP0_16:
   1202    000000          ?XSTACK_DISP1_16:
   1203    000000          ?XSTACK_DISP2_16:
   1204    000000          ?XSTACK_DISP3_16:
   1205    000000          ?XSTACK_DISP4_16:
   1206    000000          ?XSTACK_DISP5_16:
   1207    000000          ?XSTACK_DISP6_16:
   1208    000000          ?XSTACK_DISP7_16:
   1209    000000 C582             XCH     A,DPL
   1210    000002 25..             ADD     A,XSP_L
   1211    000004 C582             XCH     A,DPL
   1212    000006 C583             XCH     A,DPH
   1213    000008 35..             ADDC    A,XSP_H
   1214    00000A C583             XCH     A,DPH
   1215    00000C          #if (defined (__EXTENDED_DPTR__ ))
   1217    00000C          #endif
   1218    00000C 22               RET
   1219    00000D          
   1220    00000D          #elif __DPTR_SEPARATE__
   1229    00000D          #if (defined (__EXTENDED_DPTR__ ))
   1231    00000D          #endif
   1234    00000D          #if (__NUMBER_OF_DPTRS__ > 1)
   1242    00000D          #if (defined (__EXTENDED_DPTR__ ))
   1244    00000D          #endif
   1246    00000D          #endif
   1248    00000D          #if (__NUMBER_OF_DPTRS__ > 2)
   1256    00000D          #if (defined (__EXTENDED_DPTR__ ))
   1258    00000D          #endif
   1260    00000D          #endif
   1262    00000D          #if (__NUMBER_OF_DPTRS__ > 3)
   1270    00000D          #if (defined (__EXTENDED_DPTR__ ))
   1272    00000D          #endif
   1274    00000D          #endif
   1276    00000D          #if (__NUMBER_OF_DPTRS__ > 4)
   1284    00000D          #if (defined (__EXTENDED_DPTR__ ))
   1286    00000D          #endif
   1288    00000D          #endif
   1290    00000D          #if (__NUMBER_OF_DPTRS__ > 5)
   1298    00000D          #if (defined (__EXTENDED_DPTR__ ))
   1300    00000D          #endif
   1302    00000D          #endif
   1304    00000D          #if (__NUMBER_OF_DPTRS__ > 6)
   1312    00000D          #if (defined (__EXTENDED_DPTR__ ))
   1314    00000D          #endif
   1316    00000D          #endif
   1318    00000D          #if (__NUMBER_OF_DPTRS__ > 7)
   1326    00000D          #if (defined (__EXTENDED_DPTR__ ))
   1328    00000D          #endif
   1330    00000D          #endif
   1332    00000D          #else
   1333    00000D          #error "You must define __DPTR_SHADOWED__ or
                            __DPTR_SEPARATE__"
   1334    00000D          #endif
   1335    00000D          
   1336    00000D              cfi ENDBLOCK ?XSTACK_DISP16
   1337    00000D                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
                                                                      844      852      914      919
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781      844      852      914
                                                                      919
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775      847      853
                                                                      912      916     1012     1213
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
                                                                      841      850      909      917
                                                                     1009     1210
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_DPTR__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759      833
                                                                      900      973      976      979
                                                                      982      985      988      991
                                                                      994     1000     1000     1172
                                                                     1175     1178     1181     1184
                                                                     1187     1190     1193     1200
                                                                     1200
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
XSTACK              XDATA  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?XSP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?XSTACK_DISP0_16    REL    CONST PUB UNTYP.       RCODE      0 
?XSTACK_DISP16      REL    CONST UNTYP.           RCODE      Not solved 
?XSTACK_DISP1_16    REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP2_16    REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP3_16    REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP4_16    REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP5_16    REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP6_16    REL    CONST UNTYP.           RCODE      0 
?XSTACK_DISP7_16    REL    CONST UNTYP.           RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:52D0          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 13          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1338    000000          
   1339    000000          ;---------------------------------------------------
                           --------------------------
   1340    000000          ;
   1341    000000          ;       Functions: Call function indirect.
   1342    000000          ;
   1343    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
   1344    000000          ;
   1345    000000          ;       Function: ?CALL_IND
   1346    000000          ;
   1347    000000          ;       Description:
   1348    000000          ;               Emulates 'CALL  @DPTR'
   1349    000000          ;
   1350    000000          ;       Register input:
   1351    000000          ;               DPTR0 = Function address to
                            call
   1352    000000          ;
   1353    000000          ;       Register output:
   1354    000000          ;               A = Zero
   1355    000000          ;
   1356    000000          ;       Multiple DPTR
   1357    000000          ;               Shadowed:       Requires DPTR: 0    
                               Requires DPS: 0
   1358    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   1359    000000          ;
   1360    000000          ;               Separate:       Requires DPTR: 0    
                               Requires DPS: 0
   1361    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   1362    000000          ;
   1363    000000          ;       Stack usage: NA
   1364    000000          ;
   1365    000000          ;---------------------------------------------------
                           --------------------------
   1366    000000                  MODULE  ?CALL_IND
   1367    000000                  RSEG    RCODE:CODE:NOROOT
   1368    000000                  PUBLIC  ?CALL_IND
   1369    000000              cfi BLOCK ?CALL_IND USING cfi_common
   1370    000000              cfi NOFUNCTION
   1371    000000          ?CALL_IND:
   1372    000000 E4               CLR     A
   1373    000001 73               JMP     @A+DPTR
   1374    000002              cfi ENDBLOCK ?CALL_IND
   1375    000002                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
                                                                      844      852      914      919
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781      844      852      914
                                                                      919
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775      847      853
                                                                      912      916     1012     1213
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
                                                                      841      850      909      917
                                                                     1009     1210
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_DPTR__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759      833
                                                                      900      973      976      979
                                                                      982      985      988      991
                                                                      994     1000     1000     1172
                                                                     1175     1178     1181     1184
                                                                     1187     1190     1193     1200
                                                                     1200
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?CALL_IND           REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:5E0           #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 2          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1376    000000          
   1377    000000          
   1378    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
   1379    000000          ;
   1380    000000          ;       Function: ?POP_BIT_ISP
   1381    000000          ;
   1382    000000          ;       Description:
   1383    000000          ;               Restore spilled bit from idata
                            stack.
   1384    000000          ;
   1385    000000          ;       Register input:
   1386    000000          ;               NONE
   1387    000000          ;
   1388    000000          ;       Register output:
   1389    000000          ;               C = restored bit
   1390    000000          ;
   1391    000000          ;       Stack usage: NA
   1392    000000          ;
   1393    000000          ;---------------------------------------------------
                           --------------------------
   1394    000000                  MODULE  ?POP_BIT_ISP
   1395    000000                  RSEG    RCODE:CODE:NOROOT
   1396    000000                  PUBLIC  ?POP_BIT_ISP
   1397    000000          
   1398    000000              cfi BLOCK ?POP_BIT_ISP USING cfi_common
   1399    000000              cfi NOFUNCTION
   1400    000000          
   1401    000000          ?POP_BIT_ISP:
   1402    000000 C0E0             PUSH    A
   1403    000002              cfi CFA_MACHINE MACHINE_SP - 3
   1404    000002 E8               MOV     A,R0
   1405    000003 C0E0             PUSH    A
   1406    000005              cfi CFA_MACHINE MACHINE_SP - 4
   1407    000005 E581             MOV     A,SP
   1408    000007          #if (__CORE__ == __CORE_EXTENDED1__)
   1410    000007          #else
   1411    000007 24FC             ADD     A,#-4   ; 2 saved bytes and ret addr
                                                    (2).       
   1412    000009          #endif
   1413    000009 F8               MOV     R0,A
   1414    00000A E6               MOV     A,@R0
   1415    00000B A2E7             MOV     C,ACC.7
   1416    00000D D0E0             POP     A
   1417    00000F              cfi CFA_MACHINE MACHINE_SP - 3
   1418    00000F F8               MOV     R0,A
   1419    000010 D0E0             POP     A
   1420    000012              cfi CFA_MACHINE MACHINE_SP - 2
   1421    000012 22               RET
   1422    000013              cfi ENDBLOCK ?POP_BIT_ISP
   1423    000013                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
                                                                      844      852      914      919
                                                                     1403     1406     1417     1420
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781      844      852      914
                                                                      919     1403     1406     1417
                                                                     1420
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775      847      853
                                                                      912      916     1012     1213
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
                                                                      841      850      909      917
                                                                     1009     1210
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318     1408
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318     1408
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_DPTR__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759      833
                                                                      900      973      976      979
                                                                      982      985      988      991
                                                                      994     1000     1000     1172
                                                                     1175     1178     1181     1184
                                                                     1187     1190     1193     1200
                                                                     1200
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?POP_BIT_ISP        REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:DDB3          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 19          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:37             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_stack.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_stack.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_stack.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1424    000000          
   1425    000000          
   1426    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
   1427    000000          ;
   1428    000000          ;       Function: ?POP_BIT_ESP
   1429    000000          ;
   1430    000000          ;       Description:
   1431    000000          ;               Restore spilled bit from extended
                            stack.
   1432    000000          ;
   1433    000000          ;       Register input:
   1434    000000          ;               NONE
   1435    000000          ;
   1436    000000          ;       Register output:
   1437    000000          ;               C = restored bit
   1438    000000          ;
   1439    000000          ;       Multiple DPTR
   1440    000000          ;               Shadowed:       Requires DPTR: none 
                               Requires DPS: none
   1441    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: none
   1442    000000          ;
   1443    000000          ;               Separate:       Requires DPTR: none 
                               Requires DPS: none
   1444    000000          ;                               Modifies DPTR: none 
                               Returns  DPS: 0
   1445    000000          ;
   1446    000000          ;       Stack usage: ueage 7 bytes, stack after ret
                            -1
   1447    000000          ;
   1448    000000          ;       NOTE: Find a better way and make me
                            happy!
   1449    000000          ;
   1450    000000          ;---------------------------------------------------
                           --------------------------
   1451    000000                  MODULE  ?POP_BIT_ESP
   1452    000000                  RSEG    EXT_STACK:NOROOT:XDATA
   1453    000000                  RSEG    RCODE:CODE:NOROOT
   1454    000000                  PUBLIC  ?POP_BIT_ESP
   1455    000000                  EXTERNS_FOR_ALL_DPTR_SYMBOLS()
   1455.1  000000          #ifdef __EXTENDED_DPTR__
   1455.2  000000          #endif ; __EXTENDED_DPTR__
   1455.3  000000          #if (__NUMBER_OF_DPTRS__ > 1)
   1455.4  000000          #ifdef __DPTR_SEPARATE__
   1455.5  000000          #ifdef __EXTENDED_DPTR__
   1455.6  000000          #endif ; __EXTENDED_DPTR__
   1455.7  000000          #if (__NUMBER_OF_DPTRS__ > 2)
   1455.8  000000          #ifdef __EXTENDED_DPTR__
   1455.9  000000          #endif ; __EXTENDED_DPTR__
   1455.10 000000          #endif ; __NUMBER_OF_DPTRS__ > 2
   1455.11 000000          #if (__NUMBER_OF_DPTRS__ > 3)
   1455.12 000000          #ifdef __EXTENDED_DPTR__
   1455.13 000000          #endif ; __EXTENDED_DPTR__
   1455.14 000000          #endif ; __NUMBER_OF_DPTRS__ > 3
   1455.15 000000          #if (__NUMBER_OF_DPTRS__ > 4)
   1455.16 000000          #ifdef __EXTENDED_DPTR__
   1455.17 000000          #endif ; __EXTENDED_DPTR__
   1455.18 000000          #endif ; __NUMBER_OF_DPTRS__ > 4
   1455.19 000000          #if (__NUMBER_OF_DPTRS__ > 5)
   1455.20 000000          #ifdef __EXTENDED_DPTR__
   1455.21 000000          #endif ; __EXTENDED_DPTR__
   1455.22 000000          #endif ; __NUMBER_OF_DPTRS__ > 5
   1455.23 000000          #if (__NUMBER_OF_DPTRS__ > 6)
   1455.24 000000          #ifdef __EXTENDED_DPTR__
   1455.25 000000          #endif ; __EXTENDED_DPTR__
   1455.26 000000          #endif ; __NUMBER_OF_DPTRS__ > 6
   1455.27 000000          #if (__NUMBER_OF_DPTRS__ > 7)
   1455.28 000000          #ifdef __EXTENDED_DPTR__
   1455.29 000000          #endif ; __EXTENDED_DPTR__
   1455.30 000000          #endif ; __NUMBER_OF_DPTRS__ > 7
   1455.31 000000          #endif ; __DPTR_SEPARATE__
   1455.32 000000          #endif ; __NUMBER_OF_DPTRS__ > 1
   1455.33 000000                  ENDM
   1456    000000                  EXTERN  ?ESP
   1457    000000              cfi BLOCK ?POP_BIT_ESP USING cfi_common
   1458    000000              cfi NOFUNCTION
   1459    000000          
   1460    000000          ?POP_BIT_ESP:
   1461    000000          #if ((__NUMBER_OF_DPTRS__ > 1) && defined(__DPTR_SEP
                           ARATE__ ))
   1463    000000          #endif
   1464    000000 C0E0             PUSH    A
   1465    000002              cfi CFA_MACHINE MACHINE_SP - 3
   1466    000002 E8               MOV     A,R0
   1467    000003 C0E0             PUSH    A
   1468    000005              cfi CFA_MACHINE MACHINE_SP - 4
   1469    000005 E9               MOV     A,R1
   1470    000006 C0E0             PUSH    A
   1471    000008              cfi CFA_MACHINE MACHINE_SP - 5
   1472    000008 EA               MOV     A,R2
   1473    000009 C0E0             PUSH    A
   1474    00000B              cfi CFA_MACHINE MACHINE_SP - 6
   1475    00000B EB               MOV     A,R3
   1476    00000C C0E0             PUSH    A
   1477    00000E              cfi CFA_MACHINE MACHINE_SP - 7
   1478    00000E          #if (__CORE__ == __CORE_EXTENDED1__)
   1482    00000E          #endif
   1483    00000E C082             PUSH    DPL
   1484    000010              cfi CFA_MACHINE MACHINE_SP - 8
   1485    000010 C083             PUSH    DPH
   1486    000012              cfi CFA_MACHINE MACHINE_SP - 9
   1487    000012          
   1488    000012          #ifdef __EXTENDED_DPTR__
   1492    000012          #endif
   1493    000012          
   1494    000012          
   1495    000012          ;; Get DPTR to point to element to unspill
   1496    000012          ;; subtract size of spilled registers and the return
                            value
   1497    000012          ;;
   1498    000012 E581             MOV     A,SP
   1499    000014 C3               CLR     C
   1500    000015          
   1501    000015          #if ((__CORE__ == __CORE_EXTENDED1__) && (defined(__
                           EXTENDED_DPTR__)))
   1503    000015          #elif (__CORE__ == __CORE_EXTENDED1__)
   1505    000015          #elif (defined(__EXTENDED_DPTR__))
   1507    000015          #else
   1508    000015 9409             SUBB    A,#9
   1509    000017          #endif
   1510    000017 F582             MOV     DPL,A
   1511    000019 E4               CLR     A
   1512    00001A E5..             MOV     A,?ESP
   1513    00001C 9400             SUBB    A,#0
   1514    00001E 5403             ANL     A,#0x03         ; Maks out relevant
                                                            ESP bits.
   1515    000020 44..             ORL     A,#(HIGH(sfb(EXT_STACK)) &
                                              0xFC)
   1516    000022 F583             MOV     DPH,A
   1517    000024          
   1518    000024          ;; We have to rearange the stack, save RET, ACC, and
                            C to
   1519    000024          ;; temp registers
   1520    000024          ;;
   1521    000024 E0               MOVX    A,@DPTR
   1522    000025 F8               MOV     R0,A            ; R0 = Cy
   1523    000026 A3               INC     DPTR
   1524    000027          
   1525    000027 E0               MOVX    A,@DPTR
   1526    000028 FA               MOV     R2,A            ; R2 = RET1
   1527    000029 A3               INC     DPTR
   1528    00002A          
   1529    00002A E0               MOVX    A,@DPTR
   1530    00002B FB               MOV     R3,A            ; R3 = RET2
   1531    00002C A3               INC     DPTR
   1532    00002D          
   1533    00002D          #if (__CORE__ == __CORE_EXTENDED1__)
   1537    00002D          #endif
   1538    00002D          
   1539    00002D E0               MOVX    A,@DPTR
   1540    00002E F9               MOV     R1,A            ; R1 = Acc
   1541    00002F          
   1542    00002F          
   1543    00002F          ;; Make DPTR once again point to the value to
                            unspill, 
   1544    00002F          ;; stack -1 from original ret value
   1545    00002F          ;;
   1546    00002F C3               CLR     C
   1547    000030 E582             MOV     A,DPL
   1548    000032          #if (__CORE__ == __CORE_EXTENDED1__)
   1550    000032          #else
   1551    000032 9403             SUBB    A,#3
   1552    000034          #endif
   1553    000034 F582             MOV     DPL,A
   1554    000036 E583             MOV     A,DPH
   1555    000038 9400             SUBB    A,#0
   1556    00003A F583             MOV     DPH,A
   1557    00003C          
   1558    00003C          
   1559    00003C          ;; rearange stack, we want RET at bottom, followed
                            by A and then C,
   1560    00003C          ;; value to restore
   1561    00003C          ;;
   1562    00003C EA               MOV     A,R2
   1563    00003D F0               MOVX    @DPTR,A         ; RET -> stack
   1564    00003E A3               INC     DPTR
   1565    00003F          
   1566    00003F EB               MOV     A,R3
   1567    000040 F0               MOVX    @DPTR,A
   1568    000041 A3               INC     DPTR
   1569    000042          
   1570    000042          #if (__CORE__ == __CORE_EXTENDED1__)
   1574    000042          #endif
   1575    000042          
   1576    000042 E9               MOV     A,R1            ; ACC -> stack
   1577    000043 F0               MOVX    @DPTR,A
   1578    000044 A3               INC     DPTR
   1579    000045          
   1580    000045 E8               MOV     A,R0            ; C -> stack
   1581    000046 F0               MOVX    @DPTR,A
   1582    000047          
   1583    000047          ;; Make DPTR point to top of stack
   1584    000047          ;;
   1585    000047 E582             MOV     A,DPL
   1586    000049          #if ((__CORE__ == __CORE_EXTENDED1__) && (defined(__
                           EXTENDED_STACK__)))
   1588    000049          #elif (__CORE__ == __CORE_EXTENDED1__)
   1590    000049          #elif (defined(__EXTENDED_DPTR__))
   1592    000049          #else
   1593    000049 2406             ADD     A,#6
   1594    00004B          #endif
   1595    00004B F582             MOV     DPL,A
   1596    00004D E4               CLR     A
   1597    00004E 3583             ADDC    A,DPH
   1598    000050 F583             MOV     DPH,A
   1599    000052          
   1600    000052          
   1601    000052          ;; Restore saved values
   1602    000052          ;;
   1603    000052          
   1604    000052          #ifdef __EXTENDED_DPTR__
   1607    000052          #endif
   1608    000052 D083             POP     DPH
   1609    000054              cfi CFA_MACHINE MACHINE_SP - 10
   1610    000054 D082             POP     DPL
   1611    000056              cfi CFA_MACHINE MACHINE_SP - 9
   1612    000056          #if (__CORE__ == __CORE_EXTENDED1__)
   1616    000056          #endif
   1617    000056 D0E0             POP     A
   1618    000058              cfi CFA_MACHINE MACHINE_SP - 7
   1619    000058 FB               MOV     R3,A
   1620    000059 D0E0             POP     A
   1621    00005B              cfi CFA_MACHINE MACHINE_SP - 6
   1622    00005B FA               MOV     R2,A
   1623    00005C D0E0             POP     A
   1624    00005E              cfi CFA_MACHINE MACHINE_SP - 5
   1625    00005E F9               MOV     R1,A
   1626    00005F D0E0             POP     A
   1627    000061              cfi CFA_MACHINE MACHINE_SP - 4
   1628    000061 F8               MOV     R0,A
   1629    000062 D0E0             POP     A               ; value to
                                                            restore
   1630    000064              cfi CFA_MACHINE MACHINE_SP - 3
   1631    000064 A2E7             MOV     C,ACC.7
   1632    000066 D0E0             POP     A               ; restore A
   1633    000068              cfi CFA_MACHINE MACHINE_SP - 2
   1634    000068 22               RET
   1635    000069              cfi ENDBLOCK ?POP_BIT_ESP
   1636    000069                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
                                                                      844      852      914      919
                                                                     1403     1406     1417     1420
                                                                     1465     1468     1471     1474
                                                                     1477     1484     1486     1609
                                                                     1611     1618     1621     1624
                                                                     1627     1630     1633
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781      844      852      914
                                                                      919     1403     1406     1417
                                                                     1420     1465     1468     1471
                                                                     1474     1477     1484     1486
                                                                     1609     1611     1618     1621
                                                                     1624     1627     1630     1633
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775      847      853
                                                                      912      916     1012     1213
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
                                                                      841      850      909      917
                                                                     1009     1210
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318     1408     1478
                                                                     1501     1503     1533     1548
                                                                     1570     1586     1588     1612
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318     1408     1478
                                                                     1501     1503     1533     1548
                                                                     1570     1586     1588     1612
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759      833
                                                                      900      973      976      979
                                                                      982      985      988      991
                                                                      994     1000     1000     1172
                                                                     1175     1178     1181     1184
                                                                     1187     1190     1193     1200
                                                                     1200     1455     1461
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
EXT_STACK           XDATA  	REL 
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?ESP                ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?POP_BIT_ESP        REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3056          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 105         #
##############################





EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3       91       94
                                                                      163      166      254      257
                                                                      326      329      713      722
                                                                      768      771      779      781
                                                                      844      852      914      919
                                                                     1403     1406     1417     1420
                                                                     1465     1468     1471     1474
                                                                     1477     1484     1486     1609
                                                                     1611     1618     1621     1624
                                                                     1627     1630     1633
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3        707      720
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3       91
                                                                       94      163      166      254
                                                                      257      326      329      713
                                                                      722      768      771      779
                                                                      781      844      852      914
                                                                      919     1403     1406     1417
                                                                     1420     1465     1468     1471
                                                                     1474     1477     1484     1486
                                                                     1609     1611     1618     1621
                                                                     1624     1627     1630     1633
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3        707      720
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1        716      775      847      853
                                                                      912      916     1012     1213
XSP_L                #define, value: ?XSP, line:      23:1        711      719      769      777
                                                                      841      850      909      917
                                                                     1009     1210
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3       83      155
                                                                      246      318     1408     1478
                                                                     1501     1503     1533     1548
                                                                     1570     1586     1588     1612
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3       83      155
                                                                      246      318     1408     1478
                                                                     1501     1503     1533     1548
                                                                     1570     1586     1588     1612
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1       74      146      238
                                                                      310      392      395      398
                                                                      401      404      407      410
                                                                      413      421      421      552
                                                                      555      558      561      564
                                                                      567      570      574      579
                                                                      579      703      759      833
                                                                      900      973      976      979
                                                                      982      985      988      991
                                                                      994     1000     1000     1172
                                                                     1175     1178     1181     1184
                                                                     1187     1190     1193     1200
                                                                     1200     1455     1461
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
__DPTR_SEPARATE__   REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3056          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 105         #
#     Modules:        15     #
#     Total errors:   0      #
#     Total warnings: 0      #
##############################



