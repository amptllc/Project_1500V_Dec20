###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

      1    000000          ;---------------------------------------------------
                           -------------------------
      2    000000          ;
      3    000000          ;       File:           iar_switch.s03
      4    000000          ;
      5    000000          ;       Version:        6.00
      6    000000          ;
      7    000000          ;       Created:        09/Aug/02 IOLW [6.00]
      8    000000          ;
      9    000000          ;
     10    000000          ;       Description:    This file contains all
                            decodings of table type
     11    000000          ;                       switches. The types of
                            switches can be unsigned
     12    000000          ;                       char, unsigned short and
                            unsigned long.
     13    000000          ;
     14    000000          ;                       Depending on datamodel and
                            codemodel different type
     15    000000          ;                       of code are generated.
     16    000000          ;
     17    000000          ;                       The FAR directive tells the
                            size of lables in the
     18    000000          ;                       tables are 3 bytes.
     19    000000          ;
     20    000000          ;       REVISON INFORMATION                         
                                   
     21    000000          ;                                                   
                                   
     22    000000          ;       $Revision: 1.26 $
     23    000000          ;                                                   
                                   
     24    000000          ;       Log information is available at the end of
                            this file
     25    000000          ;
     26    000000          ;---------------------------------------------------
                           -------------------------
     27    000000          
     28    000000          #include "iar_common.h"
     29    000000          #include "iar_switch.h"
     30    000000          
     31    000000          ;---------------------------------------------------
                           --------------------------
     32    000000          ;
     33    000000          ;       Functions: Decoder for character switches
     34    000000          ;                  ?UC_SWITCH_DENSE
     35    000000          ;                  ?UC_JMP_IF_IN_RANGE
     36    000000          ;                  ?UC_JMP_IF_VALUE
     37    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
     38    000000          ;
     39    000000          ;       Function: ?UC_SWITCH_DENSE
     40    000000          ;
     41    000000          ;       Description: Decodes a dense table (with
                            lables in it).
     42    000000          ;                    Handles tables with 256
                            elements.
     43    000000          ;
     44    000000          ;       Register input:
     45    000000          ;               A:    Switch register
     46    000000          ;
     47    000000          ;       Register output:
     48    000000          ;               DPTR: Undefined
     49    000000          ;               A:    Undefined
     50    000000          ;               PSW:  Undefined
     51    000000          ;               B:    Undefined
     52    000000          ;
     53    000000          ;       Stack input:
     54    000000          ;               Byte 1: Return address Low = Table
                            address Low
     55    000000          ;               Byte 2: Return address High = Table
                            address High
     56    000000          ;             ( Byte 3: Return address Ext = Table
                            address Ext )
     57    000000          ;
     58    000000          ;       Multiple DPTR
     59    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: DPTRx
     60    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
     61    000000          ;
     62    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: 0
     63    000000          ;                               Modifies DPTR: 0    
                                       Returns  DPS: 0
     64    000000          ;
     65    000000          ;       Stack usage: 8
     66    000000          ;
     67    000000          ;       Note: The return value in stack is a pointer
                            to the switch table
     68    000000          ;             and is replaced by the case label
                            before returning from this.
     69    000000          ;             function.
     70    000000          ;
     71    000000          ;---------------------------------------------------
                           --------------------------
     72    000000                  MODULE  ?UC_SWITCH_DENSE
     73    000000                  RSEG    RCODE:CODE:NOROOT
     74    000000                  EXTERN  ?DPX
     75    000000                  PUBLIC  ?UC_SWITCH_DENSE
     76    000000                  cfi BLOCK ?UC_SWITCH_DENSE USING cfi_common
     77    000000                  cfi NOFUNCTION
     78    000000          
     79    000000          ?UC_SWITCH_DENSE:
     80    000000          #if (__CODE_MODEL__ == __CM_FAR__)
    149    000000          #else
    150    000000          
    151    000000          #if ( defined(__EXTENDED_DPTR__))
    153    000000          #endif
    154    000000 D083             POP     DPH
    155    000002              cfi CFA_MACHINE MACHINE_SP - 1
    156    000002              cfi ?RET_HIGH DPH0
    157    000002 D082             POP     DPL           ; DPTR now holds the
                                                          address of the
                                                          table.
    158    000004              cfi CFA_MACHINE MACHINE_SP - 0
    159    000004              cfi ?RET_LOW DPL0
    160    000004                  
    161    000004          ;;;;;;;;;;;; Normalize value and check bounds
    162    000004 C5F0             XCH     A,B               ; B = switch
                                                              value
    163    000006 E4               CLR     A
    164    000007 93               MOVC    A,@A+DPTR         ; A = start
    165    000008 A3               INC     DPTR
    166    000009              cfi invalid
    167    000009 C5F0             XCH     A,B               ; A = switch
                                                              value, B =
                                                              start
    168    00000B          
    169    00000B C3               CLR     C
    170    00000C 95F0             SUBB    A,B               ; A = Normalized
                                                              value
    171    00000E F5F0             MOV     B,A
    172    000010          
    173    000010 E4               CLR     A
    174    000011 93               MOVC    A,@A+DPTR
    175    000012 A3               INC     DPTR
    176    000013 C3               CLR     C
    177    000014 95F0             SUBB    A,B               ; Test if
                                                              normalized value
                                                              > (N - 1)
    178    000016 4005             JC      GREATER_THAN
    179    000018 E5F0             MOV     A,B
    180    00001A 04               INC     A                 ; Skips the
                                                              default label
                                                              (who has index 0
                                                              in table)
    181    00001B 8001             SJMP    LESS_THAN
    182    00001D          
    183    00001D          GREATER_THAN:
    184    00001D E4               CLR     A                 ; Map all other
                                                              values to index 0
                                                              in the table
    185    00001E          LESS_THAN:
    186    00001E          
    187    00001E                  ; Here A contains index in table
    188    00001E          
    189    00001E          ;;;;;;;;;;;; Calculate index address in table
    190    00001E 75F002           MOV     B,#2
    191    000021 A4               MUL     AB
    192    000022 2582             ADD     A,DPL
    193    000024 F582             MOV     DPL,A
    194    000026 E5F0             MOV     A,B
    195    000028 3583             ADDC    A,DPH
    196    00002A F583             MOV     DPH,A
    197    00002C          
    198    00002C          ;;;;;;;;;;;; Read value from table and jump
    199    00002C E4               CLR     A
    200    00002D 93               MOVC    A,@A+DPTR
    201    00002E A3               INC     DPTR
    202    00002F C0E0             PUSH    A
    203    000031              cfi CFA_MACHINE MACHINE_SP - 1
    204    000031 E4               CLR     A
    205    000032 93               MOVC    A,@A+DPTR
    206    000033 C0E0             PUSH    A
    207    000035              cfi CFA_MACHINE MACHINE_SP - 2
    208    000035 22               RET
    209    000036          #endif
    210    000036              cfi valid
    211    000036                  cfi ENDBLOCK ?UC_SWITCH_DENSE
    212    000036                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DPX                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?RET                ABS    CONST UNTYP.           ASEG       Not solved 
?RET_EXT            ABS    CONST UNTYP.           ASEG       Not solved 
?RET_HIGH           ABS    CONST UNTYP.           ASEG       Not solved 
?RET_LOW            ABS    CONST UNTYP.           ASEG       Not solved 
?UC_SWITCH_DENSE    REL    CONST PUB UNTYP.       RCODE      0 
?V_START            ABS    CONST UNTYP.           ASEG       Not solved 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BASEADDRESS         ABS    CONST UNTYP.           ASEG       Not solved 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
Base                ABS    CONST UNTYP.           ASEG       Not solved 
CFA_PSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CFA_SP              ABS    CONST UNTYP.           ASEG       Not solved 
CFA_XSP16           ABS    CONST UNTYP.           ASEG       Not solved 
CODEALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
COMMON              ABS    CONST UNTYP.           ASEG       Not solved 
CONCAT              ABS    CONST UNTYP.           ASEG       Not solved 
DATAALIGN           ABS    CONST UNTYP.           ASEG       Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                ABS    CONST UNTYP.           ASEG       Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                ABS    CONST UNTYP.           ASEG       Not solved 
DPTR0               ABS    CONST UNTYP.           ASEG       Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
ENDCOMMON           ABS    CONST UNTYP.           ASEG       Not solved 
ENDNAMES            ABS    CONST UNTYP.           ASEG       Not solved 
EXTENDS             ABS    CONST UNTYP.           ASEG       Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
FRAMECELL           ABS    CONST UNTYP.           ASEG       Not solved 
Frame               ABS    CONST UNTYP.           ASEG       Not solved 
GREATER_THAN        REL    CONST UNTYP.           RCODE      1D 
LESS_THAN           REL    CONST UNTYP.           RCODE      1E 
NAMES               ABS    CONST UNTYP.           ASEG       Not solved 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSP16               ABS    CONST UNTYP.           ASEG       Not solved 
PSPH                ABS    CONST UNTYP.           ASEG       Not solved 
PSPL                ABS    CONST UNTYP.           ASEG       Not solved 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RETH_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETL_CELL           ABS    CONST UNTYP.           ASEG       Not solved 
RETURNADDRESS       ABS    CONST UNTYP.           ASEG       Not solved 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
Resource            ABS    CONST UNTYP.           ASEG       Not solved 
ResourceParts       ABS    CONST UNTYP.           ASEG       Not solved 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
SameValue           ABS    CONST UNTYP.           ASEG       Not solved 
StackFrame          ABS    CONST UNTYP.           ASEG       Not solved 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               ABS    CONST UNTYP.           ASEG       Not solved 
Undefined           ABS    CONST UNTYP.           ASEG       Not solved 
V0                  ABS    CONST UNTYP.           ASEG       Not solved 
V1                  ABS    CONST UNTYP.           ASEG       Not solved 
V10                 ABS    CONST UNTYP.           ASEG       Not solved 
V11                 ABS    CONST UNTYP.           ASEG       Not solved 
V12                 ABS    CONST UNTYP.           ASEG       Not solved 
V13                 ABS    CONST UNTYP.           ASEG       Not solved 
V14                 ABS    CONST UNTYP.           ASEG       Not solved 
V15                 ABS    CONST UNTYP.           ASEG       Not solved 
V16                 ABS    CONST UNTYP.           ASEG       Not solved 
V17                 ABS    CONST UNTYP.           ASEG       Not solved 
V18                 ABS    CONST UNTYP.           ASEG       Not solved 
V19                 ABS    CONST UNTYP.           ASEG       Not solved 
V2                  ABS    CONST UNTYP.           ASEG       Not solved 
V20                 ABS    CONST UNTYP.           ASEG       Not solved 
V21                 ABS    CONST UNTYP.           ASEG       Not solved 
V22                 ABS    CONST UNTYP.           ASEG       Not solved 
V23                 ABS    CONST UNTYP.           ASEG       Not solved 
V24                 ABS    CONST UNTYP.           ASEG       Not solved 
V25                 ABS    CONST UNTYP.           ASEG       Not solved 
V26                 ABS    CONST UNTYP.           ASEG       Not solved 
V27                 ABS    CONST UNTYP.           ASEG       Not solved 
V28                 ABS    CONST UNTYP.           ASEG       Not solved 
V29                 ABS    CONST UNTYP.           ASEG       Not solved 
V3                  ABS    CONST UNTYP.           ASEG       Not solved 
V30                 ABS    CONST UNTYP.           ASEG       Not solved 
V31                 ABS    CONST UNTYP.           ASEG       Not solved 
V4                  ABS    CONST UNTYP.           ASEG       Not solved 
V5                  ABS    CONST UNTYP.           ASEG       Not solved 
V6                  ABS    CONST UNTYP.           ASEG       Not solved 
V7                  ABS    CONST UNTYP.           ASEG       Not solved 
V8                  ABS    CONST UNTYP.           ASEG       Not solved 
V9                  ABS    CONST UNTYP.           ASEG       Not solved 
VB                  ABS    CONST UNTYP.           ASEG       Not solved 
VirtualResource     ABS    CONST UNTYP.           ASEG       Not solved 
XSP16               ABS    CONST UNTYP.           ASEG       Not solved 
XSPH                ABS    CONST UNTYP.           ASEG       Not solved 
XSPL                ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_common   ABS    CONST UNTYP.           ASEG       Not solved 
cfi_banked_names    ABS    CONST UNTYP.           ASEG       Not solved 
cfi_common          ABS    CONST UNTYP.           ASEG       Not solved 
cfi_names           ABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_commonABS    CONST UNTYP.           ASEG       Not solved 
cfi_pdata_enter_namesABS    CONST UNTYP.           ASEG       Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
samevalue           ABS    CONST UNTYP.           ASEG       Not solved 
sub                 ABS    CONST UNTYP.           ASEG       Not solved 
undefined           ABS    CONST UNTYP.           ASEG       Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3E8D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 54          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    213    000000          
    214    000000          ;---------------------------------------------------
                           --------------------------
    215    000000          ;
    216    000000          ;       Function: ?US_SWITCH_DENSE
    217    000000          ;
    218    000000          ;       Description: Decodes a dense table (with
                            lables in it).
    219    000000          ;                    Handles tables with 256
                            elements.
    220    000000          ;
    221    000000          ;       Register input:
    222    000000          ;               @R0  Switch register
    223    000000          ;
    224    000000          ;       Register output:
    225    000000          ;               DPTR: Undefined
    226    000000          ;               A:    Undefined
    227    000000          ;               B:    Undefined
    228    000000          ;               PSW:  Undefined
    229    000000          ;
    230    000000          ;       Stack input:
    231    000000          ;               Byte 1: Return address Low = Table
                            address Low
    232    000000          ;               Byte 2: Return address High = Table
                            address High
    233    000000          ;             ( Byte 3: Return address Ext = Table
                            address Ext )
    234    000000          ;
    235    000000          ;       Multiple DPTR
    236    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: DPTRx
    237    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
    238    000000          ;
    239    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: 0
    240    000000          ;                               Modifies DPTR: 0    
                                       Returns  DPS: 0
    241    000000          ;
    242    000000          ;       Stack usage: 8
    243    000000          ;
    244    000000          ;       Note: The return value in stack is a pointer
                            to the switch table
    245    000000          ;             and is replaced by the case label
                            before returning from this.
    246    000000          ;             function.
    247    000000          ;
    248    000000          ;---------------------------------------------------
                           --------------------------
    249    000000                  MODULE  ?US_SWITCH_DENSE
    250    000000                  RSEG    RCODE:CODE:NOROOT
    251    000000                  EXTERN  ?DPX
    252    000000                  PUBLIC  ?US_SWITCH_DENSE
    253    000000                  cfi BLOCK ?US_SWITCH_DENSE USING cfi_common
    254    000000                  cfi NOFUNCTION
    255    000000          ?US_SWITCH_DENSE:
    256    000000          #if (__CODE_MODEL__ == __CM_FAR__)
    347    000000          #else
    348    000000          
    349    000000          #if ( defined(__EXTENDED_DPTR__))
    351    000000          #endif
    352    000000 D083             POP     DPH
    353    000002              cfi CFA_MACHINE MACHINE_SP - 1
    354    000002              cfi ?RET_HIGH DPH0
    355    000002 D082             POP     DPL           ; DPTR now holds the
                                                          address of the
                                                          table.
    356    000004              cfi CFA_MACHINE MACHINE_SP - 0
    357    000004              cfi ?RET_LOW DPL0
    358    000004 E9               MOV     A,R1
    359    000005 C0E0             PUSH    A
    360    000007              cfi CFA_MACHINE MACHINE_SP - 1
    361    000007                  
    362    000007          ;;;;;;;;;;;; Normalize value and check bounds
    363    000007 E4               CLR     A
    364    000008 93               MOVC    A,@A+DPTR         ; A = startL
    365    000009 A3               INC     DPTR
    366    00000A              cfi invalid
    367    00000A          
    368    00000A              ; @R0 points at lowest byte
    369    00000A C3               CLR     C
    370    00000B 86F0             MOV     B,@R0
    371    00000D C5F0             XCH     A,B
    372    00000F 95F0             SUBB    A,B
    373    000011 F9               MOV     R1,A              ; R1 = Normalized
                                                              value
    374    000012 08               INC     R0
    375    000013          
    376    000013 E4               CLR     A
    377    000014 93               MOVC    A,@A+DPTR         ; A = startH
    378    000015 A3               INC     DPTR
    379    000016          
    380    000016              ; @R0 points at lowest byte
    381    000016 86F0             MOV     B,@R0
    382    000018 C5F0             XCH     A,B
    383    00001A 95F0             SUBB    A,B
    384    00001C 700B             JNZ     NOT_IN_TABLE_1
    385    00001E          
    386    00001E              ; The high byte must be 0
    387    00001E E4               CLR     A
    388    00001F 93               MOVC    A,@A+DPTR
    389    000020 A3               INC     DPTR
    390    000021 C3               CLR     C
    391    000022 99               SUBB    A,R1               ; Test if
                                                               normalized value
                                                               > (N -
                                                               1)
    392    000023 4005             JC      NOT_IN_TABLE_2
    393    000025 E9               MOV     A,R1
    394    000026 04               INC     A                 ; Skips the
                                                              default label
                                                              (who has index 0
                                                              in table)
    395    000027 8002             SJMP    IN_TABLE
    396    000029          
    397    000029          NOT_IN_TABLE_1:
    398    000029 A3               INC     DPTR
    399    00002A          NOT_IN_TABLE_2:
    400    00002A E4               CLR     A                 ; Map all other
                                                              values to index 0
                                                              in the table
    401    00002B          IN_TABLE:
    402    00002B          
    403    00002B                  ; Here A contains index in table
    404    00002B          
    405    00002B          ;;;;;;;;;;;; Calculate index address in table
    406    00002B 75F002           MOV     B,#2
    407    00002E A4               MUL     AB
    408    00002F 2582             ADD     A,DPL
    409    000031 F582             MOV     DPL,A
    410    000033 E5F0             MOV     A,B
    411    000035 3583             ADDC    A,DPH
    412    000037 F583             MOV     DPH,A
    413    000039          
    414    000039 D0E0             POP     A
    415    00003B F9               MOV     R1,A
    416    00003C              cfi CFA_MACHINE MACHINE_SP - 0
    417    00003C          
    418    00003C          ;;;;;;;;;;;; Read value from table and jump
    419    00003C E4               CLR     A
    420    00003D 93               MOVC    A,@A+DPTR
    421    00003E A3               INC     DPTR
    422    00003F C0E0             PUSH    A
    423    000041              cfi CFA_MACHINE MACHINE_SP - 1
    424    000041 E4               CLR     A
    425    000042 93               MOVC    A,@A+DPTR
    426    000043 C0E0             PUSH    A
    427    000045              cfi CFA_MACHINE MACHINE_SP - 2
    428    000045 22               RET
    429    000046              cfi valid
    430    000046          #endif
    431    000046                  cfi ENDBLOCK ?US_SWITCH_DENSE
    432    000046                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DPX                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?US_SWITCH_DENSE    REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
IN_TABLE            REL    CONST UNTYP.           RCODE      2B 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
NOT_IN_TABLE_1      REL    CONST UNTYP.           RCODE      29 
NOT_IN_TABLE_2      REL    CONST UNTYP.           RCODE      2A 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:E0C           #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 70          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    433    000000          
    434    000000          ;---------------------------------------------------
                           --------------------------
    435    000000          ;
    436    000000          ;       Function: ?UL_SWITCH_DENSE
    437    000000          ;
    438    000000          ;       Description: Decodes a dense table (with
                            lables in it).
    439    000000          ;                    Handles tables with 256
                            elements.
    440    000000          ;
    441    000000          ;       Register input:
    442    000000          ;               @R0  Switch register
    443    000000          ;
    444    000000          ;       Register output:
    445    000000          ;               DPTR: Undefined
    446    000000          ;               A:    Undefined
    447    000000          ;               B:    Undefined
    448    000000          ;               PSW:  Undefined
    449    000000          ;
    450    000000          ;       Stack input:
    451    000000          ;               Byte 1: Return address Low = Table
                            address Low
    452    000000          ;               Byte 2: Return address High = Table
                            address High
    453    000000          ;             ( Byte 3: Return address Ext = Table
                            address Ext )
    454    000000          ;
    455    000000          ;       Multiple DPTR
    456    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: DPTRx
    457    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
    458    000000          ;
    459    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: 0
    460    000000          ;                               Modifies DPTR: 0    
                                       Returns  DPS: 0
    461    000000          ;
    462    000000          ;       Stack usage: 8
    463    000000          ;
    464    000000          ;       Note: The return value in stack is a pointer
                            to the switch table
    465    000000          ;             and is replaced by the case label
                            before returning from this.
    466    000000          ;             function.
    467    000000          ;
    468    000000          ;---------------------------------------------------
                           --------------------------
    469    000000                  MODULE  ?UL_SWITCH_DENSE
    470    000000                  RSEG    RCODE:CODE:NOROOT
    471    000000                  EXTERN  ?DPX
    472    000000                  PUBLIC  ?UL_SWITCH_DENSE
    473    000000                  cfi BLOCK ?UL_SWITCH_DENSE USING cfi_common
    474    000000                  cfi NOFUNCTION
    475    000000          ?UL_SWITCH_DENSE:
    476    000000          #if (__CODE_MODEL__ == __CM_FAR__)
    595    000000          #else
    596    000000          
    597    000000          #if ( defined(__EXTENDED_DPTR__))
    599    000000          #endif
    600    000000 D083             POP     DPH
    601    000002              cfi CFA_MACHINE MACHINE_SP - 1
    602    000002              cfi ?RET_HIGH DPH0
    603    000002 D082             POP     DPL           ; DPTR now holds the
                                                          address of the
                                                          table.
    604    000004              cfi CFA_MACHINE MACHINE_SP - 0
    605    000004              cfi ?RET_LOW DPL0
    606    000004 E9               MOV     A,R1
    607    000005 C0E0             PUSH    A
    608    000007              cfi CFA_MACHINE MACHINE_SP - 1
    609    000007          
    610    000007          ;;;;;;;;;;;; Normalize value and check bounds
    611    000007 E4               CLR     A
    612    000008 93               MOVC    A,@A+DPTR         ; A = BYTE0(start)
    613    000009 A3               INC     DPTR
    614    00000A              cfi invalid
    615    00000A          
    616    00000A              ; @R0 points at BYTE0(switchreg)
    617    00000A C3               CLR     C
    618    00000B 86F0             MOV     B,@R0
    619    00000D C5F0             XCH     A,B
    620    00000F 95F0             SUBB    A,B
    621    000011 F9               MOV     R1,A               ; R1 = Normalized
                                                               value
    622    000012 08               INC     R0
    623    000013          
    624    000013 E4               CLR     A
    625    000014 93               MOVC    A,@A+DPTR         ; A = BYTE1(start)
    626    000015 A3               INC     DPTR
    627    000016          
    628    000016              ; @R0 points at BYTE1(switchreg)
    629    000016 86F0             MOV     B,@R0
    630    000018 C5F0             XCH     A,B
    631    00001A 95F0             SUBB    A,B
    632    00001C 7024             JNZ     NOT_IN_TABLE_1
    633    00001E 08               INC     R0
    634    00001F          
    635    00001F E4               CLR     A
    636    000020 93               MOVC    A,@A+DPTR         ; A = BYTE2(start)
    637    000021 A3               INC     DPTR
    638    000022          
    639    000022              ; @R0 points at BYTE2(switchreg)
    640    000022 86F0             MOV     B,@R0
    641    000024 C5F0             XCH     A,B
    642    000026 95F0             SUBB    A,B
    643    000028 7019             JNZ     NOT_IN_TABLE_2
    644    00002A 08               INC     R0
    645    00002B          
    646    00002B E4               CLR     A
    647    00002C 93               MOVC    A,@A+DPTR         ; A = BYTE3(start)
    648    00002D A3               INC     DPTR
    649    00002E          
    650    00002E              ; @R0 points at BYTE3(switchreg)
    651    00002E 86F0             MOV     B,@R0
    652    000030 C5F0             XCH     A,B
    653    000032 95F0             SUBB    A,B
    654    000034 700E             JNZ     NOT_IN_TABLE_3
    655    000036 08               INC     R0
    656    000037          
    657    000037              ; The high byte must be 0
    658    000037 E4               CLR     A
    659    000038 93               MOVC    A,@A+DPTR
    660    000039 A3               INC     DPTR
    661    00003A C3               CLR     C
    662    00003B 99               SUBB    A,R1               ; Test if
                                                               normalized value
                                                               > (N -
                                                               1)
    663    00003C 4007             JC      NOT_IN_TABLE_4
    664    00003E E9               MOV     A,R1
    665    00003F 04               INC     A                 ; Skips the
                                                              default label
                                                              (who has index 0
                                                              in table)
    666    000040 8004             SJMP    IN_TABLE
    667    000042          
    668    000042          NOT_IN_TABLE_1:
    669    000042 A3               INC     DPTR
    670    000043          NOT_IN_TABLE_2:
    671    000043 A3               INC     DPTR
    672    000044          NOT_IN_TABLE_3:
    673    000044 A3               INC     DPTR
    674    000045          NOT_IN_TABLE_4:
    675    000045 E4               CLR     A                 ; Map all other
                                                              values to index 0
                                                              in the table
    676    000046          IN_TABLE:
    677    000046          
    678    000046                  ; Here A contains index in table
    679    000046          
    680    000046          ;;;;;;;;;;;; Calculate index address in table
    681    000046 75F002           MOV     B,#2
    682    000049 A4               MUL     AB
    683    00004A 2582             ADD     A,DPL
    684    00004C F582             MOV     DPL,A
    685    00004E E5F0             MOV     A,B
    686    000050 3583             ADDC    A,DPH
    687    000052 F583             MOV     DPH,A
    688    000054          
    689    000054 D0E0             POP     A
    690    000056 F9               MOV     R1,A
    691    000057              cfi CFA_MACHINE MACHINE_SP - 0
    692    000057          
    693    000057          ;;;;;;;;;;;; Read value from table and jump
    694    000057 E4               CLR     A
    695    000058 93               MOVC    A,@A+DPTR
    696    000059 A3               INC     DPTR
    697    00005A C0E0             PUSH    A
    698    00005C              cfi CFA_MACHINE MACHINE_SP - 1
    699    00005C E4               CLR     A
    700    00005D 93               MOVC    A,@A+DPTR
    701    00005E C0E0             PUSH    A
    702    000060              cfi CFA_MACHINE MACHINE_SP - 2
    703    000060 22               RET
    704    000061              cfi valid
    705    000061          #endif
    706    000061                  cfi ENDBLOCK ?UL_SWITCH_DENSE
    707    000061                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3
__CORE_EXTENDED2__   #define, value: 3, line:      22:2  
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DPX                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?UL_SWITCH_DENSE    REL    CONST PUB UNTYP.       RCODE      0 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
IN_TABLE            REL    CONST UNTYP.           RCODE      46 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
NOT_IN_TABLE_1      REL    CONST UNTYP.           RCODE      42 
NOT_IN_TABLE_2      REL    CONST UNTYP.           RCODE      43 
NOT_IN_TABLE_3      REL    CONST UNTYP.           RCODE      44 
NOT_IN_TABLE_4      REL    CONST UNTYP.           RCODE      45 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3192          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 97          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    708    000000          
    709    000000          ;---------------------------------------------------
                           --------------------------
    710    000000          ;
    711    000000          ;       Functions: Decoder for character switches
    712    000000          ;                  ?UC_SWITCH_SPARSE
    713    000000          ;                  ?UC_JMP_IF_IN_RANGE
    714    000000          ;                  ?UC_JMP_IF_VALUE
    715    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
    716    000000          ;
    717    000000          ;       Function: ?UC_SWITCH_SPARSE
    718    000000          ;
    719    000000          ;       Description: Decodes a sparse table (with
                            lables in it).
    720    000000          ;
    721    000000          ;       Register input:
    722    000000          ;               A:    Switch register
    723    000000          ;
    724    000000          ;       Register output:
    725    000000          ;               DPTR: Undefined
    726    000000          ;               PSW:  Undefined
    727    000000          ;               A:    Undefined
    728    000000          ;
    729    000000          ;       Stack input:
    730    000000          ;               Byte 1: Return address Low = Table
                            address Low
    731    000000          ;               Byte 2: Return address High = Table
                            address High
    732    000000          ;             ( Byte 3: Return address Ext = Table
                            address Ext )
    733    000000          ;
    734    000000          ;       Multiple DPTR
    735    000000          ;               Shadowed:       Requires DPTR: none 
                                       Requires DPS: DPTRx
    736    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
    737    000000          ;
    738    000000          ;               Separate:       Requires DPTR: none 
                                       Requires DPS: 0
    739    000000          ;                               Modifies DPTR: 0    
                                       Returns  DPS: 0
    740    000000          ;
    741    000000          ;       Stack usage: 8
    742    000000          ;
    743    000000          ;       Note: The return value in stack is a pointer
                            to the switch table
    744    000000          ;             and is replaced by the case label
                            before returning from this.
    745    000000          ;             function.
    746    000000          ;
    747    000000          ;---------------------------------------------------
                           --------------------------
    748    000000                  MODULE  ?UC_SWITCH_SPARSE
    749    000000                  RSEG    RCODE:CODE:NOROOT
    750    000000                  EXTERN  ?UC_JMP_IF_IN_RANGE
    751    000000                  EXTERN  ?UC_JMP_IF_VALUE
    752    000000                  EXTERN  ?DPX
    753    000000                  PUBLIC  ?UC_SWITCH_SPARSE
    754    000000                  PUBLIC  ?UC_SWITCH_SPARSE_LEAVE
    755    000000                  cfi BLOCK ?UC_SWITCH_SPARSE_LEAVE USING
  cfi_common
    756    000000                  cfi NOFUNCTION
    757    000000          ?UC_SWITCH_SPARSE:
    758    000000          #if (__CORE__ == __CORE_EXTENDED1__)
    768    000000          #else
    769    000000          #if ( defined(__EXTENDED_DPTR__))
    771    000000          #endif
    772    000000 D083             POP     DPH
    773    000002              cfi CFA_MACHINE MACHINE_SP - 1
    774    000002              cfi ?RET_HIGH DPH0
    775    000002 D082             POP     DPL           ; DPTR now holds the
                                                          address of the
                                                          table.
    776    000004              cfi CFA_MACHINE MACHINE_SP - 0
    777    000004              cfi ?RET_LOW DPL0
    778    000004          #endif
    779    000004 CC               XCH     A,R4          ; R4 now holds the
                                                          switch value;
    780    000005 C0E0             PUSH    A
    781    000007              cfi CFA_MACHINE MACHINE_SP - 1
    782    000007              
    783    000007              cfi invalid
    784    000007          check_ranges:
    785    000007 E4               CLR     A
    786    000008 93               MOVC    A, @A+DPTR    ; A now hold the nr of
                                                          ranges in the table
                                                          to check.
    787    000009 A3               INC     DPTR
    788    00000A 6006             JZ      check_values
    789    00000C          check_ranges_loop:
    790    00000C 12....           CALL    ?UC_JMP_IF_IN_RANGE
    791    00000F 14               DEC     A
    792    000010 70FA             JNZ     check_ranges_loop
    793    000012          check_values:
    794    000012 E4               CLR     A
    795    000013 93               MOVC    A, @A + DPTR      ; A now hold the
                                                              nr of values in
                                                              the table to
                                                              check.
    796    000014 A3               INC     DPTR
    797    000015 6006             JZ      ?UC_SWITCH_SPARSE_LEAVE
    798    000017          check_values_loop:
    799    000017 12....           CALL    ?UC_JMP_IF_VALUE
    800    00001A 14               DEC     A
    801    00001B 70FA             JNZ     check_values_loop
    802    00001D          
    803    00001D          ?UC_SWITCH_SPARSE_LEAVE:          ; DPTR points at
                            the table entry containing the label to jump
                            to.
    804    00001D D0E0             POP     A
    805    00001F              cfi CFA_MACHINE MACHINE_SP - 0
    806    00001F FC               MOV     R4,A
    807    000020          
    808    000020          #if (__CORE__ == __CORE_EXTENDED1__)
    823    000020          #else
    824    000020 E4               CLR     A
    825    000021 93               MOVC    A, @A+DPTR        ; Low address of
                                                              the label.
    826    000022 A3               INC     DPTR
    827    000023 C0E0             PUSH    A
    828    000025              cfi CFA_MACHINE MACHINE_SP - 1
    829    000025 E4               CLR     A
    830    000026 93               MOVC    A, @A+DPTR        ; High address of
                                                              the label.
    831    000027 C0E0             PUSH    A
    832    000029              cfi CFA_MACHINE MACHINE_SP - 2        
    833    000029          #endif
    834    000029          #if (__CORE__ == __CORE_EXTENDED2__)
    837    000029          #endif
    838    000029 22               RET
    839    00002A              cfi valid
    840    00002A                  cfi ENDBLOCK ?UC_SWITCH_SPARSE_LEAVE
    841    00002A                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DPX                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?UC_JMP_IF_IN_RANGE ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?UC_JMP_IF_VALUE    ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?UC_SWITCH_SPARSE   REL    CONST PUB UNTYP.       RCODE      0 
?UC_SWITCH_SPARSE_LEAVEREL    CONST PUB UNTYP.       RCODE      1D 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
check_ranges        REL    CONST UNTYP.           RCODE      7 
check_ranges_loop   REL    CONST UNTYP.           RCODE      C 
check_values        REL    CONST UNTYP.           RCODE      12 
check_values_loop   REL    CONST UNTYP.           RCODE      17 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:3B9D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 42          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    842    000000          
    843    000000          ;---------------------------------------------------
                           --------------------------
    844    000000          ;
    845    000000          ;       Function: ?UC_JMP_IF_IN_RANGE
    846    000000          ;
    847    000000          ;       Description: 
    848    000000          ;
    849    000000          ;       Register input:
    850    000000          ;               R4   Switch register
    851    000000          ;               DPTR Address to the current entry in
                            the switch-table
    852    000000          ;
    853    000000          ;       Register output:
    854    000000          ;               DPTR Address to the next entry in
                            the switch table
    855    000000          ;               A    Is destroyed if match,
                            otherwise A is restored.
    856    000000          ;
    857    000000          ;       Multiple DPTR
    858    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
    859    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
    860    000000          ;
    861    000000          ;               Separate:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
    862    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
    863    000000          ;
    864    000000          ;       Stack usage: 3
    865    000000          ;
    866    000000          ;---------------------------------------------------
                           --------------------------
    867    000000                  MODULE  ?UC_JMP_IF_IN_RANGE
    868    000000                  RSEG    RCODE:CODE:NOROOT
    869    000000                  PUBLIC  ?UC_JMP_IF_IN_RANGE
    870    000000                  EXTERN  ?UC_SWITCH_SPARSE_LEAVE
    871    000000                  cfi BLOCK ?UC_JMP_IF_IN_RANGE USING
  cfi_common
    872    000000                  cfi NOFUNCTION
    873    000000              cfi invalid
    874    000000          ?UC_JMP_IF_IN_RANGE:
    875    000000                  ; Enter
    876    000000 C0E0             PUSH    A
    877    000002          #if (__CORE__ == __CORE_EXTENDED1__)
    879    000002          #else
    880    000002              cfi CFA_MACHINE MACHINE_SP - 3
    881    000002          #endif
    882    000002                  ; Test  range_min <= SwitchReg
    883    000002 E4               CLR     A
    884    000003 93               MOVC    A, @A+DPTR
    885    000004 A3               INC     DPTR
    886    000005 D3               SETB    C
    887    000006 9C               SUBB    A,R4
    888    000007 5010             JNC     skip_max
    889    000009                  
    890    000009                  ; Test  range_max >= SwitchReg
    891    000009 E4               CLR     A
    892    00000A 93               MOVC    A, @A+DPTR
    893    00000B A3               INC     DPTR
    894    00000C C3               CLR     C
    895    00000D 9C               SUBB    A,R4
    896    00000E 400A             JC      failed_leave
    897    000010                  
    898    000010          matched_leave:
    899    000010 D0E0             POP     A
    900    000012          #if (__CORE__ == __CORE_EXTENDED1__)
    904    000012          #else
    905    000012 D0E0             POP     A
    906    000014 D0E0             POP     A
    907    000016          #endif
    908    000016          #if (__CORE__ == __CORE_EXTENDED2__)
    911    000016          #endif
    912    000016 02....           LJMP    ?UC_SWITCH_SPARSE_LEAVE
    913    000019          skip_max:
    914    000019 A3               INC     DPTR
    915    00001A          failed_leave:
    916    00001A          
    917    00001A          #if (__CORE__ == __CORE_EXTENDED1__)
    919    00001A          #endif
    920    00001A A3               INC     DPTR
    921    00001B A3               INC     DPTR              ; skip label
                                                              entry
    922    00001C D0E0             POP     A                 ; Preserve A to
                                                              caller.
    923    00001E              cfi CFA_MACHINE MACHINE_SP - 2
    924    00001E 22               RET
    925    00001F              cfi valid
    926    00001F                  cfi ENDBLOCK ?UC_JMP_IF_IN_RANGE       
                            
    927    00001F                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?UC_JMP_IF_IN_RANGE REL    CONST PUB UNTYP.       RCODE      0 
?UC_SWITCH_SPARSE_LEAVEABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
failed_leave        REL    CONST UNTYP.           RCODE      1A 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
matched_leave       REL    CONST UNTYP.           RCODE      10 
skip_max            REL    CONST UNTYP.           RCODE      19 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:83C3          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 31          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

    928    000000          
    929    000000          ;---------------------------------------------------
                           --------------------------
    930    000000          ;
    931    000000          ;       Function: ?UC_JMP_IF_VALUE
    932    000000          ;
    933    000000          ;       Description: 
    934    000000          ;
    935    000000          ;       Register input:
    936    000000          ;               R4   Switch register
    937    000000          ;               DPTR Address to the current entry in
                            the switch-table
    938    000000          ;
    939    000000          ;       Register output:
    940    000000          ;               DPTR Address to the next entry in
                            the switch table
    941    000000          ;               A    Is destroyed if match,
                            otherwise A is restored.
    942    000000          ;
    943    000000          ;       Multiple DPTR
    944    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
    945    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
    946    000000          ;
    947    000000          ;               Separate:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
    948    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
    949    000000          ;
    950    000000          ;       Stack usage: 1
    951    000000          ;
    952    000000          ;---------------------------------------------------
                           --------------------------
    953    000000                  MODULE  ?UC_JMP_IF_VALUE
    954    000000                  RSEG    RCODE:CODE:NOROOT
    955    000000                  PUBLIC  ?UC_JMP_IF_VALUE
    956    000000                  EXTERN  ?UC_SWITCH_SPARSE_LEAVE
    957    000000              cfi BLOCK ?UC_JMP_IF_VALUE USING cfi_common
    958    000000              cfi NOFUNCTION
    959    000000              cfi invalid
    960    000000          ?UC_JMP_IF_VALUE:
    961    000000          ?UC_JMP_IF_VALUE_CFI_INVALID_BEGINS:
    962    000000                  ; Enter
    963    000000 C0E0             PUSH    A
    964    000002              cfi CFA_MACHINE MACHINE_SP - 3
    965    000002          
    966    000002 E4               CLR     A       
    967    000003 93               MOVC    A, @A+DPTR       ; A now hold the
                                                             table value.
    968    000004 A3               INC     DPTR
    969    000005 6C               XRL     A,R4
    970    000006 7009             JNZ     normal_leave
    971    000008                  ; Leave
    972    000008          matched_leave:
    973    000008 D0E0             POP     A
    974    00000A          #if (__CORE__ == __CORE_EXTENDED1__)
    978    00000A          #else
    979    00000A D0E0             POP     A
    980    00000C D0E0             POP     A
    981    00000E          #endif
    982    00000E          #if (__CORE__ == __CORE_EXTENDED2__)
    985    00000E          #endif
    986    00000E 02....           LJMP    ?UC_SWITCH_SPARSE_LEAVE
    987    000011          normal_leave:
    988    000011          #if (__CORE__ == __CORE_EXTENDED1__)
    990    000011          #endif
    991    000011 A3               INC     DPTR
    992    000012 A3               INC     DPTR              ; skip label
                                                              entry
    993    000013 D0E0             POP     A
    994    000015              cfi CFA_MACHINE MACHINE_SP - 2
    995    000015 22               RET
    996    000016          ?UC_JMP_IF_VALUE_CFI_INVALID_ENDS:
    997    000016              cfi valid
    998    000016              cfi ENDBLOCK ?UC_JMP_IF_VALUE        
    999    000016                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923      964      994
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923      964
                                                                      994
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917      974
                                                                      988
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908      982
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917      974      982      988
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?UC_JMP_IF_VALUE    REL    CONST PUB UNTYP.       RCODE      0 
?UC_JMP_IF_VALUE_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?UC_JMP_IF_VALUE_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      16 
?UC_SWITCH_SPARSE_LEAVEABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
matched_leave       REL    CONST UNTYP.           RCODE      8 
normal_leave        REL    CONST UNTYP.           RCODE      11 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:A97D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 22          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1000    000000          
   1001    000000          ;---------------------------------------------------
                           --------------------------
   1002    000000          ;
   1003    000000          ;       Functions: Decoder for short switches
   1004    000000          ;                  ?US_SWITCH_SPARSE
   1005    000000          ;                  ?US_JMP_IF_IN_RANGE
   1006    000000          ;                  ?US_JMP_IF_VALUE
   1007    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
   1008    000000          ;
   1009    000000          ;       Function: ?US_SWITCH_SPARSE
   1010    000000          ;
   1011    000000          ;       Description: Decodes a sparse table (with
                            lables in it).
   1012    000000          ;
   1013    000000          ;       Register input:
   1014    000000          ;               @R0  Switch register [2 bytes]
   1015    000000          ;
   1016    000000          ;       Register output:
   1017    000000          ;               DPTR: Undefined
   1018    000000          ;               A:    Undefined
   1019    000000          ;
   1020    000000          ;       Stack input:
   1021    000000          ;               Byte 1: Return address Low = Table
                            address Low
   1022    000000          ;               Byte 2: Return address High = Table
                            address High
   1023    000000          ;             ( Byte 3: Return address Ext = Table
                            address Ext )
   1024    000000          ;
   1025    000000          ;       Multiple DPTR
   1026    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1027    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1028    000000          ;
   1029    000000          ;               Separate:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1030    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1031    000000          ;
   1032    000000          ;       Stack usage: 2
   1033    000000          ;
   1034    000000          ;       Note: The return value in stack is a pointer
                            to the switch table
   1035    000000          ;             and is replaced by the case label
                            before returning from this.
   1036    000000          ;             function.
   1037    000000          ;
   1038    000000          ;---------------------------------------------------
                           --------------------------
   1039    000000                  MODULE  ?US_SWITCH_SPARSE
   1040    000000                  RSEG    RCODE:CODE:NOROOT
   1041    000000                  EXTERN  ?US_JMP_IF_IN_RANGE
   1042    000000                  EXTERN  ?US_JMP_IF_VALUE
   1043    000000                  EXTERN  ?DPX
   1044    000000                  PUBLIC  ?US_SWITCH_SPARSE
   1045    000000                  PUBLIC  ?US_SWITCH_SPARSE_LEAVE
   1046    000000              cfi BLOCK ?US_SWITCH_SPARSE USING cfi_common
   1047    000000              cfi NOFUNCTION
   1048    000000          ?US_SWITCH_SPARSE:
   1049    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1059    000000          #else
   1060    000000          #if ( defined(__EXTENDED_DPTR__))
   1062    000000          #endif
   1063    000000 D083             POP     DPH
   1064    000002              cfi CFA_MACHINE MACHINE_SP - 1
   1065    000002              cfi ?RET_HIGH DPH0
   1066    000002 D082             POP     DPL
   1067    000004              cfi CFA_MACHINE MACHINE_SP - 0
   1068    000004              cfi ?RET_LOW DPL0
   1069    000004          #endif
   1070    000004 EC               MOV     A,R4
   1071    000005 C0E0             PUSH    A
   1072    000007              cfi CFA_MACHINE MACHINE_SP - 1
   1073    000007 ED               MOV     A,R5
   1074    000008 C0E0             PUSH    A
   1075    00000A              cfi CFA_MACHINE MACHINE_SP - 2
   1076    00000A              cfi invalid
   1077    00000A          ?US_SWITCH_SPARSE_CFI_INVALID_BEGINS:
   1078    00000A          check_ranges:
   1079    00000A E4               CLR     A
   1080    00000B 93               MOVC    A, @A + DPTR
   1081    00000C A3               INC     DPTR
   1082    00000D FC               MOV     R4,A
   1083    00000E E4               CLR     A
   1084    00000F 93               MOVC    A, @A + DPTR
   1085    000010 A3               INC     DPTR
   1086    000011 FD               MOV     R5,A             ;  R45 = loopcounte
                                                            r (nr of ranges in
                                                             table)
   1087    000012          loop_start:
   1088    000012 ED               MOV     A,R5
   1089    000013 4C               ORL     A,R4
   1090    000014 600D             JZ      check_values
   1091    000016 12....           CALL    ?US_JMP_IF_IN_RANGE
   1092    000019 EC               MOV     A,R4
   1093    00001A 24FF             ADD     A,#-1
   1094    00001C FC               MOV     R4,A
   1095    00001D ED               MOV     A,R5
   1096    00001E 34FF             ADDC    A,#-1
   1097    000020 FD               MOV     R5,A             ; R45 = R45 -
                                                             1
   1098    000021 80EF             SJMP    loop_start
   1099    000023          
   1100    000023          check_values:
   1101    000023 E4               CLR     A
   1102    000024 93               MOVC    A, @A + DPTR
   1103    000025 A3               INC     DPTR
   1104    000026 FC               MOV     R4,A
   1105    000027 E4               CLR     A
   1106    000028 93               MOVC    A, @A + DPTR
   1107    000029 A3               INC     DPTR
   1108    00002A FD               MOV     R5,A             ;  R45 = loopcounte
                                                            r (nr of values in
                                                             table)
   1109    00002B          loop2_start:
   1110    00002B ED               MOV     A,R5
   1111    00002C 4C               ORL     A,R4
   1112    00002D 600D             JZ      ?US_SWITCH_SPARSE_LEAVE
   1113    00002F 12....           CALL    ?US_JMP_IF_VALUE
   1114    000032 EC               MOV     A,R4
   1115    000033 24FF             ADD     A,#-1
   1116    000035 FC               MOV     R4,A
   1117    000036 ED               MOV     A,R5
   1118    000037 34FF             ADDC    A,#-1
   1119    000039 FD               MOV     R5,A             ; R45 = R45 -
                                                             1
   1120    00003A 80EF             SJMP    loop2_start
   1121    00003C              
   1122    00003C          ?US_SWITCH_SPARSE_LEAVE:
   1123    00003C          ; Put the label found in the table on stack. DPTR
                            points at the
   1124    00003C          ; table entry containing the label to jump
                            to.
   1125    00003C D0E0             POP     A
   1126    00003E              cfi CFA_MACHINE MACHINE_SP - 1
   1127    00003E FD               MOV     R5,A
   1128    00003F D0E0             POP     A
   1129    000041              cfi CFA_MACHINE MACHINE_SP - 0
   1130    000041 FC               MOV     R4,A
   1131    000042          #if (__CORE__ == __CORE_EXTENDED1__)
   1146    000042          #else
   1147    000042 E4               CLR     A
   1148    000043 93               MOVC    A, @A + DPTR      ; Low address of
                                                              the label.
   1149    000044 A3               INC     DPTR
   1150    000045 C0E0             PUSH    A
   1151    000047              cfi CFA_MACHINE MACHINE_SP - 1
   1152    000047 E4               CLR     A
   1153    000048 93               MOVC    A, @A + DPTR      ; Low address of
                                                              the label.
   1154    000049 C0E0             PUSH    A
   1155    00004B              cfi CFA_MACHINE MACHINE_SP - 2
   1156    00004B          #endif
   1157    00004B          #if (__CORE__ == __CORE_EXTENDED2__)
   1160    00004B          #endif
   1161    00004B 22               RET
   1162    00004C          ?US_SWITCH_SPARSE_CFI_INVALID_ENDS:
   1163    00004C              cfi valid
   1164    00004C              cfi ENDBLOCK ?US_SWITCH_SPARSE
   1165    00004C                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923      964      994
                                                                     1064     1067     1072     1075
                                                                     1126     1129     1151     1155
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923      964
                                                                      994     1064     1067     1072
                                                                     1075     1126     1129     1151
                                                                     1155
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917      974
                                                                      988     1049     1131
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908      982     1157
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917      974      982      988
                                                                     1049     1131     1157
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DPX                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?US_JMP_IF_IN_RANGE ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?US_JMP_IF_VALUE    ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?US_SWITCH_SPARSE   REL    CONST PUB UNTYP.       RCODE      0 
?US_SWITCH_SPARSE_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      A 
?US_SWITCH_SPARSE_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      4C 
?US_SWITCH_SPARSE_LEAVEREL    CONST PUB UNTYP.       RCODE      3C 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
check_ranges        REL    CONST UNTYP.           RCODE      A 
check_values        REL    CONST UNTYP.           RCODE      23 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
loop2_start         REL    CONST UNTYP.           RCODE      2B 
loop_start          REL    CONST UNTYP.           RCODE      12 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:7D59          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 76          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1166    000000          
   1167    000000          ;---------------------------------------------------
                           --------------------------
   1168    000000          ;
   1169    000000          ;       Function: ?US_JMP_IF_IN_RANGE
   1170    000000          ;
   1171    000000          ;       Description: 
   1172    000000          ;
   1173    000000          ;       Register input:
   1174    000000          ;               @R0  Switch register
   1175    000000          ;               DPTR Address to the current entry in
                            the switch-table
   1176    000000          ;
   1177    000000          ;       Register output:
   1178    000000          ;               R0   Is not changed
   1179    000000          ;               DPTR Address to the next entry in
                            the switch table
   1180    000000          ;               A    Is destroyed if match,
                            otherwise A is restored.
   1181    000000          ;
   1182    000000          ;       Multiple DPTR
   1183    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1184    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1185    000000          ;
   1186    000000          ;               Separate:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1187    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1188    000000          ;
   1189    000000          ;       Stack usage: 4
   1190    000000          ;
   1191    000000          ;---------------------------------------------------
                           --------------------------
   1192    000000                  MODULE  ?US_JMP_IF_IN_RANGE
   1193    000000                  RSEG    RCODE:CODE:NOROOT
   1194    000000                  PUBLIC  ?US_JMP_IF_IN_RANGE
   1195    000000                  EXTERN  ?US_SWITCH_SPARSE_LEAVE
   1196    000000              cfi BLOCK ?US_JMP_IF_IN_RANGE USING cfi_common
   1197    000000              cfi NOFUNCTION
   1198    000000              cfi invalid
   1199    000000          ?US_JMP_IF_IN_RANGE_CFI_INVALID_BEGINS:
   1200    000000          ?US_JMP_IF_IN_RANGE:
   1201    000000                  ; Enter
   1202    000000 C0E0             PUSH    A
   1203    000002          
   1204    000002                  ; Test  range_min <= SwitchReg
   1205    000002          
   1206    000002                  US_GT_C()
   1206.1  000002 C3               CLR     C
   1206.2  000003 E4               CLR     A
   1206.3  000004 93               MOVC    A,@A+DPTR
   1206.4  000005 96               SUBB    A,@R0
   1206.5  000006 08               INC     R0
   1206.6  000007 7401             MOV     A,#1
   1206.7  000009 93               MOVC    A,@A+DPTR
   1206.8  00000A 96               SUBB    A,@R0
   1206.9  00000B 18               DEC     R0
   1206.10 00000C                  ENDM
   1207    00000C          
   1208    00000C 400F             JC      is_greater
   1209    00000E                  S_EQ_C()
   1209.1  00000E E4               CLR     A
   1209.2  00000F 93               MOVC    A,@A+DPTR
   1209.3  000010 66               XRL     A,@R0
   1209.4  000011 7008             JNZ     noz
   1209.5  000013 08               INC     R0
   1209.6  000014 7401             MOV     A,#1
   1209.7  000016 93               MOVC    A,@A+DPTR
   1209.8  000017 66               XRL     A,@R0
   1209.9  000018 18               DEC     R0
   1209.10 000019 7000             JNZ     noz
   1209.11 00001B          noz:
   1209.12 00001B                  ENDM
   1210    00001B 7019             JNZ     skip_max
   1211    00001D          is_greater:
   1212    00001D A3               INC     DPTR
   1213    00001E A3               INC     DPTR
   1214    00001F          
   1215    00001F                  ; Test range_max <= SwitchReg
   1216    00001F          
   1217    00001F                  US_GT_C()
   1217.1  00001F C3               CLR     C
   1217.2  000020 E4               CLR     A
   1217.3  000021 93               MOVC    A,@A+DPTR
   1217.4  000022 96               SUBB    A,@R0
   1217.5  000023 08               INC     R0
   1217.6  000024 7401             MOV     A,#1
   1217.7  000026 93               MOVC    A,@A+DPTR
   1217.8  000027 96               SUBB    A,@R0
   1217.9  000028 18               DEC     R0
   1217.10 000029                  ENDM
   1218    000029          
   1219    000029 A3               INC     DPTR
   1220    00002A A3               INC     DPTR
   1221    00002B 400D             JC      failed_leave
   1222    00002D          
   1223    00002D          matched_leave:
   1224    00002D D0E0             POP     A
   1225    00002F          #if (__CORE__ == __CORE_EXTENDED1__)
   1229    00002F          #else
   1230    00002F D0E0             POP     A
   1231    000031 D0E0             POP     A
   1232    000033          #endif
   1233    000033          #if (__CORE__ == __CORE_EXTENDED2__)
   1236    000033          #endif
   1237    000033 02....           LJMP    ?US_SWITCH_SPARSE_LEAVE
   1238    000036          
   1239    000036          skip_max:
   1240    000036 A3               INC     DPTR
   1241    000037 A3               INC     DPTR
   1242    000038 A3               INC     DPTR
   1243    000039 A3               INC     DPTR
   1244    00003A          failed_leave:
   1245    00003A          #if (__CORE__ == __CORE_EXTENDED1__)
   1247    00003A          #endif
   1248    00003A A3               INC     DPTR
   1249    00003B A3               INC     DPTR              ; skip label
                                                              entry
   1250    00003C D0E0             POP     A
   1251    00003E 22               RET
   1252    00003F              cfi valid
   1253    00003F          ?US_JMP_IF_IN_RANGE_CFI_INVALID_ENDS:
   1254    00003F              cfi ENDBLOCK ?US_JMP_IF_IN_RANGE       
                            
   1255    00003F                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923      964      994
                                                                     1064     1067     1072     1075
                                                                     1126     1129     1151     1155
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923      964
                                                                      994     1064     1067     1072
                                                                     1075     1126     1129     1151
                                                                     1155
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917      974
                                                                      988     1049     1131     1225
                                                                     1245
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908      982     1157
                                                                     1233
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917      974      982      988
                                                                     1049     1131     1157     1225
                                                                     1233     1245
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?US_JMP_IF_IN_RANGE REL    CONST PUB UNTYP.       RCODE      0 
?US_JMP_IF_IN_RANGE_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?US_JMP_IF_IN_RANGE_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      3F 
?US_SWITCH_SPARSE_LEAVEABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
failed_leave        REL    CONST UNTYP.           RCODE      3A 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
is_greater          REL    CONST UNTYP.           RCODE      1D 
matched_leave       REL    CONST UNTYP.           RCODE      2D 
noz                 REL    CONST UNTYP.           RCODE      1B 
skip_max            REL    CONST UNTYP.           RCODE      36 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:1E24          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 63          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1256    000000          
   1257    000000          ;---------------------------------------------------
                           --------------------------
   1258    000000          ;
   1259    000000          ;       Function: ?US_JMP_IF_VALUE
   1260    000000          ;
   1261    000000          ;       Description: 
   1262    000000          ;
   1263    000000          ;       Register input:
   1264    000000          ;               @R0  Switch register
   1265    000000          ;               DPTR Address to the current entry in
                            the switch-table
   1266    000000          ;
   1267    000000          ;       Register output:
   1268    000000          ;               @R0  Switch register
   1269    000000          ;               DPTR Address to the next entry in
                            the switch table
   1270    000000          ;               A    Is destroyed if match,
                            otherwise A is restored.
   1271    000000          ;
   1272    000000          ;       Multiple DPTR
   1273    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1274    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1275    000000          ;
   1276    000000          ;               Separate:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1277    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1278    000000          ;
   1279    000000          ;       Stack usage: 4
   1280    000000          ;
   1281    000000          ;---------------------------------------------------
                           --------------------------
   1282    000000                  MODULE  ?US_JMP_IF_VALUE
   1283    000000                  RSEG    RCODE:CODE:NOROOT
   1284    000000                  PUBLIC  ?US_JMP_IF_VALUE
   1285    000000                  EXTERN  ?US_SWITCH_SPARSE_LEAVE
   1286    000000              cfi BLOCK ?US_JMP_IF_VALUE USING cfi_common
   1287    000000              cfi NOFUNCTION
   1288    000000              cfi invalid
   1289    000000          ?US_JMP_IF_VALUE:
   1290    000000          ?US_JMP_IF_VALUE_CFI_INVALID_BEGINS:
   1291    000000 C0E0             PUSH    A
   1292    000002              cfi CFA_MACHINE MACHINE_SP - 3
   1293    000002 C0F0             PUSH    B
   1294    000004              cfi CFA_MACHINE MACHINE_SP - 4
   1295    000004          
   1296    000004 88F0             MOV     B,R0
   1297    000006          
   1298    000006                  S_EQ_C()
   1298.1  000006 E4               CLR     A
   1298.2  000007 93               MOVC    A,@A+DPTR
   1298.3  000008 66               XRL     A,@R0
   1298.4  000009 7008             JNZ     noz
   1298.5  00000B 08               INC     R0
   1298.6  00000C 7401             MOV     A,#1
   1298.7  00000E 93               MOVC    A,@A+DPTR
   1298.8  00000F 66               XRL     A,@R0
   1298.9  000010 18               DEC     R0
   1298.10 000011 7000             JNZ     noz
   1298.11 000013          noz:
   1298.12 000013                  ENDM
   1299    000013          
   1300    000013 A8F0             MOV     R0,B
   1301    000015 A3               INC     DPTR    
   1302    000016 A3               INC     DPTR    
   1303    000017 700B             JNZ     failed_leave
   1304    000019                  
   1305    000019          matched_leave:
   1306    000019 D0F0             POP     B
   1307    00001B              cfi CFA_MACHINE MACHINE_SP - 14
   1308    00001B D0E0             POP     A
   1309    00001D          #if (__CORE__ == __CORE_EXTENDED1__)
   1313    00001D          #else
   1314    00001D D0E0             POP     A
   1315    00001F D0E0             POP     A
   1316    000021          #endif
   1317    000021          #if (__CORE__ == __CORE_EXTENDED2__)
   1320    000021          #endif
   1321    000021 02....           LJMP    ?US_SWITCH_SPARSE_LEAVE
   1322    000024                  
   1323    000024          failed_leave:
   1324    000024          #if (__CORE__ == __CORE_EXTENDED1__)
   1326    000024          #endif
   1327    000024 A3               INC     DPTR
   1328    000025 A3               INC     DPTR              ; skip label
                                                              entry
   1329    000026 D0F0             POP     B
   1330    000028              cfi CFA_MACHINE MACHINE_SP - 3
   1331    000028 D0E0             POP     A
   1332    00002A              cfi CFA_MACHINE MACHINE_SP - 2
   1333    00002A 22               RET
   1334    00002B          ?US_JMP_IF_VALUE_CFI_INVALID_ENDS:
   1335    00002B              cfi valid
   1336    00002B              cfi ENDBLOCK ?US_JMP_IF_VALUE
   1337    00002B                  ENDMOD  


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923      964      994
                                                                     1064     1067     1072     1075
                                                                     1126     1129     1151     1155
                                                                     1292     1294     1307     1330
                                                                     1332
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923      964
                                                                      994     1064     1067     1072
                                                                     1075     1126     1129     1151
                                                                     1155     1292     1294     1307
                                                                     1330     1332
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917      974
                                                                      988     1049     1131     1225
                                                                     1245     1309     1324
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908      982     1157
                                                                     1233     1317
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917      974      982      988
                                                                     1049     1131     1157     1225
                                                                     1233     1245     1309     1317
                                                                     1324
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?US_JMP_IF_VALUE    REL    CONST PUB UNTYP.       RCODE      0 
?US_JMP_IF_VALUE_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?US_JMP_IF_VALUE_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      2B 
?US_SWITCH_SPARSE_LEAVEABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
failed_leave        REL    CONST UNTYP.           RCODE      24 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
matched_leave       REL    CONST UNTYP.           RCODE      19 
noz                 REL    CONST UNTYP.           RCODE      13 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:7500          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 43          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1338    000000                  
   1339    000000          ;---------------------------------------------------
                           --------------------------
   1340    000000          ;
   1341    000000          ;       Functions: Decoder for long switches
   1342    000000          ;                  ?UL_SWITCH_SPARSE
   1343    000000          ;                  ?UL_JMP_IF_IN_RANGE
   1344    000000          ;                  ?UL_JMP_IF_VALUE
   1345    000000          ;- - - - - - - - - - - - - - - - - - - - - - - - - -
                            - - - - - - - - - - - - -
   1346    000000          ;
   1347    000000          ;       Function: ?UL_SWITCH_SPARSE
   1348    000000          ;
   1349    000000          ;       Description: Decodes a sparse table (with
                            lables in it).
   1350    000000          ;
   1351    000000          ;       Register input:
   1352    000000          ;               @R0  Switch register
   1353    000000          ;
   1354    000000          ;       Register output:
   1355    000000          ;               DPTR: Undefined
   1356    000000          ;               A:    Undefined
   1357    000000          ;
   1358    000000          ;       Stack input:
   1359    000000          ;               Byte 1: Return address Low = Table
                            address Low
   1360    000000          ;               Byte 2: Return address High = Table
                            address High
   1361    000000          ;             ( Byte 3: Return address Ext = Table
                            address Ext )
   1362    000000          ;
   1363    000000          ;       Multiple DPTR
   1364    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1365    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1366    000000          ;
   1367    000000          ;               Separate:       Requires DPTR: 0    
                                   Requires DPS: 0
   1368    000000          ;                               Modifies DPTR: 0    
                                   Returns  DPS: 0
   1369    000000          ;
   1370    000000          ;
   1371    000000          ;       Stack usage: 11
   1372    000000          ;
   1373    000000          ;       Note: The return value in stack is a pointer
                            to the switch table
   1374    000000          ;             and is replaced by the case label
                            before returning from this.
   1375    000000          ;             function.
   1376    000000          ;
   1377    000000          ;---------------------------------------------------
                           --------------------------
   1378    000000                  MODULE  ?UL_SWITCH_SPARSE
   1379    000000                  RSEG    RCODE:CODE:NOROOT
   1380    000000                  EXTERN  ?UL_JMP_IF_IN_RANGE
   1381    000000                  EXTERN  ?UL_JMP_IF_VALUE
   1382    000000                  EXTERN  ?DPX
   1383    000000                  PUBLIC  ?UL_SWITCH_SPARSE
   1384    000000                  PUBLIC  ?UL_SWITCH_SPARSE_LEAVE
   1385    000000                  cfi BLOCK ?UL_SWITCH_SPARSE USING cfi_common
   1386    000000                  cfi NOFUNCTION
   1387    000000          ?UL_SWITCH_SPARSE:
   1388    000000          #if (__CORE__ == __CORE_EXTENDED1__)
   1398    000000          #else
   1399    000000          #if ( defined(__EXTENDED_DPTR__))
   1401    000000          #endif
   1402    000000 D083             POP     DPH
   1403    000002              cfi CFA_MACHINE MACHINE_SP - 1
   1404    000002              cfi ?RET_HIGH DPH0
   1405    000002 D082             POP     DPL
   1406    000004              cfi CFA_MACHINE MACHINE_SP - 0
   1407    000004              cfi ?RET_LOW DPL0
   1408    000004          #endif
   1409    000004 EC               MOV     A,R4
   1410    000005 C0E0             PUSH    A
   1411    000007              cfi CFA_MACHINE MACHINE_SP - 1
   1412    000007 ED               MOV     A,R5
   1413    000008 C0E0             PUSH    A
   1414    00000A              cfi CFA_MACHINE MACHINE_SP - 2
   1415    00000A EE               MOV     A,R6
   1416    00000B C0E0             PUSH    A
   1417    00000D              cfi CFA_MACHINE MACHINE_SP - 3
   1418    00000D EF               MOV     A,R7
   1419    00000E C0E0             PUSH    A
   1420    000010              cfi CFA_MACHINE MACHINE_SP - 4
   1421    000010          ?UL_SWITCH_SPARSE_CFI_INVALID_BEGINS:
   1422    000010              cfi invalid
   1423    000010          check_ranges:
   1424    000010 E4               CLR     A
   1425    000011 93               MOVC    A, @A + DPTR
   1426    000012 A3               INC     DPTR
   1427    000013 FC               MOV     R4,A
   1428    000014 E4               CLR     A
   1429    000015 93               MOVC    A, @A + DPTR
   1430    000016 A3               INC     DPTR
   1431    000017 FD               MOV     R5,A
   1432    000018 E4               CLR     A
   1433    000019 93               MOVC    A, @A + DPTR
   1434    00001A A3               INC     DPTR
   1435    00001B FE               MOV     R6,A
   1436    00001C E4               CLR     A
   1437    00001D 93               MOVC    A, @A + DPTR
   1438    00001E A3               INC     DPTR
   1439    00001F FF               MOV     R7,A            ;  R4567 =
                                                            loopcounter (nr of
                                                            ranges in
                                                            table)
   1440    000020          loop_start:
   1441    000020 EF               MOV     A,R7
   1442    000021 4E               ORL     A,R6
   1443    000022 4D               ORL     A,R5
   1444    000023 4C               ORL     A,R4
   1445    000024 6015             JZ      check_values
   1446    000026 12....           CALL    ?UL_JMP_IF_IN_RANGE
   1447    000029 EC               MOV     A,R4
   1448    00002A 24FF             ADD     A,#-1
   1449    00002C FC               MOV     R4,A
   1450    00002D ED               MOV     A,R5
   1451    00002E 34FF             ADDC    A,#-1
   1452    000030 FD               MOV     R5,A
   1453    000031 EE               MOV     A,R6
   1454    000032 34FF             ADDC    A,#-1
   1455    000034 FE               MOV     R6,A
   1456    000035 EF               MOV     A,R7
   1457    000036 34FF             ADDC    A,#-1
   1458    000038 FF               MOV     R7,A
   1459    000039 80E5             SJMP    loop_start
   1460    00003B          
   1461    00003B          check_values:
   1462    00003B E4               CLR     A
   1463    00003C 93               MOVC    A, @A + DPTR
   1464    00003D A3               INC     DPTR
   1465    00003E FC               MOV     R4,A
   1466    00003F E4               CLR     A
   1467    000040 93               MOVC    A, @A + DPTR
   1468    000041 A3               INC     DPTR
   1469    000042 FD               MOV     R5,A
   1470    000043 E4               CLR     A
   1471    000044 93               MOVC    A, @A + DPTR
   1472    000045 A3               INC     DPTR
   1473    000046 FE               MOV     R6,A
   1474    000047 E4               CLR     A
   1475    000048 93               MOVC    A, @A + DPTR
   1476    000049 A3               INC     DPTR
   1477    00004A FF               MOV     R7,A            ;  R4567 =
                                                            loopcounter (nr of
                                                            values in
                                                            table)
   1478    00004B          loop2_start:
   1479    00004B EF               MOV     A,R7
   1480    00004C 4E               ORL     A,R6
   1481    00004D 4D               ORL     A,R5
   1482    00004E 4C               ORL     A,R4
   1483    00004F 6015             JZ      ?UL_SWITCH_SPARSE_LEAVE
   1484    000051 12....           CALL    ?UL_JMP_IF_VALUE
   1485    000054 EC               MOV     A,R4
   1486    000055 24FF             ADD     A,#-1
   1487    000057 FC               MOV     R4,A
   1488    000058 ED               MOV     A,R5
   1489    000059 34FF             ADDC    A,#-1
   1490    00005B FD               MOV     R5,A
   1491    00005C EE               MOV     A,R6
   1492    00005D 34FF             ADDC    A,#-1
   1493    00005F FE               MOV     R6,A
   1494    000060 EF               MOV     A,R7
   1495    000061 34FF             ADDC    A,#-1
   1496    000063 FF               MOV     R7,A
   1497    000064 80E5             SJMP    loop2_start
   1498    000066              
   1499    000066          ?UL_SWITCH_SPARSE_LEAVE:
   1500    000066          ; Put the label found in the table on stack. DPTR
                            points at the
   1501    000066          ; table entry containing the label to jump
                            to.
   1502    000066 D0E0             POP     A
   1503    000068              cfi CFA_MACHINE MACHINE_SP - 3
   1504    000068 FF               MOV     R7,A
   1505    000069 D0E0             POP     A
   1506    00006B              cfi CFA_MACHINE MACHINE_SP - 2
   1507    00006B FE               MOV     R6,A
   1508    00006C D0E0             POP     A
   1509    00006E              cfi CFA_MACHINE MACHINE_SP - 1
   1510    00006E FD               MOV     R5,A
   1511    00006F D0E0             POP     A
   1512    000071              cfi CFA_MACHINE MACHINE_SP - 0
   1513    000071 FC               MOV     R4,A
   1514    000072          
   1515    000072          #if (__CORE__ == __CORE_EXTENDED1__)
   1530    000072          #else
   1531    000072 E4               CLR     A
   1532    000073 93               MOVC    A, @A + DPTR      ; Low address of
                                                              the label.
   1533    000074 A3               INC     DPTR
   1534    000075 C0E0             PUSH    A
   1535    000077              cfi CFA_MACHINE MACHINE_SP - 1
   1536    000077 E4               CLR     A
   1537    000078 93               MOVC    A, @A + DPTR      ; Low address of
                                                              the label.
   1538    000079 C0E0             PUSH    A
   1539    00007B              cfi CFA_MACHINE MACHINE_SP - 2
   1540    00007B          #endif
   1541    00007B          #if (__CORE__ == __CORE_EXTENDED2__)
   1544    00007B          #endif
   1545    00007B 22               RET
   1546    00007C          ?UL_SWITCH_SPARSE_CFI_INVALID_ENDS:
   1547    00007C              cfi valid
   1548    00007C              cfi ENDBLOCK ?UL_SWITCH_SPARSE
   1549    00007C                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923      964      994
                                                                     1064     1067     1072     1075
                                                                     1126     1129     1151     1155
                                                                     1292     1294     1307     1330
                                                                     1332     1403     1406     1411
                                                                     1414     1417     1420     1503
                                                                     1506     1509     1512     1535
                                                                     1539
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923      964
                                                                      994     1064     1067     1072
                                                                     1075     1126     1129     1151
                                                                     1155     1292     1294     1307
                                                                     1330     1332     1403     1406
                                                                     1411     1414     1417     1420
                                                                     1503     1506     1509     1512
                                                                     1535     1539
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917      974
                                                                      988     1049     1131     1225
                                                                     1245     1309     1324     1388
                                                                     1515
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908      982     1157
                                                                     1233     1317     1541
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917      974      982      988
                                                                     1049     1131     1157     1225
                                                                     1233     1245     1309     1317
                                                                     1324     1388     1515     1541
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?DPX                ABS    CONST EXT [unref] UNTYP. __EXTERNS  Solved Extern 
?RET_HIGH           REL    CONST UNTYP.           RCODE      Not solved 
?RET_LOW            REL    CONST UNTYP.           RCODE      Not solved 
?UL_JMP_IF_IN_RANGE ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
?UL_JMP_IF_VALUE    ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?UL_SWITCH_SPARSE   REL    CONST PUB UNTYP.       RCODE      0 
?UL_SWITCH_SPARSE_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      10 
?UL_SWITCH_SPARSE_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      7C 
?UL_SWITCH_SPARSE_LEAVEREL    CONST PUB UNTYP.       RCODE      66 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
CFA_SP              REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPH0                REL    CONST UNTYP.           RCODE      Not solved 
DPL                 ABS    CONST UNTYP.           ASEG       82 
DPL0                REL    CONST UNTYP.           RCODE      Not solved 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
check_ranges        REL    CONST UNTYP.           RCODE      10 
check_values        REL    CONST UNTYP.           RCODE      3B 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
loop2_start         REL    CONST UNTYP.           RCODE      4B 
loop_start          REL    CONST UNTYP.           RCODE      20 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:876F          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 124         #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1550    000000          
   1551    000000          ;---------------------------------------------------
                           --------------------------
   1552    000000          ;
   1553    000000          ;       Function: ?UL_JMP_IF_IN_RANGE
   1554    000000          ;
   1555    000000          ;       Description: 
   1556    000000          ;
   1557    000000          ;       Register input:
   1558    000000          ;               @R0  Switch register
   1559    000000          ;               DPTR Address to the current entry in
                            the switch-table
   1560    000000          ;
   1561    000000          ;       Register output:
   1562    000000          ;               R0   Is not changed
   1563    000000          ;               DPTR Address to the next entry in
                            the switch table
   1564    000000          ;               A    Is destroyed if match,
                            otherwise A is restored.
   1565    000000          ;
   1566    000000          ;       Multiple DPTR
   1567    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1568    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1569    000000          ;
   1570    000000          ;               Separate:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1571    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1572    000000          ;
   1573    000000          ;
   1574    000000          ;       Stack usage: 4
   1575    000000          ;
   1576    000000          ;---------------------------------------------------
                           --------------------------
   1577    000000                  MODULE  ?UL_JMP_IF_IN_RANGE
   1578    000000                  RSEG    RCODE:CODE:NOROOT
   1579    000000                  PUBLIC  ?UL_JMP_IF_IN_RANGE
   1580    000000                  EXTERN  ?UL_SWITCH_SPARSE_LEAVE
   1581    000000                  EXTERN  ?UL_GT_C
   1582    000000                  EXTERN  ?L_EQ_C
   1583    000000              cfi BLOCK ?UL_JMP_IF_IN_RANGE USING cfi_common
   1584    000000              cfi NOFUNCTION
   1585    000000              cfi invalid
   1586    000000          ?UL_JMP_IF_IN_RANGE_CFI_INVALID_BEGINS:
   1587    000000          ?UL_JMP_IF_IN_RANGE:
   1588    000000                  ; Enter
   1589    000000 C0E0             PUSH    A
   1590    000002 C0F0             PUSH    B
   1591    000004 88F0             MOV     B,R0          ; Save address of
                                                          switch register.
   1592    000006                  ; Test  range_min <= SwitchReg
   1593    000006 12....           CALL    ?UL_GT_C
   1594    000009 A8F0             MOV     R0,B          ; Restore switch
                                                          register address
   1595    00000B 4007             JC      is_greater
   1596    00000D 12....           CALL    ?L_EQ_C       ; ?L_EQ_C makes R0
                                                          undefined.
   1597    000010 A8F0             MOV     R0,B          ; Restore switch
                                                          register address
   1598    000012 701A             JNZ     skip_max
   1599    000014          is_greater:
   1600    000014 A3               INC     DPTR
   1601    000015 A3               INC     DPTR
   1602    000016 A3               INC     DPTR
   1603    000017 A3               INC     DPTR
   1604    000018          
   1605    000018                  ; Test range_max <= SwitchReg
   1606    000018          
   1607    000018 12....           CALL    ?UL_GT_C
   1608    00001B A8F0             MOV     R0,B          ; Restore switch
                                                          register address
   1609    00001D A3               INC     DPTR
   1610    00001E A3               INC     DPTR
   1611    00001F A3               INC     DPTR
   1612    000020 A3               INC     DPTR
   1613    000021 4013             JC      failed_leave
   1614    000023          
   1615    000023          matched_leave:
   1616    000023 D0F0             POP     B
   1617    000025 D0E0             POP     A
   1618    000027          #if (__CORE__ == __CORE_EXTENDED1__)
   1622    000027          #else
   1623    000027 D0E0             POP     A
   1624    000029 D0E0             POP     A
   1625    00002B          #endif
   1626    00002B          #if (__CORE__ == __CORE_EXTENDED2__)
   1629    00002B          #endif
   1630    00002B 02....           LJMP    ?UL_SWITCH_SPARSE_LEAVE
   1631    00002E                  
   1632    00002E          skip_max:
   1633    00002E A3               INC     DPTR
   1634    00002F A3               INC     DPTR
   1635    000030 A3               INC     DPTR
   1636    000031 A3               INC     DPTR
   1637    000032 A3               INC     DPTR
   1638    000033 A3               INC     DPTR
   1639    000034 A3               INC     DPTR
   1640    000035 A3               INC     DPTR
   1641    000036          failed_leave:
   1642    000036          #if (__CORE__ == __CORE_EXTENDED1__)
   1644    000036          #endif
   1645    000036 A3               INC     DPTR
   1646    000037 A3               INC     DPTR              ; skip label
                                                              entry
   1647    000038 D0F0             POP     B
   1648    00003A D0E0             POP     A
   1649    00003C 22               RET
   1650    00003D              cfi valid
   1651    00003D          ?UL_JMP_IF_IN_RANGE_CFI_INVALID_ENDS:
   1652    00003D                  cfi ENDBLOCK ?UL_JMP_IF_IN_RANGE       
                            
   1653    00003D                  ENDMOD


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923      964      994
                                                                     1064     1067     1072     1075
                                                                     1126     1129     1151     1155
                                                                     1292     1294     1307     1330
                                                                     1332     1403     1406     1411
                                                                     1414     1417     1420     1503
                                                                     1506     1509     1512     1535
                                                                     1539
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923      964
                                                                      994     1064     1067     1072
                                                                     1075     1126     1129     1151
                                                                     1155     1292     1294     1307
                                                                     1330     1332     1403     1406
                                                                     1411     1414     1417     1420
                                                                     1503     1506     1509     1512
                                                                     1535     1539
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917      974
                                                                      988     1049     1131     1225
                                                                     1245     1309     1324     1388
                                                                     1515     1618     1642
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908      982     1157
                                                                     1233     1317     1541     1626
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917      974      982      988
                                                                     1049     1131     1157     1225
                                                                     1233     1245     1309     1317
                                                                     1324     1388     1515     1541
                                                                     1618     1626     1642
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?L_EQ_C             ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
?UL_GT_C            ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?UL_JMP_IF_IN_RANGE REL    CONST PUB UNTYP.       RCODE      0 
?UL_JMP_IF_IN_RANGE_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?UL_JMP_IF_IN_RANGE_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      3D 
?UL_SWITCH_SPARSE_LEAVEABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
failed_leave        REL    CONST UNTYP.           RCODE      36 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
is_greater          REL    CONST UNTYP.           RCODE      14 
matched_leave       REL    CONST UNTYP.           RCODE      23 
skip_max            REL    CONST UNTYP.           RCODE      2E 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:6766          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 61          #
##############################



###############################################################################
#                                                                             #
#     IAR Systems 8051 Assembler V7.30A/W32 02/Apr/2018  11:06:38             #
#     Copyright 2007 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  plain                                            #
#           Source file   =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51#
#           List file     =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\iar_switch.lst#
#           Object file   =  E:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\iar_switch.r51#
#           Command line  =  E:\Project_1500V_dec20\ED\code\Library\clib\iar_switch.s51 #
#                            -v0 -D__CORE__=1 -D__CODE_MODEL__=1              #
#                            -D__DATA_MODEL__=2 -D__CALLING_CONVENTION__=4    #
#                            -D__NUMBER_OF_DPTRS__=1                          #
#                            -OE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\Obj\ #
#                            -s+ -M<>                                         #
#                            -LE:\Project_1500V_dec20\ED\iar\Build .hex for CC2510\List\ #
#                            -t8 -xDI -IC:\IARSystems-CD-730B\8051\INC\       #
#                            -Dchip=2510 -D_LOW_IMAGE_ -w+                    #
#                                                                             #
###############################################################################

   1654    000000          
   1655    000000          ;---------------------------------------------------
                           --------------------------
   1656    000000          ;
   1657    000000          ;       Function: ?UL_JMP_IF_VALUE
   1658    000000          ;
   1659    000000          ;       Description: 
   1660    000000          ;
   1661    000000          ;       Register input:
   1662    000000          ;               @R0  Switch register
   1663    000000          ;               DPTR Address to the current entry in
                            the switch-table
   1664    000000          ;
   1665    000000          ;       Register output:
   1666    000000          ;               @R0  Switch register
   1667    000000          ;               DPTR Address to the next entry in
                            the switch table
   1668    000000          ;               A    Is destroyed if match,
                            otherwise A is restored.
   1669    000000          ;
   1670    000000          ;       Multiple DPTR
   1671    000000          ;               Shadowed:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1672    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1673    000000          ;
   1674    000000          ;               Separate:       Requires DPTR: DPTRx
                                       Requires DPS: DPTRx
   1675    000000          ;                               Modifies DPTR: DPTRx
                                       Returns  DPS: DPTRx
   1676    000000          ;
   1677    000000          ;       Stack usage: 4
   1678    000000          ;
   1679    000000          ;---------------------------------------------------
                           --------------------------
   1680    000000                  MODULE  ?UL_JMP_IF_VALUE
   1681    000000                  RSEG    RCODE:CODE:NOROOT
   1682    000000                  PUBLIC  ?UL_JMP_IF_VALUE
   1683    000000                  EXTERN  ?UL_SWITCH_SPARSE_LEAVE
   1684    000000                  EXTERN  ?L_EQ_C
   1685    000000              cfi BLOCK ?UL_JMP_IF_VALUE USING cfi_common
   1686    000000              cfi NOFUNCTION
   1687    000000              cfi invalid
   1688    000000          ?UL_JMP_IF_VALUE:
   1689    000000          ?UL_JMP_IF_VALUE_CFI_INVALID_BEGINS:
   1690    000000 C0E0             PUSH    A
   1691    000002 C0F0             PUSH    B
   1692    000004          
   1693    000004 88F0             MOV     B,R0          ; Save address of
                                                          switch register.
   1694    000006 12....           CALL    ?L_EQ_C       ; ?L_EQ_C makes R0
                                                          undefined.
   1695    000009 A8F0             MOV     R0,B          ; Restore switch
                                                          register address
   1696    00000B A3               INC     DPTR    
   1697    00000C A3               INC     DPTR    
   1698    00000D A3               INC     DPTR    
   1699    00000E A3               INC     DPTR    
   1700    00000F 700B             JNZ     failed_leave
   1701    000011                  
   1702    000011          matched_leave:
   1703    000011 D0F0             POP     B
   1704    000013 D0E0             POP     A
   1705    000015          #if (__CORE__ == __CORE_EXTENDED1__)
   1709    000015          #else
   1710    000015 D0E0             POP     A
   1711    000017 D0E0             POP     A
   1712    000019          #endif
   1713    000019          #if (__CORE__ == __CORE_EXTENDED2__)
   1716    000019          #endif
   1717    000019 02....           LJMP    ?UL_SWITCH_SPARSE_LEAVE
   1718    00001C                  
   1719    00001C          failed_leave:
   1720    00001C          #if (__CORE__ == __CORE_EXTENDED1__)
   1722    00001C          #endif
   1723    00001C A3               INC     DPTR
   1724    00001D A3               INC     DPTR              ; skip label
                                                              entry
   1725    00001E D0F0             POP     B
   1726    000020 D0E0             POP     A
   1727    000022 22               RET
   1728    000023              cfi valid
   1729    000023          ?UL_JMP_IF_VALUE_CFI_INVALID_ENDS:
   1730    000023              cfi ENDBLOCK ?UL_JMP_IF_VALUE
   1731    000023                  ENDMOD  


EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923      964      994
                                                                     1064     1067     1072     1075
                                                                     1126     1129     1151     1155
                                                                     1292     1294     1307     1330
                                                                     1332     1403     1406     1411
                                                                     1414     1417     1420     1503
                                                                     1506     1509     1512     1535
                                                                     1539
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923      964
                                                                      994     1064     1067     1072
                                                                     1075     1126     1129     1151
                                                                     1155     1292     1294     1307
                                                                     1330     1332     1403     1406
                                                                     1411     1414     1417     1420
                                                                     1503     1506     1509     1512
                                                                     1535     1539
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917      974
                                                                      988     1049     1131     1225
                                                                     1245     1309     1324     1388
                                                                     1515     1618     1642     1705
                                                                     1720
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908      982     1157
                                                                     1233     1317     1541     1626
                                                                     1713
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917      974      982      988
                                                                     1049     1131     1157     1225
                                                                     1233     1245     1309     1317
                                                                     1324     1388     1515     1541
                                                                     1618     1626     1642     1705
                                                                     1713     1720
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
RCODE               CODE  	REL 
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
?L_EQ_C             ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
?UL_JMP_IF_VALUE    REL    CONST PUB UNTYP.       RCODE      0 
?UL_JMP_IF_VALUE_CFI_INVALID_BEGINS
                    REL    CONST UNTYP.           RCODE      0 
?UL_JMP_IF_VALUE_CFI_INVALID_ENDS
                    REL    CONST UNTYP.           RCODE      23 
?UL_SWITCH_SPARSE_LEAVEABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
BLOCK               REL    CONST UNTYP.           RCODE      Not solved 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
ENDBLOCK            REL    CONST UNTYP.           RCODE      Not solved 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
NOFUNCTION          REL    CONST UNTYP.           RCODE      Not solved 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 
USING               REL    CONST UNTYP.           RCODE      Not solved 
cfi_common          REL    CONST UNTYP.           RCODE      Not solved 
failed_leave        REL    CONST UNTYP.           RCODE      1C 
invalid             REL    CONST UNTYP.           RCODE      Not solved 
matched_leave       REL    CONST UNTYP.           RCODE      11 
valid               REL    CONST UNTYP.           RCODE      Not solved 


##############################
#          CRC:DFCC          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 35          #
##############################





EOF                  DELIMITER 
\n                   DELIMITER 
                     DELIMITER 
!                    OPERATOR 
!=                   OPERATOR 
%                    OPERATOR 
&                    OPERATOR 
&&                   OPERATOR 
(                    OPERATOR 
(                    DELIMITER 
)                    OPERATOR 
)                    DELIMITER 
*                    OPERATOR 
+                    OPERATOR 
,                    DELIMITER 
-                    OPERATOR 
/                    OPERATOR 
:                    DELIMITER 
;                    DELIMITER 
;                    Target symbol: 23 
<                    OPERATOR 
<<                   OPERATOR 
<=                   OPERATOR 
<>                   OPERATOR 
=                    OPERATOR 
=                    DIRECTIVE 
==                   OPERATOR 
>                    OPERATOR 
>=                   OPERATOR 
>>                   OPERATOR 
?XSP                 Target symbol: 0 
@                    DELIMITER 
A                    REGISTER 
AB                   REGISTER 
ACALL                MNEMONIC 
ADD                  MNEMONIC 
ADDC                 MNEMONIC 
AJMP                 MNEMONIC 
ALIAS                DIRECTIVE 
ALIGN                DIRECTIVE 
ALIGNRAM             DIRECTIVE 
AND                  OPERATOR 
ANL                  MNEMONIC 
ARGFRAME             DIRECTIVE 
ASEG                 DIRECTIVE 
ASEGN                DIRECTIVE 
ASSIGN               DIRECTIVE 
B                    REGISTER 
BINAND               OPERATOR 
BINNOT               OPERATOR 
BINOR                OPERATOR 
BINXOR               OPERATOR 
BIT                  SEGMENT TYPE 
BITAND               OPERATOR 
BITNOT               OPERATOR 
BITOR                OPERATOR 
BITXOR               OPERATOR 
BREAK                DIRECTIVE 
BYTE                 Target symbol: 524288 
BYTE1                OPERATOR 
BYTE2                OPERATOR 
BYTE3                OPERATOR 
BYTE4                OPERATOR 
C                    Target symbol: 1 
CALL                 MNEMONIC 
CASE                 DIRECTIVE 
CASEOFF              DIRECTIVE 
CASEON               DIRECTIVE 
CFA_ESP16            Target symbol: 0 
CFA_ESP24            Target symbol: 0 
CFA_MACHINE          #define, value: CFA_SP, line:      37:3      516:3    517:3    519:3    519:3
                                                                    519:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3      155      158
                                                                      203      207      353      356
                                                                      360      416      423      427
                                                                      601      604      608      691
                                                                      698      702      773      776
                                                                      781      805      828      832
                                                                      880      923      964      994
                                                                     1064     1067     1072     1075
                                                                     1126     1129     1151     1155
                                                                     1292     1294     1307     1330
                                                                     1332     1403     1406     1411
                                                                     1414     1417     1420     1503
                                                                     1506     1509     1512     1535
                                                                     1539
CFA_PSP24            Target symbol: 0 
CFA_SPP              #define, value: CFA_PSP16, line:      21:3  
CFA_SPX              #define, value: CFA_XSP16, line:      23:3  
CFA_XSP24            Target symbol: 0 
CFI                  DIRECTIVE 
CFI_COMMON_DECLARE_CORE_COMMON MACRO 
CFI_COMMON_DECLARE_SAME_VALUE_FOR_ALL_REGISTERS
                     MACRO 
CFI_COMMON_DECLARE_UNDEFINED_FOR_ALL_DPTR_REGISTERS
                     MACRO 
CFI_NAMES_DECLARE_REGISTER_RESOURCES
                     MACRO 
CFI_NAMES_DECLARE_RETURN_RESOURCE
                     MACRO 
CFI_NAMES_DECLARE_STACKS MACRO 
CFI_banked_com       MACRO 
CFI_banked_nam       MACRO 
CFI_com              MACRO 
CFI_nam              MACRO 
CFI_pdata_enter_com  MACRO 
CFI_pdata_enter_nam  MACRO 
CJNE                 MNEMONIC 
CLR                  MNEMONIC 
CODE                 SEGMENT TYPE 
CODE                 DIRECTIVE 
COL                  DIRECTIVE 
COMMON               DIRECTIVE 
CONST                SEGMENT TYPE 
CONTINUE             DIRECTIVE 
CPL                  MNEMONIC 
CY                   Target symbol: 1 
DA                   MNEMONIC 
DATA                 SEGMENT TYPE 
DATA                 DIRECTIVE 
DATE                 OPERATOR 
DB                   DIRECTIVE 
DC16                 DIRECTIVE 
DC24                 DIRECTIVE 
DC32                 DIRECTIVE 
DC8                  DIRECTIVE 
DD                   DIRECTIVE 
DEC                  MNEMONIC 
DEFAULT              DIRECTIVE 
DEFINE               DIRECTIVE 
DIV                  MNEMONIC 
DJNZ                 MNEMONIC 
DPTR                 REGISTER 
DPTR_MASK_SYMBOLS    MACRO 
DS                   DIRECTIVE 
DS16                 DIRECTIVE 
DS24                 DIRECTIVE 
DS32                 DIRECTIVE 
DS8                  DIRECTIVE 
DT                   DIRECTIVE 
DW                   DIRECTIVE 
ELSE                 DIRECTIVE 
ELSEIF               DIRECTIVE 
ELSEIFS              DIRECTIVE 
ELSES                DIRECTIVE 
END                  DIRECTIVE 
ENDF                 DIRECTIVE 
ENDIF                DIRECTIVE 
ENDIFS               DIRECTIVE 
ENDM                 DIRECTIVE 
ENDMAC               DIRECTIVE 
ENDMOD               DIRECTIVE 
ENDR                 DIRECTIVE 
ENDS                 DIRECTIVE 
ENDW                 DIRECTIVE 
EQ                   OPERATOR 
EQU                  DIRECTIVE 
ESP16                Target symbol: 0 
ESP24                Target symbol: 0 
EVEN                 DIRECTIVE 
EXITM                DIRECTIVE 
EXPORT               DIRECTIVE 
EXTERN               DIRECTIVE 
EXTERNS_FOR_ALL_DPTR_SYMBOLS MACRO 
EXTRN                DIRECTIVE 
FAR                  SEGMENT TYPE 
FARCODE              SEGMENT TYPE 
FARCONST             SEGMENT TYPE 
FARDATA              SEGMENT TYPE 
FOR                  DIRECTIVE 
FUNCALL              DIRECTIVE 
FUNCTION             DIRECTIVE 
GE                   OPERATOR 
GT                   OPERATOR 
HIGH                 OPERATOR 
HUGE                 SEGMENT TYPE 
HUGECODE             SEGMENT TYPE 
HUGECONST            SEGMENT TYPE 
HUGEDATA             SEGMENT TYPE 
HWRD                 OPERATOR 
IDATA                SEGMENT TYPE 
IF                   DIRECTIVE 
IFS                  DIRECTIVE 
IMPORT               DIRECTIVE 
INC                  MNEMONIC 
JB                   MNEMONIC 
JBC                  MNEMONIC 
JC                   MNEMONIC 
JMP                  MNEMONIC 
JNB                  MNEMONIC 
JNC                  MNEMONIC 
JNZ                  MNEMONIC 
JZ                   MNEMONIC 
LCALL                MNEMONIC 
LE                   OPERATOR 
LIBRARY              DIRECTIVE 
LIMIT                DIRECTIVE 
LJMP                 MNEMONIC 
LOC                  OPERATOR 
LOCAL                DIRECTIVE 
LOCFRAME             DIRECTIVE 
LONG                 Target symbol: 2097152 
LOW                  OPERATOR 
LSTCND               DIRECTIVE 
LSTCOD               DIRECTIVE 
LSTCYC               DIRECTIVE 
LSTEXP               DIRECTIVE 
LSTMAC               DIRECTIVE 
LSTOUT               DIRECTIVE 
LSTPAG               DIRECTIVE 
LSTREP               DIRECTIVE 
LSTSAS               DIRECTIVE 
LSTXRF               DIRECTIVE 
LT                   OPERATOR 
LWRD                 OPERATOR 
MACHINE_MEM          #define, value: DATA, line:      39:3      516:3    517:3
MACHINE_SP           #define, value: SP, line:      38:3      516:3    516:3    517:3    517:3
                                                                    519:3    520:3    521:3      155
                                                                      158      203      207      353
                                                                      356      360      416      423
                                                                      427      601      604      608
                                                                      691      698      702      773
                                                                      776      781      805      828
                                                                      832      880      923      964
                                                                      994     1064     1067     1072
                                                                     1075     1126     1129     1151
                                                                     1155     1292     1294     1307
                                                                     1330     1332     1403     1406
                                                                     1411     1414     1417     1420
                                                                     1503     1506     1509     1512
                                                                     1535     1539
MACRO                DIRECTIVE 
MOD                  OPERATOR 
MODULE               DIRECTIVE 
MOV                  MNEMONIC 
MOVC                 MNEMONIC 
MOVX                 MNEMONIC 
MUL                  MNEMONIC 
NAME                 DIRECTIVE 
NE                   OPERATOR 
NEAR                 SEGMENT TYPE 
NEARCODE             SEGMENT TYPE 
NEARCONST            SEGMENT TYPE 
NEARDATA             SEGMENT TYPE 
NOP                  MNEMONIC 
NOROOT               SEGMENT TYPE 
NOT                  OPERATOR 
NPAGE                SEGMENT TYPE 
ODD                  DIRECTIVE 
OR                   OPERATOR 
ORG                  DIRECTIVE 
ORL                  MNEMONIC 
PAGE                 DIRECTIVE 
PAGSIZ               DIRECTIVE 
PC                   REGISTER 
POP                  MNEMONIC 
PRM                  OPERATOR 
PROGRAM              DIRECTIVE 
PSP24                Target symbol: 0 
PUBLIC               DIRECTIVE 
PUBWEAK              DIRECTIVE 
PUSH                 MNEMONIC 
R0                   REGISTER 
R1                   REGISTER 
R2                   REGISTER 
R3                   REGISTER 
R4                   REGISTER 
R5                   REGISTER 
R6                   REGISTER 
R7                   REGISTER 
RADIX                DIRECTIVE 
READ                 Target symbol: 2048 
REGISTER             SEGMENT TYPE 
REORDER              SEGMENT TYPE 
REPEAT               DIRECTIVE 
REPT                 DIRECTIVE 
REPTC                DIRECTIVE 
REPTI                DIRECTIVE 
REQUIRE              DIRECTIVE 
RET                  MNEMONIC 
RETI                 MNEMONIC 
RL                   MNEMONIC 
RLC                  MNEMONIC 
ROOT                 SEGMENT TYPE 
RR                   MNEMONIC 
RRC                  MNEMONIC 
RSEG                 DIRECTIVE 
RTMODEL              DIRECTIVE 
S                    PREFIX 
SET                  DIRECTIVE 
SETB                 MNEMONIC 
SFB                  OPERATOR 
SFE                  OPERATOR 
SFRTYPE              DIRECTIVE 
SHL                  OPERATOR 
SHR                  OPERATOR 
SIZEOF               OPERATOR 
SJMP                 MNEMONIC 
SORT                 SEGMENT TYPE 
SPP                  #define, value: PSP16, line:      22:3      521:3
SPX                  #define, value: XSP16, line:      24:3  
STACK                DIRECTIVE 
SUBB                 MNEMONIC 
SWAP                 MNEMONIC 
SWITCH               DIRECTIVE 
SYMBOL               DIRECTIVE 
S_EQ_C               MACRO 
UGT                  OPERATOR 
ULT                  OPERATOR 
UNTIL                DIRECTIVE 
UNTYPED              SEGMENT TYPE 
US_GT_C              MACRO 
WHILE                DIRECTIVE 
WORD                 Target symbol: 1048576 
WRITE                Target symbol: 4096 
XCH                  MNEMONIC 
XCHD                 MNEMONIC 
XDATA                SEGMENT TYPE 
XOR                  OPERATOR 
XRL                  MNEMONIC 
XSP24                Target symbol: 0 
XSP_H                #define, value: ?XSP+1, line:      24:1  
XSP_L                #define, value: ?XSP, line:      23:1  
ZPAGE                SEGMENT TYPE 
[                    DELIMITER 
]                    DELIMITER 
^                    OPERATOR 
_LOW_IMAGE_          #define, value: 1, line:         0  
__BUILD_NUMBER__     #define,            line:         0  
__CALLING_CONVENTION__ #define, value: 4, line:         0  
__CC_DO__            #define, value: 0, line:      45:2  
__CC_ER__            #define, value: 5, line:      50:2  
__CC_IO__            #define, value: 1, line:      46:2  
__CC_IR__            #define, value: 2, line:      47:2  
__CC_PR__            #define, value: 3, line:      48:2  
__CC_XR__            #define, value: 4, line:      49:2  
__CM_BANKED_EXT2__   #define, value: 4, line:      31:2  
__CM_BANKED__        #define, value: 2, line:      29:2  
__CM_FAR__           #define, value: 3, line:      30:2       42:3    516:3    519:3       80
                                                                      256      476
__CM_NEAR__          #define, value: 1, line:      28:2  
__CM_TINY__          #define, value: 0, line:      27:2  
__CODE_MODEL__       #define, value: 1, line:         0       42:3    516:3    519:3       80
                                                                      256      476
__CORE_EXTENDED1__   #define, value: 2, line:      21:2       67:2    521:3      758      808
                                                                      877      900      917      974
                                                                      988     1049     1131     1225
                                                                     1245     1309     1324     1388
                                                                     1515     1618     1642     1705
                                                                     1720
__CORE_EXTENDED2__   #define, value: 3, line:      22:2        834      908      982     1157
                                                                     1233     1317     1541     1626
                                                                     1713
__CORE_PLAIN__       #define, value: 1, line:      20:2  
__CORE_TINY__        #define, value: 0, line:      19:2  
__CORE__             #define, value: 1, line:         0       67:2    521:3      758      808
                                                                      834      877      900      908
                                                                      917      974      982      988
                                                                     1049     1131     1157     1225
                                                                     1233     1245     1309     1317
                                                                     1324     1388     1515     1541
                                                                     1618     1626     1642     1705
                                                                     1713     1720
__DATA_MODEL__       #define, value: 2, line:         0  
__DATE__             #define,            line:         0  
__DM_FAR__           #define, value: 4, line:      40:2  
__DM_GENERIC__       #define, value: 3, line:      39:2  
__DM_LARGE__         #define, value: 2, line:      38:2  
__DM_SMALL__         #define, value: 1, line:      37:2  
__DM_TINY__          #define, value: 0, line:      36:2  
__DPTR_SEPARATE__    Target symbol: 0 
__DPTR_SHADOWED__    Target symbol: 0 
__EXTENDED_STACK__   Target symbol: 0 
__FILE__             #define,            line:         0  
__IAR_SYSTEMS_ASM    #define,            line:         0  
__IAR_SYSTEMS_ASM__  #define,            line:         0  
__INC_DPSEL_SELECT__ Target symbol: 0 
__LINE__             #define,            line:         0  
__NUMBER_OF_DPTRS__  #define, value: 1, line:         0       56:2    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    516:3    516:3    516:3    516:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    517:3
                                                                    517:3    517:3    517:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    519:3    519:3
                                                                    519:3    519:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    520:3    520:3    520:3
                                                                    520:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                    521:3    521:3    521:3    521:3
                                                                     97:1
__SIZE_OF_RETADDR__  #define, value: 2, line:      45:3      519:3    521:3    521:3
__SUBVERSION__       #define,            line:         0  
__TID__              #define,            line:         0  
__TIME__             #define,            line:         0  
__VER__              #define,            line:         0  
__XOR_DPSEL_SELECT__ Target symbol: 0 
bytes                Target symbol: 0 
cfi_DATA_BLOCK_end   MACRO 
cfi_DATA_BLOCK_start MACRO 
cfi_PUSH_ISTACK_RET_DEFS_CONST_DEPEND
                     MACRO 
cfi_PUSH_ISTACK_RET_DEFS_REG_DEPEND
                     MACRO 
cfi_PUSH_REG         MACRO 
cfi_REMEMBER_STATE   MACRO 
cfi_RESTORE_STATE    MACRO 
cfi_SET_REG          MACRO 
cfi_STACK_ALLOC      MACRO 
cfi_STACK_DEALL      MACRO 
chip                 #define, value: 2510, line:         0  
constant             Target symbol: 0 
define               PREPROCESSOR DIRECTIVE 
defined              Target symbol: 0 
elif                 PREPROCESSOR DIRECTIVE 
else                 PREPROCESSOR DIRECTIVE 
endif                PREPROCESSOR DIRECTIVE 
error                PREPROCESSOR DIRECTIVE 
if                   PREPROCESSOR DIRECTIVE 
ifdef                PREPROCESSOR DIRECTIVE 
ifndef               PREPROCESSOR DIRECTIVE 
include              PREPROCESSOR DIRECTIVE 
line                 PREPROCESSOR DIRECTIVE 
message              PREPROCESSOR DIRECTIVE 
name                 Target symbol: 0 
no                   Target symbol: 0 
nr                   Target symbol: 0 
pragma               PREPROCESSOR DIRECTIVE 
reg                  Target symbol: 0 
reg_from             Target symbol: 0 
reg_to               Target symbol: 0 
undef                PREPROCESSOR DIRECTIVE 
|                    OPERATOR 
||                   OPERATOR 
~                    OPERATOR 

Segment             Type 	Mode
----------------------------------------
__EXTERNS           CODE  	ABS Org:0 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
AC                  ABS    CONST UNTYP.           ASEG       D6 
ACC                 ABS    CONST UNTYP.           ASEG       E0 
B                   ABS    CONST UNTYP.           ASEG       F0 
DPH                 ABS    CONST UNTYP.           ASEG       83 
DPL                 ABS    CONST UNTYP.           ASEG       82 
EXTI0               ABS    CONST UNTYP.           ASEG       3 
EXTI1               ABS    CONST UNTYP.           ASEG       13 
F0                  ABS    CONST UNTYP.           ASEG       D5 
OV                  ABS    CONST UNTYP.           ASEG       D2 
P                   ABS    CONST UNTYP.           ASEG       D0 
PSW                 ABS    CONST UNTYP.           ASEG       D0 
RESET               ABS    CONST UNTYP.           ASEG       0 
RS0                 ABS    CONST UNTYP.           ASEG       D3 
RS1                 ABS    CONST UNTYP.           ASEG       D4 
SINT                ABS    CONST UNTYP.           ASEG       23 
SP                  ABS    CONST UNTYP.           ASEG       81 
TID                 ABS    CONST UNTYP.           ASEG       2000 
TIMER0              ABS    CONST UNTYP.           ASEG       B 
TIMER1              ABS    CONST UNTYP.           ASEG       1B 


##############################
#          CRC:DFCC          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 35          #
#     Modules:        12     #
#     Total errors:   0      #
#     Total warnings: 0      #
##############################



